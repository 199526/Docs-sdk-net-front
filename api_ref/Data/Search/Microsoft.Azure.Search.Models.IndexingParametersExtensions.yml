items:
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  commentId: T:Microsoft.Azure.Search.Models.IndexingParametersExtensions
  id: IndexingParametersExtensions
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexStorageMetadataOnly(Microsoft.Azure.Search.Models.IndexingParameters)
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJson(Microsoft.Azure.Search.Models.IndexingParameters)
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJsonArrays(Microsoft.Azure.Search.Models.IndexingParameters,System.String)
  - Microsoft.Azure.Search.Models.IndexingParametersExtensions.SkipContent(Microsoft.Azure.Search.Models.IndexingParameters)
  langs:
  - csharp
  - vb
  name: IndexingParametersExtensions
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexingParametersExtensions
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines extension methods for the IndexingParameters class.\n"
  example: []
  syntax:
    content: public class IndexingParametersExtensions
    content.vb: Public Class IndexingParametersExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexStorageMetadataOnly(Microsoft.Azure.Search.Models.IndexingParameters)
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexStorageMetadataOnly(Microsoft.Azure.Search.Models.IndexingParameters)
  id: IndexStorageMetadataOnly(Microsoft.Azure.Search.Models.IndexingParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: IndexStorageMetadataOnly(IndexingParameters)
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexStorageMetadataOnly(Microsoft.Azure.Search.Models.IndexingParameters)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexStorageMetadataOnly
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that the indexer will index only the storage metadata and completely skip the document extraction process. This is useful when\nyou don't need the document content, nor do you need any of the content type-specific metadata properties.\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-indexing-azure-blob-storage/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters IndexStorageMetadataOnly(this IndexingParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IndexStorageMetadataOnly(parameters As IndexingParameters) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  id: IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: IndexFileNameExtensions(IndexingParameters, String[])
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters, System.String[])
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexFileNameExtensions
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that the indexer will index only the blobs with the file name extensions you specify. Each string is a file extensions with a\nleading dot. For example, \".pdf\", \".docx\", etc. If you pass the same file extension to this method and ExcludeFileNameExtensions, blobs\nwith that extension will be excluded from indexing (that is, ExcludeFileNameExtensions takes precedence).\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-indexing-azure-blob-storage/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters IndexFileNameExtensions(this IndexingParameters parameters, params string[] extensions)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IndexFileNameExtensions(parameters As IndexingParameters, ParamArray extensions As String()) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    - id: extensions
      type: System.String[]
      description: File extensions to include in indexing.
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexingParametersExtensions.IndexFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters, System.String())
  name.vb: IndexFileNameExtensions(IndexingParameters, String())
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  id: ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: ExcludeFileNameExtensions(IndexingParameters, String[])
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters, System.String[])
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExcludeFileNameExtensions
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that the indexer will not index blobs with the file name extensions you specify. Each string is a file extensions with a\nleading dot. For example, \".pdf\", \".docx\", etc. If you pass the same file extension to this method and IndexFileNameExtensions, blobs\nwith that extension will be excluded from indexing (that is, this method takes precedence).\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-indexing-azure-blob-storage/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters ExcludeFileNameExtensions(this IndexingParameters parameters, params string[] extensions)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExcludeFileNameExtensions(parameters As IndexingParameters, ParamArray extensions As String()) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    - id: extensions
      type: System.String[]
      description: File extensions to exclude from indexing.
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ExcludeFileNameExtensions(Microsoft.Azure.Search.Models.IndexingParameters, System.String())
  name.vb: ExcludeFileNameExtensions(IndexingParameters, String())
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.SkipContent(Microsoft.Azure.Search.Models.IndexingParameters)
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.SkipContent(Microsoft.Azure.Search.Models.IndexingParameters)
  id: SkipContent(Microsoft.Azure.Search.Models.IndexingParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: SkipContent(IndexingParameters)
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.SkipContent(Microsoft.Azure.Search.Models.IndexingParameters)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SkipContent
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that the indexer will extract metadata, but skip content extraction for all blobs. If you want to skip content extraction for\nonly some blobs, add AzureSearch_SkipContent metadata to those blobs individually instead of using this option.\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-indexing-azure-blob-storage/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters SkipContent(this IndexingParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SkipContent(parameters As IndexingParameters) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJson(Microsoft.Azure.Search.Models.IndexingParameters)
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJson(Microsoft.Azure.Search.Models.IndexingParameters)
  id: ParseJson(Microsoft.Azure.Search.Models.IndexingParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: ParseJson(IndexingParameters)
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJson(Microsoft.Azure.Search.Models.IndexingParameters)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ParseJson
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTells the indexer to assume that all blobs contain JSON, which it will then parse such that each blob's JSON will map to a single\ndocument in the Azure Search index.\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-index-json-blobs/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters ParseJson(this IndexingParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ParseJson(parameters As IndexingParameters) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJsonArrays(Microsoft.Azure.Search.Models.IndexingParameters,System.String)
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJsonArrays(Microsoft.Azure.Search.Models.IndexingParameters,System.String)
  id: ParseJsonArrays(Microsoft.Azure.Search.Models.IndexingParameters,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: ParseJsonArrays(IndexingParameters, String)
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseJsonArrays(Microsoft.Azure.Search.Models.IndexingParameters, System.String)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ParseJsonArrays
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTells the indexer to assume that all blobs contain JSON arrays, which it will then parse such that each JSON object in each array will\nmap to a single document in the Azure Search index.\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-index-json-blobs/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters ParseJsonArrays(this IndexingParameters parameters, string documentRoot = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ParseJsonArrays(parameters As IndexingParameters, documentRoot As String = Nothing) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    - id: documentRoot
      type: System.String
      description: "\nAn optional JSON Pointer that tells the indexer how to find the JSON array if it's not the top-level JSON property of each blob. If this\nparameter is null or empty, the indexer will assume that the JSON array can be found in the top-level JSON property of each blob.\nDefault is null.\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  commentId: M:Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  id: ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters,System.String[])
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.Models.IndexingParametersExtensions
  langs:
  - csharp
  - vb
  name: ParseDelimitedTextFiles(IndexingParameters, String[])
  fullName: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters, System.String[])
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ParseDelimitedTextFiles
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParametersExtensions.cs
    startLine: 144
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTells the indexer to assume that all blobs are delimited text files. Currently only comma-separated value (CSV) text files are supported.\nSee <see href=\"https://azure.microsoft.com/en-us/documentation/articles/search-howto-index-csv-blobs/\"></see> for details.\n"
  remarks: "\nThis option only applies to indexers that index Azure Blob Storage.\n"
  example: []
  syntax:
    content: public static IndexingParameters ParseDelimitedTextFiles(this IndexingParameters parameters, params string[] headers)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ParseDelimitedTextFiles(parameters As IndexingParameters, ParamArray headers As String()) As IndexingParameters
    parameters:
    - id: parameters
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: IndexingParameters to configure.
    - id: headers
      type: System.String[]
      description: "\nSpecifies column headers that the indexer will use to map values to specific fields in the Azure Search index. If you don't specify any\nheaders, the indexer assumes that the first non-blank line of each blob contains comma-separated headers.\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexingParameters
      description: The IndexingParameters instance.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexingParametersExtensions.ParseDelimitedTextFiles(Microsoft.Azure.Search.Models.IndexingParameters, System.String())
  name.vb: ParseDelimitedTextFiles(IndexingParameters, String())
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.IndexingParameters
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexingParameters
  fullName: Microsoft.Azure.Search.Models.IndexingParameters
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
