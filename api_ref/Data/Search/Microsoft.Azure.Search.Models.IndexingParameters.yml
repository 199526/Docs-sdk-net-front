items:
- uid: Microsoft.Azure.Search.Models.IndexingParameters
  commentId: T:Microsoft.Azure.Search.Models.IndexingParameters
  id: IndexingParameters
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexingParameters.#ctor
  - Microsoft.Azure.Search.Models.IndexingParameters.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.Azure.Search.Models.IndexingParameters.Base64EncodeKeys
  - Microsoft.Azure.Search.Models.IndexingParameters.BatchSize
  - Microsoft.Azure.Search.Models.IndexingParameters.Configuration
  - Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItems
  - Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItemsPerBatch
  langs:
  - csharp
  - vb
  name: IndexingParameters
  fullName: Microsoft.Azure.Search.Models.IndexingParameters
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexingParameters
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents parameters for indexer execution.\n"
  example: []
  syntax:
    content: public class IndexingParameters
    content.vb: Public Class IndexingParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexingParameters.#ctor
  commentId: M:Microsoft.Azure.Search.Models.IndexingParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: IndexingParameters()
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.IndexingParameters()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexingParameters class.\n"
  example: []
  syntax:
    content: public IndexingParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingParameters.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.Azure.Search.Models.IndexingParameters.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: IndexingParameters(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, IDictionary<String, Object>)
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.IndexingParameters(System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexingParameters class.\n"
  example: []
  syntax:
    content: public IndexingParameters(int ? batchSize = null, int ? maxFailedItems = null, int ? maxFailedItemsPerBatch = null, IDictionary<string, object> configuration = null)
    content.vb: Public Sub New(batchSize As Integer? = Nothing, maxFailedItems As Integer? = Nothing, maxFailedItemsPerBatch As Integer? = Nothing, configuration As IDictionary(Of String, Object) = Nothing)
    parameters:
    - id: batchSize
      type: System.Nullable{System.Int32}
    - id: maxFailedItems
      type: System.Nullable{System.Int32}
    - id: maxFailedItemsPerBatch
      type: System.Nullable{System.Int32}
    - id: configuration
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.IndexingParameters.IndexingParameters(System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IndexingParameters(Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), IDictionary(Of String, Object))
- uid: Microsoft.Azure.Search.Models.IndexingParameters.BatchSize
  commentId: P:Microsoft.Azure.Search.Models.IndexingParameters.BatchSize
  id: BatchSize
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: BatchSize
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.BatchSize
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchSize
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the number of items that are read from the data\nsource and indexed as a single batch in order to improve\nperformance. The default depends on the data source type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "batchSize")]

      public int ? BatchSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="batchSize")>

      Public Property BatchSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: batchSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItems
  commentId: P:Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItems
  id: MaxFailedItems
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: MaxFailedItems
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItems
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MaxFailedItems
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the maximum number of items that can fail indexing\nfor indexer execution to still be considered successful. -1 means\nno limit. Default is 0.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxFailedItems")]

      public int ? MaxFailedItems { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxFailedItems")>

      Public Property MaxFailedItems As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxFailedItems
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItemsPerBatch
  commentId: P:Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItemsPerBatch
  id: MaxFailedItemsPerBatch
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: MaxFailedItemsPerBatch
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.MaxFailedItemsPerBatch
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MaxFailedItemsPerBatch
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the maximum number of items in a single batch that\ncan fail indexing for the batch to still be considered\nsuccessful. -1 means no limit. Default is 0.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxFailedItemsPerBatch")]

      public int ? MaxFailedItemsPerBatch { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxFailedItemsPerBatch")>

      Public Property MaxFailedItemsPerBatch As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxFailedItemsPerBatch
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingParameters.Base64EncodeKeys
  commentId: P:Microsoft.Azure.Search.Models.IndexingParameters.Base64EncodeKeys
  id: Base64EncodeKeys
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: Base64EncodeKeys
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.Base64EncodeKeys
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Base64EncodeKeys
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets whether indexer will base64-encode all values that\nare inserted into key field of the target index. This is needed\nif keys can contain characters that are invalid in keys (such as\ndot '.'). Default is false.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is obsolete. Please create a field mapping using 'FieldMapping.Base64Encode' instead.")]

      [JsonProperty(PropertyName = "base64EncodeKeys")]

      public bool ? Base64EncodeKeys { get; set; }
    content.vb: >-
      <Obsolete("This property is obsolete. Please create a field mapping using 'FieldMapping.Base64Encode' instead.")>

      <JsonProperty(PropertyName:="base64EncodeKeys")>

      Public Property Base64EncodeKeys As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is obsolete. Please create a field mapping using 'FieldMapping.Base64Encode' instead.
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: base64EncodeKeys
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingParameters.Configuration
  commentId: P:Microsoft.Azure.Search.Models.IndexingParameters.Configuration
  id: Configuration
  parent: Microsoft.Azure.Search.Models.IndexingParameters
  langs:
  - csharp
  - vb
  name: Configuration
  fullName: Microsoft.Azure.Search.Models.IndexingParameters.Configuration
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Configuration
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexingParameters.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a dictionary of indexer-specific configuration\nproperties. Each name is the name of a specific property. Each\nvalue must be of a primitive type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "configuration")]

      public IDictionary<string, object> Configuration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="configuration")>

      Public Property Configuration As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: configuration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
