items:
- uid: DMLibTest.DMLibWrapper
  commentId: T:DMLibTest.DMLibWrapper
  id: DMLibWrapper
  parent: DMLibTest
  children:
  - DMLibTest.DMLibWrapper.DoTransfer(DMLibTest.TransferItem)
  - DMLibTest.DMLibWrapper.DoTransferImp(DMLibTest.TransferItem)
  langs:
  - csharp
  - vb
  name: DMLibWrapper
  fullName: DMLibTest.DMLibWrapper
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DMLibWrapper
    path: test/DMLibTest/Framework/DMLibWrapper.cs
    startLine: 11
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: 'public abstract class DMLibWrapper : object'
    content.vb: >-
      Public MustInherit Class DMLibWrapper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: DMLibTest.DMLibWrapper.DoTransfer(DMLibTest.TransferItem)
  commentId: M:DMLibTest.DMLibWrapper.DoTransfer(DMLibTest.TransferItem)
  id: DoTransfer(DMLibTest.TransferItem)
  parent: DMLibTest.DMLibWrapper
  langs:
  - csharp
  - vb
  name: DoTransfer(TransferItem)
  fullName: DMLibTest.DMLibWrapper.DoTransfer(DMLibTest.TransferItem)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DoTransfer
    path: test/DMLibTest/Framework/DMLibWrapper.cs
    startLine: 13
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public Task<TransferStatus> DoTransfer(TransferItem item)
    content.vb: Public Function DoTransfer(item As TransferItem) As Task(Of TransferStatus)
    parameters:
    - id: item
      type: DMLibTest.TransferItem
    return:
      type: Task{TransferStatus}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.DMLibWrapper.DoTransferImp(DMLibTest.TransferItem)
  commentId: M:DMLibTest.DMLibWrapper.DoTransferImp(DMLibTest.TransferItem)
  id: DoTransferImp(DMLibTest.TransferItem)
  parent: DMLibTest.DMLibWrapper
  langs:
  - csharp
  - vb
  name: DoTransferImp(TransferItem)
  fullName: DMLibTest.DMLibWrapper.DoTransferImp(DMLibTest.TransferItem)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DoTransferImp
    path: test/DMLibTest/Framework/DMLibWrapper.cs
    startLine: 19
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: protected abstract Task<TransferStatus> DoTransferImp(TransferItem item)
    content.vb: Protected MustOverride Function DoTransferImp(item As TransferItem) As Task(Of TransferStatus)
    parameters:
    - id: item
      type: DMLibTest.TransferItem
    return:
      type: Task{TransferStatus}
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: DMLibTest.TransferItem
  parent: DMLibTest
  isExternal: false
  name: TransferItem
  fullName: DMLibTest.TransferItem
- uid: Task{TransferStatus}
  definition: Task`1
  name: Task<TransferStatus>
  fullName: Task<TransferStatus>
  fullname.vb: Task(Of TransferStatus)
  name.vb: Task(Of TransferStatus)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: TransferStatus
    name: TransferStatus
    fullName: TransferStatus
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: TransferStatus
    name: TransferStatus
    fullName: TransferStatus
    isExternal: true
  - name: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  fullName: Task<>
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
