items:
- uid: DMLibTest.TestResult`1
  commentId: T:DMLibTest.TestResult`1
  id: TestResult`1
  parent: DMLibTest
  children:
  - DMLibTest.TestResult`1.#ctor
  - DMLibTest.TestResult`1.AddException(Exception)
  - DMLibTest.TestResult`1.DataInfo
  - DMLibTest.TestResult`1.Exceptions
  - DMLibTest.TestResult`1.TransferItems
  langs:
  - csharp
  - vb
  name: TestResult<TDataInfo>
  fullName: DMLibTest.TestResult<TDataInfo>
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/TestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TestResult
    path: test/DMLibTest/Framework/TestResult.cs
    startLine: 11
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: 'public class TestResult<TDataInfo> : object where TDataInfo : IDataInfo'
    content.vb: >-
      Public Class TestResult(Of TDataInfo As IDataInfo)
          Inherits Object
    typeParameters:
    - id: TDataInfo
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: DMLibTest.TestResult(Of TDataInfo)
  name.vb: TestResult(Of TDataInfo)
- uid: DMLibTest.TestResult`1.#ctor
  commentId: M:DMLibTest.TestResult`1.#ctor
  id: '#ctor'
  parent: DMLibTest.TestResult`1
  langs:
  - csharp
  - vb
  name: TestResult()
  fullName: DMLibTest.TestResult<TDataInfo>.TestResult()
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Framework/TestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: test/DMLibTest/Framework/TestResult.cs
    startLine: 15
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public TestResult()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.TestResult(Of TDataInfo).TestResult()
- uid: DMLibTest.TestResult`1.DataInfo
  commentId: P:DMLibTest.TestResult`1.DataInfo
  id: DataInfo
  parent: DMLibTest.TestResult`1
  langs:
  - csharp
  - vb
  name: DataInfo
  fullName: DMLibTest.TestResult<TDataInfo>.DataInfo
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/TestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DataInfo
    path: test/DMLibTest/Framework/TestResult.cs
    startLine: 21
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public TDataInfo DataInfo { get; set; }
    content.vb: Public Property DataInfo As TDataInfo
    parameters: []
    return:
      type: '{TDataInfo}'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.TestResult(Of TDataInfo).DataInfo
- uid: DMLibTest.TestResult`1.TransferItems
  commentId: P:DMLibTest.TestResult`1.TransferItems
  id: TransferItems
  parent: DMLibTest.TestResult`1
  langs:
  - csharp
  - vb
  name: TransferItems
  fullName: DMLibTest.TestResult<TDataInfo>.TransferItems
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/TestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferItems
    path: test/DMLibTest/Framework/TestResult.cs
    startLine: 27
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public List<TransferItem> TransferItems { get; set; }
    content.vb: Public Property TransferItems As List(Of TransferItem)
    parameters: []
    return:
      type: List{DMLibTest.TransferItem}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.TestResult(Of TDataInfo).TransferItems
- uid: DMLibTest.TestResult`1.Exceptions
  commentId: P:DMLibTest.TestResult`1.Exceptions
  id: Exceptions
  parent: DMLibTest.TestResult`1
  langs:
  - csharp
  - vb
  name: Exceptions
  fullName: DMLibTest.TestResult<TDataInfo>.Exceptions
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/TestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Exceptions
    path: test/DMLibTest/Framework/TestResult.cs
    startLine: 33
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public List<Exception> Exceptions { get; }
    content.vb: Public ReadOnly Property Exceptions As List(Of Exception)
    parameters: []
    return:
      type: List{Exception}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: DMLibTest.TestResult(Of TDataInfo).Exceptions
- uid: DMLibTest.TestResult`1.AddException(Exception)
  commentId: M:DMLibTest.TestResult`1.AddException(Exception)
  id: AddException(Exception)
  parent: DMLibTest.TestResult`1
  langs:
  - csharp
  - vb
  name: AddException(Exception)
  fullName: DMLibTest.TestResult<TDataInfo>.AddException(Exception)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/TestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AddException
    path: test/DMLibTest/Framework/TestResult.cs
    startLine: 41
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public void AddException(Exception e)
    content.vb: Public Sub AddException(e As Exception)
    parameters:
    - id: e
      type: Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.TestResult(Of TDataInfo).AddException(Exception)
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: '{TDataInfo}'
  isExternal: false
  name: TDataInfo
  fullName: TDataInfo
- uid: List{DMLibTest.TransferItem}
  definition: List`1
  name: List<TransferItem>
  fullName: List<DMLibTest.TransferItem>
  fullname.vb: List(Of DMLibTest.TransferItem)
  name.vb: List(Of TransferItem)
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: DMLibTest.TransferItem
    name: TransferItem
    fullName: DMLibTest.TransferItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.TransferItem
    name: TransferItem
    fullName: DMLibTest.TransferItem
  - name: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  fullName: List<>
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: List{Exception}
  definition: List`1
  name: List<Exception>
  fullName: List<Exception>
  fullname.vb: List(Of Exception)
  name.vb: List(Of Exception)
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: Exception
    name: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    fullName: Exception
    isExternal: true
  - name: )
    fullName: )
- uid: Exception
  isExternal: true
  name: Exception
  fullName: Exception
