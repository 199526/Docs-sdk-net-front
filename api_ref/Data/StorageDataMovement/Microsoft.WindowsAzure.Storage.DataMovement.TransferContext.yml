items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  id: TransferContext
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.#ctor
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.OverwriteCallback
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  langs:
  - csharp
  - vb
  name: TransferContext
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  type: Class
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferContext
    path: lib/TransferContext.cs
    startLine: 12
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nRepresents the context for a transfer, and provides additional runtime information about its execution.\n"
  example: []
  syntax:
    content: 'public class TransferContext : object'
    content.vb: >-
      Public Class TransferContext
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: TransferContext()
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.TransferContext()
  type: Constructor
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/TransferContext.cs
    startLine: 17
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferContext()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  id: '#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: TransferContext(TransferCheckpoint)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.TransferContext(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  type: Constructor
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/TransferContext.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferContext(TransferCheckpoint checkpoint)
    content.vb: Public Sub New(checkpoint As TransferCheckpoint)
    parameters:
    - id: checkpoint
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
      description: An <xref href="Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint" data-throw-if-not-resolved="false"></xref> object representing the last checkpoint from which the transfer continues on.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  id: ClientRequestId
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: ClientRequestId
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  type: Property
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ClientRequestId
    path: lib/TransferContext.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets the client request id.\n"
  remarks: "\nSetting this property modifies all the requests involved in the related transfer operation to include the the HTTP <em>x-ms-client-request-id</em> header.\n"
  example: []
  syntax:
    content: public string ClientRequestId { get; set; }
    content.vb: Public Property ClientRequestId As String
    parameters: []
    return:
      type: System.String
      description: A string containing the client request id.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  id: LogLevel
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: LogLevel
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  type: Property
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: LogLevel
    path: lib/TransferContext.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets the logging level to be used for the related transfer operation.\n"
  example: []
  syntax:
    content: public LogLevel LogLevel { get; set; }
    content.vb: Public Property LogLevel As LogLevel
    parameters: []
    return:
      type: LogLevel
      description: A value of type <see cref="!:Microsoft.WindowsAzure.Storage.LogLevel"></see> that specifies which events are logged for the related transfer operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  id: LastCheckpoint
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: LastCheckpoint
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  type: Property
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: LastCheckpoint
    path: lib/TransferContext.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets the last checkpoint of the transfer.\n"
  example: []
  syntax:
    content: public TransferCheckpoint LastCheckpoint { get; }
    content.vb: Public ReadOnly Property LastCheckpoint As TransferCheckpoint
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.OverwriteCallback
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.OverwriteCallback
  id: OverwriteCallback
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: OverwriteCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.OverwriteCallback
  type: Property
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: OverwriteCallback
    path: lib/TransferContext.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets the callback invoked to tell whether to overwrite an existing destination.\n"
  example: []
  syntax:
    content: public OverwriteCallback OverwriteCallback { get; set; }
    content.vb: Public Property OverwriteCallback As OverwriteCallback
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.DataMovement.OverwriteCallback
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  id: ProgressHandler
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: ProgressHandler
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  type: Property
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ProgressHandler
    path: lib/TransferContext.cs
    startLine: 88
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets the progress update handler.\n"
  example: []
  syntax:
    content: public IProgress<TransferStatus> ProgressHandler { get; set; }
    content.vb: Public Property ProgressHandler As IProgress(Of TransferStatus)
    parameters: []
    return:
      type: IProgress{Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  commentId: E:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  id: FileTransferred
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: FileTransferred
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  type: Event
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileTransferred
    path: lib/TransferContext.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nThe event triggered when a file transfer is completed successfully.\n"
  example: []
  syntax:
    content: public event EventHandler<TransferEventArgs> FileTransferred
    content.vb: Public Event FileTransferred As EventHandler(Of TransferEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  commentId: E:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  id: FileSkipped
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: FileSkipped
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  type: Event
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileSkipped
    path: lib/TransferContext.cs
    startLine: 109
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nThe event triggered when a file transfer is skipped.\n"
  example: []
  syntax:
    content: public event EventHandler<TransferEventArgs> FileSkipped
    content.vb: Public Event FileSkipped As EventHandler(Of TransferEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  commentId: E:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  id: FileFailed
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  langs:
  - csharp
  - vb
  name: FileFailed
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  type: Event
  source:
    remote:
      path: lib/TransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileFailed
    path: lib/TransferContext.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  packages:
  - Microsoft.WindowsAzure.Storage.DataMovement(0.3.0.0)
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nThe event triggered when a file transfer is failed.\n"
  example: []
  syntax:
    content: public event EventHandler<TransferEventArgs> FileFailed
    content.vb: Public Event FileFailed As EventHandler(Of TransferEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferContext
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferCheckpoint
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: LogLevel
  isExternal: true
  name: LogLevel
  fullName: LogLevel
- uid: Microsoft.WindowsAzure.Storage.DataMovement.OverwriteCallback
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: OverwriteCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.OverwriteCallback
- uid: IProgress{Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus}
  definition: IProgress`1
  name: IProgress<TransferStatus>
  fullName: IProgress<Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus>
  fullname.vb: IProgress(Of Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus)
  name.vb: IProgress(Of TransferStatus)
  spec.csharp:
  - uid: IProgress`1
    name: IProgress
    fullName: IProgress
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
    name: TransferStatus
    fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IProgress`1
    name: IProgress
    fullName: IProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
    name: TransferStatus
    fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  - name: )
    fullName: )
- uid: IProgress`1
  isExternal: true
  name: IProgress<>
  fullName: IProgress<>
  fullname.vb: IProgress(Of )
  name.vb: IProgress(Of )
  spec.csharp:
  - uid: IProgress`1
    name: IProgress
    fullName: IProgress
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IProgress`1
    name: IProgress
    fullName: IProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: EventHandler{Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs}
  definition: EventHandler`1
  name: EventHandler<TransferEventArgs>
  fullName: EventHandler<Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs>
  fullname.vb: EventHandler(Of Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs)
  name.vb: EventHandler(Of TransferEventArgs)
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs
    name: TransferEventArgs
    fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs
    name: TransferEventArgs
    fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferEventArgs
  - name: )
    fullName: )
- uid: EventHandler`1
  isExternal: true
  name: EventHandler<>
  fullName: EventHandler<>
  fullname.vb: EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
