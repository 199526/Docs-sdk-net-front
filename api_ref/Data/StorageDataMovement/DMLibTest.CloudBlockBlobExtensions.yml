items:
- uid: DMLibTest.CloudBlockBlobExtensions
  commentId: T:DMLibTest.CloudBlockBlobExtensions
  id: CloudBlockBlobExtensions
  parent: DMLibTest
  children:
  - DMLibTest.CloudBlockBlobExtensions.DownloadBlockList(CloudBlockBlob,BlockListingFilter,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudBlockBlobExtensions.PutBlock(CloudBlockBlob,System.String,Stream,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudBlockBlobExtensions.PutBlockList(CloudBlockBlob,IEnumerable{System.String},AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudBlockBlobExtensions.UploadFromByteArray(CloudBlockBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudBlockBlobExtensions.UploadFromFile(CloudBlockBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudBlockBlobExtensions.UploadFromStream(CloudBlockBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  langs:
  - csharp
  - vb
  name: CloudBlockBlobExtensions
  fullName: DMLibTest.CloudBlockBlobExtensions
  type: Class
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CloudBlockBlobExtensions
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 7
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: 'public class CloudBlockBlobExtensions : object'
    content.vb: >-
      Public Class CloudBlockBlobExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.CloudBlockBlobExtensions.DownloadBlockList(CloudBlockBlob,BlockListingFilter,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudBlockBlobExtensions.DownloadBlockList(CloudBlockBlob,BlockListingFilter,AccessCondition,BlobRequestOptions,OperationContext)
  id: DownloadBlockList(CloudBlockBlob,BlockListingFilter,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudBlockBlobExtensions
  langs:
  - csharp
  - vb
  name: DownloadBlockList(CloudBlockBlob, BlockListingFilter, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudBlockBlobExtensions.DownloadBlockList(CloudBlockBlob, BlockListingFilter, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DownloadBlockList
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 9
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static IEnumerable<ListBlockItem> DownloadBlockList(this CloudBlockBlob blob, BlockListingFilter blockListingFilter = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DownloadBlockList(blob As CloudBlockBlob, blockListingFilter As BlockListingFilter = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of ListBlockItem)
    parameters:
    - id: blob
      type: CloudBlockBlob
    - id: blockListingFilter
      type: BlockListingFilter
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: IEnumerable{ListBlockItem}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlockBlobExtensions.PutBlock(CloudBlockBlob,System.String,Stream,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudBlockBlobExtensions.PutBlock(CloudBlockBlob,System.String,Stream,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  id: PutBlock(CloudBlockBlob,System.String,Stream,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudBlockBlobExtensions
  langs:
  - csharp
  - vb
  name: PutBlock(CloudBlockBlob, String, Stream, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudBlockBlobExtensions.PutBlock(CloudBlockBlob, System.String, Stream, System.String, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PutBlock
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 14
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void PutBlock(this CloudBlockBlob blob, string blockId, Stream blockData, string contentMD5, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub PutBlock(blob As CloudBlockBlob, blockId As String, blockData As Stream, contentMD5 As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudBlockBlob
    - id: blockId
      type: System.String
    - id: blockData
      type: Stream
    - id: contentMD5
      type: System.String
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlockBlobExtensions.PutBlockList(CloudBlockBlob,IEnumerable{System.String},AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudBlockBlobExtensions.PutBlockList(CloudBlockBlob,IEnumerable{System.String},AccessCondition,BlobRequestOptions,OperationContext)
  id: PutBlockList(CloudBlockBlob,IEnumerable{System.String},AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudBlockBlobExtensions
  langs:
  - csharp
  - vb
  name: PutBlockList(CloudBlockBlob, IEnumerable<String>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudBlockBlobExtensions.PutBlockList(CloudBlockBlob, IEnumerable<System.String>, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PutBlockList
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 19
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void PutBlockList(this CloudBlockBlob blob, IEnumerable<string> blockList, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub PutBlockList(blob As CloudBlockBlob, blockList As IEnumerable(Of String), accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudBlockBlob
    - id: blockList
      type: IEnumerable{System.String}
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudBlockBlobExtensions.PutBlockList(CloudBlockBlob, IEnumerable(Of System.String), AccessCondition, BlobRequestOptions, OperationContext)
  name.vb: PutBlockList(CloudBlockBlob, IEnumerable(Of String), AccessCondition, BlobRequestOptions, OperationContext)
- uid: DMLibTest.CloudBlockBlobExtensions.UploadFromByteArray(CloudBlockBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudBlockBlobExtensions.UploadFromByteArray(CloudBlockBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromByteArray(CloudBlockBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudBlockBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromByteArray(CloudBlockBlob, Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudBlockBlobExtensions.UploadFromByteArray(CloudBlockBlob, System.Byte[], System.Int32, System.Int32, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromByteArray
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 24
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromByteArray(this CloudBlockBlob blob, byte[] buffer, int index, int count, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromByteArray(blob As CloudBlockBlob, buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudBlockBlob
    - id: buffer
      type: System.Byte[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudBlockBlobExtensions.UploadFromByteArray(CloudBlockBlob, System.Byte(), System.Int32, System.Int32, AccessCondition, BlobRequestOptions, OperationContext)
  name.vb: UploadFromByteArray(CloudBlockBlob, Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: DMLibTest.CloudBlockBlobExtensions.UploadFromFile(CloudBlockBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudBlockBlobExtensions.UploadFromFile(CloudBlockBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromFile(CloudBlockBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudBlockBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromFile(CloudBlockBlob, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudBlockBlobExtensions.UploadFromFile(CloudBlockBlob, System.String, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromFile
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 29
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromFile(this CloudBlockBlob blob, string path, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromFile(blob As CloudBlockBlob, path As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudBlockBlob
    - id: path
      type: System.String
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlockBlobExtensions.UploadFromStream(CloudBlockBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudBlockBlobExtensions.UploadFromStream(CloudBlockBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromStream(CloudBlockBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudBlockBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromStream(CloudBlockBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudBlockBlobExtensions.UploadFromStream(CloudBlockBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromStream
    path: netcore/DMLibTest/CloudBlockBlobExtensions.cs
    startLine: 34
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromStream(this CloudBlockBlob blob, Stream source, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromStream(blob As CloudBlockBlob, source As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudBlockBlob
    - id: source
      type: Stream
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: CloudBlockBlob
  isExternal: true
  name: CloudBlockBlob
  fullName: CloudBlockBlob
- uid: BlockListingFilter
  isExternal: true
  name: BlockListingFilter
  fullName: BlockListingFilter
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  fullName: AccessCondition
- uid: BlobRequestOptions
  isExternal: true
  name: BlobRequestOptions
  fullName: BlobRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  fullName: OperationContext
- uid: IEnumerable{ListBlockItem}
  definition: IEnumerable`1
  name: IEnumerable<ListBlockItem>
  fullName: IEnumerable<ListBlockItem>
  fullname.vb: IEnumerable(Of ListBlockItem)
  name.vb: IEnumerable(Of ListBlockItem)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: ListBlockItem
    name: ListBlockItem
    fullName: ListBlockItem
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: ListBlockItem
    name: ListBlockItem
    fullName: ListBlockItem
    isExternal: true
  - name: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  fullName: IEnumerable<>
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: Stream
  isExternal: true
  name: Stream
  fullName: Stream
- uid: IEnumerable{System.String}
  definition: IEnumerable`1
  name: IEnumerable<String>
  fullName: IEnumerable<System.String>
  fullname.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
