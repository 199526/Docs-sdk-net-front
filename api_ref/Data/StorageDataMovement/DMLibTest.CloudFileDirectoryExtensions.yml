items:
- uid: DMLibTest.CloudFileDirectoryExtensions
  commentId: T:DMLibTest.CloudFileDirectoryExtensions
  id: CloudFileDirectoryExtensions
  parent: DMLibTest
  children:
  - DMLibTest.CloudFileDirectoryExtensions.CreateIfNotExists(CloudFileDirectory,FileRequestOptions,OperationContext)
  - DMLibTest.CloudFileDirectoryExtensions.Delete(CloudFileDirectory,AccessCondition,FileRequestOptions,OperationContext)
  - DMLibTest.CloudFileDirectoryExtensions.Exists(CloudFileDirectory,FileRequestOptions,OperationContext)
  - DMLibTest.CloudFileDirectoryExtensions.ListFilesAndDirectories(CloudFileDirectory,FileRequestOptions,OperationContext)
  langs:
  - csharp
  - vb
  name: CloudFileDirectoryExtensions
  fullName: DMLibTest.CloudFileDirectoryExtensions
  type: Class
  source:
    remote:
      path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CloudFileDirectoryExtensions
    path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
    startLine: 6
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: 'public class CloudFileDirectoryExtensions : object'
    content.vb: >-
      Public Class CloudFileDirectoryExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.CloudFileDirectoryExtensions.CreateIfNotExists(CloudFileDirectory,FileRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudFileDirectoryExtensions.CreateIfNotExists(CloudFileDirectory,FileRequestOptions,OperationContext)
  id: CreateIfNotExists(CloudFileDirectory,FileRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudFileDirectoryExtensions
  langs:
  - csharp
  - vb
  name: CreateIfNotExists(CloudFileDirectory, FileRequestOptions, OperationContext)
  fullName: DMLibTest.CloudFileDirectoryExtensions.CreateIfNotExists(CloudFileDirectory, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateIfNotExists
    path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
    startLine: 8
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static bool CreateIfNotExists(this CloudFileDirectory dir, FileRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateIfNotExists(dir As CloudFileDirectory, requestOptions As FileRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: requestOptions
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileDirectoryExtensions.Delete(CloudFileDirectory,AccessCondition,FileRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudFileDirectoryExtensions.Delete(CloudFileDirectory,AccessCondition,FileRequestOptions,OperationContext)
  id: Delete(CloudFileDirectory,AccessCondition,FileRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudFileDirectoryExtensions
  langs:
  - csharp
  - vb
  name: Delete(CloudFileDirectory, AccessCondition, FileRequestOptions, OperationContext)
  fullName: DMLibTest.CloudFileDirectoryExtensions.Delete(CloudFileDirectory, AccessCondition, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Delete
    path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
    startLine: 13
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void Delete(this CloudFileDirectory dir, AccessCondition accessCondition = null, FileRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(dir As CloudFileDirectory, accessCondition As AccessCondition = Nothing, options As FileRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileDirectoryExtensions.Exists(CloudFileDirectory,FileRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudFileDirectoryExtensions.Exists(CloudFileDirectory,FileRequestOptions,OperationContext)
  id: Exists(CloudFileDirectory,FileRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudFileDirectoryExtensions
  langs:
  - csharp
  - vb
  name: Exists(CloudFileDirectory, FileRequestOptions, OperationContext)
  fullName: DMLibTest.CloudFileDirectoryExtensions.Exists(CloudFileDirectory, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Exists
    path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
    startLine: 18
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static bool Exists(this CloudFileDirectory dir, FileRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Exists(dir As CloudFileDirectory, requestOptions As FileRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: requestOptions
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileDirectoryExtensions.ListFilesAndDirectories(CloudFileDirectory,FileRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudFileDirectoryExtensions.ListFilesAndDirectories(CloudFileDirectory,FileRequestOptions,OperationContext)
  id: ListFilesAndDirectories(CloudFileDirectory,FileRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudFileDirectoryExtensions
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectories(CloudFileDirectory, FileRequestOptions, OperationContext)
  fullName: DMLibTest.CloudFileDirectoryExtensions.ListFilesAndDirectories(CloudFileDirectory, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ListFilesAndDirectories
    path: netcore/DMLibTest/CloudFileDirectoryExtensions.cs
    startLine: 23
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static IEnumerable<IListFileItem> ListFilesAndDirectories(this CloudFileDirectory dir, FileRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFilesAndDirectories(dir As CloudFileDirectory, options As FileRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of IListFileItem)
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: options
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: IEnumerable{IListFileItem}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: CloudFileDirectory
  isExternal: true
  name: CloudFileDirectory
  fullName: CloudFileDirectory
- uid: FileRequestOptions
  isExternal: true
  name: FileRequestOptions
  fullName: FileRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  fullName: OperationContext
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  fullName: AccessCondition
- uid: IEnumerable{IListFileItem}
  definition: IEnumerable`1
  name: IEnumerable<IListFileItem>
  fullName: IEnumerable<IListFileItem>
  fullname.vb: IEnumerable(Of IListFileItem)
  name.vb: IEnumerable(Of IListFileItem)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: IListFileItem
    name: IListFileItem
    fullName: IListFileItem
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IListFileItem
    name: IListFileItem
    fullName: IListFileItem
    isExternal: true
  - name: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  fullName: IEnumerable<>
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
