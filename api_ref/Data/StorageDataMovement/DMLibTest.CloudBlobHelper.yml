items:
- uid: DMLibTest.CloudBlobHelper
  commentId: T:DMLibTest.CloudBlobHelper
  id: CloudBlobHelper
  parent: DMLibTest
  children:
  - DMLibTest.CloudBlobHelper.#ctor(CloudStorageAccount)
  - DMLibTest.CloudBlobHelper.#ctor(System.String)
  - DMLibTest.CloudBlobHelper.Account
  - DMLibTest.CloudBlobHelper.BlobClient
  - DMLibTest.CloudBlobHelper.CalculateMD5ByDownloading(CloudBlob,System.Boolean)
  - DMLibTest.CloudBlobHelper.CleanupContainer(System.String)
  - DMLibTest.CloudBlobHelper.CleanupContainerByRecreateIt(System.String)
  - DMLibTest.CloudBlobHelper.ClearSASPolicyofContainer(System.String)
  - DMLibTest.CloudBlobHelper.CompareCloudBlobAndCloudBlob(CloudBlob,CloudBlob)
  - DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(CloudBlob,System.String)
  - DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(CloudBlobDirectory,System.String)
  - DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.CreateContainer(System.String)
  - DMLibTest.CloudBlobHelper.CreateSnapshot(System.String,System.String)
  - DMLibTest.CloudBlobHelper.DeleteBlob(System.String,System.String)
  - DMLibTest.CloudBlobHelper.DeleteBlobDirectory(System.String,System.String,System.Boolean)
  - DMLibTest.CloudBlobHelper.DeleteContainer(System.String)
  - DMLibTest.CloudBlobHelper.DeleteSnapshotOnly(System.String,System.String)
  - DMLibTest.CloudBlobHelper.DownloadFile(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.Exists(System.String)
  - DMLibTest.CloudBlobHelper.GenerateBlockBlob(CloudBlockBlob,List{System.Int32})
  - DMLibTest.CloudBlobHelper.GeneratePageBlobWithRangedData(CloudPageBlob,List{System.Int32},List{System.Int32})
  - DMLibTest.CloudBlobHelper.GetBlob(System.String,System.String,System.String@)
  - DMLibTest.CloudBlobHelper.GetBlobReference(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer,System.String)
  - DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer,System.String,System.String)
  - DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobDirectory,System.String,System.String)
  - DMLibTest.CloudBlobHelper.GetDirReference(System.String,System.String)
  - DMLibTest.CloudBlobHelper.GetGRSContainer(System.String)
  - DMLibTest.CloudBlobHelper.GetNameOfSnapshot(System.String,CloudBlob)
  - DMLibTest.CloudBlobHelper.GetSASofContainer(System.String,SharedAccessBlobPermissions,System.Int32,System.Boolean,System.String)
  - DMLibTest.CloudBlobHelper.ListBlobs(System.String,BlobListingDetails,List{CloudBlob}@)
  - DMLibTest.CloudBlobHelper.ListBlobs(System.String,List{CloudBlob}@)
  - DMLibTest.CloudBlobHelper.ListBlobs(System.String,System.String,List{CloudBlob}@)
  - DMLibTest.CloudBlobHelper.MapBlobTypeToStorageBlobType(System.String)
  - DMLibTest.CloudBlobHelper.MapStorageBlobTypeToBlobType(Microsoft.WindowsAzure.Storage.Blob.BlobType)
  - DMLibTest.CloudBlobHelper.PutBlob(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.PutBlockList(System.String,System.String,System.String[])
  - DMLibTest.CloudBlobHelper.QueryBlob(System.String,System.String)
  - DMLibTest.CloudBlobHelper.QueryBlobDirectory(System.String,System.String)
  - DMLibTest.CloudBlobHelper.QueryBlobProperties(System.String,System.String)
  - DMLibTest.CloudBlobHelper.RootContainer
  - DMLibTest.CloudBlobHelper.SetContainerAccessType(System.String,BlobContainerPublicAccessType)
  - DMLibTest.CloudBlobHelper.SetGRSContainerAccessType(System.String,BlobContainerPublicAccessType)
  - DMLibTest.CloudBlobHelper.SetMD5Hash(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.UploadDirectory(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  - DMLibTest.CloudBlobHelper.UploadDirectory(System.String,System.String,System.String,System.Boolean,System.String)
  - DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  - DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(System.String,System.String,System.String,System.Boolean,System.String)
  - DMLibTest.CloudBlobHelper.UploadFileToAppendBlob(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.UploadFileToBlob(System.String,System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.UploadFileToBlockBlob(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.UploadFileToPageBlob(System.String,System.String,System.String)
  - DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  - DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: CloudBlobHelper
  fullName: DMLibTest.CloudBlobHelper
  type: Class
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CloudBlobHelper
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2361
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nThis class helps to do operations on cloud blobs\n"
  example: []
  syntax:
    content: 'public class CloudBlobHelper : object'
    content.vb: >-
      Public Class CloudBlobHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.CloudBlobHelper.RootContainer
  commentId: F:DMLibTest.CloudBlobHelper.RootContainer
  id: RootContainer
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: RootContainer
  fullName: DMLibTest.CloudBlobHelper.RootContainer
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RootContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2363
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public const string RootContainer = null
    content.vb: Public Const RootContainer As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudBlobHelper.Account
  commentId: P:DMLibTest.CloudBlobHelper.Account
  id: Account
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: Account
  fullName: DMLibTest.CloudBlobHelper.Account
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Account
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2370
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nThe storage account\n"
  example: []
  syntax:
    content: public CloudStorageAccount Account { get; }
    content.vb: Public ReadOnly Property Account As CloudStorageAccount
    parameters: []
    return:
      type: CloudStorageAccount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.CloudBlobHelper.BlobClient
  commentId: P:DMLibTest.CloudBlobHelper.BlobClient
  id: BlobClient
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: BlobClient
  fullName: DMLibTest.CloudBlobHelper.BlobClient
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BlobClient
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2380
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nThe blob client\n"
  example: []
  syntax:
    content: public CloudBlobClient BlobClient { get; set; }
    content.vb: Public Property BlobClient As CloudBlobClient
    parameters: []
    return:
      type: CloudBlobClient
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.#ctor(CloudStorageAccount)
  commentId: M:DMLibTest.CloudBlobHelper.#ctor(CloudStorageAccount)
  id: '#ctor(CloudStorageAccount)'
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CloudBlobHelper(CloudStorageAccount)
  fullName: DMLibTest.CloudBlobHelper.CloudBlobHelper(CloudStorageAccount)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2390
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nConstruct the helper with the storage account\n"
  example: []
  syntax:
    content: public CloudBlobHelper(CloudStorageAccount account)
    content.vb: Public Sub New(account As CloudStorageAccount)
    parameters:
    - id: account
      type: CloudStorageAccount
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.#ctor(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CloudBlobHelper(String)
  fullName: DMLibTest.CloudBlobHelper.CloudBlobHelper(System.String)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2401
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nConstruct the helper with the storage account\n"
  example: []
  syntax:
    content: public CloudBlobHelper(string ConnectionString)
    content.vb: Public Sub New(ConnectionString As String)
    parameters:
    - id: ConnectionString
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.Exists(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.Exists(System.String)
  id: Exists(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: Exists(String)
  fullName: DMLibTest.CloudBlobHelper.Exists(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Exists
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2408
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool Exists(string containerName)
    content.vb: Public Function Exists(containerName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CreateContainer(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CreateContainer(System.String)
  id: CreateContainer(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CreateContainer(String)
  fullName: DMLibTest.CloudBlobHelper.CreateContainer(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2419
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nCreate a container for blobs\n"
  example: []
  syntax:
    content: public bool CreateContainer(string containerName)
    content.vb: Public Function CreateContainer(containerName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    return:
      type: System.Boolean
      description: Return true on success, false if already exists, throw exception on error
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.DeleteContainer(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.DeleteContainer(System.String)
  id: DeleteContainer(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: DeleteContainer(String)
  fullName: DMLibTest.CloudBlobHelper.DeleteContainer(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2430
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nDelete the container for the blobs\n"
  example: []
  syntax:
    content: public bool DeleteContainer(string containerName)
    content.vb: Public Function DeleteContainer(containerName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of container
    return:
      type: System.Boolean
      description: Return true on success (or the container was deleted before), false if the container doesnot exist, throw exception on error
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.GetGRSContainer(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetGRSContainer(System.String)
  id: GetGRSContainer(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetGRSContainer(String)
  fullName: DMLibTest.CloudBlobHelper.GetGRSContainer(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetGRSContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2436
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public CloudBlobContainer GetGRSContainer(string containerName)
    content.vb: Public Function GetGRSContainer(containerName As String) As CloudBlobContainer
    parameters:
    - id: containerName
      type: System.String
    return:
      type: CloudBlobContainer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.SetGRSContainerAccessType(System.String,BlobContainerPublicAccessType)
  commentId: M:DMLibTest.CloudBlobHelper.SetGRSContainerAccessType(System.String,BlobContainerPublicAccessType)
  id: SetGRSContainerAccessType(System.String,BlobContainerPublicAccessType)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: SetGRSContainerAccessType(String, BlobContainerPublicAccessType)
  fullName: DMLibTest.CloudBlobHelper.SetGRSContainerAccessType(System.String, BlobContainerPublicAccessType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetGRSContainerAccessType
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2443
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public BlobContainerPermissions SetGRSContainerAccessType(string containerName, BlobContainerPublicAccessType accessType)
    content.vb: Public Function SetGRSContainerAccessType(containerName As String, accessType As BlobContainerPublicAccessType) As BlobContainerPermissions
    parameters:
    - id: containerName
      type: System.String
    - id: accessType
      type: BlobContainerPublicAccessType
    return:
      type: BlobContainerPermissions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.SetContainerAccessType(System.String,BlobContainerPublicAccessType)
  commentId: M:DMLibTest.CloudBlobHelper.SetContainerAccessType(System.String,BlobContainerPublicAccessType)
  id: SetContainerAccessType(System.String,BlobContainerPublicAccessType)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: SetContainerAccessType(String, BlobContainerPublicAccessType)
  fullName: DMLibTest.CloudBlobHelper.SetContainerAccessType(System.String, BlobContainerPublicAccessType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetContainerAccessType
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2465
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nSet the specific container to the accesstype\n"
  example: []
  syntax:
    content: public BlobContainerPermissions SetContainerAccessType(string containerName, BlobContainerPublicAccessType accesstype)
    content.vb: Public Function SetContainerAccessType(containerName As String, accesstype As BlobContainerPublicAccessType) As BlobContainerPermissions
    parameters:
    - id: containerName
      type: System.String
      description: container Name
    - id: accesstype
      type: BlobContainerPublicAccessType
      description: the accesstype the contain will be set
    return:
      type: BlobContainerPermissions
      description: the container 's permission before set, so can be set back when test case finish
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.ListBlobs(System.String,List{CloudBlob}@)
  commentId: M:DMLibTest.CloudBlobHelper.ListBlobs(System.String,List{CloudBlob}@)
  id: ListBlobs(System.String,List{CloudBlob}@)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: ListBlobs(String, out List<CloudBlob>)
  fullName: DMLibTest.CloudBlobHelper.ListBlobs(System.String, out List<CloudBlob>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ListBlobs
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2483
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool ListBlobs(string containerName, out List<CloudBlob> blobList)
    content.vb: Public Function ListBlobs(containerName As String, ByRef blobList As List(Of CloudBlob)) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobList
      type: List{CloudBlob}
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.CloudBlobHelper.ListBlobs(System.String, ByRef List(Of CloudBlob))
  name.vb: ListBlobs(String, ByRef List(Of CloudBlob))
- uid: DMLibTest.CloudBlobHelper.ListBlobs(System.String,BlobListingDetails,List{CloudBlob}@)
  commentId: M:DMLibTest.CloudBlobHelper.ListBlobs(System.String,BlobListingDetails,List{CloudBlob}@)
  id: ListBlobs(System.String,BlobListingDetails,List{CloudBlob}@)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: ListBlobs(String, BlobListingDetails, out List<CloudBlob>)
  fullName: DMLibTest.CloudBlobHelper.ListBlobs(System.String, BlobListingDetails, out List<CloudBlob>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ListBlobs
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2489
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool ListBlobs(string containerName, BlobListingDetails listingDetails, out List<CloudBlob> blobList)
    content.vb: Public Function ListBlobs(containerName As String, listingDetails As BlobListingDetails, ByRef blobList As List(Of CloudBlob)) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: listingDetails
      type: BlobListingDetails
    - id: blobList
      type: List{CloudBlob}
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.CloudBlobHelper.ListBlobs(System.String, BlobListingDetails, ByRef List(Of CloudBlob))
  name.vb: ListBlobs(String, BlobListingDetails, ByRef List(Of CloudBlob))
- uid: DMLibTest.CloudBlobHelper.ListBlobs(System.String,System.String,List{CloudBlob}@)
  commentId: M:DMLibTest.CloudBlobHelper.ListBlobs(System.String,System.String,List{CloudBlob}@)
  id: ListBlobs(System.String,System.String,List{CloudBlob}@)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: ListBlobs(String, String, out List<CloudBlob>)
  fullName: DMLibTest.CloudBlobHelper.ListBlobs(System.String, System.String, out List<CloudBlob>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ListBlobs
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2518
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nlist blobs in a folder, TODO: implement this for batch operations on blobs\n"
  example: []
  syntax:
    content: public bool ListBlobs(string containerName, string folderName, out List<CloudBlob> blobList)
    content.vb: Public Function ListBlobs(containerName As String, folderName As String, ByRef blobList As List(Of CloudBlob)) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: 
    - id: folderName
      type: System.String
    - id: blobList
      type: List{CloudBlob}
      description: 
    return:
      type: System.Boolean
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.CloudBlobHelper.ListBlobs(System.String, System.String, ByRef List(Of CloudBlob))
  name.vb: ListBlobs(String, String, ByRef List(Of CloudBlob))
- uid: DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  id: ValidateFixedTestTree(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: ValidateFixedTestTree(String, String, String, String, Int32, Int32, String, Boolean)
  fullName: DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String, System.String, System.String, System.String, System.Int32, System.Int32, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ValidateFixedTestTree
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2554
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nValidate the uploaded tree which is created by Helper.GenerateFixedTestTree()\n"
  example: []
  syntax:
    content: public bool ValidateFixedTestTree(string filename, string foldername, string sourceFolder, string destFolder, int size, int layer, string containerName, bool empty = false)
    content.vb: Public Function ValidateFixedTestTree(filename As String, foldername As String, sourceFolder As String, destFolder As String, size As Integer, layer As Integer, containerName As String, empty As Boolean = False) As Boolean
    parameters:
    - id: filename
      type: System.String
      description: the file prefix of the tree
    - id: foldername
      type: System.String
      description: the folder prefix of the tree
    - id: sourceFolder
      type: System.String
      description: 
    - id: destFolder
      type: System.String
      description: 
    - id: size
      type: System.Int32
      description: how many files in each folder
    - id: layer
      type: System.Int32
      description: how many folder level to verify
    - id: containerName
      type: System.String
      description: the container which contain the uploaded tree
    - id: empty
      type: System.Boolean
      description: true means should verify the folder not exist. false means verify the folder exist.
    return:
      type: System.Boolean
      description: true if verify pass, false mean verify fail
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  id: ValidateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: ValidateFixedTestTree(String, String, String, Int32, Int32, String, Boolean)
  fullName: DMLibTest.CloudBlobHelper.ValidateFixedTestTree(System.String, System.String, System.String, System.Int32, System.Int32, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ValidateFixedTestTree
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2610
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nValidate the uploaded tree which is created by Helper.GenerateFixedTestTree()\n"
  example: []
  syntax:
    content: public bool ValidateFixedTestTree(string filename, string foldername, string currentFolder, int size, int layer, string containerName, bool empty = false)
    content.vb: Public Function ValidateFixedTestTree(filename As String, foldername As String, currentFolder As String, size As Integer, layer As Integer, containerName As String, empty As Boolean = False) As Boolean
    parameters:
    - id: filename
      type: System.String
      description: the file prefix of the tree
    - id: foldername
      type: System.String
      description: the folder prefix of the tree
    - id: currentFolder
      type: System.String
      description: current folder to validate
    - id: size
      type: System.Int32
      description: how many files in each folder
    - id: layer
      type: System.Int32
      description: how many folder level to verify
    - id: containerName
      type: System.String
      description: the container which contain the uploaded tree
    - id: empty
      type: System.Boolean
      description: true means should verify the folder not exist. false means verify the folder exist.
    return:
      type: System.Boolean
      description: true if verify pass, false mean verify fail
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.GetSASofContainer(System.String,SharedAccessBlobPermissions,System.Int32,System.Boolean,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetSASofContainer(System.String,SharedAccessBlobPermissions,System.Int32,System.Boolean,System.String)
  id: GetSASofContainer(System.String,SharedAccessBlobPermissions,System.Int32,System.Boolean,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetSASofContainer(String, SharedAccessBlobPermissions, Int32, Boolean, String)
  fullName: DMLibTest.CloudBlobHelper.GetSASofContainer(System.String, SharedAccessBlobPermissions, System.Int32, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetSASofContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2623
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nGet SAS of a container with specific permission and period\n"
  example: []
  syntax:
    content: public string GetSASofContainer(string containerName, SharedAccessBlobPermissions SAB, int validatePeriod, bool UseSavedPolicy = true, string PolicySignedIdentifier = "PolicyIdentifier")
    content.vb: Public Function GetSASofContainer(containerName As String, SAB As SharedAccessBlobPermissions, validatePeriod As Integer, UseSavedPolicy As Boolean = True, PolicySignedIdentifier As String = "PolicyIdentifier") As String
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: SAB
      type: SharedAccessBlobPermissions
    - id: validatePeriod
      type: System.Int32
      description: How long the SAS will be valid before expire, in second
    - id: UseSavedPolicy
      type: System.Boolean
    - id: PolicySignedIdentifier
      type: System.String
    return:
      type: System.String
      description: the SAS
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.ClearSASPolicyofContainer(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.ClearSASPolicyofContainer(System.String)
  id: ClearSASPolicyofContainer(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: ClearSASPolicyofContainer(String)
  fullName: DMLibTest.CloudBlobHelper.ClearSASPolicyofContainer(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ClearSASPolicyofContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2660
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nClear the SAS policy set to a container, used to revoke the SAS\n"
  example: []
  syntax:
    content: public bool ClearSASPolicyofContainer(string containerName)
    content.vb: Public Function ClearSASPolicyofContainer(containerName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    return:
      type: System.Boolean
      description: True for success
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CleanupContainer(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CleanupContainer(System.String)
  id: CleanupContainer(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CleanupContainer(String)
  fullName: DMLibTest.CloudBlobHelper.CleanupContainer(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupContainer
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2676
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool CleanupContainer(string containerName)
    content.vb: Public Function CleanupContainer(containerName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CleanupContainerByRecreateIt(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CleanupContainerByRecreateIt(System.String)
  id: CleanupContainerByRecreateIt(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CleanupContainerByRecreateIt(String)
  fullName: DMLibTest.CloudBlobHelper.CleanupContainerByRecreateIt(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupContainerByRecreateIt
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2736
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool CleanupContainerByRecreateIt(string containerName)
    content.vb: Public Function CleanupContainerByRecreateIt(containerName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadDirectory(System.String,System.String,System.String,System.Boolean,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadDirectory(System.String,System.String,System.String,System.Boolean,System.String)
  id: UploadDirectory(System.String,System.String,System.String,System.Boolean,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadDirectory(String, String, String, Boolean, String)
  fullName: DMLibTest.CloudBlobHelper.UploadDirectory(System.String, System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadDirectory
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2780
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public void UploadDirectory(string localDirName, string containerName, string blobDirName, bool recursive, string blobType = null)
    content.vb: Public Sub UploadDirectory(localDirName As String, containerName As String, blobDirName As String, recursive As Boolean, blobType As String = Nothing)
    parameters:
    - id: localDirName
      type: System.String
    - id: containerName
      type: System.String
    - id: blobDirName
      type: System.String
    - id: recursive
      type: System.Boolean
    - id: blobType
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadDirectory(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadDirectory(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  id: UploadDirectory(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadDirectory(DirectoryInfo, CloudBlobDirectory, Boolean, String)
  fullName: DMLibTest.CloudBlobHelper.UploadDirectory(DirectoryInfo, CloudBlobDirectory, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadDirectory
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2789
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public void UploadDirectory(DirectoryInfo sourceDir, CloudBlobDirectory destDir, bool recursive, string blobType = null)
    content.vb: Public Sub UploadDirectory(sourceDir As DirectoryInfo, destDir As CloudBlobDirectory, recursive As Boolean, blobType As String = Nothing)
    parameters:
    - id: sourceDir
      type: DirectoryInfo
    - id: destDir
      type: CloudBlobDirectory
    - id: recursive
      type: System.Boolean
    - id: blobType
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(System.String,System.String,System.String,System.Boolean,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(System.String,System.String,System.String,System.Boolean,System.String)
  id: UploadDirectoryIfNotExist(System.String,System.String,System.String,System.Boolean,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadDirectoryIfNotExist(String, String, String, Boolean, String)
  fullName: DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(System.String, System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadDirectoryIfNotExist
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2816
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public void UploadDirectoryIfNotExist(string localDirName, string containerName, string blobDirName, bool recursive, string blobType = null)
    content.vb: Public Sub UploadDirectoryIfNotExist(localDirName As String, containerName As String, blobDirName As String, recursive As Boolean, blobType As String = Nothing)
    parameters:
    - id: localDirName
      type: System.String
    - id: containerName
      type: System.String
    - id: blobDirName
      type: System.String
    - id: recursive
      type: System.Boolean
    - id: blobType
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  id: UploadDirectoryIfNotExist(DirectoryInfo,CloudBlobDirectory,System.Boolean,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadDirectoryIfNotExist(DirectoryInfo, CloudBlobDirectory, Boolean, String)
  fullName: DMLibTest.CloudBlobHelper.UploadDirectoryIfNotExist(DirectoryInfo, CloudBlobDirectory, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadDirectoryIfNotExist
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2824
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public void UploadDirectoryIfNotExist(DirectoryInfo sourceDir, CloudBlobDirectory destDir, bool recursive, string blobType = null)
    content.vb: Public Sub UploadDirectoryIfNotExist(sourceDir As DirectoryInfo, destDir As CloudBlobDirectory, recursive As Boolean, blobType As String = Nothing)
    parameters:
    - id: sourceDir
      type: DirectoryInfo
    - id: destDir
      type: CloudBlobDirectory
    - id: recursive
      type: System.Boolean
    - id: blobType
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(System.String,System.String,System.String)
  id: CompareCloudBlobDirAndLocalDir(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CompareCloudBlobDirAndLocalDir(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudBlobDirAndLocalDir
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2878
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool CompareCloudBlobDirAndLocalDir(string containerName, string blobDirName, string localDirName)
    content.vb: Public Function CompareCloudBlobDirAndLocalDir(containerName As String, blobDirName As String, localDirName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobDirName
      type: System.String
    - id: localDirName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(CloudBlobDirectory,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(CloudBlobDirectory,System.String)
  id: CompareCloudBlobDirAndLocalDir(CloudBlobDirectory,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CompareCloudBlobDirAndLocalDir(CloudBlobDirectory, String)
  fullName: DMLibTest.CloudBlobHelper.CompareCloudBlobDirAndLocalDir(CloudBlobDirectory, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudBlobDirAndLocalDir
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2896
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static bool CompareCloudBlobDirAndLocalDir(CloudBlobDirectory dir, string localDirName)
    content.vb: Public Shared Function CompareCloudBlobDirAndLocalDir(dir As CloudBlobDirectory, localDirName As String) As Boolean
    parameters:
    - id: dir
      type: CloudBlobDirectory
    - id: localDirName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(System.String,System.String,System.String)
  id: CompareCloudBlobAndLocalFile(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CompareCloudBlobAndLocalFile(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudBlobAndLocalFile
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2958
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool CompareCloudBlobAndLocalFile(string containerName, string blobName, string localFileName)
    content.vb: Public Function CompareCloudBlobAndLocalFile(containerName As String, blobName As String, localFileName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: localFileName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(CloudBlob,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(CloudBlob,System.String)
  id: CompareCloudBlobAndLocalFile(CloudBlob,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CompareCloudBlobAndLocalFile(CloudBlob, String)
  fullName: DMLibTest.CloudBlobHelper.CompareCloudBlobAndLocalFile(CloudBlob, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudBlobAndLocalFile
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2969
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static bool CompareCloudBlobAndLocalFile(CloudBlob blob, string localFileName)
    content.vb: Public Shared Function CompareCloudBlobAndLocalFile(blob As CloudBlob, localFileName As String) As Boolean
    parameters:
    - id: blob
      type: CloudBlob
    - id: localFileName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.CompareCloudBlobAndCloudBlob(CloudBlob,CloudBlob)
  commentId: M:DMLibTest.CloudBlobHelper.CompareCloudBlobAndCloudBlob(CloudBlob,CloudBlob)
  id: CompareCloudBlobAndCloudBlob(CloudBlob,CloudBlob)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CompareCloudBlobAndCloudBlob(CloudBlob, CloudBlob)
  fullName: DMLibTest.CloudBlobHelper.CompareCloudBlobAndCloudBlob(CloudBlob, CloudBlob)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudBlobAndCloudBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2980
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static bool CompareCloudBlobAndCloudBlob(CloudBlob blobA, CloudBlob blobB)
    content.vb: Public Shared Function CompareCloudBlobAndCloudBlob(blobA As CloudBlob, blobB As CloudBlob) As Boolean
    parameters:
    - id: blobA
      type: CloudBlob
    - id: blobB
      type: CloudBlob
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.CalculateMD5ByDownloading(CloudBlob,System.Boolean)
  commentId: M:DMLibTest.CloudBlobHelper.CalculateMD5ByDownloading(CloudBlob,System.Boolean)
  id: CalculateMD5ByDownloading(CloudBlob,System.Boolean)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CalculateMD5ByDownloading(CloudBlob, Boolean)
  fullName: DMLibTest.CloudBlobHelper.CalculateMD5ByDownloading(CloudBlob, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CalculateMD5ByDownloading
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 2992
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static string CalculateMD5ByDownloading(CloudBlob blob, bool disableMD5Check = false)
    content.vb: Public Shared Function CalculateMD5ByDownloading(blob As CloudBlob, disableMD5Check As Boolean = False) As String
    parameters:
    - id: blob
      type: CloudBlob
    - id: disableMD5Check
      type: System.Boolean
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.QueryBlob(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.QueryBlob(System.String,System.String)
  id: QueryBlob(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: QueryBlob(String, String)
  fullName: DMLibTest.CloudBlobHelper.QueryBlob(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: QueryBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3041
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nQuery the blob\n"
  example: []
  syntax:
    content: public CloudBlob QueryBlob(string containerName, string blobName)
    content.vb: Public Function QueryBlob(containerName As String, blobName As String) As CloudBlob
    parameters:
    - id: containerName
      type: System.String
      description: 
    - id: blobName
      type: System.String
      description: 
    return:
      type: CloudBlob
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.QueryBlobProperties(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.QueryBlobProperties(System.String,System.String)
  id: QueryBlobProperties(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: QueryBlobProperties(String, String)
  fullName: DMLibTest.CloudBlobHelper.QueryBlobProperties(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: QueryBlobProperties
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3060
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public BlobProperties QueryBlobProperties(string containerName, string blobName)
    content.vb: Public Function QueryBlobProperties(containerName As String, blobName As String) As BlobProperties
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    return:
      type: BlobProperties
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.QueryBlobDirectory(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.QueryBlobDirectory(System.String,System.String)
  id: QueryBlobDirectory(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: QueryBlobDirectory(String, String)
  fullName: DMLibTest.CloudBlobHelper.QueryBlobDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: QueryBlobDirectory
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3085
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nQuery the blob virtual directory\n"
  example: []
  syntax:
    content: public CloudBlobDirectory QueryBlobDirectory(string containerName, string blobDirectoryName)
    content.vb: Public Function QueryBlobDirectory(containerName As String, blobDirectoryName As String) As CloudBlobDirectory
    parameters:
    - id: containerName
      type: System.String
      description: 
    - id: blobDirectoryName
      type: System.String
    return:
      type: CloudBlobDirectory
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.GeneratePageBlobWithRangedData(CloudPageBlob,List{System.Int32},List{System.Int32})
  commentId: M:DMLibTest.CloudBlobHelper.GeneratePageBlobWithRangedData(CloudPageBlob,List{System.Int32},List{System.Int32})
  id: GeneratePageBlobWithRangedData(CloudPageBlob,List{System.Int32},List{System.Int32})
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GeneratePageBlobWithRangedData(CloudPageBlob, List<Int32>, List<Int32>)
  fullName: DMLibTest.CloudBlobHelper.GeneratePageBlobWithRangedData(CloudPageBlob, List<System.Int32>, List<System.Int32>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GeneratePageBlobWithRangedData
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3100
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void GeneratePageBlobWithRangedData(CloudPageBlob pageBlob, List<int> ranges, List<int> gaps)
    content.vb: Public Shared Sub GeneratePageBlobWithRangedData(pageBlob As CloudPageBlob, ranges As List(Of Integer), gaps As List(Of Integer))
    parameters:
    - id: pageBlob
      type: CloudPageBlob
    - id: ranges
      type: List{System.Int32}
    - id: gaps
      type: List{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudBlobHelper.GeneratePageBlobWithRangedData(CloudPageBlob, List(Of System.Int32), List(Of System.Int32))
  name.vb: GeneratePageBlobWithRangedData(CloudPageBlob, List(Of Int32), List(Of Int32))
- uid: DMLibTest.CloudBlobHelper.GenerateBlockBlob(CloudBlockBlob,List{System.Int32})
  commentId: M:DMLibTest.CloudBlobHelper.GenerateBlockBlob(CloudBlockBlob,List{System.Int32})
  id: GenerateBlockBlob(CloudBlockBlob,List{System.Int32})
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GenerateBlockBlob(CloudBlockBlob, List<Int32>)
  fullName: DMLibTest.CloudBlobHelper.GenerateBlockBlob(CloudBlockBlob, List<System.Int32>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateBlockBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3122
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static void GenerateBlockBlob(CloudBlockBlob blockBlob, List<int> blockSizes)
    content.vb: Public Shared Sub GenerateBlockBlob(blockBlob As CloudBlockBlob, blockSizes As List(Of Integer))
    parameters:
    - id: blockBlob
      type: CloudBlockBlob
    - id: blockSizes
      type: List{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudBlobHelper.GenerateBlockBlob(CloudBlockBlob, List(Of System.Int32))
  name.vb: GenerateBlockBlob(CloudBlockBlob, List(Of Int32))
- uid: DMLibTest.CloudBlobHelper.PutBlob(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.PutBlob(System.String,System.String,System.String)
  id: PutBlob(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: PutBlob(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.PutBlob(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PutBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3158
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nCreate or update a blob by its name\n"
  example: []
  syntax:
    content: public bool PutBlob(string containerName, string blobName, string content)
    content.vb: Public Function PutBlob(containerName As String, blobName As String, content As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: blobName
      type: System.String
      description: the name of the blob
    - id: content
      type: System.String
      description: the content to the blob
    return:
      type: System.Boolean
      description: Return true on success, false if unable to create, throw exception on error
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.SetMD5Hash(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.SetMD5Hash(System.String,System.String,System.String)
  id: SetMD5Hash(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: SetMD5Hash(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.SetMD5Hash(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetMD5Hash
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3189
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nchange an exist Blob MD5 hash\n"
  example: []
  syntax:
    content: public bool SetMD5Hash(string containerName, string blobName, string MD5Hash)
    content.vb: Public Function SetMD5Hash(containerName As String, blobName As String, MD5Hash As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: blobName
      type: System.String
      description: the name of the blob
    - id: MD5Hash
      type: System.String
      description: the MD5 hash to set, must be a base 64 string
    return:
      type: System.Boolean
      description: Return true on success, false if unable to set
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.PutBlockList(System.String,System.String,System.String[])
  commentId: M:DMLibTest.CloudBlobHelper.PutBlockList(System.String,System.String,System.String[])
  id: PutBlockList(System.String,System.String,System.String[])
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: PutBlockList(String, String, String[])
  fullName: DMLibTest.CloudBlobHelper.PutBlockList(System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PutBlockList
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3213
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nput block list. TODO: implement this for large files\n"
  example: []
  syntax:
    content: public bool PutBlockList(string containerName, string blobName, string[] blockIds)
    content.vb: Public Function PutBlockList(containerName As String, blobName As String, blockIds As String()) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: 
    - id: blobName
      type: System.String
      description: 
    - id: blockIds
      type: System.String[]
      description: 
    return:
      type: System.Boolean
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.CloudBlobHelper.PutBlockList(System.String, System.String, System.String())
  name.vb: PutBlockList(String, String, String())
- uid: DMLibTest.CloudBlobHelper.MapStorageBlobTypeToBlobType(Microsoft.WindowsAzure.Storage.Blob.BlobType)
  commentId: M:DMLibTest.CloudBlobHelper.MapStorageBlobTypeToBlobType(Microsoft.WindowsAzure.Storage.Blob.BlobType)
  id: MapStorageBlobTypeToBlobType(Microsoft.WindowsAzure.Storage.Blob.BlobType)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: MapStorageBlobTypeToBlobType(WindowsAzure.Storage.Blob.BlobType)
  fullName: DMLibTest.CloudBlobHelper.MapStorageBlobTypeToBlobType(Microsoft.WindowsAzure.Storage.Blob.BlobType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MapStorageBlobTypeToBlobType
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3231
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static string MapStorageBlobTypeToBlobType(WindowsAzure.Storage.Blob.BlobType storageBlobType)
    content.vb: Public Shared Function MapStorageBlobTypeToBlobType(storageBlobType As WindowsAzure.Storage.Blob.BlobType) As String
    parameters:
    - id: storageBlobType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.MapBlobTypeToStorageBlobType(System.String)
  commentId: M:DMLibTest.CloudBlobHelper.MapBlobTypeToStorageBlobType(System.String)
  id: MapBlobTypeToStorageBlobType(System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: MapBlobTypeToStorageBlobType(String)
  fullName: DMLibTest.CloudBlobHelper.MapBlobTypeToStorageBlobType(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MapBlobTypeToStorageBlobType
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3246
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static WindowsAzure.Storage.Blob.BlobType MapBlobTypeToStorageBlobType(string blobType)
    content.vb: Public Shared Function MapBlobTypeToStorageBlobType(blobType As String) As WindowsAzure.Storage.Blob.BlobType
    parameters:
    - id: blobType
      type: System.String
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer,System.String,System.String)
  id: GetCloudBlobReference(CloudBlobContainer,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetCloudBlobReference(CloudBlobContainer, String, String)
  fullName: DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetCloudBlobReference
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3261
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static CloudBlob GetCloudBlobReference(CloudBlobContainer container, string blobName, string blobType)
    content.vb: Public Shared Function GetCloudBlobReference(container As CloudBlobContainer, blobName As String, blobType As String) As CloudBlob
    parameters:
    - id: container
      type: CloudBlobContainer
    - id: blobName
      type: System.String
    - id: blobType
      type: System.String
    return:
      type: CloudBlob
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer,System.String)
  id: GetCloudBlobReference(CloudBlobContainer,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetCloudBlobReference(CloudBlobContainer, String)
  fullName: DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobContainer, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetCloudBlobReference
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3279
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static CloudBlob GetCloudBlobReference(CloudBlobContainer container, string blobName)
    content.vb: Public Shared Function GetCloudBlobReference(container As CloudBlobContainer, blobName As String) As CloudBlob
    parameters:
    - id: container
      type: CloudBlobContainer
    - id: blobName
      type: System.String
    return:
      type: CloudBlob
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobDirectory,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobDirectory,System.String,System.String)
  id: GetCloudBlobReference(CloudBlobDirectory,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetCloudBlobReference(CloudBlobDirectory, String, String)
  fullName: DMLibTest.CloudBlobHelper.GetCloudBlobReference(CloudBlobDirectory, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetCloudBlobReference
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3287
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public static CloudBlob GetCloudBlobReference(CloudBlobDirectory directory, string blobName, string blobType)
    content.vb: Public Shared Function GetCloudBlobReference(directory As CloudBlobDirectory, blobName As String, blobType As String) As CloudBlob
    parameters:
    - id: directory
      type: CloudBlobDirectory
    - id: blobName
      type: System.String
    - id: blobType
      type: System.String
    return:
      type: CloudBlob
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudBlobHelper.GetBlobReference(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetBlobReference(System.String,System.String,System.String)
  id: GetBlobReference(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetBlobReference(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.GetBlobReference(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetBlobReference
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3305
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public CloudBlob GetBlobReference(string containerName, string blobName, string blobType = null)
    content.vb: Public Function GetBlobReference(containerName As String, blobName As String, blobType As String = Nothing) As CloudBlob
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: blobType
      type: System.String
    return:
      type: CloudBlob
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.GetDirReference(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.GetDirReference(System.String,System.String)
  id: GetDirReference(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetDirReference(String, String)
  fullName: DMLibTest.CloudBlobHelper.GetDirReference(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDirReference
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3311
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public CloudBlobDirectory GetDirReference(string containerName, string dirName)
    content.vb: Public Function GetDirReference(containerName As String, dirName As String) As CloudBlobDirectory
    parameters:
    - id: containerName
      type: System.String
    - id: dirName
      type: System.String
    return:
      type: CloudBlobDirectory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.GetBlob(System.String,System.String,System.String@)
  commentId: M:DMLibTest.CloudBlobHelper.GetBlob(System.String,System.String,System.String@)
  id: GetBlob(System.String,System.String,System.String@)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetBlob(String, String, out String)
  fullName: DMLibTest.CloudBlobHelper.GetBlob(System.String, System.String, out System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3324
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nDownload Blob text by the blob name\n"
  example: []
  syntax:
    content: public bool GetBlob(string containerName, string blobName, out string content)
    content.vb: Public Function GetBlob(containerName As String, blobName As String, ByRef content As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: blobName
      type: System.String
      description: 
    - id: content
      type: System.String
      description: 
    return:
      type: System.Boolean
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.CloudBlobHelper.GetBlob(System.String, System.String, ByRef System.String)
  name.vb: GetBlob(String, String, ByRef String)
- uid: DMLibTest.CloudBlobHelper.DeleteBlob(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.DeleteBlob(System.String,System.String)
  id: DeleteBlob(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: DeleteBlob(String, String)
  fullName: DMLibTest.CloudBlobHelper.DeleteBlob(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3360
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nDelete a blob by its name\n"
  example: []
  syntax:
    content: public bool DeleteBlob(string containerName, string blobName)
    content.vb: Public Function DeleteBlob(containerName As String, blobName As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: blobName
      type: System.String
      description: the name of the blob
    return:
      type: System.Boolean
      description: Return true on success, false if blob not found, throw exception on error
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.DeleteBlobDirectory(System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudBlobHelper.DeleteBlobDirectory(System.String,System.String,System.Boolean)
  id: DeleteBlobDirectory(System.String,System.String,System.Boolean)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: DeleteBlobDirectory(String, String, Boolean)
  fullName: DMLibTest.CloudBlobHelper.DeleteBlobDirectory(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteBlobDirectory
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3385
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool DeleteBlobDirectory(string containerName, string blobDirectoryName, bool recursive)
    content.vb: Public Function DeleteBlobDirectory(containerName As String, blobDirectoryName As String, recursive As Boolean) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobDirectoryName
      type: System.String
    - id: recursive
      type: System.Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadFileToBlockBlob(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadFileToBlockBlob(System.String,System.String,System.String)
  id: UploadFileToBlockBlob(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadFileToBlockBlob(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.UploadFileToBlockBlob(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFileToBlockBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3444
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool UploadFileToBlockBlob(string containerName, string blobName, string filePath)
    content.vb: Public Function UploadFileToBlockBlob(containerName As String, blobName As String, filePath As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadFileToPageBlob(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadFileToPageBlob(System.String,System.String,System.String)
  id: UploadFileToPageBlob(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadFileToPageBlob(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.UploadFileToPageBlob(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFileToPageBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3449
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool UploadFileToPageBlob(string containerName, string blobName, string filePath)
    content.vb: Public Function UploadFileToPageBlob(containerName As String, blobName As String, filePath As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadFileToAppendBlob(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadFileToAppendBlob(System.String,System.String,System.String)
  id: UploadFileToAppendBlob(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadFileToAppendBlob(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.UploadFileToAppendBlob(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFileToAppendBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3454
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool UploadFileToAppendBlob(string containerName, string blobName, string filePath)
    content.vb: Public Function UploadFileToAppendBlob(containerName As String, blobName As String, filePath As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.UploadFileToBlob(System.String,System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.UploadFileToBlob(System.String,System.String,System.String,System.String)
  id: UploadFileToBlob(System.String,System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: UploadFileToBlob(String, String, String, String)
  fullName: DMLibTest.CloudBlobHelper.UploadFileToBlob(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFileToBlob
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3459
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool UploadFileToBlob(string containerName, string blobName, string blobType, string filePath)
    content.vb: Public Function UploadFileToBlob(containerName As String, blobName As String, blobType As String, filePath As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: blobType
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.DownloadFile(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.DownloadFile(System.String,System.String,System.String)
  id: DownloadFile(System.String,System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: DownloadFile(String, String, String)
  fullName: DMLibTest.CloudBlobHelper.DownloadFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DownloadFile
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3477
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public bool DownloadFile(string containerName, string blobName, string filePath)
    content.vb: Public Function DownloadFile(containerName As String, blobName As String, filePath As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: blobName
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.CreateSnapshot(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.CreateSnapshot(System.String,System.String)
  id: CreateSnapshot(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: CreateSnapshot(String, String)
  fullName: DMLibTest.CloudBlobHelper.CreateSnapshot(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateSnapshot
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3511
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nCreates a snapshot of the blob\n"
  example: []
  syntax:
    content: public CloudBlob CreateSnapshot(string containerName, string blobName)
    content.vb: Public Function CreateSnapshot(containerName As String, blobName As String) As CloudBlob
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: blobName
      type: System.String
      description: the name of blob
    return:
      type: CloudBlob
      description: blob snapshot
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.DeleteSnapshotOnly(System.String,System.String)
  commentId: M:DMLibTest.CloudBlobHelper.DeleteSnapshotOnly(System.String,System.String)
  id: DeleteSnapshotOnly(System.String,System.String)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: DeleteSnapshotOnly(String, String)
  fullName: DMLibTest.CloudBlobHelper.DeleteSnapshotOnly(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteSnapshotOnly
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3541
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\ndelete snapshot of the blob (DO NOT delete blob)\n"
  example: []
  syntax:
    content: public void DeleteSnapshotOnly(string containerName, string blobName)
    content.vb: Public Sub DeleteSnapshotOnly(containerName As String, blobName As String)
    parameters:
    - id: containerName
      type: System.String
      description: the name of the container
    - id: blobName
      type: System.String
      description: the name of blob
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudBlobHelper.GetNameOfSnapshot(System.String,CloudBlob)
  commentId: M:DMLibTest.CloudBlobHelper.GetNameOfSnapshot(System.String,CloudBlob)
  id: GetNameOfSnapshot(System.String,CloudBlob)
  parent: DMLibTest.CloudBlobHelper
  langs:
  - csharp
  - vb
  name: GetNameOfSnapshot(String, CloudBlob)
  fullName: DMLibTest.CloudBlobHelper.GetNameOfSnapshot(System.String, CloudBlob)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetNameOfSnapshot
    path: test/DMLibTest/Util/Helpers.cs
    startLine: 3563
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  summary: "\nreturn name of snapshot\n"
  example: []
  syntax:
    content: public string GetNameOfSnapshot(string fileName, CloudBlob snapshot)
    content.vb: Public Function GetNameOfSnapshot(fileName As String, snapshot As CloudBlob) As String
    parameters:
    - id: fileName
      type: System.String
      description: the name of blob
    - id: snapshot
      type: CloudBlob
    return:
      type: System.String
      description: name of snapshot
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: CloudStorageAccount
  isExternal: true
  name: CloudStorageAccount
  fullName: CloudStorageAccount
- uid: CloudBlobClient
  isExternal: true
  name: CloudBlobClient
  fullName: CloudBlobClient
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: CloudBlobContainer
  isExternal: true
  name: CloudBlobContainer
  fullName: CloudBlobContainer
- uid: BlobContainerPublicAccessType
  isExternal: true
  name: BlobContainerPublicAccessType
  fullName: BlobContainerPublicAccessType
- uid: BlobContainerPermissions
  isExternal: true
  name: BlobContainerPermissions
  fullName: BlobContainerPermissions
- uid: List{CloudBlob}
  definition: List`1
  name: List<CloudBlob>
  fullName: List<CloudBlob>
  fullname.vb: List(Of CloudBlob)
  name.vb: List(Of CloudBlob)
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: CloudBlob
    name: CloudBlob
    fullName: CloudBlob
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: CloudBlob
    name: CloudBlob
    fullName: CloudBlob
    isExternal: true
  - name: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  fullName: List<>
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: BlobListingDetails
  isExternal: true
  name: BlobListingDetails
  fullName: BlobListingDetails
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: SharedAccessBlobPermissions
  isExternal: true
  name: SharedAccessBlobPermissions
  fullName: SharedAccessBlobPermissions
- uid: DirectoryInfo
  isExternal: true
  name: DirectoryInfo
  fullName: DirectoryInfo
- uid: CloudBlobDirectory
  isExternal: true
  name: CloudBlobDirectory
  fullName: CloudBlobDirectory
- uid: CloudBlob
  isExternal: true
  name: CloudBlob
  fullName: CloudBlob
- uid: BlobProperties
  isExternal: true
  name: BlobProperties
  fullName: BlobProperties
- uid: CloudPageBlob
  isExternal: true
  name: CloudPageBlob
  fullName: CloudPageBlob
- uid: List{System.Int32}
  definition: List`1
  name: List<Int32>
  fullName: List<System.Int32>
  fullname.vb: List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: CloudBlockBlob
  isExternal: true
  name: CloudBlockBlob
  fullName: CloudBlockBlob
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  isExternal: true
  name: WindowsAzure.Storage.Blob.BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
