items:
- uid: DMLibTest.TestAccount
  commentId: T:DMLibTest.TestAccount
  id: TestAccount
  parent: DMLibTest
  children:
  - DMLibTest.TestAccount.#ctor(DMLibTest.AccountInConfig)
  - DMLibTest.TestAccount.#ctor(System.String)
  - DMLibTest.TestAccount.Account
  - DMLibTest.TestAccount.AccountName
  - DMLibTest.TestAccount.ConnectionString
  - DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType,System.Boolean)
  - DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType,System.String,System.Boolean)
  - DMLibTest.TestAccount.StorageKey
  langs:
  - csharp
  - vb
  name: TestAccount
  fullName: DMLibTest.TestAccount
  type: Class
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TestAccount
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 30
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: 'public class TestAccount : object'
    content.vb: >-
      Public Class TestAccount
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.TestAccount.#ctor(DMLibTest.AccountInConfig)
  commentId: M:DMLibTest.TestAccount.#ctor(DMLibTest.AccountInConfig)
  id: '#ctor(DMLibTest.AccountInConfig)'
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: TestAccount(AccountInConfig)
  fullName: DMLibTest.TestAccount.TestAccount(DMLibTest.AccountInConfig)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 32
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public TestAccount(AccountInConfig accountInConfig)
    content.vb: Public Sub New(accountInConfig As AccountInConfig)
    parameters:
    - id: accountInConfig
      type: DMLibTest.AccountInConfig
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.TestAccount.#ctor(System.String)
  commentId: M:DMLibTest.TestAccount.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: TestAccount(String)
  fullName: DMLibTest.TestAccount.TestAccount(System.String)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 37
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public TestAccount(string connectionString)
    content.vb: Public Sub New(connectionString As String)
    parameters:
    - id: connectionString
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.TestAccount.Account
  commentId: P:DMLibTest.TestAccount.Account
  id: Account
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: Account
  fullName: DMLibTest.TestAccount.Account
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Account
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 43
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public CloudStorageAccount Account { get; }
    content.vb: Public ReadOnly Property Account As CloudStorageAccount
    parameters: []
    return:
      type: CloudStorageAccount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.TestAccount.ConnectionString
  commentId: P:DMLibTest.TestAccount.ConnectionString
  id: ConnectionString
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: ConnectionString
  fullName: DMLibTest.TestAccount.ConnectionString
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ConnectionString
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 45
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public string ConnectionString { get; }
    content.vb: Public ReadOnly Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.TestAccount.AccountName
  commentId: P:DMLibTest.TestAccount.AccountName
  id: AccountName
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: AccountName
  fullName: DMLibTest.TestAccount.AccountName
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AccountName
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 47
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public string AccountName { get; }
    content.vb: Public ReadOnly Property AccountName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.TestAccount.StorageKey
  commentId: P:DMLibTest.TestAccount.StorageKey
  id: StorageKey
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: StorageKey
  fullName: DMLibTest.TestAccount.StorageKey
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: StorageKey
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 55
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public string StorageKey { get; }
    content.vb: Public ReadOnly Property StorageKey As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType,System.Boolean)
  commentId: M:DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType,System.Boolean)
  id: GetEndpointBaseUri(DMLibTest.EndpointType,System.Boolean)
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: GetEndpointBaseUri(EndpointType, Boolean)
  fullName: DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetEndpointBaseUri
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 63
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public string GetEndpointBaseUri(EndpointType endpoint, bool secondary = false)
    content.vb: Public Function GetEndpointBaseUri(endpoint As EndpointType, secondary As Boolean = False) As String
    parameters:
    - id: endpoint
      type: DMLibTest.EndpointType
    - id: secondary
      type: System.Boolean
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType,System.String,System.Boolean)
  commentId: M:DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType,System.String,System.Boolean)
  id: GetEndpointBaseUri(DMLibTest.EndpointType,System.String,System.Boolean)
  parent: DMLibTest.TestAccount
  langs:
  - csharp
  - vb
  name: GetEndpointBaseUri(EndpointType, String, Boolean)
  fullName: DMLibTest.TestAccount.GetEndpointBaseUri(DMLibTest.EndpointType, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/TestAccounts.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetEndpointBaseUri
    path: test/DMLibTest/Util/TestAccounts.cs
    startLine: 68
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public string GetEndpointBaseUri(EndpointType endpoint, string protocol, bool secondary = false)
    content.vb: Public Function GetEndpointBaseUri(endpoint As EndpointType, protocol As String, secondary As Boolean = False) As String
    parameters:
    - id: endpoint
      type: DMLibTest.EndpointType
    - id: protocol
      type: System.String
    - id: secondary
      type: System.Boolean
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: DMLibTest.AccountInConfig
  parent: DMLibTest
  isExternal: false
  name: AccountInConfig
  fullName: DMLibTest.AccountInConfig
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: CloudStorageAccount
  isExternal: true
  name: CloudStorageAccount
  fullName: CloudStorageAccount
- uid: DMLibTest.EndpointType
  parent: DMLibTest
  isExternal: false
  name: EndpointType
  fullName: DMLibTest.EndpointType
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
