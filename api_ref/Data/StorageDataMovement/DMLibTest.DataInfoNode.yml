items:
- uid: DMLibTest.DataInfoNode
  commentId: T:DMLibTest.DataInfoNode
  id: DataInfoNode
  parent: DMLibTest
  children:
  - DMLibTest.DataInfoNode.Name
  - DMLibTest.DataInfoNode.Parent
  - DMLibTest.DataInfoNode.PathComponents
  langs:
  - csharp
  - vb
  name: DataInfoNode
  fullName: DMLibTest.DataInfoNode
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DataInfoNode
    path: test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 64
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: 'public class DataInfoNode : object'
    content.vb: >-
      Public Class DataInfoNode
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.DataInfoNode.Name
  commentId: P:DMLibTest.DataInfoNode.Name
  id: Name
  parent: DMLibTest.DataInfoNode
  langs:
  - csharp
  - vb
  name: Name
  fullName: DMLibTest.DataInfoNode.Name
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Name
    path: test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 66
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.DataInfoNode.Parent
  commentId: P:DMLibTest.DataInfoNode.Parent
  id: Parent
  parent: DMLibTest.DataInfoNode
  langs:
  - csharp
  - vb
  name: Parent
  fullName: DMLibTest.DataInfoNode.Parent
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Parent
    path: test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 72
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public DirNode Parent { get; set; }
    content.vb: Public Property Parent As DirNode
    parameters: []
    return:
      type: DMLibTest.DirNode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.DataInfoNode.PathComponents
  commentId: P:DMLibTest.DataInfoNode.PathComponents
  id: PathComponents
  parent: DMLibTest.DataInfoNode
  langs:
  - csharp
  - vb
  name: PathComponents
  fullName: DMLibTest.DataInfoNode.PathComponents
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PathComponents
    path: test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 78
  assemblies:
  - DMLibTest
  packages:
  - DMLibTest(1.0.0)
  namespace: DMLibTest
  syntax:
    content: public IEnumerable<string> PathComponents { get; }
    content.vb: Public ReadOnly Property PathComponents As IEnumerable(Of String)
    parameters: []
    return:
      type: IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DMLibTest
  isExternal: false
  name: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: DMLibTest.DirNode
  parent: DMLibTest
  isExternal: false
  name: DirNode
  fullName: DMLibTest.DirNode
- uid: IEnumerable{System.String}
  definition: IEnumerable`1
  name: IEnumerable<String>
  fullName: IEnumerable<System.String>
  fullname.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  fullName: IEnumerable<>
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
