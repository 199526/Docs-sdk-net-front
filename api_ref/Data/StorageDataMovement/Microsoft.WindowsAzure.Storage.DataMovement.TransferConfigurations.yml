### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  id: TransferConfigurations
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.#ctor
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix
  langs:
  - csharp
  - vb
  name: TransferConfigurations
  nameWithType: TransferConfigurations
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  type: Class
  source:
    remote:
      path: lib/TransferConfigurations.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferConfigurations
    path: lib/TransferConfigurations.cs
    startLine: 15
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nTransferConfigurations class.\n"
  example: []
  syntax:
    content: 'public class TransferConfigurations : object'
    content.vb: >-
      Public Class TransferConfigurations
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  langs:
  - csharp
  - vb
  name: TransferConfigurations()
  nameWithType: TransferConfigurations.TransferConfigurations()
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.TransferConfigurations()
  type: Constructor
  source:
    remote:
      path: lib/TransferConfigurations.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/TransferConfigurations.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the \n<xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferConfigurations()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations
  id: ParallelOperations
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  langs:
  - csharp
  - vb
  name: ParallelOperations
  nameWithType: TransferConfigurations.ParallelOperations
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations
  type: Property
  source:
    remote:
      path: lib/TransferConfigurations.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ParallelOperations
    path: lib/TransferConfigurations.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets a value indicating how many work items to process \nconcurrently. Downloading or uploading a single blob can consist \nof a large number of work items.\n"
  example: []
  syntax:
    content: public int ParallelOperations { get; set; }
    content.vb: Public Property ParallelOperations As Integer
    parameters: []
    return:
      type: System.Int32
      description: How many work items to process concurrently.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix
  id: UserAgentPrefix
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  langs:
  - csharp
  - vb
  name: UserAgentPrefix
  nameWithType: TransferConfigurations.UserAgentPrefix
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix
  type: Property
  source:
    remote:
      path: lib/TransferConfigurations.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UserAgentPrefix
    path: lib/TransferConfigurations.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets the user agent prefix\n"
  example: []
  syntax:
    content: public string UserAgentPrefix { get; set; }
    content.vb: Public Property UserAgentPrefix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  commentId: N:Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  nameWithType: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferConfigurations
  nameWithType: TransferConfigurations
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.#ctor
  isExternal: false
  name: TransferConfigurations
  nameWithType: TransferConfigurations.TransferConfigurations
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.TransferConfigurations
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations
  isExternal: false
  name: ParallelOperations
  nameWithType: TransferConfigurations.ParallelOperations
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.ParallelOperations
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix
  isExternal: false
  name: UserAgentPrefix
  nameWithType: TransferConfigurations.UserAgentPrefix
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
