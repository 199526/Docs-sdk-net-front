items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  id: TableQuerySegment
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.ContinuationToken
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.GetEnumerator
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.Results
  langs:
  - csharp
  - vb
  name: TableQuerySegment
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableQuerySegment
    path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nRepresents a table query segment.\n"
  example: []
  syntax:
    content: 'public sealed class TableQuerySegment : IEnumerable<DynamicTableEntity>'
    content.vb: >-
      Public NotInheritable Class TableQuerySegment
          Inherits IEnumerable(Of DynamicTableEntity)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.Results
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.Results
  id: Results
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  langs:
  - csharp
  - vb
  name: Results
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.Results
  type: Property
  source:
    remote:
      path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Results
    path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets an enumerable collection of results.\n"
  example: []
  syntax:
    content: public IList<DynamicTableEntity> Results { get; }
    content.vb: Public ReadOnly Property Results As IList(Of DynamicTableEntity)
    parameters: []
    return:
      type: IList{Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity}
      description: An enumerable collection of results.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.ContinuationToken
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  langs:
  - csharp
  - vb
  name: ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.ContinuationToken
  type: Property
  source:
    remote:
      path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContinuationToken
    path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets a continuation token to use to retrieve the next set of results with a subsequent call to the operation.\n"
  example: []
  syntax:
    content: public TableContinuationToken ContinuationToken { get; }
    content.vb: Public ReadOnly Property ContinuationToken As TableContinuationToken
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: The continuation token.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment.GetEnumerator()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetEnumerator
    path: Lib/WindowsRuntime/Table/TableQuerySegmentNonGeneric.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns an enumerator that iterates through the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerator<DynamicTableEntity> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of DynamicTableEntity)
    return:
      type: IEnumerator{Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity}
      description: An enumerator that iterates through the <xref href="Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity" data-throw-if-not-resolved="false"></xref> collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: IList{Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity}
  definition: IList`1
  name: IList<DynamicTableEntity>
  fullName: IList<Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity>
  fullname.vb: IList(Of Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity)
  name.vb: IList(Of DynamicTableEntity)
  spec.csharp:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
    name: DynamicTableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
    name: DynamicTableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  - name: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  fullName: IList<>
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  isExternal: false
  name: DynamicTableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
- uid: IEnumerator{Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity}
  definition: IEnumerator`1
  name: IEnumerator<DynamicTableEntity>
  fullName: IEnumerator<Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity>
  fullname.vb: IEnumerator(Of Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity)
  name.vb: IEnumerator(Of DynamicTableEntity)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
    name: DynamicTableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
    name: DynamicTableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  - name: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  fullName: IEnumerator<>
  fullname.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
