items:
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  id: POCOAdapter`1
  parent: Microsoft.WindowsAzure.Storage.Table.Entities
  children:
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.#ctor(`0)
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.#ctor(`0,System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.ETag
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.PartitionKey
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.ReadEntity(IDictionary{System.String,EntityProperty},OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.RowKey
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.Shape
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.Timestamp
  - Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.WriteEntity(OperationContext)
  langs:
  - csharp
  - vb
  name: POCOAdapter<ShapeEntity>
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>
  type: Class
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: POCOAdapter
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: 'public class POCOAdapter<ShapeEntity> : ITableEntity'
    content.vb: >-
      Public Class POCOAdapter(Of ShapeEntity)
          Inherits ITableEntity
    typeParameters:
    - id: ShapeEntity
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity)
  name.vb: POCOAdapter(Of ShapeEntity)
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.#ctor(`0)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: POCOAdapter(ShapeEntity)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.POCOAdapter(ShapeEntity)
  type: Constructor
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public POCOAdapter(ShapeEntity shape)
    content.vb: Public Sub New(shape As ShapeEntity)
    parameters:
    - id: shape
      type: '{ShapeEntity}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).POCOAdapter(ShapeEntity)
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.#ctor(`0,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.#ctor(`0,System.String,System.String)
  id: '#ctor(`0,System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: POCOAdapter(ShapeEntity, String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.POCOAdapter(ShapeEntity, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public POCOAdapter(ShapeEntity shape, string partitionKey, string rowKey)
    content.vb: Public Sub New(shape As ShapeEntity, partitionKey As String, rowKey As String)
    parameters:
    - id: shape
      type: '{ShapeEntity}'
    - id: partitionKey
      type: System.String
    - id: rowKey
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).POCOAdapter(ShapeEntity, System.String, System.String)
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.PartitionKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.PartitionKey
  id: PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.PartitionKey
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PartitionKey
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  summary: "\nGets or sets the entity's partition key.\n"
  example: []
  syntax:
    content: public string PartitionKey { get; set; }
    content.vb: Public Property PartitionKey As String
    parameters: []
    return:
      type: System.String
      description: The partition key of the entity.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).PartitionKey
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.RowKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.RowKey
  id: RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.RowKey
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RowKey
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  summary: "\nGets or sets the entity's row key.\n"
  example: []
  syntax:
    content: public string RowKey { get; set; }
    content.vb: Public Property RowKey As String
    parameters: []
    return:
      type: System.String
      description: The row key of the entity.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).RowKey
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.Timestamp
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.Timestamp
  id: Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.Timestamp
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Timestamp
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  summary: "\nGets or sets the entity's timestamp.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
      description: The timestamp of the entity.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).Timestamp
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.ETag
  id: ETag
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.ETag
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ETag
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  summary: "\nGets or sets the entity's current ETag.  Set this value to '*' in order to blindly overwrite an entity as part of an update operation.\n"
  example: []
  syntax:
    content: public string ETag { get; set; }
    content.vb: Public Property ETag As String
    parameters: []
    return:
      type: System.String
      description: The ETag of the entity.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).ETag
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.Shape
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.Shape
  id: Shape
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: Shape
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.Shape
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Shape
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public ShapeEntity Shape { get; set; }
    content.vb: Public Property Shape As ShapeEntity
    parameters: []
    return:
      type: '{ShapeEntity}'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).Shape
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.ReadEntity(IDictionary{System.String,EntityProperty},OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.ReadEntity(IDictionary{System.String,EntityProperty},OperationContext)
  id: ReadEntity(IDictionary{System.String,EntityProperty},OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.ReadEntity(IDictionary<System.String, EntityProperty>, OperationContext)
  type: Method
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadEntity
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public virtual void ReadEntity(IDictionary<string, EntityProperty> properties, OperationContext operationContext)
    content.vb: Public Overridable Sub ReadEntity(properties As IDictionary(Of String, EntityProperty), operationContext As OperationContext)
    parameters:
    - id: properties
      type: IDictionary{System.String,EntityProperty}
    - id: operationContext
      type: OperationContext
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).ReadEntity(IDictionary(Of System.String, EntityProperty), OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.WriteEntity(OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1.WriteEntity(OperationContext)
  id: WriteEntity(OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter`1
  langs:
  - csharp
  - vb
  name: WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter<ShapeEntity>.WriteEntity(OperationContext)
  type: Method
  source:
    remote:
      path: Test/Common/Table/Entities/POCOAdapter.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteEntity
    path: Test/Common/Table/Entities/POCOAdapter.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public virtual IDictionary<string, EntityProperty> WriteEntity(OperationContext operationContext)
    content.vb: Public Overridable Function WriteEntity(operationContext As OperationContext) As IDictionary(Of String, EntityProperty)
    parameters:
    - id: operationContext
      type: OperationContext
    return:
      type: IDictionary{System.String,EntityProperty}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Entities.POCOAdapter(Of ShapeEntity).WriteEntity(OperationContext)
references:
- uid: Microsoft.WindowsAzure.Storage.Table.Entities
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.Entities
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: '{ShapeEntity}'
  isExternal: false
  name: ShapeEntity
  fullName: ShapeEntity
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: IDictionary{System.String,EntityProperty}
  definition: IDictionary`2
  name: IDictionary<String, EntityProperty>
  fullName: IDictionary<System.String, EntityProperty>
  fullname.vb: IDictionary(Of System.String, EntityProperty)
  name.vb: IDictionary(Of String, EntityProperty)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: EntityProperty
    name: EntityProperty
    fullName: EntityProperty
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: EntityProperty
    name: EntityProperty
    fullName: EntityProperty
    isExternal: true
  - name: )
    fullName: )
- uid: OperationContext
  isExternal: true
  name: OperationContext
  fullName: OperationContext
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
