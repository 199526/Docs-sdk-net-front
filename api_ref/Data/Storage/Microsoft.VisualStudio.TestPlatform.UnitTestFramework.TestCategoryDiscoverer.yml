items:
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer
  commentId: T:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer
  id: TestCategoryDiscoverer
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  children:
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer.GetTraits(IAttributeInfo)
  langs:
  - csharp
  - vb
  name: TestCategoryDiscoverer
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer
  type: Class
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/TestCategoryDiscoverer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TestCategoryDiscoverer
    path: Test/AspNet/XUnitForMsTest/TestCategoryDiscoverer.cs
    startLine: 26
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nDiscover the Traits from classes that implement TestCategoryAttribute\n"
  example: []
  syntax:
    content: 'public class TestCategoryDiscoverer : ITraitDiscoverer'
    content.vb: >-
      Public Class TestCategoryDiscoverer
          Inherits ITraitDiscoverer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer.GetTraits(IAttributeInfo)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer.GetTraits(IAttributeInfo)
  id: GetTraits(IAttributeInfo)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer
  langs:
  - csharp
  - vb
  name: GetTraits(IAttributeInfo)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestCategoryDiscoverer.GetTraits(IAttributeInfo)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/TestCategoryDiscoverer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetTraits
    path: Test/AspNet/XUnitForMsTest/TestCategoryDiscoverer.cs
    startLine: 33
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nGets the trait values from the trait attribute.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> GetTraits(IAttributeInfo traitAttribute)
    content.vb: Public Function GetTraits(traitAttribute As IAttributeInfo) As IEnumerable(Of KeyValuePair(Of String, String))
    parameters:
    - id: traitAttribute
      type: IAttributeInfo
      description: The trait attribute containing the trait values.
    return:
      type: IEnumerable{KeyValuePair{System.String,System.String}}
      description: The trait values
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  isExternal: false
  name: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: IAttributeInfo
  isExternal: true
  name: IAttributeInfo
  fullName: IAttributeInfo
- uid: IEnumerable{KeyValuePair{System.String,System.String}}
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  fullName: IEnumerable<KeyValuePair<System.String, System.String>>
  fullname.vb: IEnumerable(Of KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  fullName: IEnumerable<>
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
