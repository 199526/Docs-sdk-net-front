### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  id: PageDiffRange
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.#ctor(System.Int64,System.Int64,System.Boolean)
  - Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange
  langs:
  - csharp
  - vb
  name: PageDiffRange
  nameWithType: PageDiffRange
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  type: Class
  source:
    remote:
      path: Lib/Common/Blob/PageDiffRange.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PageDiffRange
    path: Lib/Common/Blob/PageDiffRange.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRepresents a range of pages in a page blob.\n"
  example: []
  syntax:
    content: 'public sealed class PageDiffRange : PageRange'
    content.vb: >-
      Public NotInheritable Class PageDiffRange
          Inherits PageRange
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.Blob.PageRange
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.Blob.PageRange.StartOffset
  - Microsoft.WindowsAzure.Storage.Blob.PageRange.EndOffset
  - Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.#ctor(System.Int64,System.Int64,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.#ctor(System.Int64,System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Int64,System.Boolean)'
  parent: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  langs:
  - csharp
  - vb
  name: PageDiffRange(Int64, Int64, Boolean)
  nameWithType: PageDiffRange.PageDiffRange(Int64, Int64, Boolean)
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.PageDiffRange(System.Int64, System.Int64, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Blob/PageDiffRange.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Blob/PageDiffRange.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.PageDiffRange\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PageDiffRange(long start, long end, bool isCleared)
    content.vb: Public Sub New(start As Long, end As Long, isCleared As Boolean)
    parameters:
    - id: start
      type: System.Int64
      description: The starting offset.
    - id: end
      type: System.Int64
      description: The ending offset.
    - id: isCleared
      type: System.Boolean
      description: True if the page range is a cleared range, false otherwise.
  overload: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange
  id: IsClearedPageRange
  parent: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  langs:
  - csharp
  - vb
  name: IsClearedPageRange
  nameWithType: PageDiffRange.IsClearedPageRange
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/PageDiffRange.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsClearedPageRange
    path: Lib/Common/Blob/PageDiffRange.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nTrue if the page range is a cleared range, false otherwise.\n"
  example: []
  syntax:
    content: public bool IsClearedPageRange { get; }
    content.vb: Public ReadOnly Property IsClearedPageRange As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.PageRange
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.PageRange
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageRange
- uid: Microsoft.WindowsAzure.Storage.Blob.PageRange.StartOffset
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.PageRange.StartOffset
  parent: Microsoft.WindowsAzure.Storage.Blob.PageRange
  isExternal: false
  name: StartOffset
  nameWithType: PageRange.StartOffset
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageRange.StartOffset
- uid: Microsoft.WindowsAzure.Storage.Blob.PageRange.EndOffset
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.PageRange.EndOffset
  parent: Microsoft.WindowsAzure.Storage.Blob.PageRange
  isExternal: false
  name: EndOffset
  nameWithType: PageRange.EndOffset
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageRange.EndOffset
- uid: Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
  parent: Microsoft.WindowsAzure.Storage.Blob.PageRange
  isExternal: false
  name: ToString()
  nameWithType: PageRange.ToString()
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
    name: ToString
    nameWithType: PageRange.ToString
    fullName: Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
    name: ToString
    nameWithType: PageRange.ToString
    fullName: Microsoft.WindowsAzure.Storage.Blob.PageRange.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
  isExternal: false
  name: PageDiffRange
  nameWithType: PageDiffRange
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange
- uid: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.#ctor
  isExternal: false
  name: PageDiffRange
  nameWithType: PageDiffRange.PageDiffRange
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.PageDiffRange
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange
  isExternal: false
  name: IsClearedPageRange
  nameWithType: PageDiffRange.IsClearedPageRange
  fullName: Microsoft.WindowsAzure.Storage.Blob.PageDiffRange.IsClearedPageRange
