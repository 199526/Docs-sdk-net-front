### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  id: CloudQueue
  parent: Microsoft.WindowsAzure.Storage.Queue
  children:
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Uri)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  langs:
  - csharp
  - vb
  name: CloudQueue
  nameWithType: CloudQueue
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CloudQueue
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nRepresents a queue in the Microsoft Azure Queue service.\n"
  example: []
  syntax:
    content: 'public class CloudQueue : object'
    content.vb: >-
      Public Class CloudQueue
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CloudQueue(Uri)
  nameWithType: CloudQueue.CloudQueue(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue(Uri)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudQueue(Uri queueAddress)
    content.vb: Public Sub New(queueAddress As Uri)
    parameters:
    - id: queueAddress
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CloudQueue(Uri, StorageCredentials)
  nameWithType: CloudQueue.CloudQueue(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue(Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudQueue(Uri queueAddress, StorageCredentials credentials)
    content.vb: Public Sub New(queueAddress As Uri, credentials As StorageCredentials)
    parameters:
    - id: queueAddress
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CloudQueue(StorageUri, StorageCredentials)
  nameWithType: CloudQueue.CloudQueue(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudQueue(StorageUri queueAddress, StorageCredentials credentials)
    content.vb: Public Sub New(queueAddress As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: queueAddress
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri" data-throw-if-not-resolved="false"></xref> containing the absolute URI to the queue at both the primary and secondary locations.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ServiceClient
  nameWithType: CloudQueue.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServiceClient
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Queue service.\n"
  example: []
  syntax:
    content: public CloudQueueClient ServiceClient { get; }
    content.vb: Public ReadOnly Property ServiceClient As CloudQueueClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: CloudQueue.Uri
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Uri
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the queue URI for the primary location.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue at the primary location.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: StorageUri
  nameWithType: CloudQueue.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StorageUri
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the queue URIs for both the primary and secondary locations.\n"
  example: []
  syntax:
    content: public StorageUri StorageUri { get; }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri" data-throw-if-not-resolved="false"></xref> containing the queue's URIs for both the primary and secondary locations.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CloudQueue.Name
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the name of the queue.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the queue.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  id: ApproximateMessageCount
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ApproximateMessageCount
  nameWithType: CloudQueue.ApproximateMessageCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ApproximateMessageCount
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the approximate message count for the queue.\n"
  example: []
  syntax:
    content: public int ? ApproximateMessageCount { get; }
    content.vb: Public ReadOnly Property ApproximateMessageCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The approximate message count.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  id: EncodeMessage
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EncodeMessage
  nameWithType: CloudQueue.EncodeMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EncodeMessage
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets or sets a value indicating whether to apply base64 encoding when adding or retrieving messages.\n"
  example: []
  syntax:
    content: public bool EncodeMessage { get; set; }
    content.vb: Public Property EncodeMessage As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> to encode messages; otherwise, <code>false</code>. The default value is <code>true</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudQueue.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Metadata
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the queue's metadata.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
      description: An <see cref="!:IDictionary&lt;TKey,TValue&gt;"></see> object containing the queue's metadata.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessQueuePolicy)
  nameWithType: CloudQueue.GetSharedAccessSignature(SharedAccessQueuePolicy)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 280
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nReturns a shared access signature for the queue.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessQueuePolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessQueuePolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessQueuePolicy, String)
  nameWithType: CloudQueue.GetSharedAccessSignature(SharedAccessQueuePolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 292
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nReturns a shared access signature for the queue.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessQueuePolicy policy, string accessPolicyIdentifier)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessQueuePolicy, accessPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessQueuePolicy, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  nameWithType: CloudQueue.GetSharedAccessSignature(SharedAccessQueuePolicy, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 306
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nReturns a shared access signature for the queue.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessQueuePolicy policy, string accessPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessQueuePolicy, accessPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature*
  nameWithType.vb: CloudQueue.GetSharedAccessSignature(SharedAccessQueuePolicy, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessQueuePolicy, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync()
  nameWithType: CloudQueue.CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nCreates the queue.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.CreateAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nCreates the queue.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.CreateAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nCreates the queue.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  nameWithType: CloudQueue.CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nCreates the queue if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue did not already exist and was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.CreateIfNotExistsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nCreates the queue if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.CreateIfNotExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nCreates the queue if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: CloudQueue.DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 166
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the queue.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.DeleteAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the queue.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.DeleteAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 191
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the queue.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  nameWithType: CloudQueue.DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the queue if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.DeleteIfExistsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 220
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the queue if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.DeleteIfExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 233
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the queue if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions)
  nameWithType: CloudQueue.SetPermissionsAsync(QueuePermissions)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 281
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets permissions for the queue.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: The permissions to apply to the queue.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.SetPermissionsAsync(QueuePermissions, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 294
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets permissions for the queue.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: The permissions to apply to the queue.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.SetPermissionsAsync(QueuePermissions, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 308
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets permissions for the queue.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: The permissions to apply to the queue.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  id: GetPermissionsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync()
  nameWithType: CloudQueue.GetPermissionsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 325
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the permissions settings for the queue.\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync()
    content.vb: Public Overridable Function GetPermissionsAsync As Task(Of QueuePermissions)
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: The queue's permissions.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.GetPermissionsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 337
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the permissions settings for the queue.\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetPermissionsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of QueuePermissions)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: The queue's permissions.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.GetPermissionsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 350
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the permissions settings for the queue.\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of QueuePermissions)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: The queue's permissions.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  nameWithType: CloudQueue.ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 367
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nChecks existence of the queue.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue exists.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.ExistsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 379
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nChecks existence of the queue.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue exists.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.ExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 392
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nChecks existence of the queue.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the queue exists.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  nameWithType: CloudQueue.FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 422
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nRetrieves the queue's attributes.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.FetchAttributesAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 434
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nRetrieves the queue's attributes.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.FetchAttributesAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 447
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nRetrieves the queue's attributes.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  nameWithType: CloudQueue.SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 464
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets the queue's user-defined metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync()
    content.vb: Public Overridable Function SetMetadataAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.SetMetadataAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 476
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets the queue's user-defined metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.SetMetadataAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 489
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets the queue's user-defined metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage)
  nameWithType: CloudQueue.AddMessageAsync(CloudQueueMessage)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AddMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 507
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nAdds a message to the queue.\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to add.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.AddMessageAsync(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable<TimeSpan>, System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AddMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 523
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nAdds a message to the queue.\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message, TimeSpan? timeToLive, TimeSpan? initialVisibilityDelay, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage, timeToLive As TimeSpan?, initialVisibilityDelay As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to add.
    - id: timeToLive
      type: System.Nullable{TimeSpan}
      description: The maximum time to allow the message to be in the queue, or null.
    - id: initialVisibilityDelay
      type: System.Nullable{TimeSpan}
      description: >-
        The length of time from now during which the message will be invisible.

        If <code>null</code> then the message will be visible immediately.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync*
  nameWithType.vb: CloudQueue.AddMessageAsync(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable(Of TimeSpan), System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AddMessageAsync(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{TimeSpan},System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.AddMessageAsync(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable<TimeSpan>, System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AddMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 540
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nAdds a message to the queue.\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message, TimeSpan? timeToLive, TimeSpan? initialVisibilityDelay, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage, timeToLive As TimeSpan?, initialVisibilityDelay As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to add.
    - id: timeToLive
      type: System.Nullable{TimeSpan}
      description: The maximum time to allow the message to be in the queue, or null.
    - id: initialVisibilityDelay
      type: System.Nullable{TimeSpan}
      description: >-
        The length of time from now during which the message will be invisible.

        If <code>null</code> then the message will be visible immediately.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync*
  nameWithType.vb: CloudQueue.AddMessageAsync(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable(Of TimeSpan), System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: AddMessageAsync(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields)
  nameWithType: CloudQueue.UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UpdateMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 560
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nUpdates a message.\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to update.
    - id: visibilityTimeout
      type: TimeSpan
      description: The visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: The message update fields.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UpdateMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 575
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nUpdates a message.\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to update.
    - id: visibilityTimeout
      type: TimeSpan
      description: The visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: The message update fields.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UpdateMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 591
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nUpdates a message.\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to update.
    - id: visibilityTimeout
      type: TimeSpan
      description: The visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: The message update fields.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  id: DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(CloudQueueMessage)
  nameWithType: CloudQueue.DeleteMessageAsync(CloudQueueMessage)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 609
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the message.\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(CloudQueueMessage message)
    content.vb: Public Overridable Function DeleteMessageAsync(message As CloudQueueMessage) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to delete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(CloudQueueMessage, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.DeleteMessageAsync(CloudQueueMessage, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 622
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the message.\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(CloudQueueMessage message, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteMessageAsync(message As CloudQueueMessage, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The message to delete.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)
  id: DeleteMessageAsync(System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String)
  nameWithType: CloudQueue.DeleteMessageAsync(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 634
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the message.\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String) As Task
    parameters:
    - id: messageId
      type: System.String
      description: The message ID.
    - id: popReceipt
      type: System.String
      description: The pop receipt value.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.DeleteMessageAsync(String, String, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 648
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the message.\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: messageId
      type: System.String
      description: The message ID.
    - id: popReceipt
      type: System.String
      description: The pop receipt value.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.DeleteMessageAsync(String, String, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 663
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nDeletes the message.\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: messageId
      type: System.String
      description: The message ID.
    - id: popReceipt
      type: System.String
      description: The pop receipt value.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  id: GetMessagesAsync(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32)
  nameWithType: CloudQueue.GetMessagesAsync(Int32)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMessagesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 681
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets a list of messages from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    return:
      type: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.GetMessagesAsync(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMessagesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 695
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets a list of messages from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount, TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer, visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: visibilityTimeout
      type: System.Nullable{TimeSpan}
      description: The visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: An enumerable collection of messages.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync*
  nameWithType.vb: CloudQueue.GetMessagesAsync(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessagesAsync(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: GetMessagesAsync(System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.GetMessagesAsync(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMessagesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 710
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets a list of messages from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount, TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer, visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: visibilityTimeout
      type: System.Nullable{TimeSpan}
      description: The visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: An enumerable collection of messages.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync*
  nameWithType.vb: CloudQueue.GetMessagesAsync(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: GetMessagesAsync(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  id: GetMessageAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync()
  nameWithType: CloudQueue.GetMessageAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 727
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets a single message from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync()
    content.vb: Public Overridable Function GetMessageAsync As Task(Of CloudQueueMessage)
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A message.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync(Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.GetMessageAsync(Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 740
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets a single message from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync(TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetMessageAsync(visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext) As Task(Of CloudQueueMessage)
    parameters:
    - id: visibilityTimeout
      type: System.Nullable{TimeSpan}
      description: The visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A message.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync*
  nameWithType.vb: CloudQueue.GetMessageAsync(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessageAsync(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: GetMessageAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync(Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.GetMessageAsync(Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 754
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets a single message from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync(TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetMessageAsync(visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudQueueMessage)
    parameters:
    - id: visibilityTimeout
      type: System.Nullable{TimeSpan}
      description: The visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A message.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync*
  nameWithType.vb: CloudQueue.GetMessageAsync(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: GetMessageAsync(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  id: PeekMessagesAsync(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32)
  nameWithType: CloudQueue.PeekMessagesAsync(Int32)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PeekMessagesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 772
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nPeeks a list of messages from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    return:
      type: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32, QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.PeekMessagesAsync(Int32, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PeekMessagesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 785
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nPeeks a list of messages from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer, options As QueueRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: An enumerable collection of messages.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32, QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.PeekMessagesAsync(Int32, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PeekMessagesAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 799
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nPeeks a list of messages from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: An enumerable collection of messages.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  id: PeekMessageAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync()
  nameWithType: CloudQueue.PeekMessageAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PeekMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 816
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nPeeks a single message from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync()
    content.vb: Public Overridable Function PeekMessageAsync As Task(Of CloudQueueMessage)
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A message.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.PeekMessageAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PeekMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 828
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nPeeks a single message from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function PeekMessageAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of CloudQueueMessage)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A message.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.PeekMessageAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PeekMessageAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 841
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nPeeks a single message from the queue.\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function PeekMessageAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudQueueMessage)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A message.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  id: ClearAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync()
  nameWithType: CloudQueue.ClearAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ClearAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 858
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nClears the messages of the queue.\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync()
    content.vb: Public Overridable Function ClearAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync(QueueRequestOptions, OperationContext)
  nameWithType: CloudQueue.ClearAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ClearAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 870
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nClears the messages of the queue.\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ClearAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync(QueueRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudQueue.ClearAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ClearAsync
    path: Lib/WindowsRuntime/Queue/CloudQueue.cs
    startLine: 883
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nClears the messages of the queue.\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ClearAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.WindowsAzure.Storage.Queue
  commentId: N:Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue
  nameWithType: Microsoft.WindowsAzure.Storage.Queue
  fullName: Microsoft.WindowsAzure.Storage.Queue
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueue
  nameWithType: CloudQueue
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor
  isExternal: false
  name: CloudQueue
  nameWithType: CloudQueue.CloudQueue
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  commentId: T:Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  commentId: N:Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  nameWithType: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  nameWithType: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueClient
  nameWithType: CloudQueueClient
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  isExternal: false
  name: ServiceClient
  nameWithType: CloudQueue.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  isExternal: false
  name: Uri
  nameWithType: CloudQueue.Uri
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  isExternal: false
  name: StorageUri
  nameWithType: CloudQueue.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  isExternal: false
  name: Name
  nameWithType: CloudQueue.Name
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  isExternal: false
  name: ApproximateMessageCount
  nameWithType: CloudQueue.ApproximateMessageCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  isExternal: false
  name: EncodeMessage
  nameWithType: CloudQueue.EncodeMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudQueue.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: SharedAccessQueuePolicy
  nameWithType: SharedAccessQueuePolicy
  fullName: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature
  isExternal: false
  name: GetSharedAccessSignature
  nameWithType: CloudQueue.GetSharedAccessSignature
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  commentId: '!:System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}'
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  nameWithType: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  nameWithType.vb: Nullable(Of SharedAccessProtocol)
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  commentId: T:Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  nameWithType: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: CloudQueue.CreateAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  isExternal: false
  name: CreateIfNotExistsAsync
  nameWithType: CloudQueue.CreateIfNotExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CloudQueue.DeleteAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  isExternal: false
  name: DeleteIfExistsAsync
  nameWithType: CloudQueue.DeleteIfExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync
  isExternal: false
  name: SetPermissionsAsync
  nameWithType: CloudQueue.SetPermissionsAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: QueuePermissions
  nameWithType: QueuePermissions
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  isExternal: false
  name: GetPermissionsAsync
  nameWithType: CloudQueue.GetPermissionsAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}'
  definition: Task`1
  name: Task<QueuePermissions>
  nameWithType: Task<QueuePermissions>
  fullName: Task<Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions>
  nameWithType.vb: Task(Of QueuePermissions)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  name.vb: Task(Of QueuePermissions)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
    name: QueuePermissions
    nameWithType: QueuePermissions
    fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
    name: QueuePermissions
    nameWithType: QueuePermissions
    fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: CloudQueue.ExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  isExternal: false
  name: FetchAttributesAsync
  nameWithType: CloudQueue.FetchAttributesAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  isExternal: false
  name: SetMetadataAsync
  nameWithType: CloudQueue.SetMetadataAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync
  isExternal: false
  name: AddMessageAsync
  nameWithType: CloudQueue.AddMessageAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueMessage
  nameWithType: CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync
  isExternal: false
  name: UpdateMessageAsync
  nameWithType: CloudQueue.UpdateMessageAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: MessageUpdateFields
  nameWithType: MessageUpdateFields
  fullName: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync
  isExternal: false
  name: DeleteMessageAsync
  nameWithType: CloudQueue.DeleteMessageAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync
  isExternal: false
  name: GetMessagesAsync
  nameWithType: CloudQueue.GetMessagesAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
  commentId: '!:Task{IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}'
  definition: Task`1
  name: Task<IEnumerable<CloudQueueMessage>>
  nameWithType: Task<IEnumerable<CloudQueueMessage>>
  fullName: Task<IEnumerable<Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage>>
  nameWithType.vb: Task(Of IEnumerable(Of CloudQueueMessage))
  fullname.vb: Task(Of IEnumerable(Of Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage))
  name.vb: Task(Of IEnumerable(Of CloudQueueMessage))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    nameWithType: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    nameWithType: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  isExternal: false
  name: GetMessageAsync
  nameWithType: CloudQueue.GetMessageAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}'
  definition: Task`1
  name: Task<CloudQueueMessage>
  nameWithType: Task<CloudQueueMessage>
  fullName: Task<Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage>
  nameWithType.vb: Task(Of CloudQueueMessage)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  name.vb: Task(Of CloudQueueMessage)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    nameWithType: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    nameWithType: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync
  isExternal: false
  name: PeekMessagesAsync
  nameWithType: CloudQueue.PeekMessagesAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  isExternal: false
  name: PeekMessageAsync
  nameWithType: CloudQueue.PeekMessageAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  isExternal: false
  name: ClearAsync
  nameWithType: CloudQueue.ClearAsync
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
