items:
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  id: ComplexEntity
  parent: Microsoft.WindowsAzure.Storage.Table.Entities
  children:
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.#ctor
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.AssertEquality(Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity,Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity)
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Binary
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryPrimitive
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Bool
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitive
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.ComplexEntityPropertyResolver(System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTime
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffset
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Double
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleInteger
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitive
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Guid
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32N
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32Null
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64N
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64Null
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitive
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitive
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveN
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.NumberOfNonNullProperties
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.String
  - Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.UnsupportedProperty
  langs:
  - csharp
  - vb
  name: ComplexEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  type: Class
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ComplexEntity
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: 'public class ComplexEntity : TableEntity'
    content.vb: >-
      Public Class ComplexEntity
          Inherits TableEntity
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.NumberOfNonNullProperties
  commentId: F:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.NumberOfNonNullProperties
  id: NumberOfNonNullProperties
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: NumberOfNonNullProperties
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.NumberOfNonNullProperties
  type: Field
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: NumberOfNonNullProperties
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public const int NumberOfNonNullProperties = null
    content.vb: Public Const NumberOfNonNullProperties As Integer = Nothing
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: ComplexEntity()
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.ComplexEntity()
  type: Constructor
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public ComplexEntity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: ComplexEntity(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.ComplexEntity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public ComplexEntity(string pk, string rk)
    content.vb: Public Sub New(pk As String, rk As String)
    parameters:
    - id: pk
      type: System.String
    - id: rk
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.UnsupportedProperty
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.UnsupportedProperty
  id: UnsupportedProperty
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: UnsupportedProperty
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.UnsupportedProperty
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UnsupportedProperty
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public CloudStorageAccount UnsupportedProperty { get; set; }
    content.vb: Public Property UnsupportedProperty As CloudStorageAccount
    parameters: []
    return:
      type: CloudStorageAccount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetNull
  id: DateTimeOffsetNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DateTimeOffsetNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeOffsetNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTimeOffset? DateTimeOffsetNull { get; set; }
    content.vb: Public Property DateTimeOffsetNull As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetN
  id: DateTimeOffsetN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DateTimeOffsetN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffsetN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeOffsetN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTimeOffset? DateTimeOffsetN { get; set; }
    content.vb: Public Property DateTimeOffsetN As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffset
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffset
  id: DateTimeOffset
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DateTimeOffset
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeOffset
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeOffset
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTimeOffset DateTimeOffset { get; set; }
    content.vb: Public Property DateTimeOffset As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeNull
  id: DateTimeNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DateTimeNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTime? DateTimeNull { get; set; }
    content.vb: Public Property DateTimeNull As DateTime?
    parameters: []
    return:
      type: System.Nullable{DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeN
  id: DateTimeN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DateTimeN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTimeN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTime? DateTimeN { get; set; }
    content.vb: Public Property DateTimeN As DateTime?
    parameters: []
    return:
      type: System.Nullable{DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTime
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTime
  id: DateTime
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DateTime
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DateTime
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTime
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTime DateTime { get; set; }
    content.vb: Public Property DateTime As DateTime
    parameters: []
    return:
      type: DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolNull
  id: BoolNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BoolNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 88
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Boolean? BoolNull { get; set; }
    content.vb: Public Property BoolNull As Boolean?
    parameters: []
    return:
      type: System.Nullable{Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolN
  id: BoolN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BoolN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Boolean? BoolN { get; set; }
    content.vb: Public Property BoolN As Boolean?
    parameters: []
    return:
      type: System.Nullable{Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Bool
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Bool
  id: Bool
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Bool
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Bool
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Bool
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Boolean Bool { get; set; }
    content.vb: Public Property Bool As Boolean
    parameters: []
    return:
      type: Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveNull
  id: BoolPrimitiveNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BoolPrimitiveNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolPrimitiveNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 109
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public bool ? BoolPrimitiveNull { get; set; }
    content.vb: Public Property BoolPrimitiveNull As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveN
  id: BoolPrimitiveN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BoolPrimitiveN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitiveN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolPrimitiveN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public bool ? BoolPrimitiveN { get; set; }
    content.vb: Public Property BoolPrimitiveN As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitive
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitive
  id: BoolPrimitive
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BoolPrimitive
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BoolPrimitive
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolPrimitive
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public bool BoolPrimitive { get; set; }
    content.vb: Public Property BoolPrimitive As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Binary
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Binary
  id: Binary
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Binary
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Binary
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Binary
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 130
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Byte[] Binary { get; set; }
    content.vb: Public Property Binary As Byte()
    parameters: []
    return:
      type: Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryNull
  id: BinaryNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BinaryNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BinaryNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Byte[] BinaryNull { get; set; }
    content.vb: Public Property BinaryNull As Byte()
    parameters: []
    return:
      type: Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryPrimitive
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryPrimitive
  id: BinaryPrimitive
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: BinaryPrimitive
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.BinaryPrimitive
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BinaryPrimitive
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public byte[] BinaryPrimitive { get; set; }
    content.vb: Public Property BinaryPrimitive As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveNull
  id: DoublePrimitiveNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DoublePrimitiveNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DoublePrimitiveNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 151
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public double ? DoublePrimitiveNull { get; set; }
    content.vb: Public Property DoublePrimitiveNull As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveN
  id: DoublePrimitiveN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DoublePrimitiveN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitiveN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DoublePrimitiveN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 158
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public double ? DoublePrimitiveN { get; set; }
    content.vb: Public Property DoublePrimitiveN As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitive
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitive
  id: DoublePrimitive
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DoublePrimitive
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoublePrimitive
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DoublePrimitive
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 165
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public double DoublePrimitive { get; set; }
    content.vb: Public Property DoublePrimitive As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleNull
  id: DoubleNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DoubleNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DoubleNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 172
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Double? DoubleNull { get; set; }
    content.vb: Public Property DoubleNull As Double?
    parameters: []
    return:
      type: System.Nullable{Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleN
  id: DoubleN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DoubleN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DoubleN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 179
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Double? DoubleN { get; set; }
    content.vb: Public Property DoubleN As Double?
    parameters: []
    return:
      type: System.Nullable{Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Double
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Double
  id: Double
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Double
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Double
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Double
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 186
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Double Double { get; set; }
    content.vb: Public Property Double As Double
    parameters: []
    return:
      type: Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleInteger
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleInteger
  id: DoubleInteger
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: DoubleInteger
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.DoubleInteger
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DoubleInteger
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 193
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Double DoubleInteger { get; set; }
    content.vb: Public Property DoubleInteger As Double
    parameters: []
    return:
      type: Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidNull
  id: GuidNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: GuidNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GuidNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 200
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Guid? GuidNull { get; set; }
    content.vb: Public Property GuidNull As Guid?
    parameters: []
    return:
      type: System.Nullable{Guid}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidN
  id: GuidN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: GuidN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.GuidN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GuidN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 207
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Guid? GuidN { get; set; }
    content.vb: Public Property GuidN As Guid?
    parameters: []
    return:
      type: System.Nullable{Guid}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Guid
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Guid
  id: Guid
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Guid
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Guid
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Guid
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 214
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Guid Guid { get; set; }
    content.vb: Public Property Guid As Guid
    parameters: []
    return:
      type: Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveNull
  id: IntegerPrimitiveNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: IntegerPrimitiveNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IntegerPrimitiveNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 221
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public int ? IntegerPrimitiveNull { get; set; }
    content.vb: Public Property IntegerPrimitiveNull As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveN
  id: IntegerPrimitiveN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: IntegerPrimitiveN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitiveN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IntegerPrimitiveN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 228
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public int ? IntegerPrimitiveN { get; set; }
    content.vb: Public Property IntegerPrimitiveN As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitive
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitive
  id: IntegerPrimitive
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: IntegerPrimitive
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.IntegerPrimitive
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IntegerPrimitive
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 235
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public int IntegerPrimitive { get; set; }
    content.vb: Public Property IntegerPrimitive As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32Null
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32Null
  id: Int32Null
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Int32Null
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32Null
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Int32Null
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 242
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Int32? Int32Null { get; set; }
    content.vb: Public Property Int32Null As Int32?
    parameters: []
    return:
      type: System.Nullable{Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32N
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32N
  id: Int32N
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Int32N
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32N
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Int32N
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Int32? Int32N { get; set; }
    content.vb: Public Property Int32N As Int32?
    parameters: []
    return:
      type: System.Nullable{Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32
  id: Int32
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Int32
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int32
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Int32
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 256
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Int32 Int32 { get; set; }
    content.vb: Public Property Int32 As Int32
    parameters: []
    return:
      type: Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveNull
  id: LongPrimitiveNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: LongPrimitiveNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LongPrimitiveNull
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 263
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public long ? LongPrimitiveNull { get; set; }
    content.vb: Public Property LongPrimitiveNull As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveN
  id: LongPrimitiveN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: LongPrimitiveN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitiveN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LongPrimitiveN
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 270
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public long ? LongPrimitiveN { get; set; }
    content.vb: Public Property LongPrimitiveN As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitive
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitive
  id: LongPrimitive
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: LongPrimitive
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.LongPrimitive
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LongPrimitive
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 277
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public long LongPrimitive { get; set; }
    content.vb: Public Property LongPrimitive As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64Null
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64Null
  id: Int64Null
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Int64Null
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64Null
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Int64Null
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 284
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Int64? Int64Null { get; set; }
    content.vb: Public Property Int64Null As Int64?
    parameters: []
    return:
      type: System.Nullable{Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64N
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64N
  id: Int64N
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Int64N
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64N
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Int64N
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 291
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Int64? Int64N { get; set; }
    content.vb: Public Property Int64N As Int64?
    parameters: []
    return:
      type: System.Nullable{Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64
  id: Int64
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: Int64
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.Int64
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Int64
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 298
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Int64 Int64 { get; set; }
    content.vb: Public Property Int64 As Int64
    parameters: []
    return:
      type: Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.String
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.String
  id: String
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: String
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.String
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: String
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 305
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public string String { get; set; }
    content.vb: Public Property String As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.AssertEquality(Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity,Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.AssertEquality(Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity,Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity)
  id: AssertEquality(Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity,Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity)
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: AssertEquality(ComplexEntity, ComplexEntity)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.AssertEquality(Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity, Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity)
  type: Method
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertEquality
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 311
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public static void AssertEquality(ComplexEntity a, ComplexEntity b)
    content.vb: Public Shared Sub AssertEquality(a As ComplexEntity, b As ComplexEntity)
    parameters:
    - id: a
      type: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
    - id: b
      type: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.ComplexEntityPropertyResolver(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.ComplexEntityPropertyResolver(System.String,System.String,System.String,System.String)
  id: ComplexEntityPropertyResolver(System.String,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  langs:
  - csharp
  - vb
  name: ComplexEntityPropertyResolver(String, String, String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity.ComplexEntityPropertyResolver(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Test/Common/Table/Entities/ComplexEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ComplexEntityPropertyResolver
    path: Test/Common/Table/Entities/ComplexEntity.cs
    startLine: 357
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public static EdmType ComplexEntityPropertyResolver(string pk, string rk, string propName, string propValue)
    content.vb: Public Shared Function ComplexEntityPropertyResolver(pk As String, rk As String, propName As String, propValue As String) As EdmType
    parameters:
    - id: pk
      type: System.String
    - id: rk
      type: System.String
    - id: propName
      type: System.String
    - id: propValue
      type: System.String
    return:
      type: EdmType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Table.Entities
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.Entities
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: CloudStorageAccount
  isExternal: true
  name: CloudStorageAccount
  fullName: CloudStorageAccount
- uid: System.Nullable{DateTimeOffset}
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: System.Nullable{DateTime}
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  fullname.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTime
    name: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: DateTime
  isExternal: true
  name: DateTime
  fullName: DateTime
- uid: System.Nullable{Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<Boolean>
  fullname.vb: System.Nullable(Of Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Boolean
    name: Boolean
    fullName: Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Boolean
    name: Boolean
    fullName: Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Boolean
  isExternal: true
  name: Boolean
  fullName: Boolean
- uid: System.Nullable{System.Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Byte[]
  isExternal: true
  name: Byte[]
  fullName: Byte[]
  fullname.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: Byte
    name: Byte
    fullName: Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Byte
    name: Byte
    fullName: Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Nullable{System.Double}
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Double
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Nullable{Double}
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<Double>
  fullname.vb: System.Nullable(Of Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Double
    name: Double
    fullName: Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Double
    name: Double
    fullName: Double
    isExternal: true
  - name: )
    fullName: )
- uid: Double
  isExternal: true
  name: Double
  fullName: Double
- uid: System.Nullable{Guid}
  definition: System.Nullable`1
  name: Nullable<Guid>
  fullName: System.Nullable<Guid>
  fullname.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Guid
    name: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    fullName: Guid
    isExternal: true
  - name: )
    fullName: )
- uid: Guid
  isExternal: true
  name: Guid
  fullName: Guid
- uid: System.Nullable{System.Int32}
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{Int32}
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<Int32>
  fullname.vb: System.Nullable(Of Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Int32
    name: Int32
    fullName: Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Int32
    name: Int32
    fullName: Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Int32
  isExternal: true
  name: Int32
  fullName: Int32
- uid: System.Nullable{System.Int64}
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Int64
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Nullable{Int64}
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<Int64>
  fullname.vb: System.Nullable(Of Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Int64
    name: Int64
    fullName: Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Int64
    name: Int64
    fullName: Int64
    isExternal: true
  - name: )
    fullName: )
- uid: Int64
  isExternal: true
  name: Int64
  fullName: Int64
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
  parent: Microsoft.WindowsAzure.Storage.Table.Entities
  isExternal: false
  name: ComplexEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.ComplexEntity
- uid: EdmType
  isExternal: true
  name: EdmType
  fullName: EdmType
