items:
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  id: BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.#ctor
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.#ctor(Microsoft.WindowsAzure.Storage.Blob.BlobProperties)
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.AppendBlobCommittedBlockCount
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobType
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.CacheControl
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentDisposition
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentEncoding
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentLanguage
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentMD5
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentType
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ETag
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.IsServerEncrypted
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LastModified
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseDuration
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseState
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseStatus
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.Length
  - Microsoft.WindowsAzure.Storage.Blob.BlobProperties.PageBlobSequenceNumber
  langs:
  - csharp
  - vb
  name: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  type: Class
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobProperties
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRepresents the system properties for a blob.\n"
  example: []
  syntax:
    content: 'public sealed class BlobProperties : object'
    content.vb: >-
      Public NotInheritable Class BlobProperties
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: BlobProperties()
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobProperties()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobProperties\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BlobProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.#ctor(Microsoft.WindowsAzure.Storage.Blob.BlobProperties)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.#ctor(Microsoft.WindowsAzure.Storage.Blob.BlobProperties)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Blob.BlobProperties)'
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: BlobProperties(BlobProperties)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobProperties(Microsoft.WindowsAzure.Storage.Blob.BlobProperties)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobProperties\" data-throw-if-not-resolved=\"false\"></xref> class based on an existing instance.\n"
  remarks: Lease-related properties will not be cloned, because a lease associated with the base blob is not copied to the snapshot.
  example: []
  syntax:
    content: public BlobProperties(BlobProperties other)
    content.vb: Public Sub New(other As BlobProperties)
    parameters:
    - id: other
      type: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.CacheControl
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.CacheControl
  id: CacheControl
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: CacheControl
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.CacheControl
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CacheControl
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the cache-control value stored for the blob.\n"
  example: []
  syntax:
    content: public string CacheControl { get; set; }
    content.vb: Public Property CacheControl As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's cache-control value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentDisposition
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentDisposition
  id: ContentDisposition
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: ContentDisposition
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentDisposition
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContentDisposition
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the content-disposition value stored for the blob.\n"
  remarks: "\nIf this property has not been set for the blob, it returns <code>null</code>.\n"
  example: []
  syntax:
    content: public string ContentDisposition { get; set; }
    content.vb: Public Property ContentDisposition As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's content-disposition value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentEncoding
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentEncoding
  id: ContentEncoding
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: ContentEncoding
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentEncoding
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContentEncoding
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the content-encoding value stored for the blob.\n"
  remarks: "\nIf this property has not been set for the blob, it returns <code>null</code>.\n"
  example: []
  syntax:
    content: public string ContentEncoding { get; set; }
    content.vb: Public Property ContentEncoding As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's content-encoding value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentLanguage
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentLanguage
  id: ContentLanguage
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: ContentLanguage
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentLanguage
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContentLanguage
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the content-language value stored for the blob.\n"
  remarks: "\nIf this property has not been set for the blob, it returns <code>null</code>.\n"
  example: []
  syntax:
    content: public string ContentLanguage { get; set; }
    content.vb: Public Property ContentLanguage As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's content-language value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.Length
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.Length
  id: Length
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: Length
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.Length
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Length
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 96
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the size of the blob, in bytes.\n"
  example: []
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: A long value containing the blob's size in bytes.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentMD5
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentMD5
  id: ContentMD5
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: ContentMD5
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentMD5
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContentMD5
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the content-MD5 value stored for the blob.\n"
  example: []
  syntax:
    content: public string ContentMD5 { get; set; }
    content.vb: Public Property ContentMD5 As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's content-MD5 hash.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentType
  id: ContentType
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ContentType
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContentType
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the content-type value stored for the blob.\n"
  remarks: "\nIf this property has not been set for the blob, it returns <code>null</code>.\n"
  example: []
  syntax:
    content: public string ContentType { get; set; }
    content.vb: Public Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's content-type value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ETag
  id: ETag
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.ETag
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ETag
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's ETag value.\n"
  example: []
  syntax:
    content: public string ETag { get; }
    content.vb: Public ReadOnly Property ETag As String
    parameters: []
    return:
      type: System.String
      description: A string containing the blob's ETag value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LastModified
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LastModified
  id: LastModified
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: LastModified
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LastModified
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LastModified
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the the last-modified time for the blob, expressed as a UTC value.\n"
  example: []
  syntax:
    content: public DateTimeOffset? LastModified { get; }
    content.vb: Public ReadOnly Property LastModified As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> containing the blob's last-modified time, in UTC format.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobType
  id: BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobType
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobType
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the type of the blob.\n"
  example: []
  syntax:
    content: public BlobType BlobType { get; }
    content.vb: Public ReadOnly Property BlobType As BlobType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobType" data-throw-if-not-resolved="false"></xref> object that indicates the type of the blob.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseStatus
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseStatus
  id: LeaseStatus
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: LeaseStatus
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseStatus
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LeaseStatus
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 135
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's lease status.\n"
  example: []
  syntax:
    content: public LeaseStatus LeaseStatus { get; }
    content.vb: Public ReadOnly Property LeaseStatus As LeaseStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseStatus" data-throw-if-not-resolved="false"></xref> object that indicates the blob's lease status.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseState
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseState
  id: LeaseState
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: LeaseState
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseState
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LeaseState
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 141
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's lease state.\n"
  example: []
  syntax:
    content: public LeaseState LeaseState { get; }
    content.vb: Public ReadOnly Property LeaseState As LeaseState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.LeaseState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseState" data-throw-if-not-resolved="false"></xref> object that indicates the blob's lease state.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseDuration
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseDuration
  id: LeaseDuration
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: LeaseDuration
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseDuration
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LeaseDuration
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 147
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's lease duration.\n"
  example: []
  syntax:
    content: public LeaseDuration LeaseDuration { get; }
    content.vb: Public ReadOnly Property LeaseDuration As LeaseDuration
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseDuration" data-throw-if-not-resolved="false"></xref> object that indicates the blob's lease duration.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.PageBlobSequenceNumber
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.PageBlobSequenceNumber
  id: PageBlobSequenceNumber
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: PageBlobSequenceNumber
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.PageBlobSequenceNumber
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PageBlobSequenceNumber
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 153
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nIf the blob is a page blob, gets the blob's current sequence number.\n"
  example: []
  syntax:
    content: public long ? PageBlobSequenceNumber { get; }
    content.vb: Public ReadOnly Property PageBlobSequenceNumber As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: A long containing the blob's current sequence number.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.AppendBlobCommittedBlockCount
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.AppendBlobCommittedBlockCount
  id: AppendBlobCommittedBlockCount
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: AppendBlobCommittedBlockCount
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.AppendBlobCommittedBlockCount
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AppendBlobCommittedBlockCount
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 159
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nIf the blob is an append blob, gets the number of committed blocks.\n"
  example: []
  syntax:
    content: public int ? AppendBlobCommittedBlockCount { get; }
    content.vb: Public ReadOnly Property AppendBlobCommittedBlockCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: An integer containing the number of committed blocks.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.IsServerEncrypted
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobProperties.IsServerEncrypted
  id: IsServerEncrypted
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  langs:
  - csharp
  - vb
  name: IsServerEncrypted
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.IsServerEncrypted
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/BlobProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsServerEncrypted
    path: Lib/Common/Blob/BlobProperties.cs
    startLine: 164
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's server-side encryption state.\n"
  example: []
  syntax:
    content: public bool IsServerEncrypted { get; }
    content.vb: Public ReadOnly Property IsServerEncrypted As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Nullable{DateTimeOffset}
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseStatus
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: LeaseStatus
  fullName: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseState
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: LeaseState
  fullName: Microsoft.WindowsAzure.Storage.Blob.LeaseState
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties.LeaseDuration
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: LeaseDuration
  fullName: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
- uid: System.Nullable{System.Int64}
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
