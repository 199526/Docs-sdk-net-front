items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableEntity
  id: TableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: TableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity
  type: Class
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableEntity
    path: Lib/Common/Table/TableEntity.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nRepresents the base object type for a table entity in the Table service.\n"
  remarks: "<xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> provides a base implementation for the <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity\" data-throw-if-not-resolved=\"false\"></xref> interface that provides <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> methods that by default serialize and \n    deserialize all properties via reflection. A table entity class may extend this class and override the <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> methods to provide customized or better performing serialization logic."
  example: []
  syntax:
    content: 'public class TableEntity : object, ITableEntity'
    content.vb: >-
      Public Class TableEntity
          Inherits Object
          Implements ITableEntity
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: TableEntity()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.TableEntity()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/TableEntity.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TableEntity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: TableEntity(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.TableEntity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/TableEntity.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> class with the specified partition key and row key.\n"
  example: []
  syntax:
    content: public TableEntity(string partitionKey, string rowKey)
    content.vb: Public Sub New(partitionKey As String, rowKey As String)
    parameters:
    - id: partitionKey
      type: System.String
      description: A string containing the partition key of the <xref href="Microsoft.WindowsAzure.Storage.Table.TableEntity" data-throw-if-not-resolved="false"></xref> to be initialized.
    - id: rowKey
      type: System.String
      description: A string containing the row key of the <xref href="Microsoft.WindowsAzure.Storage.Table.TableEntity" data-throw-if-not-resolved="false"></xref> to be initialized.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  id: PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PartitionKey
    path: Lib/Common/Table/TableEntity.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's partition key.\n"
  example: []
  syntax:
    content: public string PartitionKey { get; set; }
    content.vb: Public Property PartitionKey As String
    parameters: []
    return:
      type: System.String
      description: A string containing the partition key for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  id: RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RowKey
    path: Lib/Common/Table/TableEntity.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's row key.\n"
  example: []
  syntax:
    content: public string RowKey { get; set; }
    content.vb: Public Property RowKey As String
    parameters: []
    return:
      type: System.String
      description: A string containing the row key for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  id: Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Timestamp
    path: Lib/Common/Table/TableEntity.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's timestamp.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
      description: A <see cref="!:DateTimeOffset"></see> containing the timestamp of the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  id: ETag
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ETag
    path: Lib/Common/Table/TableEntity.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's ETag. Set this value to '*' in order to force an overwrite to an entity as part of an update operation.\n"
  example: []
  syntax:
    content: public string ETag { get; set; }
    content.vb: Public Property ETag As String
    parameters: []
    return:
      type: System.String
      description: A string containing the ETag value for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadEntity
    path: Lib/Common/Table/TableEntity.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeserializes the entity using the specified <see cref=\"!:IDictionary<TKey,TValue>\"></see> that maps property names to typed <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> values. \n"
  example: []
  syntax:
    content: public virtual void ReadEntity(IDictionary<string, EntityProperty> properties, OperationContext operationContext)
    content.vb: Public Overridable Sub ReadEntity(properties As IDictionary(Of String, EntityProperty), operationContext As OperationContext)
    parameters:
    - id: properties
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object that maps property names to typed <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> values.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReadUserObject(System.Object,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: ReadUserObject(Object, IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object, IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadUserObject
    path: Lib/Common/Table/TableEntity.cs
    startLine: 131
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeserializes a custom entity instance using the specified <see cref=\"!:IDictionary<TKey,TValue>\"></see> of property names to <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> data typed values. \n"
  example: []
  syntax:
    content: public static void ReadUserObject(object entity, IDictionary<string, EntityProperty> properties, OperationContext operationContext)
    content.vb: Public Shared Sub ReadUserObject(entity As Object, properties As IDictionary(Of String, EntityProperty), operationContext As OperationContext)
    parameters:
    - id: entity
      type: System.Object
      description: The custom entity instance being deserialized.
    - id: properties
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object that maps string property names to <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> data values to deserialize and store in this table entity instance.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object, IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadUserObject(Object, IDictionary(Of String, EntityProperty), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  id: WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteEntity
    path: Lib/Common/Table/TableEntity.cs
    startLine: 266
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nSerializes the <see cref=\"!:IDictionary<TKey,TValue>\"></see> of property names mapped to <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> data values from this <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public virtual IDictionary<string, EntityProperty> WriteEntity(OperationContext operationContext)
    content.vb: Public Overridable Function WriteEntity(operationContext As OperationContext) As IDictionary(Of String, EntityProperty)
    parameters:
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object that maps string property names to <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> typed values created by serializing this table entity instance.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  id: WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: WriteUserObject(Object, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteUserObject
    path: Lib/Common/Table/TableEntity.cs
    startLine: 288
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreate a <see cref=\"!:IDictionary<TKey,TValue>\"></see> of <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> objects for all the properties of the specified entity object.\n"
  example: []
  syntax:
    content: public static IDictionary<string, EntityProperty> WriteUserObject(object entity, OperationContext operationContext)
    content.vb: Public Shared Function WriteUserObject(entity As Object, operationContext As OperationContext) As IDictionary(Of String, EntityProperty)
    parameters:
    - id: entity
      type: System.Object
      description: The entity object to serialize.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> of <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> objects for all the properties of the specified entity object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity
  isExternal: false
  name: TableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: ITableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: true
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity
  - name: (
    fullName: (
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity
  - name: (
    fullName: (
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
- uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: EntityProperty
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
  definition: IDictionary`2
  name: IDictionary<String, EntityProperty>
  fullName: IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>
  fullname.vb: IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty)
  name.vb: IDictionary(Of String, EntityProperty)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
