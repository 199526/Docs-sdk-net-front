items:
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  id: OperationContext
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  - Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  - Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  - Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  - Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  - Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  - Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  - Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  - Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  - Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  - Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  - Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  - Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  langs:
  - csharp
  - vb
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
  type: Class
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OperationContext
    path: Lib/Common/OperationContext.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents the context for a request operation against the storage service, and provides additional runtime information about its execution.\n"
  example: []
  syntax:
    content: 'public sealed class OperationContext : object'
    content.vb: >-
      Public NotInheritable Class OperationContext
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: OperationContext()
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.OperationContext()
  type: Constructor
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/OperationContext.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OperationContext()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  id: UserHeaders
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: UserHeaders
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UserHeaders
    path: Lib/Common/OperationContext.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets additional headers on the request, for example, for proxy or logging information.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> UserHeaders { get; set; }
    content.vb: Public Property UserHeaders As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
      description: A <see cref="!:System.Collections.Generic.IDictionary<T, K>"></see> object containing additional header information.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  id: ClientRequestID
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: ClientRequestID
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ClientRequestID
    path: Lib/Common/OperationContext.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the client request ID.\n"
  example: []
  syntax:
    content: public string ClientRequestID { get; set; }
    content.vb: Public Property ClientRequestID As String
    parameters: []
    return:
      type: System.String
      description: A string containing the client request ID.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  id: DefaultLogLevel
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: DefaultLogLevel
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DefaultLogLevel
    path: Lib/Common/OperationContext.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the default logging level to be used for subsequently created instances of the <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static LogLevel DefaultLogLevel { get; set; }
    content.vb: Public Shared Property DefaultLogLevel As LogLevel
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.LogLevel
      description: A value of type <xref href="Microsoft.WindowsAzure.Storage.OperationContext.LogLevel" data-throw-if-not-resolved="false"></xref> that specifies which events are logged by default by instances of the <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  id: LogLevel
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: LogLevel
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LogLevel
    path: Lib/Common/OperationContext.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the logging level to be used for an instance of the <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public LogLevel LogLevel { get; set; }
    content.vb: Public Property LogLevel As LogLevel
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.LogLevel
      description: A value of type <xref href="Microsoft.WindowsAzure.Storage.OperationContext.LogLevel" data-throw-if-not-resolved="false"></xref> that specifies which events are logged by the <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  id: GlobalSendingRequest
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalSendingRequest
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalSendingRequest
    path: Lib/Common/OperationContext.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs immediately before a request is signed.\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalSendingRequest
    content.vb: Public Shared Event GlobalSendingRequest As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  id: GlobalResponseReceived
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalResponseReceived
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalResponseReceived
    path: Lib/Common/OperationContext.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs when a response is received from the server, before any processing or downloading.\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalResponseReceived
    content.vb: Public Shared Event GlobalResponseReceived As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  id: GlobalRequestCompleted
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalRequestCompleted
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalRequestCompleted
    path: Lib/Common/OperationContext.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs after a response has been fully received and processed.\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalRequestCompleted
    content.vb: Public Shared Event GlobalRequestCompleted As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  id: GlobalRetrying
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalRetrying
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalRetrying
    path: Lib/Common/OperationContext.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs before a request is retried\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalRetrying
    content.vb: Public Shared Event GlobalRetrying As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  id: SendingRequest
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: SendingRequest
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SendingRequest
    path: Lib/Common/OperationContext.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs immediately before a request is signed.\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> SendingRequest
    content.vb: Public Event SendingRequest As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  id: ResponseReceived
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: ResponseReceived
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ResponseReceived
    path: Lib/Common/OperationContext.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs when a response is received from the service, before any processing or downloading.\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> ResponseReceived
    content.vb: Public Event ResponseReceived As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  id: RequestCompleted
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: RequestCompleted
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestCompleted
    path: Lib/Common/OperationContext.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs after a response has been fully received and processed.\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> RequestCompleted
    content.vb: Public Event RequestCompleted As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  id: Retrying
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: Retrying
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Retrying
    path: Lib/Common/OperationContext.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs before a request is retried\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> Retrying
    content.vb: Public Event Retrying As EventHandler(Of RequestEventArgs)
    return:
      type: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StartTime
    path: Lib/Common/OperationContext.cs
    startLine: 184
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the start time of the operation.\n"
  example: []
  syntax:
    content: public System.DateTimeOffset StartTime { get; set; }
    content.vb: Public Property StartTime As System.DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: The start time of the operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: EndTime
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndTime
    path: Lib/Common/OperationContext.cs
    startLine: 190
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the end time of the operation.\n"
  example: []
  syntax:
    content: public System.DateTimeOffset EndTime { get; set; }
    content.vb: Public Property EndTime As System.DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: The end time of the operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  id: RequestResults
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: RequestResults
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestResults
    path: Lib/Common/OperationContext.cs
    startLine: 214
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the set of request results that the current operation has created.\n"
  example: []
  syntax:
    content: public IList<RequestResult> RequestResults { get; }
    content.vb: Public ReadOnly Property RequestResults As IList(Of RequestResult)
    parameters: []
    return:
      type: IList{Microsoft.WindowsAzure.Storage.RequestResult}
      description: An <see cref="!:System.Collections.IList"></see> object that contains <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref> objects that represent the request results created by the current operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  id: LastResult
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: LastResult
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LastResult
    path: Lib/Common/OperationContext.cs
    startLine: 226
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the last request result encountered for the operation.\n"
  example: []
  syntax:
    content: public RequestResult LastResult { get; }
    content.vb: Public ReadOnly Property LastResult As RequestResult
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: A <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref> object that represents the last request result.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: IDictionary{System.String,System.String}
  definition: IDictionary`2
  name: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
- uid: Microsoft.WindowsAzure.Storage.LogLevel
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: LogLevel
  fullName: Microsoft.WindowsAzure.Storage.LogLevel
- uid: EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  definition: EventHandler`1
  name: EventHandler<RequestEventArgs>
  fullName: EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>
  fullname.vb: EventHandler(Of Microsoft.WindowsAzure.Storage.RequestEventArgs)
  name.vb: EventHandler(Of RequestEventArgs)
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.RequestEventArgs
    name: RequestEventArgs
    fullName: Microsoft.WindowsAzure.Storage.RequestEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.RequestEventArgs
    name: RequestEventArgs
    fullName: Microsoft.WindowsAzure.Storage.RequestEventArgs
  - name: )
    fullName: )
- uid: EventHandler`1
  isExternal: true
  name: EventHandler<>
  fullName: EventHandler<>
  fullname.vb: EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.DateTimeOffset
  isExternal: true
  name: System.DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
- uid: IList{Microsoft.WindowsAzure.Storage.RequestResult}
  definition: IList`1
  name: IList<RequestResult>
  fullName: IList<Microsoft.WindowsAzure.Storage.RequestResult>
  fullname.vb: IList(Of Microsoft.WindowsAzure.Storage.RequestResult)
  name.vb: IList(Of RequestResult)
  spec.csharp:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.RequestResult
    name: RequestResult
    fullName: Microsoft.WindowsAzure.Storage.RequestResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.RequestResult
    name: RequestResult
    fullName: Microsoft.WindowsAzure.Storage.RequestResult
  - name: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  fullName: IList<>
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
