### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  id: CloudFileDirectory
  parent: Microsoft.WindowsAzure.Storage.File
  children:
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  langs:
  - csharp
  - vb
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CloudFileDirectory
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nRepresents a directory of files, designated by a delimiter character.\n"
  remarks: Shares, which are encapsulated as <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileShare" data-throw-if-not-resolved="false"></xref> objects, hold directories, and directories hold files. Directories can also contain sub-directories.
  example: []
  syntax:
    content: 'public class CloudFileDirectory : object, IListFileItem'
    content.vb: >-
      Public Class CloudFileDirectory
          Inherits Object
          Implements IListFileItem
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.File.IListFileItem
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CloudFileDirectory(Uri)
  nameWithType: CloudFileDirectory.CloudFileDirectory(Uri)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory(Uri)
  type: Constructor
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the directory.\n"
  example: []
  syntax:
    content: public CloudFileDirectory(Uri directoryAbsoluteUri)
    content.vb: Public Sub New(directoryAbsoluteUri As Uri)
    parameters:
    - id: directoryAbsoluteUri
      type: Uri
      description: A <see cref="!:System.Uri"></see> object containing the absolute URI to the directory.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CloudFileDirectory(Uri, StorageCredentials)
  nameWithType: CloudFileDirectory.CloudFileDirectory(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory(Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the directory.\n"
  example: []
  syntax:
    content: public CloudFileDirectory(Uri directoryAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(directoryAbsoluteUri As Uri, credentials As StorageCredentials)
    parameters:
    - id: directoryAbsoluteUri
      type: Uri
      description: A <see cref="!:System.Uri"></see> object containing the absolute URI to the directory.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CloudFileDirectory(StorageUri, StorageCredentials)
  nameWithType: CloudFileDirectory.CloudFileDirectory(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the directory.\n"
  example: []
  syntax:
    content: public CloudFileDirectory(StorageUri directoryAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(directoryAbsoluteUri As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: directoryAbsoluteUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <see cref="!:System.Uri"></see> object containing the absolute URI to the directory.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ServiceClient
  nameWithType: CloudFileDirectory.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServiceClient
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileClient\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the endpoint for the File service.\n"
  example: []
  syntax:
    content: public CloudFileClient ServiceClient { get; }
    content.vb: Public ReadOnly Property ServiceClient As CloudFileClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: CloudFileDirectory.Uri
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Uri
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets the directory's URI for the primary location.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the directory at the primary location.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri*
  implements:
  - Microsoft.WindowsAzure.Storage.File.IListFileItem.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: StorageUri
  nameWithType: CloudFileDirectory.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StorageUri
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets the file directory's URIs for all locations.\n"
  example: []
  syntax:
    content: public StorageUri StorageUri { get; }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri" data-throw-if-not-resolved="false"></xref> object containing the file directory's URIs for all locations.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri*
  implements:
  - Microsoft.WindowsAzure.Storage.File.IListFileItem.StorageUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: CloudFileDirectory.Properties
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Properties
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties\" data-throw-if-not-resolved=\"false\"></xref> object that represents the directory's system properties.\n"
  example: []
  syntax:
    content: public FileDirectoryProperties Properties { get; }
    content.vb: Public ReadOnly Property Properties As FileDirectoryProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudFileDirectory.Metadata
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Metadata
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets the user-defined metadata for the directory.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
      description: The directory's metadata, as a collection of name-value pairs.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  id: Share
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Share
  nameWithType: CloudFileDirectory.Share
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Share
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 135
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileShare\" data-throw-if-not-resolved=\"false\"></xref> object that represents the share for the directory.\n"
  example: []
  syntax:
    content: public CloudFileShare Share { get; }
    content.vb: Public ReadOnly Property Share As CloudFileShare
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileShare
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileShare" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share*
  implements:
  - Microsoft.WindowsAzure.Storage.File.IListFileItem.Share
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  id: Parent
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: CloudFileDirectory.Parent
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Parent
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 153
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> object that represents the parent directory for the directory.\n"
  example: []
  syntax:
    content: public CloudFileDirectory Parent { get; }
    content.vb: Public ReadOnly Property Parent As CloudFileDirectory
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileDirectory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent*
  implements:
  - Microsoft.WindowsAzure.Storage.File.IListFileItem.Parent
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CloudFileDirectory.Name
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  type: Property
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 175
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nGets the name of the directory.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the name of the directory.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  id: GetFileReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: GetFileReference(String)
  nameWithType: CloudFileDirectory.GetFileReference(String)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetFileReference
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nReturns a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFile\" data-throw-if-not-resolved=\"false\"></xref> object that represents a file in this directory.\n"
  example: []
  syntax:
    content: public CloudFile GetFileReference(string fileName)
    content.vb: Public Function GetFileReference(fileName As String) As CloudFile
    parameters:
    - id: fileName
      type: System.String
      description: A <see cref="!:System.String"></see> containing the name of the file.
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFile
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFile" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  id: GetDirectoryReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: GetDirectoryReference(String)
  nameWithType: CloudFileDirectory.GetDirectoryReference(String)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetDirectoryReference
    path: Lib/Common/File/CloudFileDirectory.Common.cs
    startLine: 221
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nReturns a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> object that represents a subdirectory within this directory.\n"
  example: []
  syntax:
    content: public CloudFileDirectory GetDirectoryReference(string itemName)
    content.vb: Public Function GetDirectoryReference(itemName As String) As CloudFileDirectory
    parameters:
    - id: itemName
      type: System.String
      description: A <see cref="!:System.String"></see> containing the name of the subdirectory.
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileDirectory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync()
  nameWithType: CloudFileDirectory.CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nCreates the directory.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync(FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.CreateAsync(FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nCreates the directory.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync(FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.CreateAsync(FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nCreates the directory.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  nameWithType: CloudFileDirectory.CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nCreates the directory if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory did not already exist and was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.CreateIfNotExistsAsync(FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nCreates the directory if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.CreateIfNotExistsAsync(FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nCreates the directory if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: CloudFileDirectory.DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 152
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nDeletes the directory.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.DeleteAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 164
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nDeletes the directory.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the directory. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.DeleteAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 177
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nDeletes the directory.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the directory. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  nameWithType: CloudFileDirectory.DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 192
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nDeletes the directory if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.DeleteIfExistsAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 205
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nDeletes the directory if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.DeleteIfExistsAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 219
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nDeletes the directory if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  nameWithType: CloudFileDirectory.ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 264
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nChecks existence of the directory.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory exists.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync(FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.ExistsAsync(FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 276
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nChecks existence of the directory.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory exists.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync(FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.ExistsAsync(FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 289
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nChecks existence of the directory.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the directory exists.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  nameWithType: CloudFileDirectory.FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 303
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nPopulates a directory's properties and metadata.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.FetchAttributesAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 315
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nPopulates a directory's properties and metadata.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the file. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An object that represents the context for the current operation.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.FetchAttributesAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 328
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nPopulates a directory's properties and metadata.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the file. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  id: ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken)
  nameWithType: CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListFilesAndDirectoriesSegmentedAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 345
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nReturns a result segment containing a collection of file items \nin the share.\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken currentToken)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(currentToken As FileContinuationToken) As Task(Of FileResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.File.IListFileItem" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListFilesAndDirectoriesSegmentedAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 361
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nReturns a result segment containing a collection of file items \nin the share.\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(int ? maxResults, FileContinuationToken currentToken, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(maxResults As Integer?, currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext) As Task(Of FileResultSegment)
    parameters:
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \nper-operation limit of 5000. If this value is zero, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A file result segment.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync*
  nameWithType.vb: CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ListFilesAndDirectoriesSegmentedAsync(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListFilesAndDirectoriesSegmentedAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 378
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nReturns a result segment containing a collection of file items \nin the share.\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(int ? maxResults, FileContinuationToken currentToken, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(maxResults As Integer?, currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of FileResultSegment)
    parameters:
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \nper-operation limit of 5000. If this value is zero, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A file result segment.
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync*
  nameWithType.vb: CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: ListFilesAndDirectoriesSegmentedAsync(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync
  id: SetMetdataAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetdataAsync()
  nameWithType: CloudFileDirectory.SetMetdataAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetdataAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 397
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nUpdates the directory's metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetdataAsync()
    content.vb: Public Overridable Function SetMetdataAsync As Task
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, FileRequestOptions, OperationContext)
  nameWithType: CloudFileDirectory.SetMetadataAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 409
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nUpdates the directory's metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the directory. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An object that represents the context for the current operation.
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudFileDirectory.SetMetadataAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/File/CloudFileDirectory.cs
    startLine: 422
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\nUpdates the directory's metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the directory. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: Cancellation Token
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileShare
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFileShare
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileShare
  nameWithType: CloudFileShare
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileShare
- uid: Microsoft.WindowsAzure.Storage.File
  commentId: N:Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  nameWithType: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.File.IListFileItem
  commentId: T:Microsoft.WindowsAzure.Storage.File.IListFileItem
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: IListFileItem
  nameWithType: IListFileItem
  fullName: Microsoft.WindowsAzure.Storage.File.IListFileItem
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor
  isExternal: false
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory.CloudFileDirectory
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  commentId: T:Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  commentId: N:Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  nameWithType: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  nameWithType: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileClient
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFileClient
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileClient
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  isExternal: false
  name: ServiceClient
  nameWithType: CloudFileDirectory.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  isExternal: false
  name: Uri
  nameWithType: CloudFileDirectory.Uri
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
- uid: Microsoft.WindowsAzure.Storage.File.IListFileItem.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.File.IListFileItem.Uri
  parent: Microsoft.WindowsAzure.Storage.File.IListFileItem
  isExternal: false
  name: Uri
  nameWithType: IListFileItem.Uri
  fullName: Microsoft.WindowsAzure.Storage.File.IListFileItem.Uri
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  isExternal: false
  name: StorageUri
  nameWithType: CloudFileDirectory.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
- uid: Microsoft.WindowsAzure.Storage.File.IListFileItem.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.File.IListFileItem.StorageUri
  parent: Microsoft.WindowsAzure.Storage.File.IListFileItem
  isExternal: false
  name: StorageUri
  nameWithType: IListFileItem.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.File.IListFileItem.StorageUri
- uid: Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
  commentId: T:Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileDirectoryProperties
  nameWithType: FileDirectoryProperties
  fullName: Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  isExternal: false
  name: Properties
  nameWithType: CloudFileDirectory.Properties
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudFileDirectory.Metadata
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  isExternal: false
  name: Share
  nameWithType: CloudFileDirectory.Share
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
- uid: Microsoft.WindowsAzure.Storage.File.IListFileItem.Share
  commentId: P:Microsoft.WindowsAzure.Storage.File.IListFileItem.Share
  parent: Microsoft.WindowsAzure.Storage.File.IListFileItem
  isExternal: false
  name: Share
  nameWithType: IListFileItem.Share
  fullName: Microsoft.WindowsAzure.Storage.File.IListFileItem.Share
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  isExternal: false
  name: Parent
  nameWithType: CloudFileDirectory.Parent
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
- uid: Microsoft.WindowsAzure.Storage.File.IListFileItem.Parent
  commentId: P:Microsoft.WindowsAzure.Storage.File.IListFileItem.Parent
  parent: Microsoft.WindowsAzure.Storage.File.IListFileItem
  isExternal: false
  name: Parent
  nameWithType: IListFileItem.Parent
  fullName: Microsoft.WindowsAzure.Storage.File.IListFileItem.Parent
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  isExternal: false
  name: Name
  nameWithType: CloudFileDirectory.Name
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.File.CloudFile
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFile
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFile
  nameWithType: CloudFile
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFile
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference
  isExternal: false
  name: GetFileReference
  nameWithType: CloudFileDirectory.GetFileReference
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference
  isExternal: false
  name: GetDirectoryReference
  nameWithType: CloudFileDirectory.GetDirectoryReference
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: CloudFileDirectory.CreateAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.File.FileRequestOptions
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileRequestOptions
  nameWithType: FileRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  isExternal: false
  name: CreateIfNotExistsAsync
  nameWithType: CloudFileDirectory.CreateIfNotExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CloudFileDirectory.DeleteAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  commentId: T:Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  isExternal: false
  name: DeleteIfExistsAsync
  nameWithType: CloudFileDirectory.DeleteIfExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: CloudFileDirectory.ExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  isExternal: false
  name: FetchAttributesAsync
  nameWithType: CloudFileDirectory.FetchAttributesAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync
  isExternal: false
  name: ListFilesAndDirectoriesSegmentedAsync
  nameWithType: CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync
- uid: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
  commentId: T:Microsoft.WindowsAzure.Storage.File.FileContinuationToken
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileContinuationToken
  nameWithType: FileContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
- uid: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}'
  definition: Task`1
  name: Task<FileResultSegment>
  nameWithType: Task<FileResultSegment>
  fullName: Task<Microsoft.WindowsAzure.Storage.File.FileResultSegment>
  nameWithType.vb: Task(Of FileResultSegment)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.File.FileResultSegment)
  name.vb: Task(Of FileResultSegment)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.File.FileResultSegment
    name: FileResultSegment
    nameWithType: FileResultSegment
    fullName: Microsoft.WindowsAzure.Storage.File.FileResultSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.File.FileResultSegment
    name: FileResultSegment
    nameWithType: FileResultSegment
    fullName: Microsoft.WindowsAzure.Storage.File.FileResultSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync
  isExternal: false
  name: SetMetdataAsync
  nameWithType: CloudFileDirectory.SetMetdataAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetdataAsync
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync
  isExternal: false
  name: SetMetadataAsync
  nameWithType: CloudFileDirectory.SetMetadataAsync
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync
