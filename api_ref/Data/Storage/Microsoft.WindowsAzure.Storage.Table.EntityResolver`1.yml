items:
- uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  id: EntityResolver`1
  parent: Microsoft.WindowsAzure.Storage.Table
  children: []
  langs:
  - csharp
  - vb
  name: EntityResolver<T>
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver<T>
  type: Delegate
  source:
    remote:
      path: Lib/Common/Table/EntityResolver.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EntityResolver
    path: Lib/Common/Table/EntityResolver.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns a delegate for resolving entities.\n"
  example: []
  syntax:
    content: public delegate T EntityResolver<T>(string partitionKey, string rowKey, DateTimeOffset timestamp, IDictionary<string, EntityProperty> properties, string etag);
    content.vb: Public Delegate Function EntityResolver(Of T)(partitionKey As String, rowKey As String, timestamp As DateTimeOffset, properties As IDictionary(Of String, EntityProperty), etag As String) As T
    parameters:
    - id: partitionKey
      type: System.String
      description: A string containing the partition key for the entity.
    - id: rowKey
      type: System.String
      description: A string containing the row key for the entity.
    - id: timestamp
      type: DateTimeOffset
      description: A <see cref="!:DateTimeOffset"></see> containing the timestamp for the entity.
    - id: properties
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object containing the properties for the entity.
    - id: etag
      type: System.String
      description: The ETag.
    typeParameters:
    - id: T
      description: The type into which the query results are projected.
    return:
      type: '{T}'
      description: 
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of T)
  name.vb: EntityResolver(Of T)
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
  definition: IDictionary`2
  name: IDictionary<String, EntityProperty>
  fullName: IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>
  fullname.vb: IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty)
  name.vb: IDictionary(Of String, EntityProperty)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
