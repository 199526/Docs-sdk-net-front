items:
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  id: BlobTestBase
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties,BlobProperties)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties,BlobProperties,System.Boolean)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CloudBlob,CloudBlob)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CopyState,CopyState)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.CreateBlobsAsync(CloudBlobContainer,System.Int32,BlobType)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.DownloadTextAsync(CloudBlob,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetBlockIdList(System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerName
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerReference
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.UploadTextAsync(CloudBlob,System.String,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.WaitForCopyAsync(CloudBlob)
  langs:
  - csharp
  - vb
  name: BlobTestBase
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  type: Class
  source:
    remote:
      path: Test/WindowsRuntime/Blob/BlobTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobTestBase
    path: Test/WindowsRuntime/Blob/BlobTestBase.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: 'public class BlobTestBase : TestBase'
    content.vb: >-
      Public Class BlobTestBase
          Inherits TestBase
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.TestBase
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
  - Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  - Microsoft.WindowsAzure.Storage.TestBase.BlobBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.FileBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.TableBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.QueueBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  - Microsoft.WindowsAzure.Storage.TestBase.TargetTenantConfig
  - Microsoft.WindowsAzure.Storage.TestBase.CurrentTenantType
  - Microsoft.WindowsAzure.Storage.TestBase.StorageCredentials
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerName
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerName
  id: GetRandomContainerName
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: GetRandomContainerName()
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerName()
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetRandomContainerName
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static string GetRandomContainerName()
    content.vb: Public Shared Function GetRandomContainerName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerReference
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerReference
  id: GetRandomContainerReference
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: GetRandomContainerReference()
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetRandomContainerReference()
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetRandomContainerReference
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static CloudBlobContainer GetRandomContainerReference()
    content.vb: Public Shared Function GetRandomContainerReference As CloudBlobContainer
    return:
      type: CloudBlobContainer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetBlockIdList(System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetBlockIdList(System.Int32)
  id: GetBlockIdList(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: GetBlockIdList(Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.GetBlockIdList(System.Int32)
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlockIdList
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static List<string> GetBlockIdList(int count)
    content.vb: Public Shared Function GetBlockIdList(count As Integer) As List(Of String)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: List{System.String}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CloudBlob,CloudBlob)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CloudBlob,CloudBlob)
  id: AssertAreEqual(CloudBlob,CloudBlob)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: AssertAreEqual(CloudBlob, CloudBlob)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CloudBlob, CloudBlob)
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertAreEqual
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static void AssertAreEqual(CloudBlob expected, CloudBlob actual)
    content.vb: Public Shared Sub AssertAreEqual(expected As CloudBlob, actual As CloudBlob)
    parameters:
    - id: expected
      type: CloudBlob
    - id: actual
      type: CloudBlob
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties,BlobProperties)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties,BlobProperties)
  id: AssertAreEqual(BlobProperties,BlobProperties)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: AssertAreEqual(BlobProperties, BlobProperties)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties, BlobProperties)
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertAreEqual
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static void AssertAreEqual(BlobProperties expected, BlobProperties actual)
    content.vb: Public Shared Sub AssertAreEqual(expected As BlobProperties, actual As BlobProperties)
    parameters:
    - id: expected
      type: BlobProperties
    - id: actual
      type: BlobProperties
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties,BlobProperties,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties,BlobProperties,System.Boolean)
  id: AssertAreEqual(BlobProperties,BlobProperties,System.Boolean)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: AssertAreEqual(BlobProperties, BlobProperties, Boolean)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(BlobProperties, BlobProperties, System.Boolean)
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertAreEqual
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static void AssertAreEqual(BlobProperties expected, BlobProperties actual, bool checkContentMD5)
    content.vb: Public Shared Sub AssertAreEqual(expected As BlobProperties, actual As BlobProperties, checkContentMD5 As Boolean)
    parameters:
    - id: expected
      type: BlobProperties
    - id: actual
      type: BlobProperties
    - id: checkContentMD5
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CopyState,CopyState)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CopyState,CopyState)
  id: AssertAreEqual(CopyState,CopyState)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: AssertAreEqual(CopyState, CopyState)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.AssertAreEqual(CopyState, CopyState)
  type: Method
  source:
    remote:
      path: Test/Common/Blob/BlobTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertAreEqual
    path: Test/Common/Blob/BlobTestBase.Common.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static void AssertAreEqual(CopyState expected, CopyState actual)
    content.vb: Public Shared Sub AssertAreEqual(expected As CopyState, actual As CopyState)
    parameters:
    - id: expected
      type: CopyState
    - id: actual
      type: CopyState
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.WaitForCopyAsync(CloudBlob)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.WaitForCopyAsync(CloudBlob)
  id: WaitForCopyAsync(CloudBlob)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: WaitForCopyAsync(CloudBlob)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.WaitForCopyAsync(CloudBlob)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/Blob/BlobTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WaitForCopyAsync
    path: Test/WindowsRuntime/Blob/BlobTestBase.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static Task WaitForCopyAsync(CloudBlob blob)
    content.vb: Public Shared Function WaitForCopyAsync(blob As CloudBlob) As Task
    parameters:
    - id: blob
      type: CloudBlob
    return:
      type: Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.CreateBlobsAsync(CloudBlobContainer,System.Int32,BlobType)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.CreateBlobsAsync(CloudBlobContainer,System.Int32,BlobType)
  id: CreateBlobsAsync(CloudBlobContainer,System.Int32,BlobType)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: CreateBlobsAsync(CloudBlobContainer, Int32, BlobType)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.CreateBlobsAsync(CloudBlobContainer, System.Int32, BlobType)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/Blob/BlobTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateBlobsAsync
    path: Test/WindowsRuntime/Blob/BlobTestBase.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static Task<List<string>> CreateBlobsAsync(CloudBlobContainer container, int count, BlobType type)
    content.vb: Public Shared Function CreateBlobsAsync(container As CloudBlobContainer, count As Integer, type As BlobType) As Task(Of List(Of String))
    parameters:
    - id: container
      type: CloudBlobContainer
    - id: count
      type: System.Int32
    - id: type
      type: BlobType
    return:
      type: Task{List{System.String}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.UploadTextAsync(CloudBlob,System.String,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.UploadTextAsync(CloudBlob,System.String,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadTextAsync(CloudBlob,System.String,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: UploadTextAsync(CloudBlob, String, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.UploadTextAsync(CloudBlob, System.String, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/Blob/BlobTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadTextAsync
    path: Test/WindowsRuntime/Blob/BlobTestBase.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static Task UploadTextAsync(CloudBlob blob, string text, Encoding encoding, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Shared Function UploadTextAsync(blob As CloudBlob, text As String, encoding As Encoding, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Task
    parameters:
    - id: blob
      type: CloudBlob
    - id: text
      type: System.String
    - id: encoding
      type: Encoding
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.DownloadTextAsync(CloudBlob,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.DownloadTextAsync(CloudBlob,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  id: DownloadTextAsync(CloudBlob,Encoding,AccessCondition,BlobRequestOptions,OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase
  langs:
  - csharp
  - vb
  name: DownloadTextAsync(CloudBlob, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobTestBase.DownloadTextAsync(CloudBlob, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/Blob/BlobTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadTextAsync
    path: Test/WindowsRuntime/Blob/BlobTestBase.cs
    startLine: 109
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Blob
  syntax:
    content: public static Task<string> DownloadTextAsync(CloudBlob blob, Encoding encoding, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Shared Function DownloadTextAsync(blob As CloudBlob, encoding As Encoding, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Task(Of String)
    parameters:
    - id: blob
      type: CloudBlob
    - id: encoding
      type: Encoding
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: Task{System.String}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.TestBase
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: TestBase
  fullName: Microsoft.WindowsAzure.Storage.TestBase
- uid: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: true
  name: GetRandomBuffer(Int32)
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
    name: GetRandomBuffer
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
    name: GetRandomBuffer
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: AssertSecondaryEndpoint()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
    name: AssertSecondaryEndpoint
    fullName: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
    name: AssertSecondaryEndpoint
    fullName: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.BlobBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: BlobBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.BlobBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.FileBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: FileBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.FileBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.TableBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: TableBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.TableBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.QueueBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: QueueBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.QueueBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudTableClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
    name: GenerateCloudTableClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
    name: GenerateCloudTableClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudBlobClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
    name: GenerateCloudBlobClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
    name: GenerateCloudBlobClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudFileClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
    name: GenerateCloudFileClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
    name: GenerateCloudFileClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudQueueClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
    name: GenerateCloudQueueClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
    name: GenerateCloudQueueClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.TargetTenantConfig
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: TargetTenantConfig
  fullName: Microsoft.WindowsAzure.Storage.TestBase.TargetTenantConfig
- uid: Microsoft.WindowsAzure.Storage.TestBase.CurrentTenantType
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: CurrentTenantType
  fullName: Microsoft.WindowsAzure.Storage.TestBase.CurrentTenantType
- uid: Microsoft.WindowsAzure.Storage.TestBase.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.TestBase.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: CloudBlobContainer
  isExternal: true
  name: CloudBlobContainer
  fullName: CloudBlobContainer
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: List{System.String}
  definition: List`1
  name: List<String>
  fullName: List<System.String>
  fullname.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  fullName: List<>
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: CloudBlob
  isExternal: true
  name: CloudBlob
  fullName: CloudBlob
- uid: BlobProperties
  isExternal: true
  name: BlobProperties
  fullName: BlobProperties
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: CopyState
  isExternal: true
  name: CopyState
  fullName: CopyState
- uid: Task
  isExternal: true
  name: Task
  fullName: Task
- uid: BlobType
  isExternal: true
  name: BlobType
  fullName: BlobType
- uid: Task{List{System.String}}
  definition: Task`1
  name: Task<List<String>>
  fullName: Task<List<System.String>>
  fullname.vb: Task(Of List(Of System.String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  fullName: Task<>
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Encoding
  isExternal: true
  name: Encoding
  fullName: Encoding
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  fullName: AccessCondition
- uid: BlobRequestOptions
  isExternal: true
  name: BlobRequestOptions
  fullName: BlobRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  fullName: OperationContext
- uid: Task{System.String}
  definition: Task`1
  name: Task<String>
  fullName: Task<System.String>
  fullname.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
