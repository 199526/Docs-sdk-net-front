### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  id: QueueHttpResponseParsers
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(HttpResponseMessage)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(HttpResponseMessage)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(Stream)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(Stream)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  langs:
  - csharp
  - vb
  name: QueueHttpResponseParsers
  nameWithType: QueueHttpResponseParsers
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: QueueHttpResponseParsers
    path: Lib/WindowsRuntime/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  syntax:
    content: 'public static class QueueHttpResponseParsers : object'
    content.vb: >-
      Public Module QueueHttpResponseParsers
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(Stream)
  id: ReadServiceProperties(Stream)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadServiceProperties(Stream)
  nameWithType: QueueHttpResponseParsers.ReadServiceProperties(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(Stream)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadServiceProperties
    path: Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nReads service properties from a stream.\n"
  example: []
  syntax:
    content: public static ServiceProperties ReadServiceProperties(Stream inputStream)
    content.vb: Public Shared Function ReadServiceProperties(inputStream As Stream) As ServiceProperties
    parameters:
    - id: inputStream
      type: Stream
      description: The stream from which to read the service properties.
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
      description: The service properties stored in the stream.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(Stream)
  id: ReadServiceStats(Stream)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadServiceStats(Stream)
  nameWithType: QueueHttpResponseParsers.ReadServiceStats(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(Stream)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadServiceStats
    path: Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nReads service stats from a stream.\n"
  example: []
  syntax:
    content: public static ServiceStats ReadServiceStats(Stream inputStream)
    content.vb: Public Shared Function ReadServiceStats(inputStream As Stream) As ServiceStats
    parameters:
    - id: inputStream
      type: Stream
      description: The stream from which to read the service stats.
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
      description: The service stats stored in the stream.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  id: ReadSharedAccessIdentifiers(Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadSharedAccessIdentifiers(Stream, QueuePermissions)
  nameWithType: QueueHttpResponseParsers.ReadSharedAccessIdentifiers(Stream, QueuePermissions)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(Stream, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadSharedAccessIdentifiers
    path: Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nReads the share access policies from a stream in XML.\n"
  example: []
  syntax:
    content: public static void ReadSharedAccessIdentifiers(Stream inputStream, QueuePermissions permissions)
    content.vb: Public Shared Sub ReadSharedAccessIdentifiers(inputStream As Stream, permissions As QueuePermissions)
    parameters:
    - id: inputStream
      type: Stream
      description: The stream of XML policies.
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: The permissions object to which the policies are to be written.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(HttpResponseMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(HttpResponseMessage)
  id: GetApproximateMessageCount(HttpResponseMessage)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetApproximateMessageCount(HttpResponseMessage)
  nameWithType: QueueHttpResponseParsers.GetApproximateMessageCount(HttpResponseMessage)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetApproximateMessageCount
    path: Lib/WindowsRuntime/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the approximate message count for the queue.\n"
  example: []
  syntax:
    content: public static string GetApproximateMessageCount(HttpResponseMessage response)
    content.vb: Public Shared Function GetApproximateMessageCount(response As HttpResponseMessage) As String
    parameters:
    - id: response
      type: HttpResponseMessage
      description: The web response.
    return:
      type: System.String
      description: The approximate count for the queue.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(HttpResponseMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(HttpResponseMessage)
  id: GetMetadata(HttpResponseMessage)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetMetadata(HttpResponseMessage)
  nameWithType: QueueHttpResponseParsers.GetMetadata(HttpResponseMessage)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMetadata
    path: Lib/WindowsRuntime/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the user-defined metadata.\n"
  example: []
  syntax:
    content: public static IDictionary<string, string> GetMetadata(HttpResponseMessage response)
    content.vb: Public Shared Function GetMetadata(response As HttpResponseMessage) As IDictionary(Of String, String)
    parameters:
    - id: response
      type: HttpResponseMessage
      description: The response from server.
    return:
      type: IDictionary{System.String,System.String}
      description: A <see cref="!:IDictionary"></see> of the metadata.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties
  isExternal: false
  name: ReadServiceProperties
  nameWithType: QueueHttpResponseParsers.ReadServiceProperties
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceProperties
  nameWithType: ServiceProperties
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats
  isExternal: false
  name: ReadServiceStats
  nameWithType: QueueHttpResponseParsers.ReadServiceStats
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceStats
  nameWithType: ServiceStats
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers
  isExternal: false
  name: ReadSharedAccessIdentifiers
  nameWithType: QueueHttpResponseParsers.ReadSharedAccessIdentifiers
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: QueuePermissions
  nameWithType: QueuePermissions
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount
  isExternal: false
  name: GetApproximateMessageCount
  nameWithType: QueueHttpResponseParsers.GetApproximateMessageCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount
- uid: HttpResponseMessage
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata
  isExternal: false
  name: GetMetadata
  nameWithType: QueueHttpResponseParsers.GetMetadata
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
