### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
  commentId: T:Microsoft.WindowsAzure.Storage.Table.CloudTable
  id: CloudTable
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Uri)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.Name
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString
  - Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri
  langs:
  - csharp
  - vb
  name: CloudTable
  nameWithType: CloudTable
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CloudTable
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nRepresents a Microsoft Azure table.\n"
  example: []
  syntax:
    content: 'public class CloudTable : object'
    content.vb: >-
      Public Class CloudTable
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CloudTable(Uri)
  nameWithType: CloudTable.CloudTable(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CloudTable(Uri)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudTable(Uri tableAddress)
    content.vb: Public Sub New(tableAddress As Uri)
    parameters:
    - id: tableAddress
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CloudTable(Uri, StorageCredentials)
  nameWithType: CloudTable.CloudTable(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CloudTable(Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudTable(Uri tableAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(tableAbsoluteUri As Uri, credentials As StorageCredentials)
    parameters:
    - id: tableAbsoluteUri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the table.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CloudTable(StorageUri, StorageCredentials)
  nameWithType: CloudTable.CloudTable(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CloudTable(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudTable(StorageUri tableAddress, StorageCredentials credentials)
    content.vb: Public Sub New(tableAddress As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: tableAddress
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri" data-throw-if-not-resolved="false"></xref> containing the absolute URI to the table at both the primary and secondary locations.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ServiceClient
  nameWithType: CloudTable.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient
  type: Property
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServiceClient
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTableClient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Table service.\n"
  example: []
  syntax:
    content: public CloudTableClient ServiceClient { get; }
    content.vb: Public ReadOnly Property ServiceClient As CloudTableClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.CloudTableClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.CloudTableClient" data-throw-if-not-resolved="false"></xref> object .
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Table.CloudTable.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CloudTable.Name
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.Name
  type: Property
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the name of the table.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: CloudTable.Uri
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri
  type: Property
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Uri
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the table URI for the primary location.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the table at the primary location.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: StorageUri
  nameWithType: CloudTable.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StorageUri
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the table's URIs for both the primary and secondary locations.\n"
  example: []
  syntax:
    content: public StorageUri StorageUri { get; }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri" data-throw-if-not-resolved="false"></xref> containing the table's URIs for both the primary and secondary locations.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessTablePolicy)
  nameWithType: CloudTable.GetSharedAccessSignature(SharedAccessTablePolicy)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns a shared access signature for the table.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessTablePolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessTablePolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessTablePolicy, String)
  nameWithType: CloudTable.GetSharedAccessSignature(SharedAccessTablePolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns a shared access signature for the table.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessTablePolicy policy, string accessPolicyIdentifier)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessTablePolicy, accessPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessTablePolicy, String, String, String, String, String)
  nameWithType: CloudTable.GetSharedAccessSignature(SharedAccessTablePolicy, String, String, String, String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 156
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns a shared access signature for the table.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessTablePolicy policy, string accessPolicyIdentifier, string startPartitionKey, string startRowKey, string endPartitionKey, string endRowKey)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessTablePolicy, accessPolicyIdentifier As String, startPartitionKey As String, startRowKey As String, endPartitionKey As String, endRowKey As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: startPartitionKey
      type: System.String
      description: A string specifying the start partition key, or <code>null</code>.
    - id: startRowKey
      type: System.String
      description: A string specifying the start row key, or <code>null</code>.
    - id: endPartitionKey
      type: System.String
      description: A string specifying the end partition key, or <code>null</code>.
    - id: endRowKey
      type: System.String
      description: A string specifying the end row key, or <code>null</code>.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy,System.String,System.String,System.String,System.String,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessTablePolicy, String, String, String, String, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  nameWithType: CloudTable.GetSharedAccessSignature(SharedAccessTablePolicy, String, String, String, String, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy, System.String, System.String, System.String, System.String, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 181
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns a shared access signature for the table.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessTablePolicy policy, string accessPolicyIdentifier, string startPartitionKey, string startRowKey, string endPartitionKey, string endRowKey, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessTablePolicy, accessPolicyIdentifier As String, startPartitionKey As String, startRowKey As String, endPartitionKey As String, endRowKey As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: startPartitionKey
      type: System.String
      description: A string specifying the start partition key, or <code>null</code>.
    - id: startRowKey
      type: System.String
      description: A string specifying the start row key, or <code>null</code>.
    - id: endPartitionKey
      type: System.String
      description: A string specifying the end partition key, or <code>null</code>.
    - id: endRowKey
      type: System.String
      description: A string specifying the end row key, or <code>null</code>.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature*
  nameWithType.vb: CloudTable.GetSharedAccessSignature(SharedAccessTablePolicy, String, String, String, String, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessTablePolicy, String, String, String, String, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString
  id: ToString
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CloudTable.ToString()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString()
  type: Method
  source:
    remote:
      path: Lib/Common/Table/CloudTable.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ToString
    path: Lib/Common/Table/CloudTable.Common.cs
    startLine: 234
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nReturns the name of the table.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string containing the name of the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation)
  id: ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TableOperation)
  nameWithType: CloudTable.ExecuteAsync(TableOperation)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes the operation on a table.\n"
  example: []
  syntax:
    content: public virtual Task<TableResult> ExecuteAsync(TableOperation operation)
    content.vb: Public Overridable Function ExecuteAsync(operation As TableOperation) As Task(Of TableResult)
    parameters:
    - id: operation
      type: Microsoft.WindowsAzure.Storage.Table.TableOperation
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableOperation" data-throw-if-not-resolved="false"></xref> object that represents the operation to perform.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableResult}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> containing the result of executing the operation on the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TableOperation, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExecuteAsync(TableOperation, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes the operation on a table, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual Task<TableResult> ExecuteAsync(TableOperation operation, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function ExecuteAsync(operation As TableOperation, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableResult)
    parameters:
    - id: operation
      type: Microsoft.WindowsAzure.Storage.Table.TableOperation
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableOperation" data-throw-if-not-resolved="false"></xref> object that represents the operation to perform.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableResult}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> containing the result of executing the operation on the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TableOperation, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExecuteAsync(TableOperation, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync(Microsoft.WindowsAzure.Storage.Table.TableOperation, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes the operation on a table, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task<TableResult> ExecuteAsync(TableOperation operation, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Function ExecuteAsync(operation As TableOperation, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableResult)
    parameters:
    - id: operation
      type: Microsoft.WindowsAzure.Storage.Table.TableOperation
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableOperation" data-throw-if-not-resolved="false"></xref> object that represents the operation to perform.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableResult}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> containing the result of executing the operation on the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation)
  id: ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteBatchAsync(TableBatchOperation)
  nameWithType: CloudTable.ExecuteBatchAsync(TableBatchOperation)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteBatchAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a batch operation on a table as an atomic operation.\n"
  example: []
  syntax:
    content: public Task<IList<TableResult>> ExecuteBatchAsync(TableBatchOperation batch)
    content.vb: Public Function ExecuteBatchAsync(batch As TableBatchOperation) As Task(Of IList(Of TableResult))
    parameters:
    - id: batch
      type: Microsoft.WindowsAzure.Storage.Table.TableBatchOperation
      description: The <xref href="Microsoft.WindowsAzure.Storage.Table.TableBatchOperation" data-throw-if-not-resolved="false"></xref> object representing the operations to execute on the table.
    return:
      type: Task{IList{Microsoft.WindowsAzure.Storage.Table.TableResult}}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> objects that contains the results, in order, of each operation in the <xref href="Microsoft.WindowsAzure.Storage.Table.TableBatchOperation" data-throw-if-not-resolved="false"></xref> on the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteBatchAsync(TableBatchOperation, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExecuteBatchAsync(TableBatchOperation, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteBatchAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a batch operation on a table as an atomic operation, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task<IList<TableResult>> ExecuteBatchAsync(TableBatchOperation batch, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Function ExecuteBatchAsync(batch As TableBatchOperation, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of IList(Of TableResult))
    parameters:
    - id: batch
      type: Microsoft.WindowsAzure.Storage.Table.TableBatchOperation
      description: The <xref href="Microsoft.WindowsAzure.Storage.Table.TableBatchOperation" data-throw-if-not-resolved="false"></xref> object representing the operations to execute on the table.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{IList{Microsoft.WindowsAzure.Storage.Table.TableResult}}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> objects that contains the results, in order, of each operation in the <xref href="Microsoft.WindowsAzure.Storage.Table.TableBatchOperation" data-throw-if-not-resolved="false"></xref> on the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteBatchAsync(TableBatchOperation, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExecuteBatchAsync(TableBatchOperation, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteBatchAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a batch operation on a table as an atomic operation, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual Task<IList<TableResult>> ExecuteBatchAsync(TableBatchOperation batch, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExecuteBatchAsync(batch As TableBatchOperation, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IList(Of TableResult))
    parameters:
    - id: batch
      type: Microsoft.WindowsAzure.Storage.Table.TableBatchOperation
      description: The <xref href="Microsoft.WindowsAzure.Storage.Table.TableBatchOperation" data-throw-if-not-resolved="false"></xref> object representing the operations to execute on the table.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{IList{Microsoft.WindowsAzure.Storage.Table.TableResult}}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> objects that contains the results, in order, of each operation in the <xref href="Microsoft.WindowsAzure.Storage.Table.TableBatchOperation" data-throw-if-not-resolved="false"></xref> on the table.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  id: ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync(TableQuery, TableContinuationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync(TableQuery, TableContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 140
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query in segmented mode with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token.\n"
  example: []
  syntax:
    content: public virtual Task<TableQuerySegment> ExecuteQuerySegmentedAsync(TableQuery query, TableContinuationToken token)
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(query As TableQuery, token As TableContinuationToken) As Task(Of TableQuerySegment)
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <see cref="!:ResultContinuation"></see> object representing a continuation token from the server when the operation returns a partial result.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment" data-throw-if-not-resolved="false"></xref> object containing the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync(TableQuery, TableContinuationToken, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync(TableQuery, TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 154
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query in segmented mode with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual Task<TableQuerySegment> ExecuteQuerySegmentedAsync(TableQuery query, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(query As TableQuery, token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableQuerySegment)
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <see cref="!:ResultContinuation"></see> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment" data-throw-if-not-resolved="false"></xref> object containing the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync(TableQuery, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync(TableQuery, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 169
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query in segmented mode with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual Task<TableQuerySegment> ExecuteQuerySegmentedAsync(TableQuery query, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(query As TableQuery, token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableQuerySegment)
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <see cref="!:ResultContinuation"></see> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment" data-throw-if-not-resolved="false"></xref> object containing the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CreateAsync()
  nameWithType: CloudTable.CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 182
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreates the Table.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: Task
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CreateAsync(TableRequestOptions, OperationContext)
  nameWithType: CloudTable.CreateAsync(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 195
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreates the Table.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(requestOptions As TableRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CreateAsync(TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.CreateAsync(TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreates the Table.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  nameWithType: CloudTable.CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 231
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreates the table if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires list permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if table was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(TableRequestOptions, OperationContext)
  nameWithType: CloudTable.CreateIfNotExistsAsync(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 244
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreates the table if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires list permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if table was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.CreateIfNotExistsAsync(TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 258
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreates the table if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires list permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if table was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: CloudTable.DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 308
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeletes the Table.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: DeleteAsync(TableRequestOptions, OperationContext)
  nameWithType: CloudTable.DeleteAsync(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 320
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeletes the Table.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(requestOptions As TableRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: DeleteAsync(TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.DeleteAsync(TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 333
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeletes the Table.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  nameWithType: CloudTable.DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 354
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeletes the table if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the table already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(TableRequestOptions, OperationContext)
  nameWithType: CloudTable.DeleteIfExistsAsync(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 366
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeletes the table if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the table already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.DeleteIfExistsAsync(TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 379
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeletes the table if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the table already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  nameWithType: CloudTable.ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 429
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nChecks existence of the table.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the table exists.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExistsAsync(TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExistsAsync(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 441
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nChecks existence of the table.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the table exists.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExistsAsync(TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExistsAsync(TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 454
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nChecks existence of the table.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the table exists.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(TablePermissions)
  nameWithType: CloudTable.SetPermissionsAsync(TablePermissions)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 496
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nSets permissions for the Table.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(TablePermissions permissions)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As TablePermissions) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Table.TablePermissions
      description: The permissions to apply to the Table.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(TablePermissions, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.SetPermissionsAsync(TablePermissions, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 509
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nSets permissions for the Table.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(TablePermissions permissions, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As TablePermissions, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Table.TablePermissions
      description: The permissions to apply to the Table.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task
      description: An <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(TablePermissions, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.SetPermissionsAsync(TablePermissions, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TablePermissions, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 523
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nSets permissions for the Table.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(TablePermissions permissions, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As TablePermissions, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Table.TablePermissions
      description: The permissions to apply to the Table.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync
  id: GetPermissionsAsync
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync()
  nameWithType: CloudTable.GetPermissionsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 567
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the permissions settings for the Table.\n"
  example: []
  syntax:
    content: public virtual Task<TablePermissions> GetPermissionsAsync()
    content.vb: Public Overridable Function GetPermissionsAsync As Task(Of TablePermissions)
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TablePermissions}
      description: The Table's permissions.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(TableRequestOptions, OperationContext)
  nameWithType: CloudTable.GetPermissionsAsync(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 579
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the permissions settings for the Table.\n"
  example: []
  syntax:
    content: public virtual Task<TablePermissions> GetPermissionsAsync(TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function GetPermissionsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TablePermissions)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TablePermissions}
      description: The Table's permissions.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.GetPermissionsAsync(TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 592
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets the permissions settings for the Table.\n"
  example: []
  syntax:
    content: public virtual Task<TablePermissions> GetPermissionsAsync(TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TablePermissions)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TablePermissions}
      description: The Table's permissions.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  id: ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<T>(TableQuery<T>, TableContinuationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<T>(TableQuery<T>, TableContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<T>(Microsoft.WindowsAzure.Storage.Table.TableQuery<T>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 643
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> query and <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token.\n"
  example: []
  syntax:
    content: 'public virtual Task<TableQuerySegment<T>> ExecuteQuerySegmentedAsync<T>(TableQuery<T> query, TableContinuationToken token)where T : ITableEntity, new ()'
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of T As {ITableEntity, New})(query As TableQuery(Of T), token As TableContinuationToken) As Task(Of TableQuerySegment(Of T))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery%601" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    typeParameters:
    - id: T
      description: The entity type of the query.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{T}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> object containing the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of T)(TableQuery(Of T), TableContinuationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of T)(Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  name.vb: ExecuteQuerySegmentedAsync(Of T)(TableQuery(Of T), TableContinuationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<T>(TableQuery<T>, TableContinuationToken, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<T>(TableQuery<T>, TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<T>(Microsoft.WindowsAzure.Storage.Table.TableQuery<T>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 659
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> query, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> options, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> context.\n"
  example: []
  syntax:
    content: 'public virtual Task<TableQuerySegment<T>> ExecuteQuerySegmentedAsync<T>(TableQuery<T> query, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext)where T : ITableEntity, new ()'
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of T As {ITableEntity, New})(query As TableQuery(Of T), token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableQuerySegment(Of T))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery%601" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    typeParameters:
    - id: T
      description: The entity type of the query.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{T}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> object containing the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of T)(TableQuery(Of T), TableContinuationToken, TableRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of T)(Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ExecuteQuerySegmentedAsync(Of T)(TableQuery(Of T), TableContinuationToken, TableRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<T>(TableQuery<T>, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<T>(TableQuery<T>, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<T>(Microsoft.WindowsAzure.Storage.Table.TableQuery<T>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 676
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> query, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> options, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> context.\n"
  example: []
  syntax:
    content: 'public virtual Task<TableQuerySegment<T>> ExecuteQuerySegmentedAsync<T>(TableQuery<T> query, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)where T : ITableEntity, new ()'
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of T As {ITableEntity, New})(query As TableQuery(Of T), token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of T))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery%601" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    typeParameters:
    - id: T
      description: The entity type of the query.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{T}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> object containing the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of T)(TableQuery(Of T), TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of T)(Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: ExecuteQuerySegmentedAsync(Of T)(TableQuery(Of T), TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  id: ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T>, EntityResolver<TResult>, TableContinuationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T>, EntityResolver<TResult>, TableContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<T, TResult>(Microsoft.WindowsAzure.Storage.Table.TableQuery<T>, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 693
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> query and <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, and applies the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityResolver%601\" data-throw-if-not-resolved=\"false\"></xref> to the result.\n"
  example: []
  syntax:
    content: 'public virtual Task<TableQuerySegment<TResult>> ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T> query, EntityResolver<TResult> resolver, TableContinuationToken token)where T : ITableEntity, new ()'
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of T As {ITableEntity, New}, TResult)(query As TableQuery(Of T), resolver As EntityResolver(Of TResult), token As TableContinuationToken) As Task(Of TableQuerySegment(Of TResult))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery%601" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
      description: An <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> instance which creates a projection of the table query result entities into the specified type <code>TResult</code>.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    typeParameters:
    - id: T
      description: The entity type of the query.
    - id: TResult
      description: The type into which the <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> will project the query results.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> containing the projection into type <code>TResult</code> of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of T, TResult)(TableQuery(Of T), EntityResolver(Of TResult), TableContinuationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of T, TResult)(Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T), Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  name.vb: ExecuteQuerySegmentedAsync(Of T, TResult)(TableQuery(Of T), EntityResolver(Of TResult), TableContinuationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T>, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T>, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<T, TResult>(Microsoft.WindowsAzure.Storage.Table.TableQuery<T>, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 711
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> query, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> options, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> context, and applies the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityResolver%601\" data-throw-if-not-resolved=\"false\"></xref> to the result.\n"
  example: []
  syntax:
    content: 'public virtual Task<TableQuerySegment<TResult>> ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T> query, EntityResolver<TResult> resolver, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext)where T : ITableEntity, new ()'
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of T As {ITableEntity, New}, TResult)(query As TableQuery(Of T), resolver As EntityResolver(Of TResult), token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableQuerySegment(Of TResult))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery%601" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
      description: An <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> instance which creates a projection of the table query result entities into the specified type <code>TResult</code>.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    typeParameters:
    - id: T
      description: The entity type of the query.
    - id: TResult
      description: The type into which the <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> will project the query results.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> containing the projection into type <code>TResult</code> of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of T, TResult)(TableQuery(Of T), EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of T, TResult)(Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T), Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ExecuteQuerySegmentedAsync(Of T, TResult)(TableQuery(Of T), EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExecuteQuerySegmentedAsync``2(Microsoft.WindowsAzure.Storage.Table.TableQuery{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T>, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T>, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<T, TResult>(Microsoft.WindowsAzure.Storage.Table.TableQuery<T>, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 730
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> query, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> options, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> context, and applies the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityResolver%601\" data-throw-if-not-resolved=\"false\"></xref> to the result.\n"
  example: []
  syntax:
    content: 'public virtual Task<TableQuerySegment<TResult>> ExecuteQuerySegmentedAsync<T, TResult>(TableQuery<T> query, EntityResolver<TResult> resolver, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)where T : ITableEntity, new ()'
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of T As {ITableEntity, New}, TResult)(query As TableQuery(Of T), resolver As EntityResolver(Of TResult), token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of TResult))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery%601" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
      description: An <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> instance which creates a projection of the table query result entities into the specified type <code>TResult</code>.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    typeParameters:
    - id: T
      description: The entity type of the query.
    - id: TResult
      description: The type into which the <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> will project the query results.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> containing the projection into type <code>TResult</code> of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of T, TResult)(TableQuery(Of T), EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of T, TResult)(Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T), Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: ExecuteQuerySegmentedAsync(Of T, TResult)(TableQuery(Of T), EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  id: ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<TResult>(TableQuery, EntityResolver<TResult>, TableContinuationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<TResult>(TableQuery, EntityResolver<TResult>, TableContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<TResult>(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 747
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, and applies the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityResolver%601\" data-throw-if-not-resolved=\"false\"></xref> to the result.\n"
  example: []
  syntax:
    content: public virtual Task<TableQuerySegment<TResult>> ExecuteQuerySegmentedAsync<TResult>(TableQuery query, EntityResolver<TResult> resolver, TableContinuationToken token)
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of TResult)(query As TableQuery, resolver As EntityResolver(Of TResult), token As TableContinuationToken) As Task(Of TableQuerySegment(Of TResult))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
      description: An <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> instance which creates a projection of the table query result entities into the specified type <code>TResult</code>.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    typeParameters:
    - id: TResult
      description: The type into which the <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> will project the query results.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> containing the projection into type <code>TResult</code> of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of TResult)(TableQuery, EntityResolver(Of TResult), TableContinuationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of TResult)(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  name.vb: ExecuteQuerySegmentedAsync(Of TResult)(TableQuery, EntityResolver(Of TResult), TableContinuationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<TResult>(TableQuery, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<TResult>(TableQuery, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<TResult>(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 764
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> options, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> context, and applies the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityResolver%601\" data-throw-if-not-resolved=\"false\"></xref> to the result.\n"
  example: []
  syntax:
    content: public virtual Task<TableQuerySegment<TResult>> ExecuteQuerySegmentedAsync<TResult>(TableQuery query, EntityResolver<TResult> resolver, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of TResult)(query As TableQuery, resolver As EntityResolver(Of TResult), token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableQuerySegment(Of TResult))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
      description: An <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> instance which creates a projection of the table query result entities into the specified type <code>TResult</code>.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    typeParameters:
    - id: TResult
      description: The type into which the <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> will project the query results.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> containing the projection into type <code>TResult</code> of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of TResult)(TableQuery, EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of TResult)(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ExecuteQuerySegmentedAsync(Of TResult)(TableQuery, EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExecuteQuerySegmentedAsync``1(Microsoft.WindowsAzure.Storage.Table.TableQuery,Microsoft.WindowsAzure.Storage.Table.EntityResolver{``0},Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.CloudTable
  langs:
  - csharp
  - vb
  name: ExecuteQuerySegmentedAsync<TResult>(TableQuery, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync<TResult>(TableQuery, EntityResolver<TResult>, TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync<TResult>(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>, Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Table/CloudTable.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteQuerySegmentedAsync
    path: Lib/WindowsRuntime/Table/CloudTable.cs
    startLine: 782
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nExecutes a query asynchronously in segmented mode, using the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> continuation token, <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> options, and <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> context, and applies the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityResolver%601\" data-throw-if-not-resolved=\"false\"></xref> to the result.\n"
  example: []
  syntax:
    content: public virtual Task<TableQuerySegment<TResult>> ExecuteQuerySegmentedAsync<TResult>(TableQuery query, EntityResolver<TResult> resolver, TableContinuationToken token, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExecuteQuerySegmentedAsync(Of TResult)(query As TableQuery, resolver As EntityResolver(Of TResult), token As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of TResult))
    parameters:
    - id: query
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> representing the query to execute.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
      description: An <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> instance which creates a projection of the table query result entities into the specified type <code>TResult</code>.
    - id: token
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object representing a continuation token from the server when the operation returns a partial result.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies execution options, such as retry policy and timeout settings, for the operation.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    typeParameters:
    - id: TResult
      description: The type into which the <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver%601" data-throw-if-not-resolved="false"></xref> will project the query results.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment%601" data-throw-if-not-resolved="false"></xref> containing the projection into type <code>TResult</code> of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  nameWithType.vb: CloudTable.ExecuteQuerySegmentedAsync(Of TResult)(TableQuery, EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync(Of TResult)(Microsoft.WindowsAzure.Storage.Table.TableQuery, Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult), Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: ExecuteQuerySegmentedAsync(Of TResult)(TableQuery, EntityResolver(Of TResult), TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
  commentId: T:Microsoft.WindowsAzure.Storage.Table.CloudTable
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: CloudTable
  nameWithType: CloudTable
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.#ctor
  isExternal: false
  name: CloudTable
  nameWithType: CloudTable.CloudTable
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CloudTable
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  commentId: T:Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  commentId: N:Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  nameWithType: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  nameWithType: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTableClient
  commentId: T:Microsoft.WindowsAzure.Storage.Table.CloudTableClient
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: CloudTableClient
  nameWithType: CloudTableClient
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTableClient
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient
  isExternal: false
  name: ServiceClient
  nameWithType: CloudTable.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ServiceClient
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.Name
  isExternal: false
  name: Name
  nameWithType: CloudTable.Name
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri
  isExternal: false
  name: Uri
  nameWithType: CloudTable.Uri
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.Uri
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
  isExternal: false
  name: StorageUri
  nameWithType: CloudTable.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
  commentId: T:Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: SharedAccessTablePolicy
  nameWithType: SharedAccessTablePolicy
  fullName: Microsoft.WindowsAzure.Storage.Table.SharedAccessTablePolicy
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature
  isExternal: false
  name: GetSharedAccessSignature
  nameWithType: CloudTable.GetSharedAccessSignature
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetSharedAccessSignature
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  commentId: '!:System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}'
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  nameWithType: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  nameWithType.vb: Nullable(Of SharedAccessProtocol)
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  commentId: T:Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  nameWithType: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString
  isExternal: false
  name: ToString
  nameWithType: CloudTable.ToString
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ToString
- uid: Microsoft.WindowsAzure.Storage.Table.TableOperation
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableOperation
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableOperation
  nameWithType: TableOperation
  fullName: Microsoft.WindowsAzure.Storage.Table.TableOperation
- uid: Microsoft.WindowsAzure.Storage.Table.TableResult
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableResult
  isExternal: false
  name: TableResult
  nameWithType: TableResult
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: CloudTable.ExecuteAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Table.TableResult}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Table.TableResult}'
  definition: Task`1
  name: Task<TableResult>
  nameWithType: Task<TableResult>
  fullName: Task<Microsoft.WindowsAzure.Storage.Table.TableResult>
  nameWithType.vb: Task(Of TableResult)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Table.TableResult)
  name.vb: Task(Of TableResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Microsoft.WindowsAzure.Storage.Table.TableBatchOperation
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableBatchOperation
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableBatchOperation
  nameWithType: TableBatchOperation
  fullName: Microsoft.WindowsAzure.Storage.Table.TableBatchOperation
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync
  isExternal: false
  name: ExecuteBatchAsync
  nameWithType: CloudTable.ExecuteBatchAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteBatchAsync
- uid: Task{IList{Microsoft.WindowsAzure.Storage.Table.TableResult}}
  commentId: '!:Task{IList{Microsoft.WindowsAzure.Storage.Table.TableResult}}'
  definition: Task`1
  name: Task<IList<TableResult>>
  nameWithType: Task<IList<TableResult>>
  fullName: Task<IList<Microsoft.WindowsAzure.Storage.Table.TableResult>>
  nameWithType.vb: Task(Of IList(Of TableResult))
  fullname.vb: Task(Of IList(Of Microsoft.WindowsAzure.Storage.Table.TableResult))
  name.vb: Task(Of IList(Of TableResult))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableContinuationToken
  nameWithType: TableContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuery
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuery
  nameWithType: TableQuery
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  isExternal: false
  name: TableQuerySegment
  nameWithType: TableQuerySegment
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync
  isExternal: false
  name: ExecuteQuerySegmentedAsync
  nameWithType: CloudTable.ExecuteQuerySegmentedAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExecuteQuerySegmentedAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment}'
  definition: Task`1
  name: Task<TableQuerySegment>
  nameWithType: Task<TableQuerySegment>
  fullName: Task<Microsoft.WindowsAzure.Storage.Table.TableQuerySegment>
  nameWithType.vb: Task(Of TableQuerySegment)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Table.TableQuerySegment)
  name.vb: Task(Of TableQuerySegment)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: CloudTable.CreateAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync
  isExternal: false
  name: CreateIfNotExistsAsync
  nameWithType: CloudTable.CreateIfNotExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.CreateIfNotExistsAsync
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CloudTable.DeleteAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteAsync
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync
  isExternal: false
  name: DeleteIfExistsAsync
  nameWithType: CloudTable.DeleteIfExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.DeleteIfExistsAsync
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: CloudTable.ExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.ExistsAsync
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync
  isExternal: false
  name: SetPermissionsAsync
  nameWithType: CloudTable.SetPermissionsAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.SetPermissionsAsync
- uid: Microsoft.WindowsAzure.Storage.Table.TablePermissions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TablePermissions
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TablePermissions
  nameWithType: TablePermissions
  fullName: Microsoft.WindowsAzure.Storage.Table.TablePermissions
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync
  isExternal: false
  name: GetPermissionsAsync
  nameWithType: CloudTable.GetPermissionsAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable.GetPermissionsAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Table.TablePermissions}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Table.TablePermissions}'
  definition: Task`1
  name: Task<TablePermissions>
  nameWithType: Task<TablePermissions>
  fullName: Task<Microsoft.WindowsAzure.Storage.Table.TablePermissions>
  nameWithType.vb: Task(Of TablePermissions)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Table.TablePermissions)
  name.vb: Task(Of TablePermissions)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TablePermissions
    name: TablePermissions
    nameWithType: TablePermissions
    fullName: Microsoft.WindowsAzure.Storage.Table.TablePermissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TablePermissions
    name: TablePermissions
    nameWithType: TablePermissions
    fullName: Microsoft.WindowsAzure.Storage.Table.TablePermissions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuery<TElement>
  nameWithType: TableQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>
  nameWithType.vb: TableQuery(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement)
  name.vb: TableQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    nameWithType: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    nameWithType: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  isExternal: false
  name: TableQuerySegment<TElement>
  nameWithType: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  nameWithType.vb: TableQuerySegment(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery{{T}}
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuery{``0}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  name: TableQuery<T>
  nameWithType: TableQuery<T>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<T>
  nameWithType.vb: TableQuery(Of T)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of T)
  name.vb: TableQuery(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    nameWithType: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    nameWithType: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{T}}}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{``0}}'
  definition: Task`1
  name: Task<TableQuerySegment<T>>
  nameWithType: Task<TableQuerySegment<T>>
  fullName: Task<Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<T>>
  nameWithType.vb: Task(Of TableQuerySegment(Of T))
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of T))
  name.vb: Task(Of TableQuerySegment(Of T))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  isExternal: false
  name: EntityResolver<T>
  nameWithType: EntityResolver<T>
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver<T>
  nameWithType.vb: EntityResolver(Of T)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of T)
  name.vb: EntityResolver(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResult}}
  commentId: T:Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  name: EntityResolver<TResult>
  nameWithType: EntityResolver<TResult>
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResult>
  nameWithType.vb: EntityResolver(Of TResult)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResult)
  name.vb: EntityResolver(Of TResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TResult}}}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{``1}}'
  definition: Task`1
  name: Task<TableQuerySegment<TResult>>
  nameWithType: Task<TableQuerySegment<TResult>>
  fullName: Task<Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TResult>>
  nameWithType.vb: Task(Of TableQuerySegment(Of TResult))
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TResult))
  name.vb: Task(Of TableQuerySegment(Of TResult))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
