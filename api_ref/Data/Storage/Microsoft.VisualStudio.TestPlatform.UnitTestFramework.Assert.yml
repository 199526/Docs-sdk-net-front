items:
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  commentId: T:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  id: Assert
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  children:
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean,System.String)
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.ThrowsException``1(Action,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: Assert
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  type: Class
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Assert
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 25
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies conditions in unit tests using true/false propositions.\n"
  example: []
  syntax:
    content: 'public class Assert : object'
    content.vb: >-
      Public Class Assert
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object)
  id: AreEqual(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Object, Object)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 32
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified objects are equal. The assertion fails if the objects are not equal.\n"
  example: []
  syntax:
    content: public static void AreEqual(object expected, object actual)
    content.vb: Public Shared Sub AreEqual(expected As Object, actual As Object)
    parameters:
    - id: expected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean)
  id: AreEqual(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 69
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are equal, ignoring case or not as specified. \nThe assertion fails if they are not equal.\n"
  example: []
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean)
    parameters:
    - id: expected
      type: System.String
      description: The first string to compare. This is the string the unit test expects.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: "A Boolean value that indicates a case-sensitive or insensitive comparison. \ntrue indicates a case-insensitive comparison."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double)
  id: AreEqual(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Double, Double, Double)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 82
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified doubles are equal, or within the specified accuracy of each other. \nThe assertion fails if they are not within the specified accuracy of each other.\n"
  example: []
  syntax:
    content: public static void AreEqual(double expected, double actual, double delta)
    content.vb: Public Shared Sub AreEqual(expected As Double, actual As Double, delta As Double)
    parameters:
    - id: expected
      type: System.Double
      description: The first double to compare. This is the double the unit test expects.
    - id: actual
      type: System.Double
      description: The second double to compare. This is the double the unit test produced.
    - id: delta
      type: System.Double
      description: >-
        The required accuracy. The assertion will fail only if expected is different from

        actual by more than delta.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single)
  id: AreEqual(System.Single,System.Single,System.Single)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Single, Single, Single)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 95
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified floats are equal, or within the specified accuracy of each other. \nThe assertion fails if they are not within the specified accuracy of each other.\n"
  example: []
  syntax:
    content: public static void AreEqual(float expected, float actual, float delta)
    content.vb: Public Shared Sub AreEqual(expected As Single, actual As Single, delta As Single)
    parameters:
    - id: expected
      type: System.Single
      description: The first float to compare. This is the float the unit test expects.
    - id: actual
      type: System.Single
      description: The second float to compare. This is the float the unit test produced.
    - id: delta
      type: System.Single
      description: >-
        The required accuracy. The assertion will fail only if expected is different from

        actual by more than delta.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object,System.String)
  id: AreEqual(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 107
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified objects are equal. The assertion fails if the objects are not equal. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreEqual(object expected, object actual, string message)
    content.vb: Public Shared Sub AreEqual(expected As Object, actual As Object, message As String)
    parameters:
    - id: expected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)
  id: AreEqual(System.Single,System.Single,System.Single,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Single, Single, Single, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single, System.Single, System.Single, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 121
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified floats are equal, or within the specified accuracy of each other. \nThe assertion fails if they are not within the specified accuracy of each other. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreEqual(float expected, float actual, float delta, string message)
    content.vb: Public Shared Sub AreEqual(expected As Single, actual As Single, delta As Single, message As String)
    parameters:
    - id: expected
      type: System.Single
      description: The first float to compare. This is the float the unit test expects.
    - id: actual
      type: System.Single
      description: The second float to compare. This is the float the unit test produced.
    - id: delta
      type: System.Single
      description: The required accuracy. The assertion will fail only if expected is different from actual by more than delta.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)
  id: AreEqual(System.Double,System.Double,System.Double,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Double, Double, Double, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double, System.Double, System.Double, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 135
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified doubles are equal, or within the specified accuracy of each other. \nThe assertion fails if they are not within the specified accuracy of each other. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreEqual(double expected, double actual, double delta, string message)
    content.vb: Public Shared Sub AreEqual(expected As Double, actual As Double, delta As Double, message As String)
    parameters:
    - id: expected
      type: System.Double
      description: The first double to compare. This is the double the unit test expects.
    - id: actual
      type: System.Double
      description: The second double to compare. This is the double the unit test produced.
    - id: delta
      type: System.Double
      description: The required accuracy. The assertion will fail only if expected is different from actual by more than delta.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  id: AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, CultureInfo)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 149
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are equal, ignoring case or not as specified, \nand using the culture info specified. The assertion fails if they are not equal.\n"
  example: []
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, CultureInfo culture)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo)
    parameters:
    - id: expected
      type: System.String
      description: The first string to compare. This is the string the unit test expects.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: "A Boolean value that indicates a case-sensitive or insensitive comparison. \ntrue indicates a case-insensitive comparison."
    - id: culture
      type: CultureInfo
      description: A <see cref="!:CultureInfo"></see> object that supplies culture-specific comparison information.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)
  id: AreEqual(System.String,System.String,System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 173
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are equal, ignoring case or not as specified. \nThe assertion fails if they are not equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, string message)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, message As String)
    parameters:
    - id: expected
      type: System.String
      description: The first string to compare. This is the string the unit test expects.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: "A Boolean value that indicates a case-sensitive or insensitive comparison. \ntrue indicates a case-insensitive comparison."
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])
  id: AreEqual(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 186
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified objects are equal. The assertion fails if the objects are not equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreEqual(object expected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Object, System.Object, System.String, System.Object())
  name.vb: AreEqual(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  id: AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, CultureInfo, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 202
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are equal, ignoring case or not as specified, \nand using the culture info specified. \nThe assertion fails if they are not equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, CultureInfo culture, string message)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String)
    parameters:
    - id: expected
      type: System.String
      description: The first string to compare. This is the string the unit test expects.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: "A Boolean value that indicates a case-sensitive or insensitive comparison. \ntrue indicates a case-insensitive comparison."
    - id: culture
      type: CultureInfo
      description: A <see cref="!:CultureInfo"></see> object that supplies culture-specific comparison information.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  id: AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Double, Double, Double, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double, System.Double, System.Double, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 219
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified doubles are equal, or within the specified accuracy of each other. \nThe assertion fails if they are not within the specified accuracy of each other. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreEqual(double expected, double actual, double delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As Double, actual As Double, delta As Double, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Double
      description: The first double to compare. This is the double the unit tests expects.
    - id: actual
      type: System.Double
      description: The second double to compare. This is the double the unit test produced.
    - id: delta
      type: System.Double
      description: "The required accuracy. The assertion will fail only if expected is different from \nactual by more than delta."
    - id: message
      type: System.String
      description: "A message to display if the assertion fails. This message can be seen in the \nunit test results."
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Double, System.Double, System.Double, System.String, System.Object())
  name.vb: AreEqual(Double, Double, Double, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  id: AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 235
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are equal, ignoring case or not as specified. \nThe assertion fails if they are not equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.String
      description: The first string to compare. This is the string the unit test expects.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: "A Boolean value that indicates a case-sensitive or insensitive comparison. \ntrue indicates a case-insensitive comparison."
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, System.String, System.Object())
  name.vb: AreEqual(String, String, Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  id: AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Single, Single, Single, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single, System.Single, System.Single, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 252
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified floats are equal, or within the specified accuracy of each other. \nThe assertion fails if they are not within the specified accuracy of each other. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreEqual(float expected, float actual, float delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As Single, actual As Single, delta As Single, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Single
      description: The first float to compare. This is the float the unit tests expects.
    - id: actual
      type: System.Single
      description: The second float to compare. This is the float the unit test produced.
    - id: delta
      type: System.Single
      description: "The required accuracy. The assertion will fail only if expected is different from \nactual by more than delta."
    - id: message
      type: System.String
      description: "A message to display if the assertion fails. This message can be seen in the \nunit test results."
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.Single, System.Single, System.Single, System.String, System.Object())
  name.vb: AreEqual(Single, Single, Single, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  id: AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, CultureInfo, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 269
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are equal, ignoring case or not as specified, \nand using the culture info specified. The assertion fails if they are not equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, CultureInfo culture, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.String
      description: The first string to compare. This is the string the unit test expects.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: "A Boolean value that indicates a case-sensitive or insensitive comparison. \ntrue indicates a case-insensitive comparison."
    - id: culture
      type: CultureInfo
      description: A <see cref="!:CultureInfo"></see> object that supplies culture-specific comparison information.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object())
  name.vb: AreEqual(String, String, Boolean, CultureInfo, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0)
  id: AreEqual``1(``0,``0)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual<T>(T, T)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual<T>(T, T)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 280
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified generic type data are equal by using the equality operator. \nThe assertion fails if they are not equal.\n"
  example: []
  syntax:
    content: public static void AreEqual<T>(T expected, T actual)
    content.vb: Public Shared Sub AreEqual(Of T)(expected As T, actual As T)
    parameters:
    - id: expected
      type: '{T}'
      description: The first generic type data to compare. This is the generic type data the unit test expects.
    - id: actual
      type: '{T}'
      description: The second generic type data to compare. This is the generic type data the unit test produced.
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(Of T)(T, T)
  name.vb: AreEqual(Of T)(T, T)
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0,System.String)
  id: AreEqual``1(``0,``0,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual<T>(T, T, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual<T>(T, T, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 292
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified generic type data are equal by using the equality operator. \nThe assertion fails if they are not equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreEqual<T>(T expected, T actual, string message)
    content.vb: Public Shared Sub AreEqual(Of T)(expected As T, actual As T, message As String)
    parameters:
    - id: expected
      type: '{T}'
      description: The first generic type data to compare. This is the generic type data the unit test expects.
    - id: actual
      type: '{T}'
      description: The second generic type data to compare. This is the generic type data the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(Of T)(T, T, System.String)
  name.vb: AreEqual(Of T)(T, T, String)
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual``1(``0,``0,System.String,System.Object[])
  id: AreEqual``1(``0,``0,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreEqual<T>(T, T, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual<T>(T, T, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 306
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified generic type data are equal by using the equality operator. \nThe assertion fails if they are not equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreEqual<T>(T expected, T actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(Of T)(expected As T, actual As T, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: '{T}'
      description: The first generic type data to compare. This is the generic type data the unit test expects.
    - id: actual
      type: '{T}'
      description: The second generic type data to compare. This is the generic type data the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreEqual(Of T)(T, T, System.String, System.Object())
  name.vb: AreEqual(Of T)(T, T, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object)
  id: AreNotEqual(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Object, Object)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 316
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified objects are not equal. The assertion fails if the objects are equal.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(object notExpected, object actual)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Object, actual As Object)
    parameters:
    - id: notExpected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects not to match actual.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single)
  id: AreNotEqual(System.Single,System.Single,System.Single)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Single, Single, Single)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 328
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified floats are not equal, and not within the specified accuracy of each other. \nThe assertion fails if they are equal or within the specified accuracy of each other.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(float notExpected, float actual, float delta)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Single, actual As Single, delta As Single)
    parameters:
    - id: notExpected
      type: System.Single
      description: The first float to compare. This is the float the unit test expects not to match actual.
    - id: actual
      type: System.Single
      description: The second float to compare. This is the float the unit test produced.
    - id: delta
      type: System.Single
      description: The required inaccuracy. The assertion fails only if notExpected is equal to actual or different from it by less than delta.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean)
  id: AreNotEqual(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 339
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean)
    parameters:
    - id: notExpected
      type: System.String
      description: The first string to compare. This is the string the unit test expects not to match actual.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double)
  id: AreNotEqual(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Double, Double, Double)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 358
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified doubles are not equal, and not within the specified accuracy of each other. \nThe assertion fails if they are equal or within the specified accuracy of each other.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(double notExpected, double actual, double delta)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Double, actual As Double, delta As Double)
    parameters:
    - id: notExpected
      type: System.Double
      description: The first double to compare. This is the double the unit test expects not to match actual.
    - id: actual
      type: System.Double
      description: The second double to compare. This is the double the unit test produced.
    - id: delta
      type: System.Double
      description: The required inaccuracy. The assertion fails only if notExpected is equal to actual or different from it by less than delta.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object,System.String)
  id: AreNotEqual(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 369
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified objects are not equal. The assertion fails if the objects are equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(object notExpected, object actual, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Object, actual As Object, message As String)
    parameters:
    - id: notExpected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects not to match actual.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)
  id: AreNotEqual(System.Double,System.Double,System.Double,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Double, Double, Double, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double, System.Double, System.Double, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 383
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified doubles are not equal, and not within the specified accuracy of each other. \nThe assertion fails if they are equal or within the specified accuracy of each other. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(double notExpected, double actual, double delta, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Double, actual As Double, delta As Double, message As String)
    parameters:
    - id: notExpected
      type: System.Double
      description: The first double to compare. This is the double the unit test expects not to match actual.
    - id: actual
      type: System.Double
      description: The second double to compare. This is the double the unit test produced.
    - id: delta
      type: System.Double
      description: The required inaccuracy. The assertion fails only if notExpected is equal to actual or different from it by less than delta.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)
  id: AreNotEqual(System.String,System.String,System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 396
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are not equal, ignoring case or not as specified. \nThe assertion fails if they are equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, message As String)
    parameters:
    - id: notExpected
      type: System.String
      description: The first string to compare. This is the string the unit test expects not to match actual.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  id: AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, CultureInfo)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 416
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are not equal, ignoring case or not as specified, \nand using the culture info specified. The assertion fails if they are equal.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, CultureInfo culture)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo)
    parameters:
    - id: notExpected
      type: System.String
      description: The first string to compare. This is the string the unit test expects not to match actual.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.
    - id: culture
      type: CultureInfo
      description: A CultureInfo object that supplies culture-specific comparison information.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)
  id: AreNotEqual(System.Single,System.Single,System.Single,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Single, Single, Single, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single, System.Single, System.Single, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 440
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified floats are not equal, and not within the specified accuracy of each other. \nThe assertion fails if they are equal or within the specified accuracy of each other. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(float notExpected, float actual, float delta, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Single, actual As Single, delta As Single, message As String)
    parameters:
    - id: notExpected
      type: System.Single
      description: The first float to compare. This is the float the unit test expects not to match actual.
    - id: actual
      type: System.Single
      description: The second float to compare. This is the float the unit test produced.
    - id: delta
      type: System.Single
      description: The required inaccuracy. The assertion fails only if notExpected is equal to actual or different from it by less than delta.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  id: AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 453
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified objects are not equal. The assertion fails if the objects are equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(object notExpected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects not to match actual.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Object, System.Object, System.String, System.Object())
  name.vb: AreNotEqual(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  id: AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, CultureInfo, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 467
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. \nThe assertion fails if they are equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, CultureInfo culture, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String)
    parameters:
    - id: notExpected
      type: System.String
      description: The first string to compare. This is the string the unit test expects not to match actual.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.
    - id: culture
      type: CultureInfo
      description: A CultureInfo object that supplies culture-specific comparison information.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  id: AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 481
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.String
      description: The first string to compare. This is the string the unit test expects not to match actual.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, System.String, System.Object())
  name.vb: AreNotEqual(String, String, Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  id: AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Double, Double, Double, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double, System.Double, System.Double, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 496
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified doubles are not equal, and not within the specified accuracy of each other. \nThe assertion fails if they are equal or within the specified accuracy of each other. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(double notExpected, double actual, double delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Double, actual As Double, delta As Double, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Double
      description: The first double to compare. This is the double the unit test expects not to match actual.
    - id: actual
      type: System.Double
      description: The second double to compare. This is the double the unit test produced.
    - id: delta
      type: System.Double
      description: The required inaccuracy. The assertion will fail only if notExpected is equal to actual or different from it by less than delta.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Double, System.Double, System.Double, System.String, System.Object())
  name.vb: AreNotEqual(Double, Double, Double, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  id: AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Single, Single, Single, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single, System.Single, System.Single, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 511
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified floats are not equal, and not within the specified accuracy of each other. \nThe assertion fails if they are equal or within the specified accuracy of each other. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(float notExpected, float actual, float delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Single, actual As Single, delta As Single, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Single
      description: The first float to compare. This is the float the unit test expects not to match actual.
    - id: actual
      type: System.Single
      description: The second float to compare. This is the float the unit test produced.
    - id: delta
      type: System.Single
      description: The required inaccuracy. The assertion will fail only if notExpected is equal to actual or different from it by less than delta.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.Single, System.Single, System.Single, System.String, System.Object())
  name.vb: AreNotEqual(Single, Single, Single, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  id: AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, CultureInfo, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 527
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified strings are not equal, ignoring case or not as specified, \nand using the culture info specified. The assertion fails if they are equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, CultureInfo culture, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.String
      description: The first string to compare. This is the string the unit test expects not to match actual.
    - id: actual
      type: System.String
      description: The second string to compare. This is the string the unit test produced.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.
    - id: culture
      type: CultureInfo
      description: A CultureInfo object that supplies culture-specific comparison information.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object())
  name.vb: AreNotEqual(String, String, Boolean, CultureInfo, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0)
  id: AreNotEqual``1(``0,``0)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual<T>(T, T)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual<T>(T, T)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 537
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified generic type data are not equal. The assertion fails if they are equal.\n"
  example: []
  syntax:
    content: public static void AreNotEqual<T>(T notExpected, T actual)
    content.vb: Public Shared Sub AreNotEqual(Of T)(notExpected As T, actual As T)
    parameters:
    - id: notExpected
      type: '{T}'
      description: The first generic type data to compare. This is the generic type data the unit test expects not to match actual.
    - id: actual
      type: '{T}'
      description: The second generic type data to compare. This is the generic type data the unit test produced.
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(Of T)(T, T)
  name.vb: AreNotEqual(Of T)(T, T)
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0,System.String)
  id: AreNotEqual``1(``0,``0,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual<T>(T, T, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual<T>(T, T, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 548
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified generic type data are not equal. The assertion fails if they are equal. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotEqual<T>(T notExpected, T actual, string message)
    content.vb: Public Shared Sub AreNotEqual(Of T)(notExpected As T, actual As T, message As String)
    parameters:
    - id: notExpected
      type: '{T}'
      description: The first generic type data to compare. This is the generic type data the unit test expects not to match actual.
    - id: actual
      type: '{T}'
      description: The second generic type data to compare. This is the generic type data the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(Of T)(T, T, System.String)
  name.vb: AreNotEqual(Of T)(T, T, String)
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])
  id: AreNotEqual``1(``0,``0,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual<T>(T, T, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual<T>(T, T, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotEqual
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 561
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified generic type data are not equal. The assertion fails if they are equal. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotEqual<T>(T notExpected, T actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(Of T)(notExpected As T, actual As T, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: '{T}'
      description: The first generic type data to compare. This is the generic type data the unit test expects not to match actual.
    - id: actual
      type: '{T}'
      description: The second generic type data to compare. This is the generic type data the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotEqual(Of T)(T, T, System.String, System.Object())
  name.vb: AreNotEqual(Of T)(T, T, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object)
  id: AreNotSame(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotSame(Object, Object)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotSame
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 571
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object.\n"
  example: []
  syntax:
    content: public static void AreNotSame(object notExpected, object actual)
    content.vb: Public Shared Sub AreNotSame(notExpected As Object, actual As Object)
    parameters:
    - id: notExpected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects not to match actual.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object,System.String)
  id: AreNotSame(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotSame(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotSame
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 583
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified object variables refer to different objects. \nThe assertion fails if they refer to the same object. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreNotSame(object notExpected, object actual, string message)
    content.vb: Public Shared Sub AreNotSame(notExpected As Object, actual As Object, message As String)
    parameters:
    - id: notExpected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects not to match actual.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])
  id: AreNotSame(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreNotSame(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreNotSame
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 597
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified object variables refer to different objects. \nThe assertion fails if they refer to the same object. Displays a message if the assertion fails, \nand applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreNotSame(object notExpected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotSame(notExpected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects not to match actual.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreNotSame(System.Object, System.Object, System.String, System.Object())
  name.vb: AreNotSame(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object)
  id: AreSame(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreSame(Object, Object)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreSame
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 607
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects.\n"
  example: []
  syntax:
    content: public static void AreSame(object expected, object actual)
    content.vb: Public Shared Sub AreSame(expected As Object, actual As Object)
    parameters:
    - id: expected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object,System.String)
  id: AreSame(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreSame(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreSame
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 619
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified object variables refer to the same object. \nThe assertion fails if they refer to different objects. Displays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void AreSame(object expected, object actual, string message)
    content.vb: Public Shared Sub AreSame(expected As Object, actual As Object, message As String)
    parameters:
    - id: expected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])
  id: AreSame(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: AreSame(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AreSame
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 633
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that two specified object variables refer to the same object. \nThe assertion fails if they refer to different objects. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void AreSame(object expected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreSame(expected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Object
      description: The first object to compare. This is the object the unit test expects.
    - id: actual
      type: System.Object
      description: The second object to compare. This is the object the unit test produced.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.AreSame(System.Object, System.Object, System.String, System.Object())
  name.vb: AreSame(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail
  id: Fail
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: Fail()
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail()
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Fail
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 641
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nFails the assertion without checking any conditions.\n"
  example: []
  syntax:
    content: public static void Fail()
    content.vb: Public Shared Sub Fail
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String)
  id: Fail(System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: Fail(String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Fail
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 650
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nFails the assertion without checking any conditions. Displays a message.\n"
  example: []
  syntax:
    content: public static void Fail(string message)
    content.vb: Public Shared Sub Fail(message As String)
    parameters:
    - id: message
      type: System.String
      description: A message to display. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String,System.Object[])
  id: Fail(System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: Fail(String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Fail
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 660
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nFails the assertion without checking any conditions. Displays a message, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void Fail(string message, params object[] parameters)
    content.vb: Public Shared Sub Fail(message As String, ParamArray parameters As Object())
    parameters:
    - id: message
      type: System.String
      description: A message to display. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Fail(System.String, System.Object())
  name.vb: Fail(String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive
  id: Inconclusive
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: Inconclusive()
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive()
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Inconclusive
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 668
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nIndicates that the assertion cannot be verified.\n"
  example: []
  syntax:
    content: public static void Inconclusive()
    content.vb: Public Shared Sub Inconclusive
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String)
  id: Inconclusive(System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: Inconclusive(String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Inconclusive
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 677
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nIndicates that the assertion can not be verified. Displays a message.\n"
  example: []
  syntax:
    content: public static void Inconclusive(string message)
    content.vb: Public Shared Sub Inconclusive(message As String)
    parameters:
    - id: message
      type: System.String
      description: A message to display. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String,System.Object[])
  id: Inconclusive(System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: Inconclusive(String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Inconclusive
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 687
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nIndicates that an assertion can not be verified. Displays a message, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void Inconclusive(string message, params object[] parameters)
    content.vb: Public Shared Sub Inconclusive(message As String, ParamArray parameters As Object())
    parameters:
    - id: message
      type: System.String
      description: A message to display. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.Inconclusive(System.String, System.Object())
  name.vb: Inconclusive(String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean)
  id: IsFalse(System.Boolean)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsFalse(Boolean)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsFalse
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 696
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified condition is false. The assertion fails if the condition is true.\n"
  example: []
  syntax:
    content: public static void IsFalse(bool condition)
    content.vb: Public Shared Sub IsFalse(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition to verify is false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean,System.String)
  id: IsFalse(System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsFalse(Boolean, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsFalse
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 707
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified condition is false. The assertion fails if the condition is true. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void IsFalse(bool condition, string message)
    content.vb: Public Shared Sub IsFalse(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition to verify is false.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean,System.String,System.Object[])
  id: IsFalse(System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsFalse(Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsFalse
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 719
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified condition is false. The assertion fails if the condition is true. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void IsFalse(bool condition, string message, params object[] parameters)
    content.vb: Public Shared Sub IsFalse(condition As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition to verify is false.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsFalse(System.Boolean, System.String, System.Object())
  name.vb: IsFalse(Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type)
  id: IsInstanceOfType(System.Object,Type)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsInstanceOfType(Object, Type)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object, Type)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsInstanceOfType
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 730
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is an instance of the specified type. \nThe assertion fails if the type is not found in the inheritance hierarchy of the object.\n"
  example: []
  syntax:
    content: public static void IsInstanceOfType(object value, Type expectedType)
    content.vb: Public Shared Sub IsInstanceOfType(value As Object, expectedType As Type)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is of expectedType.
    - id: expectedType
      type: Type
      description: The type expected to be found in the inheritance hierarchy of value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type,System.String)
  id: IsInstanceOfType(System.Object,Type,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsInstanceOfType(Object, Type, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object, Type, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsInstanceOfType
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 743
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is an instance of the specified type. \nThe assertion fails if the type is not found in the inheritance hierarchy of the object. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void IsInstanceOfType(object value, Type expectedType, string message)
    content.vb: Public Shared Sub IsInstanceOfType(value As Object, expectedType As Type, message As String)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is of expectedType.
    - id: expectedType
      type: Type
      description: The type expected to be found in the inheritance hierarchy of value.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  id: IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsInstanceOfType(Object, Type, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object, Type, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsInstanceOfType
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 757
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is an instance of the specified type. \nThe assertion fails if the type is not found in the inheritance hierarchy of the object. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void IsInstanceOfType(object value, Type expectedType, string message, params object[] parameters)
    content.vb: Public Shared Sub IsInstanceOfType(value As Object, expectedType As Type, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is of expectedType.
    - id: expectedType
      type: Type
      description: The type expected to be found in the inheritance hierarchy of value.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsInstanceOfType(System.Object, Type, System.String, System.Object())
  name.vb: IsInstanceOfType(Object, Type, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type)
  id: IsNotInstanceOfType(System.Object,Type)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNotInstanceOfType(Object, Type)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object, Type)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNotInstanceOfType
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 768
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is not an instance of the specified type. \nThe assertion fails if the type is found in the inheritance hierarchy of the object.\n"
  example: []
  syntax:
    content: public static void IsNotInstanceOfType(object value, Type wrongType)
    content.vb: Public Shared Sub IsNotInstanceOfType(value As Object, wrongType As Type)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is not of wrongType.
    - id: wrongType
      type: Type
      description: The type that should not be found in the inheritance hierarchy of value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type,System.String)
  id: IsNotInstanceOfType(System.Object,Type,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNotInstanceOfType(Object, Type, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object, Type, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNotInstanceOfType
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 792
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is not an instance of the specified type. \nThe assertion fails if the type is found in the inheritance hierarchy of the object. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void IsNotInstanceOfType(object value, Type wrongType, string message)
    content.vb: Public Shared Sub IsNotInstanceOfType(value As Object, wrongType As Type, message As String)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is not of wrongType.
    - id: wrongType
      type: Type
      description: The type that should not be found in the inheritance hierarchy of value.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  id: IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNotInstanceOfType(Object, Type, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object, Type, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNotInstanceOfType
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 806
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is not an instance of the specified type. \nThe assertion fails if the type is found in the inheritance hierarchy of the object. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void IsNotInstanceOfType(object value, Type wrongType, string message, params object[] parameters)
    content.vb: Public Shared Sub IsNotInstanceOfType(value As Object, wrongType As Type, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is not of wrongType.
    - id: wrongType
      type: Type
      description: The type that should not be found in the inheritance hierarchy of value.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotInstanceOfType(System.Object, Type, System.String, System.Object())
  name.vb: IsNotInstanceOfType(Object, Type, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object)
  id: IsNotNull(System.Object)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNotNull(Object)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNotNull
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 815
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is not null. The assertion fails if it is null.\n"
  example: []
  syntax:
    content: public static void IsNotNull(object value)
    content.vb: Public Shared Sub IsNotNull(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is not null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object,System.String)
  id: IsNotNull(System.Object,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNotNull(Object, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNotNull
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 826
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is not null. The assertion fails if it is null. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void IsNotNull(object value, string message)
    content.vb: Public Shared Sub IsNotNull(value As Object, message As String)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is not null.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object,System.String,System.Object[])
  id: IsNotNull(System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNotNull(Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNotNull
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 838
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is not null. The assertion fails if it is null. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void IsNotNull(object value, string message, params object[] parameters)
    content.vb: Public Shared Sub IsNotNull(value As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is not null.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNotNull(System.Object, System.String, System.Object())
  name.vb: IsNotNull(Object, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object)
  id: IsNull(System.Object)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNull(Object)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNull
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 847
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is null. The assertion fails if it is not null.\n"
  example: []
  syntax:
    content: public static void IsNull(object value)
    content.vb: Public Shared Sub IsNull(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object,System.String)
  id: IsNull(System.Object,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNull(Object, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNull
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 858
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is null. The assertion fails if it is not null. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void IsNull(object value, string message)
    content.vb: Public Shared Sub IsNull(value As Object, message As String)
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is null.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object,System.String,System.Object[])
  id: IsNull(System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsNull(Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsNull
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 870
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified object is null. The assertion fails if it is not null. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void IsNull(object value, string message, params object[] parameters)
    content.vb: Public Shared Sub IsNull(value As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
      description: The object to verify is null.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsNull(System.Object, System.String, System.Object())
  name.vb: IsNull(Object, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean)
  id: IsTrue(System.Boolean)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsTrue(Boolean)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsTrue
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 879
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified condition is true. The assertion fails if the condition is false.\n"
  example: []
  syntax:
    content: public static void IsTrue(bool condition)
    content.vb: Public Shared Sub IsTrue(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition to verify is true.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean,System.String)
  id: IsTrue(System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsTrue(Boolean, String)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsTrue
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 890
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified condition is true. The assertion fails if the condition is false. \nDisplays a message if the assertion fails.\n"
  example: []
  syntax:
    content: public static void IsTrue(bool condition, string message)
    content.vb: Public Shared Sub IsTrue(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition to verify is true.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean,System.String,System.Object[])
  id: IsTrue(System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: IsTrue(Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsTrue
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 902
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies that the specified condition is true. The assertion fails if the condition is false. \nDisplays a message if the assertion fails, and applies the specified formatting to it.\n"
  example: []
  syntax:
    content: public static void IsTrue(bool condition, string message, params object[] parameters)
    content.vb: Public Shared Sub IsTrue(condition As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition to verify is true.
    - id: message
      type: System.String
      description: A message to display if the assertion fails. This message can be seen in the unit test results.
    - id: parameters
      type: System.Object[]
      description: An array of parameters to use when formatting message.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.IsTrue(System.Boolean, System.String, System.Object())
  name.vb: IsTrue(Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.ThrowsException``1(Action,System.String,System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.ThrowsException``1(Action,System.String,System.Boolean)
  id: ThrowsException``1(Action,System.String,System.Boolean)
  parent: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert
  langs:
  - csharp
  - vb
  name: ThrowsException<TException>(Action, String, Boolean)
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.ThrowsException<TException>(Action, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Test/AspNet/XUnitForMsTest/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ThrowsException
    path: Test/AspNet/XUnitForMsTest/Assert.cs
    startLine: 914
  assemblies:
  - XUnitForMsTest
  packages:
  - XUnitForMsTest(1.0.0.0)
  namespace: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  summary: "\nVerifies if exception is a particular exeption is thrown\n"
  example: []
  syntax:
    content: public static void ThrowsException<TException>(Action action, string message, bool allowDerivedTypes = true)
    content.vb: Public Shared Sub ThrowsException(Of TException)(action As Action, message As String, allowDerivedTypes As Boolean = True)
    parameters:
    - id: action
      type: Action
      description: action to perform
    - id: message
      type: System.String
      description: fail message if no exception thrown
    - id: allowDerivedTypes
      type: System.Boolean
      description: if allow derived types when checking exception
    typeParameters:
    - id: TException
      description: Exception type
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestPlatform.UnitTestFramework.Assert.ThrowsException(Of TException)(Action, System.String, System.Boolean)
  name.vb: ThrowsException(Of TException)(Action, String, Boolean)
references:
- uid: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  isExternal: false
  name: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
  fullName: Microsoft.VisualStudio.TestPlatform.UnitTestFramework
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Double
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Single
  isExternal: true
  name: Single
  fullName: System.Single
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  fullName: CultureInfo
- uid: System.Object[]
  isExternal: true
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: Type
  isExternal: true
  name: Type
  fullName: Type
- uid: Action
  isExternal: true
  name: Action
  fullName: Action
