### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  id: ListFileEntry
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  langs:
  - csharp
  - vb
  name: ListFileEntry
  nameWithType: ListFileEntry
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  type: Class
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListFileEntry
    path: Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nRepresents a file item returned in the XML response for a file listing operation.\n"
  example: []
  syntax:
    content: 'public sealed class ListFileEntry : object, IListFileEntry'
    content.vb: >-
      Public NotInheritable Class ListFileEntry
          Inherits Object
          Implements IListFileEntry
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ListFileEntry.Name
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the name of the file item.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the file item.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name*
  implements:
  - Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ListFileEntry.Properties
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Properties
    path: Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the file item's system properties.\n"
  example: []
  syntax:
    content: public FileProperties Properties { get; }
    content.vb: Public ReadOnly Property Properties As FileProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.FileProperties
      description: The file item's properties.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ListFileEntry.Metadata
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Metadata
    path: Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the user-defined metadata for the file item.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
      description: The file item's metadata, as a collection of name-value pairs.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ListFileEntry.Uri
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Uri
    path: Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the file item's URI.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: The absolute URI to the file item.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.File.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.File.Protocol
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: IListFileEntry
  nameWithType: IListFileEntry
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  isExternal: false
  name: Name
  nameWithType: ListFileEntry.Name
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry.Name
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry.Name
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  isExternal: false
  name: Name
  nameWithType: IListFileEntry.Name
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  isExternal: false
  name: Properties
  nameWithType: ListFileEntry.Properties
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties
  commentId: T:Microsoft.WindowsAzure.Storage.File.FileProperties
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileProperties
  nameWithType: FileProperties
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties
- uid: Microsoft.WindowsAzure.Storage.File
  commentId: N:Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  nameWithType: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  isExternal: false
  name: Metadata
  nameWithType: ListFileEntry.Metadata
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  isExternal: false
  name: Uri
  nameWithType: ListFileEntry.Uri
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
