items:
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase
  commentId: T:Microsoft.WindowsAzure.Storage.File.FileTestBase
  id: FileTestBase
  parent: Microsoft.WindowsAzure.Storage.File
  children:
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(CloudFile,CloudFile)
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(FileProperties,FileProperties)
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.CreateFilesAsync(CloudFileShare,System.Int32)
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.DownloadTextAsync(CloudFile,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareName
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareReference
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.ListFilesAndDirectoriesAsync(CloudFileDirectory,System.Nullable{System.Int32},FileRequestOptions,OperationContext)
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.UploadTextAsync(CloudFile,System.String,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  - Microsoft.WindowsAzure.Storage.File.FileTestBase.WaitForCopyAsync(CloudFile)
  langs:
  - csharp
  - vb
  name: FileTestBase
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase
  type: Class
  source:
    remote:
      path: Test/WindowsRuntime/File/FileTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FileTestBase
    path: Test/WindowsRuntime/File/FileTestBase.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: 'public class FileTestBase : TestBase'
    content.vb: >-
      Public Class FileTestBase
          Inherits TestBase
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.TestBase
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
  - Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  - Microsoft.WindowsAzure.Storage.TestBase.BlobBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.FileBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.TableBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.QueueBufferManager
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  - Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  - Microsoft.WindowsAzure.Storage.TestBase.TargetTenantConfig
  - Microsoft.WindowsAzure.Storage.TestBase.CurrentTenantType
  - Microsoft.WindowsAzure.Storage.TestBase.StorageCredentials
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareName
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareName
  id: GetRandomShareName
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: GetRandomShareName()
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareName()
  type: Method
  source:
    remote:
      path: Test/Common/File/FileTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetRandomShareName
    path: Test/Common/File/FileTestBase.Common.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static string GetRandomShareName()
    content.vb: Public Shared Function GetRandomShareName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareReference
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareReference
  id: GetRandomShareReference
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: GetRandomShareReference()
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.GetRandomShareReference()
  type: Method
  source:
    remote:
      path: Test/Common/File/FileTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetRandomShareReference
    path: Test/Common/File/FileTestBase.Common.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static CloudFileShare GetRandomShareReference()
    content.vb: Public Shared Function GetRandomShareReference As CloudFileShare
    return:
      type: CloudFileShare
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(CloudFile,CloudFile)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(CloudFile,CloudFile)
  id: AssertAreEqual(CloudFile,CloudFile)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: AssertAreEqual(CloudFile, CloudFile)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(CloudFile, CloudFile)
  type: Method
  source:
    remote:
      path: Test/Common/File/FileTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertAreEqual
    path: Test/Common/File/FileTestBase.Common.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static void AssertAreEqual(CloudFile expected, CloudFile actual)
    content.vb: Public Shared Sub AssertAreEqual(expected As CloudFile, actual As CloudFile)
    parameters:
    - id: expected
      type: CloudFile
    - id: actual
      type: CloudFile
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(FileProperties,FileProperties)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(FileProperties,FileProperties)
  id: AssertAreEqual(FileProperties,FileProperties)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: AssertAreEqual(FileProperties, FileProperties)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.AssertAreEqual(FileProperties, FileProperties)
  type: Method
  source:
    remote:
      path: Test/Common/File/FileTestBase.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AssertAreEqual
    path: Test/Common/File/FileTestBase.Common.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static void AssertAreEqual(FileProperties prop1, FileProperties prop2)
    content.vb: Public Shared Sub AssertAreEqual(prop1 As FileProperties, prop2 As FileProperties)
    parameters:
    - id: prop1
      type: FileProperties
    - id: prop2
      type: FileProperties
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.WaitForCopyAsync(CloudFile)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.WaitForCopyAsync(CloudFile)
  id: WaitForCopyAsync(CloudFile)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: WaitForCopyAsync(CloudFile)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.WaitForCopyAsync(CloudFile)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/File/FileTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WaitForCopyAsync
    path: Test/WindowsRuntime/File/FileTestBase.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static Task WaitForCopyAsync(CloudFile file)
    content.vb: Public Shared Function WaitForCopyAsync(file As CloudFile) As Task
    parameters:
    - id: file
      type: CloudFile
    return:
      type: Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.CreateFilesAsync(CloudFileShare,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.CreateFilesAsync(CloudFileShare,System.Int32)
  id: CreateFilesAsync(CloudFileShare,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: CreateFilesAsync(CloudFileShare, Int32)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.CreateFilesAsync(CloudFileShare, System.Int32)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/File/FileTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateFilesAsync
    path: Test/WindowsRuntime/File/FileTestBase.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static Task<List<string>> CreateFilesAsync(CloudFileShare share, int count)
    content.vb: Public Shared Function CreateFilesAsync(share As CloudFileShare, count As Integer) As Task(Of List(Of String))
    parameters:
    - id: share
      type: CloudFileShare
    - id: count
      type: System.Int32
    return:
      type: Task{List{System.String}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.ListFilesAndDirectoriesAsync(CloudFileDirectory,System.Nullable{System.Int32},FileRequestOptions,OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.ListFilesAndDirectoriesAsync(CloudFileDirectory,System.Nullable{System.Int32},FileRequestOptions,OperationContext)
  id: ListFilesAndDirectoriesAsync(CloudFileDirectory,System.Nullable{System.Int32},FileRequestOptions,OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesAsync(CloudFileDirectory, Nullable<Int32>, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.ListFilesAndDirectoriesAsync(CloudFileDirectory, System.Nullable<System.Int32>, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/File/FileTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListFilesAndDirectoriesAsync
    path: Test/WindowsRuntime/File/FileTestBase.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static Task<IEnumerable<IListFileItem>> ListFilesAndDirectoriesAsync(CloudFileDirectory directory, int ? maxResults, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Shared Function ListFilesAndDirectoriesAsync(directory As CloudFileDirectory, maxResults As Integer?, options As FileRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of IListFileItem))
    parameters:
    - id: directory
      type: CloudFileDirectory
    - id: maxResults
      type: System.Nullable{System.Int32}
    - id: options
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: Task{IEnumerable{IListFileItem}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.File.FileTestBase.ListFilesAndDirectoriesAsync(CloudFileDirectory, System.Nullable(Of System.Int32), FileRequestOptions, OperationContext)
  name.vb: ListFilesAndDirectoriesAsync(CloudFileDirectory, Nullable(Of Int32), FileRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.UploadTextAsync(CloudFile,System.String,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.UploadTextAsync(CloudFile,System.String,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  id: UploadTextAsync(CloudFile,System.String,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: UploadTextAsync(CloudFile, String, Encoding, AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.UploadTextAsync(CloudFile, System.String, Encoding, AccessCondition, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/File/FileTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadTextAsync
    path: Test/WindowsRuntime/File/FileTestBase.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static Task UploadTextAsync(CloudFile file, string text, Encoding encoding, AccessCondition accessCondition = null, FileRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Shared Function UploadTextAsync(file As CloudFile, text As String, encoding As Encoding, accessCondition As AccessCondition = Nothing, options As FileRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Task
    parameters:
    - id: file
      type: CloudFile
    - id: text
      type: System.String
    - id: encoding
      type: Encoding
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.File.FileTestBase.DownloadTextAsync(CloudFile,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileTestBase.DownloadTextAsync(CloudFile,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  id: DownloadTextAsync(CloudFile,Encoding,AccessCondition,FileRequestOptions,OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.FileTestBase
  langs:
  - csharp
  - vb
  name: DownloadTextAsync(CloudFile, Encoding, AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.FileTestBase.DownloadTextAsync(CloudFile, Encoding, AccessCondition, FileRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: Test/WindowsRuntime/File/FileTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadTextAsync
    path: Test/WindowsRuntime/File/FileTestBase.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.File
  syntax:
    content: public static Task<string> DownloadTextAsync(CloudFile file, Encoding encoding, AccessCondition accessCondition = null, FileRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Shared Function DownloadTextAsync(file As CloudFile, encoding As Encoding, accessCondition As AccessCondition = Nothing, options As FileRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Task(Of String)
    parameters:
    - id: file
      type: CloudFile
    - id: encoding
      type: Encoding
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: FileRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: Task{System.String}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.TestBase
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: TestBase
  fullName: Microsoft.WindowsAzure.Storage.TestBase
- uid: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: true
  name: GetRandomBuffer(Int32)
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
    name: GetRandomBuffer
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer(System.Int32)
    name: GetRandomBuffer
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GetRandomBuffer
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: AssertSecondaryEndpoint()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
    name: AssertSecondaryEndpoint
    fullName: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
    name: AssertSecondaryEndpoint
    fullName: Microsoft.WindowsAzure.Storage.TestBase.AssertSecondaryEndpoint
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.BlobBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: BlobBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.BlobBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.FileBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: FileBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.FileBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.TableBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: TableBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.TableBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.QueueBufferManager
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: QueueBufferManager
  fullName: Microsoft.WindowsAzure.Storage.TestBase.QueueBufferManager
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudTableClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
    name: GenerateCloudTableClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
    name: GenerateCloudTableClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudTableClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudBlobClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
    name: GenerateCloudBlobClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
    name: GenerateCloudBlobClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudBlobClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudFileClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
    name: GenerateCloudFileClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
    name: GenerateCloudFileClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudFileClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: GenerateCloudQueueClient()
  fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
    name: GenerateCloudQueueClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
    name: GenerateCloudQueueClient
    fullName: Microsoft.WindowsAzure.Storage.TestBase.GenerateCloudQueueClient
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.TestBase.TargetTenantConfig
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: TargetTenantConfig
  fullName: Microsoft.WindowsAzure.Storage.TestBase.TargetTenantConfig
- uid: Microsoft.WindowsAzure.Storage.TestBase.CurrentTenantType
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: CurrentTenantType
  fullName: Microsoft.WindowsAzure.Storage.TestBase.CurrentTenantType
- uid: Microsoft.WindowsAzure.Storage.TestBase.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.TestBase
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.TestBase.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: CloudFileShare
  isExternal: true
  name: CloudFileShare
  fullName: CloudFileShare
- uid: CloudFile
  isExternal: true
  name: CloudFile
  fullName: CloudFile
- uid: FileProperties
  isExternal: true
  name: FileProperties
  fullName: FileProperties
- uid: Task
  isExternal: true
  name: Task
  fullName: Task
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Task{List{System.String}}
  definition: Task`1
  name: Task<List<String>>
  fullName: Task<List<System.String>>
  fullname.vb: Task(Of List(Of System.String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: List`1
    name: List
    fullName: List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  fullName: Task<>
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: CloudFileDirectory
  isExternal: true
  name: CloudFileDirectory
  fullName: CloudFileDirectory
- uid: System.Nullable{System.Int32}
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: FileRequestOptions
  isExternal: true
  name: FileRequestOptions
  fullName: FileRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  fullName: OperationContext
- uid: Task{IEnumerable{IListFileItem}}
  definition: Task`1
  name: Task<IEnumerable<IListFileItem>>
  fullName: Task<IEnumerable<IListFileItem>>
  fullname.vb: Task(Of IEnumerable(Of IListFileItem))
  name.vb: Task(Of IEnumerable(Of IListFileItem))
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: IListFileItem
    name: IListFileItem
    fullName: IListFileItem
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IListFileItem
    name: IListFileItem
    fullName: IListFileItem
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Encoding
  isExternal: true
  name: Encoding
  fullName: Encoding
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  fullName: AccessCondition
- uid: Task{System.String}
  definition: Task`1
  name: Task<String>
  fullName: Task<System.String>
  fullname.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
