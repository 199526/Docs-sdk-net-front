### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  commentId: T:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  id: SasQueryBuilder
  parent: Microsoft.WindowsAzure.Storage.Core
  children:
  - Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri(Uri)
  - Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps
  langs:
  - csharp
  - vb
  name: SasQueryBuilder
  nameWithType: SasQueryBuilder
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  type: Class
  source:
    remote:
      path: Lib/Common/Core/SasQueryBuilder.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SasQueryBuilder
    path: Lib/Common/Core/SasQueryBuilder.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nA convenience class for constructing SAS-specific URI query strings.\n"
  example: []
  syntax:
    content: 'public class SasQueryBuilder : UriQueryBuilder'
    content.vb: >-
      Public Class SasQueryBuilder
          Inherits UriQueryBuilder
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Parameters
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item(System.String)
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable{KeyValuePair{System.String,System.String}})
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.WindowsAzure.Storage.StorageUri)
  - Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore(Uri)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  langs:
  - csharp
  - vb
  name: SasQueryBuilder(String)
  nameWithType: SasQueryBuilder.SasQueryBuilder(String)
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.SasQueryBuilder(System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Core/SasQueryBuilder.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Core/SasQueryBuilder.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nPublic SasQueryBuilder constructor.\n"
  example: []
  syntax:
    content: public SasQueryBuilder(string sasToken)
    content.vb: Public Sub New(sasToken As String)
    parameters:
    - id: sasToken
      type: System.String
      description: The ASA token used to authenticate request.
  overload: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps
  commentId: P:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps
  id: RequireHttps
  parent: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  langs:
  - csharp
  - vb
  name: RequireHttps
  nameWithType: SasQueryBuilder.RequireHttps
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps
  type: Property
  source:
    remote:
      path: Lib/Common/Core/SasQueryBuilder.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequireHttps
    path: Lib/Common/Core/SasQueryBuilder.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nReturns True if any of the parameters specifies https:.\n"
  example: []
  syntax:
    content: public bool RequireHttps { get; }
    content.vb: Public ReadOnly Property RequireHttps As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  langs:
  - csharp
  - vb
  name: Add(String, String)
  nameWithType: SasQueryBuilder.Add(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/SasQueryBuilder.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Add
    path: Lib/Common/Core/SasQueryBuilder.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nAdd the query string value with URI escaping.\n"
  example: []
  syntax:
    content: public override void Add(string name, string value)
    content.vb: Public Overrides Sub Add(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: The query string name.
    - id: value
      type: System.String
      description: The query string value.
  overridden: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)
  overload: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri(Uri)
  id: AddToUri(Uri)
  parent: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder
  langs:
  - csharp
  - vb
  name: AddToUri(Uri)
  nameWithType: SasQueryBuilder.AddToUri(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri(Uri)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/SasQueryBuilder.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AddToUri
    path: Lib/Common/Core/SasQueryBuilder.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nAdds a query parameter to a URI.\n"
  example: []
  syntax:
    content: public override Uri AddToUri(Uri uri)
    content.vb: Public Overrides Function AddToUri(uri As Uri) As Uri
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> object containing the original URI, including any existing query parameters.
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> object with the new query parameter appended.
  overridden: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Uri)
  overload: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage.Core
  commentId: N:Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Core
  nameWithType: Microsoft.WindowsAzure.Storage.Core
  fullName: Microsoft.WindowsAzure.Storage.Core
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  commentId: T:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  parent: Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: UriQueryBuilder
  nameWithType: UriQueryBuilder
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Parameters
  commentId: P:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Parameters
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: false
  name: Parameters
  nameWithType: UriQueryBuilder.Parameters
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Parameters
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item(System.String)
  commentId: P:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item(System.String)
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: true
  name: Item[String]
  nameWithType: UriQueryBuilder.Item[String]
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item[System.String]
  nameWithType.vb: UriQueryBuilder.Item(String)
  fullname.vb: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item(System.String)
    name: Item
    nameWithType: UriQueryBuilder.Item
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item(System.String)
    name: Item
    nameWithType: UriQueryBuilder.Item
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable{KeyValuePair{System.String,System.String}})
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: true
  name: AddRange(IEnumerable<KeyValuePair<String, String>>)
  nameWithType: UriQueryBuilder.AddRange(IEnumerable<KeyValuePair<String, String>>)
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable<KeyValuePair<System.String, System.String>>)
  nameWithType.vb: UriQueryBuilder.AddRange(IEnumerable(Of KeyValuePair(Of String, String)))
  fullname.vb: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: AddRange(IEnumerable(Of KeyValuePair(Of String, String)))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable{KeyValuePair{System.String,System.String}})
    name: AddRange
    nameWithType: UriQueryBuilder.AddRange
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange(IEnumerable{KeyValuePair{System.String,System.String}})
    name: AddRange
    nameWithType: UriQueryBuilder.AddRange
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: false
  name: ToString()
  nameWithType: UriQueryBuilder.ToString()
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
    name: ToString
    nameWithType: UriQueryBuilder.ToString
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
    name: ToString
    nameWithType: UriQueryBuilder.ToString
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.WindowsAzure.Storage.StorageUri)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.WindowsAzure.Storage.StorageUri)
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: false
  name: AddToUri(StorageUri)
  nameWithType: UriQueryBuilder.AddToUri(StorageUri)
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.WindowsAzure.Storage.StorageUri)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.WindowsAzure.Storage.StorageUri)
    name: AddToUri
    nameWithType: UriQueryBuilder.AddToUri
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.StorageUri
    name: StorageUri
    nameWithType: StorageUri
    fullName: Microsoft.WindowsAzure.Storage.StorageUri
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.WindowsAzure.Storage.StorageUri)
    name: AddToUri
    nameWithType: UriQueryBuilder.AddToUri
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.StorageUri
    name: StorageUri
    nameWithType: StorageUri
    fullName: Microsoft.WindowsAzure.Storage.StorageUri
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore(Uri)
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: true
  name: AddToUriCore(Uri)
  nameWithType: UriQueryBuilder.AddToUriCore(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore(Uri)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore(Uri)
    name: AddToUriCore
    nameWithType: UriQueryBuilder.AddToUriCore
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore(Uri)
    name: AddToUriCore
    nameWithType: UriQueryBuilder.AddToUriCore
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUriCore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.#ctor
  isExternal: false
  name: SasQueryBuilder
  nameWithType: SasQueryBuilder.SasQueryBuilder
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.SasQueryBuilder
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps
  isExternal: false
  name: RequireHttps
  nameWithType: SasQueryBuilder.RequireHttps
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.RequireHttps
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: true
  name: Add(String, String)
  nameWithType: UriQueryBuilder.Add(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)
    name: Add
    nameWithType: UriQueryBuilder.Add
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)
    name: Add
    nameWithType: UriQueryBuilder.Add
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add
  isExternal: false
  name: Add
  nameWithType: SasQueryBuilder.Add
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.Add
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Uri)
  parent: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  isExternal: true
  name: AddToUri(Uri)
  nameWithType: UriQueryBuilder.AddToUri(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Uri)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Uri)
    name: AddToUri
    nameWithType: UriQueryBuilder.AddToUri
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri(Uri)
    name: AddToUri
    nameWithType: UriQueryBuilder.AddToUri
    fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder.AddToUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri
  isExternal: false
  name: AddToUri
  nameWithType: SasQueryBuilder.AddToUri
  fullName: Microsoft.WindowsAzure.Storage.Core.SasQueryBuilder.AddToUri
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
