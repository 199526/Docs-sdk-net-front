items:
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  id: DynamicTableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor(System.String,System.String,System.String,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty})
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ETag
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.PartitionKey
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Properties
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.RowKey
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Timestamp
  - Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: DynamicTableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  type: Class
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DynamicTableEntity
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nA <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity\" data-throw-if-not-resolved=\"false\"></xref> type which allows callers direct access to the property map of the entity. \nThis class eliminates the use of reflection for serialization and deserialization.\n"
  example: []
  syntax:
    content: 'public sealed class DynamicTableEntity : object, ITableEntity'
    content.vb: >-
      Public NotInheritable Class DynamicTableEntity
          Inherits Object
          Implements ITableEntity
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: DynamicTableEntity()
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.DynamicTableEntity()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DynamicTableEntity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: DynamicTableEntity(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.DynamicTableEntity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\"></xref> class with the specified partition key and row key.\n"
  example: []
  syntax:
    content: public DynamicTableEntity(string partitionKey, string rowKey)
    content.vb: Public Sub New(partitionKey As String, rowKey As String)
    parameters:
    - id: partitionKey
      type: System.String
      description: A string containing the partition key value for the entity.
    - id: rowKey
      type: System.String
      description: A string containing the row key value for the entity.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor(System.String,System.String,System.String,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.#ctor(System.String,System.String,System.String,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty})
  id: '#ctor(System.String,System.String,System.String,IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty})'
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: DynamicTableEntity(String, String, String, IDictionary<String, EntityProperty>)
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.DynamicTableEntity(System.String, System.String, System.String, IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\"></xref> class with the entity's partition key, row key, ETag (if available/required), and properties.\n"
  example: []
  syntax:
    content: public DynamicTableEntity(string partitionKey, string rowKey, string etag, IDictionary<string, EntityProperty> properties)
    content.vb: Public Sub New(partitionKey As String, rowKey As String, etag As String, properties As IDictionary(Of String, EntityProperty))
    parameters:
    - id: partitionKey
      type: System.String
      description: A string containing the partition key value for the entity.
    - id: rowKey
      type: System.String
      description: A string containing the row key value for the entity.
    - id: etag
      type: System.String
      description: A string containing the ETag for the entity.
    - id: properties
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object containing the entity's properties, indexed by property name.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.DynamicTableEntity(System.String, System.String, System.String, IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty))
  name.vb: DynamicTableEntity(String, String, String, IDictionary(Of String, EntityProperty))
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Properties
  type: Property
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Properties
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the properties in the table entity, indexed by property name.\n"
  example: []
  syntax:
    content: public IDictionary<string, EntityProperty> Properties { get; set; }
    content.vb: Public Property Properties As IDictionary(Of String, EntityProperty)
    parameters: []
    return:
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object containing the entity's properties.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.PartitionKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.PartitionKey
  id: PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.PartitionKey
  type: Property
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PartitionKey
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's partition key.\n"
  example: []
  syntax:
    content: public string PartitionKey { get; set; }
    content.vb: Public Property PartitionKey As String
    parameters: []
    return:
      type: System.String
      description: A string containing the partition key value for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.RowKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.RowKey
  id: RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.RowKey
  type: Property
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RowKey
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 98
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's row key.\n"
  example: []
  syntax:
    content: public string RowKey { get; set; }
    content.vb: Public Property RowKey As String
    parameters: []
    return:
      type: System.String
      description: A string containing the row key value for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Timestamp
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Timestamp
  id: Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.Timestamp
  type: Property
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Timestamp
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's timestamp.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
      description: A <see cref="!:DateTimeOffset"></see> containing the timestamp for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ETag
  id: ETag
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ETag
  type: Property
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ETag
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's current ETag.\n"
  remarks: Set this value to '*' to blindly overwrite an entity as part of an update operation.
  example: []
  syntax:
    content: public string ETag { get; set; }
    content.vb: Public Property ETag As String
    parameters: []
    return:
      type: System.String
      description: A string containing the ETag for the entity.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ReadEntity(IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadEntity
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 132
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeserializes this <xref href=\"Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <see cref=\"!:IDictionary<TKey,TValue>\"></see> of property names to values of type <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The properties dictionary passed to this API is stored internally as a reference, not a copy.
  example: []
  syntax:
    content: public void ReadEntity(IDictionary<string, EntityProperty> properties, OperationContext operationContext)
    content.vb: Public Sub ReadEntity(properties As IDictionary(Of String, EntityProperty), operationContext As OperationContext)
    parameters:
    - id: properties
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: A collection containing the <see cref="!:IDictionary<TKey,TValue>"></see> of string property names mapped to values of type <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> to store in this <xref href="Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity" data-throw-if-not-resolved="false"></xref> instance.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.ReadEntity(IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  id: WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  langs:
  - csharp
  - vb
  name: WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/DynamicTableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteEntity
    path: Lib/Common/Table/DynamicTableEntity.cs
    startLine: 142
  assemblies:
  - Microsoft.WindowsAzure.Storage
  packages:
  - Microsoft.WindowsAzure.Storage(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nSerializes the <see cref=\"!:IDictionary<TKey,TValue>\"></see> of property names mapped to values of type <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> from this <xref href=\"Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public IDictionary<string, EntityProperty> WriteEntity(OperationContext operationContext)
    content.vb: Public Function WriteEntity(operationContext As OperationContext) As IDictionary(Of String, EntityProperty)
    parameters:
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <see cref="!:IDictionary<TKey,TValue>"></see> object containing the map of string property names to values of type <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> stored in this <xref href="Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity" data-throw-if-not-resolved="false"></xref> instance.
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: ITableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
  isExternal: false
  name: DynamicTableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.DynamicTableEntity
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
  definition: IDictionary`2
  name: IDictionary<String, EntityProperty>
  fullName: IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>
  fullname.vb: IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty)
  name.vb: IDictionary(Of String, EntityProperty)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
- uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: EntityProperty
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: true
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity
  - name: (
    fullName: (
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity
  - name: (
    fullName: (
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
