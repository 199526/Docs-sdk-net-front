items:
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  id: IgnoreEntity
  parent: Microsoft.WindowsAzure.Storage.Table.Entities
  children:
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.#ctor
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.Bool
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolN
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitive
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveN
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTime
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeN
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffset
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetN
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetNull
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.IgnoreEntityPropertyResolver(System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.NumberOfNonNullProperties
  langs:
  - csharp
  - vb
  name: IgnoreEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  type: Class
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IgnoreEntity
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: 'public class IgnoreEntity : TableEntity'
    content.vb: >-
      Public Class IgnoreEntity
          Inherits TableEntity
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.NumberOfNonNullProperties
  commentId: F:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.NumberOfNonNullProperties
  id: NumberOfNonNullProperties
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: NumberOfNonNullProperties
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.NumberOfNonNullProperties
  type: Field
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: NumberOfNonNullProperties
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public const int NumberOfNonNullProperties = null
    content.vb: Public Const NumberOfNonNullProperties As Integer = Nothing
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: IgnoreEntity()
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.IgnoreEntity()
  type: Constructor
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public IgnoreEntity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: IgnoreEntity(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.IgnoreEntity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public IgnoreEntity(string pk, string rk)
    content.vb: Public Sub New(pk As String, rk As String)
    parameters:
    - id: pk
      type: System.String
    - id: rk
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetNull
  id: DateTimeOffsetNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: DateTimeOffsetNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeOffsetNull
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTimeOffset? DateTimeOffsetNull { get; set; }
    content.vb: Public Property DateTimeOffsetNull As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetN
  id: DateTimeOffsetN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: DateTimeOffsetN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffsetN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeOffsetN
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTimeOffset? DateTimeOffsetN { get; set; }
    content.vb: Public Property DateTimeOffsetN As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffset
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffset
  id: DateTimeOffset
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: DateTimeOffset
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeOffset
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeOffset
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTimeOffset DateTimeOffset { get; set; }
    content.vb: Public Property DateTimeOffset As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeNull
  id: DateTimeNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: DateTimeNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeNull
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTime? DateTimeNull { get; set; }
    content.vb: Public Property DateTimeNull As DateTime?
    parameters: []
    return:
      type: System.Nullable{DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeN
  id: DateTimeN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: DateTimeN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTimeN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTimeN
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTime? DateTimeN { get; set; }
    content.vb: Public Property DateTimeN As DateTime?
    parameters: []
    return:
      type: System.Nullable{DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTime
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTime
  id: DateTime
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: DateTime
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.DateTime
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DateTime
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public DateTime DateTime { get; set; }
    content.vb: Public Property DateTime As DateTime
    parameters: []
    return:
      type: DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolNull
  id: BoolNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: BoolNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolNull
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Boolean? BoolNull { get; set; }
    content.vb: Public Property BoolNull As Boolean?
    parameters: []
    return:
      type: System.Nullable{Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolN
  id: BoolN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: BoolN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolN
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Boolean? BoolN { get; set; }
    content.vb: Public Property BoolN As Boolean?
    parameters: []
    return:
      type: System.Nullable{Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.Bool
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.Bool
  id: Bool
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: Bool
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.Bool
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Bool
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public Boolean Bool { get; set; }
    content.vb: Public Property Bool As Boolean
    parameters: []
    return:
      type: Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveNull
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveNull
  id: BoolPrimitiveNull
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: BoolPrimitiveNull
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveNull
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolPrimitiveNull
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public bool ? BoolPrimitiveNull { get; set; }
    content.vb: Public Property BoolPrimitiveNull As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveN
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveN
  id: BoolPrimitiveN
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: BoolPrimitiveN
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitiveN
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolPrimitiveN
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public bool ? BoolPrimitiveN { get; set; }
    content.vb: Public Property BoolPrimitiveN As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitive
  commentId: P:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitive
  id: BoolPrimitive
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: BoolPrimitive
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.BoolPrimitive
  type: Property
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BoolPrimitive
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public bool BoolPrimitive { get; set; }
    content.vb: Public Property BoolPrimitive As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.IgnoreEntityPropertyResolver(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.IgnoreEntityPropertyResolver(System.String,System.String,System.String,System.String)
  id: IgnoreEntityPropertyResolver(System.String,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity
  langs:
  - csharp
  - vb
  name: IgnoreEntityPropertyResolver(String, String, String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities.IgnoreEntity.IgnoreEntityPropertyResolver(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Test/Common/Table/Entities/IgnoreEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IgnoreEntityPropertyResolver
    path: Test/Common/Table/Entities/IgnoreEntity.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Storage.Test
  packages:
  - Microsoft.WindowsAzure.Storage.Test(7.2.1.0)
  namespace: Microsoft.WindowsAzure.Storage.Table.Entities
  syntax:
    content: public static EdmType IgnoreEntityPropertyResolver(string pk, string rk, string propName, string propValue)
    content.vb: Public Shared Function IgnoreEntityPropertyResolver(pk As String, rk As String, propName As String, propValue As String) As EdmType
    parameters:
    - id: pk
      type: System.String
    - id: rk
      type: System.String
    - id: propName
      type: System.String
    - id: propValue
      type: System.String
    return:
      type: EdmType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Table.Entities
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.Entities
  fullName: Microsoft.WindowsAzure.Storage.Table.Entities
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{DateTimeOffset}
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: System.Nullable{DateTime}
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  fullname.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTime
    name: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: DateTime
  isExternal: true
  name: DateTime
  fullName: DateTime
- uid: System.Nullable{Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<Boolean>
  fullname.vb: System.Nullable(Of Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Boolean
    name: Boolean
    fullName: Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Boolean
    name: Boolean
    fullName: Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Boolean
  isExternal: true
  name: Boolean
  fullName: Boolean
- uid: System.Nullable{System.Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: EdmType
  isExternal: true
  name: EdmType
  fullName: EdmType
