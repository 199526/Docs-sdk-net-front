### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  id: CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Uri)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  langs:
  - csharp
  - vb
  name: CloudBlobContainer
  nameWithType: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CloudBlobContainer
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRepresents a container in the Microsoft Azure Blob service.\n"
  remarks: Containers hold directories, which are encapsulated as <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory" data-throw-if-not-resolved="false"></xref> objects, and directories hold block blobs and page blobs. Directories can also contain sub-directories.
  example: []
  syntax:
    content: 'public class CloudBlobContainer : object'
    content.vb: >-
      Public Class CloudBlobContainer
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CloudBlobContainer(Uri)
  nameWithType: CloudBlobContainer.CloudBlobContainer(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer(Uri)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudBlobContainer(Uri containerAddress)
    content.vb: Public Sub New(containerAddress As Uri)
    parameters:
    - id: containerAddress
      type: Uri
      description: A <see cref="!:System.Uri"></see> object specifying the absolute URI to the container.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CloudBlobContainer(Uri, StorageCredentials)
  nameWithType: CloudBlobContainer.CloudBlobContainer(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer(Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudBlobContainer(Uri containerAddress, StorageCredentials credentials)
    content.vb: Public Sub New(containerAddress As Uri, credentials As StorageCredentials)
    parameters:
    - id: containerAddress
      type: Uri
      description: A <see cref="!:System.Uri"></see> object specifying the absolute URI to the container.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CloudBlobContainer(StorageUri, StorageCredentials)
  nameWithType: CloudBlobContainer.CloudBlobContainer(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudBlobContainer(StorageUri containerAddress, StorageCredentials credentials)
    content.vb: Public Sub New(containerAddress As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: containerAddress
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <see cref="!:System.Uri"></see> object specifying the absolute URI to the container.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ServiceClient
  nameWithType: CloudBlobContainer.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServiceClient
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the Blob service client for the container.\n"
  example: []
  syntax:
    content: public CloudBlobClient ServiceClient { get; }
    content.vb: Public ReadOnly Property ServiceClient As CloudBlobClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: CloudBlobContainer.Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Uri
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the container's URI for the primary location.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the container at the primary location.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: StorageUri
  nameWithType: CloudBlobContainer.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StorageUri
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the container's URIs for both the primary and secondary locations.\n"
  example: []
  syntax:
    content: public StorageUri StorageUri { get; }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri" data-throw-if-not-resolved="false"></xref> containing the container's URIs for both the primary and secondary locations.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CloudBlobContainer.Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the name of the container.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the container name.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudBlobContainer.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Metadata
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the container's metadata.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
      description: An <see cref="!:IDictionary&lt;TKey,TValue&gt;"></see> object containing the container's metadata.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: CloudBlobContainer.Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Properties
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the container's system properties.\n"
  example: []
  syntax:
    content: public BlobContainerProperties Properties { get; }
    content.vb: Public ReadOnly Property Properties As BlobContainerProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy)
  nameWithType: CloudBlobContainer.GetSharedAccessSignature(SharedAccessBlobPolicy)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 176
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the container.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  nameWithType: CloudBlobContainer.GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 188
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the container.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A container-level access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  nameWithType: CloudBlobContainer.GetSharedAccessSignature(SharedAccessBlobPolicy, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 202
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the container.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A container-level access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature*
  nameWithType.vb: CloudBlobContainer.GetSharedAccessSignature(SharedAccessBlobPolicy, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessBlobPolicy, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  id: GetPageBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPageBlobReference(String)
  nameWithType: CloudBlobContainer.GetPageBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPageBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 227
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a page blob in this container.\n"
  example: []
  syntax:
    content: public CloudPageBlob GetPageBlobReference(string blobName)
    content.vb: Public Function GetPageBlobReference(blobName As String) As CloudPageBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the page blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{DateTimeOffset})
  id: GetPageBlobReference(System.String,System.Nullable{DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPageBlobReference(String, Nullable<DateTimeOffset>)
  nameWithType: CloudBlobContainer.GetPageBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String, System.Nullable<DateTimeOffset>)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPageBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 238
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a reference to a page blob in this virtual directory.\n"
  example: []
  syntax:
    content: public CloudPageBlob GetPageBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetPageBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudPageBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the page blob.
    - id: snapshotTime
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference*
  nameWithType.vb: CloudBlobContainer.GetPageBlobReference(String, Nullable(Of DateTimeOffset))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String, System.Nullable(Of DateTimeOffset))
  name.vb: GetPageBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  id: GetBlockBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlockBlobReference(String)
  nameWithType: CloudBlobContainer.GetBlockBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlockBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a block blob in this container.\n"
  example: []
  syntax:
    content: public CloudBlockBlob GetBlockBlobReference(string blobName)
    content.vb: Public Function GetBlockBlobReference(blobName As String) As CloudBlockBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the block blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{DateTimeOffset})
  id: GetBlockBlobReference(System.String,System.Nullable{DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlockBlobReference(String, Nullable<DateTimeOffset>)
  nameWithType: CloudBlobContainer.GetBlockBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String, System.Nullable<DateTimeOffset>)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlockBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 260
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a block blob in this container.\n"
  example: []
  syntax:
    content: public CloudBlockBlob GetBlockBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetBlockBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudBlockBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the block blob.
    - id: snapshotTime
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference*
  nameWithType.vb: CloudBlobContainer.GetBlockBlobReference(String, Nullable(Of DateTimeOffset))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String, System.Nullable(Of DateTimeOffset))
  name.vb: GetBlockBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  id: GetAppendBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetAppendBlobReference(String)
  nameWithType: CloudBlobContainer.GetAppendBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetAppendBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to an append blob in this container.\n"
  example: []
  syntax:
    content: public CloudAppendBlob GetAppendBlobReference(string blobName)
    content.vb: Public Function GetAppendBlobReference(blobName As String) As CloudAppendBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the append blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{DateTimeOffset})
  id: GetAppendBlobReference(System.String,System.Nullable{DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetAppendBlobReference(String, Nullable<DateTimeOffset>)
  nameWithType: CloudBlobContainer.GetAppendBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String, System.Nullable<DateTimeOffset>)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetAppendBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 282
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to an append blob in this container.\n"
  example: []
  syntax:
    content: public CloudAppendBlob GetAppendBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetAppendBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudAppendBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the append blob.
    - id: snapshotTime
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference*
  nameWithType.vb: CloudBlobContainer.GetAppendBlobReference(String, Nullable(Of DateTimeOffset))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String, System.Nullable(Of DateTimeOffset))
  name.vb: GetAppendBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  id: GetBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReference(String)
  nameWithType: CloudBlobContainer.GetBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 293
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a blob in this container.\n"
  example: []
  syntax:
    content: public CloudBlob GetBlobReference(string blobName)
    content.vb: Public Function GetBlobReference(blobName As String) As CloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{DateTimeOffset})
  id: GetBlobReference(System.String,System.Nullable{DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReference(String, Nullable<DateTimeOffset>)
  nameWithType: CloudBlobContainer.GetBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String, System.Nullable<DateTimeOffset>)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlobReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 304
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a blob in this container.\n"
  example: []
  syntax:
    content: public CloudBlob GetBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: snapshotTime
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference*
  nameWithType.vb: CloudBlobContainer.GetBlobReference(String, Nullable(Of DateTimeOffset))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String, System.Nullable(Of DateTimeOffset))
  name.vb: GetBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  id: GetDirectoryReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetDirectoryReference(String)
  nameWithType: CloudBlobContainer.GetDirectoryReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetDirectoryReference
    path: Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 315
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a virtual blob directory beneath this container.\n"
  example: []
  syntax:
    content: public CloudBlobDirectory GetDirectoryReference(string relativeAddress)
    content.vb: Public Function GetDirectoryReference(relativeAddress As String) As CloudBlobDirectory
    parameters:
    - id: relativeAddress
      type: System.String
      description: A string containing the name of the virtual blob directory.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync()
  nameWithType: CloudBlobContainer.CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync(BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.CreateAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.CreateAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container and specifies the level of access to the container's data.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.CreateAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 88
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container and specifies the level of access to the container's data.\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  nameWithType: CloudBlobContainer.CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.CreateIfNotExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container if it does not already exist.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.CreateIfNotExistsAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 131
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container if it does not already exist and specifies the level of access to the container's data.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.CreateIfNotExistsAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateIfNotExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nCreates the container if it does not already exist and specifies the level of access to the container's data.\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: CloudBlobContainer.DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 193
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the container.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.DeleteAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 206
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the container.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.DeleteAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 221
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the container.\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  nameWithType: CloudBlobContainer.DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 236
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the container if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.DeleteIfExistsAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the container if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.DeleteIfExistsAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 263
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the container if it already exists.\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container already existed and was deleted; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  id: GetBlobReferenceFromServerAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String)
  nameWithType: CloudBlobContainer.GetBlobReferenceFromServerAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlobReferenceFromServerAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 311
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a blob in this container.\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: The name of the blob.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A reference to the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.GetBlobReferenceFromServerAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlobReferenceFromServerAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 325
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a blob in this container.\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: The name of the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A reference to the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.GetBlobReferenceFromServerAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetBlobReferenceFromServerAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 343
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a reference to a blob in this container.\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: The name of the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A reference to the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(BlobContinuationToken)
  nameWithType: CloudBlobContainer.ListBlobsSegmentedAsync(BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListBlobsSegmentedAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 358
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a result segment containing a collection of blob items \nin the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(currentToken As BlobContinuationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken" data-throw-if-not-resolved="false"></xref> token returned by a previous listing operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, BlobContinuationToken)
  nameWithType: CloudBlobContainer.ListBlobsSegmentedAsync(String, BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListBlobsSegmentedAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 371
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a result segment containing a collection of blob items \nin the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, currentToken As BlobContinuationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: The container name prefix.
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken" data-throw-if-not-resolved="false"></xref> token returned by a previous listing operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListBlobsSegmentedAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 390
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a result segment containing a collection of blob items \nin the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: The container name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: Whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken" data-throw-if-not-resolved="false"></xref> token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync*
  nameWithType.vb: CloudBlobContainer.ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListBlobsSegmentedAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 410
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a result segment containing a collection of blob items \nin the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: The container name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: Whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken" data-throw-if-not-resolved="false"></xref> token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync*
  nameWithType.vb: CloudBlobContainer.ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions)
  nameWithType: CloudBlobContainer.SetPermissionsAsync(BlobContainerPermissions)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 431
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nSets permissions for the container.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.SetPermissionsAsync(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 445
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nSets permissions for the container.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.SetPermissionsAsync(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPermissionsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 460
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nSets permissions for the container.\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  id: GetPermissionsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync()
  nameWithType: CloudBlobContainer.GetPermissionsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 475
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the permissions settings for the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync()
    content.vb: Public Overridable Function GetPermissionsAsync As Task(Of BlobContainerPermissions)
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: The container's permissions.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.GetPermissionsAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 488
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the permissions settings for the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetPermissionsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of BlobContainerPermissions)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: The container's permissions.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.GetPermissionsAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetPermissionsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 502
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the permissions settings for the container.\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of BlobContainerPermissions)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: The container's permissions.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  nameWithType: CloudBlobContainer.ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 517
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChecks existence of the container.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container exists.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.ExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 529
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChecks existence of the container.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container exists.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 542
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChecks existence of the container.\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: <code>true</code> if the container exists.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  nameWithType: CloudBlobContainer.FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 561
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRetrieves the container's attributes.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 574
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRetrieves the container's attributes.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 588
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRetrieves the container's attributes.\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  nameWithType: CloudBlobContainer.SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 603
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nSets the container's user-defined metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync()
    content.vb: Public Overridable Function SetMetadataAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 616
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nSets the container's user-defined metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 630
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nSets the container's user-defined metadata.\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String)
  id: AcquireLeaseAsync(System.Nullable{TimeSpan},System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String)
  nameWithType: CloudBlobContainer.AcquireLeaseAsync(Nullable<TimeSpan>, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<TimeSpan>, System.String)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 649
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nAcquires a lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId = null)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String = Nothing) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{TimeSpan}
      description: >-
        A <see cref="!:TimeSpan"></see> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not <code>null</code>, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    return:
      type: Task{System.String}
      description: The ID of the acquired lease.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync*
  nameWithType.vb: CloudBlobContainer.AcquireLeaseAsync(Nullable(Of TimeSpan), String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of TimeSpan), System.String)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 666
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nAcquires a lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{TimeSpan}
      description: >-
        A <see cref="!:TimeSpan"></see> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.String}
      description: The ID of the acquired lease.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync*
  nameWithType.vb: CloudBlobContainer.AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: AcquireLeaseAsync(System.Nullable{TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 684
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nAcquires a lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{TimeSpan}
      description: >-
        A <see cref="!:TimeSpan"></see> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.String}
      description: The ID of the acquired lease.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync*
  nameWithType.vb: CloudBlobContainer.AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition)
  nameWithType: CloudBlobContainer.RenewLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 700
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRenews a lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 713
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRenews a lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 727
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRenews a lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition)
  nameWithType: CloudBlobContainer.ChangeLeaseAsync(String, AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 744
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChanges the lease ID on this container.\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be <code>null</code>.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    return:
      type: Task{System.String}
      description: The new lease ID.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 758
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChanges the lease ID on this container.\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be <code>null</code>.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.String}
      description: The new lease ID.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 773
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChanges the lease ID on this container.\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be <code>null</code>.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.String}
      description: The new lease ID.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition)
  nameWithType: CloudBlobContainer.ReleaseLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 789
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReleases the lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 802
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReleases the lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests, and to provide additional runtime information about the operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 816
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReleases the lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests, and to provide additional runtime information about the operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> that represents an asynchronous action.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan})
  id: BreakLeaseAsync(System.Nullable{TimeSpan})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>)
  nameWithType: CloudBlobContainer.BreakLeaseAsync(Nullable<TimeSpan>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<TimeSpan>)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 834
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBreaks the current lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{TimeSpan}
      description: >-
        A <see cref="!:TimeSpan"></see> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    return:
      type: Task{TimeSpan}
      description: A <see cref="!:TimeSpan"></see> representing the amount of time before the lease ends, to the second.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync*
  nameWithType.vb: CloudBlobContainer.BreakLeaseAsync(Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of TimeSpan))
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudBlobContainer.BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 850
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBreaks the current lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{TimeSpan}
      description: >-
        A <see cref="!:TimeSpan"></see> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests, and to provide additional runtime information about the operation.
    return:
      type: Task{TimeSpan}
      description: A <see cref="!:TimeSpan"></see> representing the amount of time before the lease ends, to the second.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync*
  nameWithType.vb: CloudBlobContainer.BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: BreakLeaseAsync(System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: CloudBlobContainer.BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/WindowsRuntime/Blob/CloudBlobContainer.cs
    startLine: 867
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBreaks the current lease on this container.\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{TimeSpan}
      description: >-
        A <see cref="!:TimeSpan"></see> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation. This object is used to track requests, and to provide additional runtime information about the operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{TimeSpan}
      description: A <see cref="!:TimeSpan"></see> representing the amount of time before the lease ends, to the second.
  overload: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync*
  nameWithType.vb: CloudBlobContainer.BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
references:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobDirectory
  nameWithType: CloudBlobDirectory
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobContainer
  nameWithType: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor
  isExternal: false
  name: CloudBlobContainer
  nameWithType: CloudBlobContainer.CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  commentId: T:Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  commentId: N:Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  nameWithType: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  nameWithType: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  nameWithType: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  isExternal: false
  name: ServiceClient
  nameWithType: CloudBlobContainer.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  isExternal: false
  name: Uri
  nameWithType: CloudBlobContainer.Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  isExternal: false
  name: StorageUri
  nameWithType: CloudBlobContainer.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  isExternal: false
  name: Name
  nameWithType: CloudBlobContainer.Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudBlobContainer.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerProperties
  nameWithType: BlobContainerProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  isExternal: false
  name: Properties
  nameWithType: CloudBlobContainer.Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobPolicy
  nameWithType: SharedAccessBlobPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature
  isExternal: false
  name: GetSharedAccessSignature
  nameWithType: CloudBlobContainer.GetSharedAccessSignature
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  commentId: '!:System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}'
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  nameWithType: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  nameWithType.vb: Nullable(Of SharedAccessProtocol)
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  commentId: T:Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  nameWithType: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudPageBlob
  nameWithType: CloudPageBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference
  isExternal: false
  name: GetPageBlobReference
  nameWithType: CloudBlobContainer.GetPageBlobReference
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlockBlob
  nameWithType: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference
  isExternal: false
  name: GetBlockBlobReference
  nameWithType: CloudBlobContainer.GetBlockBlobReference
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudAppendBlob
  nameWithType: CloudAppendBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference
  isExternal: false
  name: GetAppendBlobReference
  nameWithType: CloudBlobContainer.GetAppendBlobReference
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlob
  nameWithType: CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference
  isExternal: false
  name: GetBlobReference
  nameWithType: CloudBlobContainer.GetBlobReference
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference
  isExternal: false
  name: GetDirectoryReference
  nameWithType: CloudBlobContainer.GetDirectoryReference
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: CloudBlobContainer.CreateAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  nameWithType: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerPublicAccessType
  nameWithType: BlobContainerPublicAccessType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  isExternal: false
  name: CreateIfNotExistsAsync
  nameWithType: CloudBlobContainer.CreateIfNotExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CloudBlobContainer.DeleteAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  commentId: T:Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  isExternal: false
  name: DeleteIfExistsAsync
  nameWithType: CloudBlobContainer.DeleteIfExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync
  isExternal: false
  name: GetBlobReferenceFromServerAsync
  nameWithType: CloudBlobContainer.GetBlobReferenceFromServerAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}'
  definition: Task`1
  name: Task<ICloudBlob>
  nameWithType: Task<ICloudBlob>
  fullName: Task<Microsoft.WindowsAzure.Storage.Blob.ICloudBlob>
  nameWithType.vb: Task(Of ICloudBlob)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Blob.ICloudBlob)
  name.vb: Task(Of ICloudBlob)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    name: ICloudBlob
    nameWithType: ICloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    name: ICloudBlob
    nameWithType: ICloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContinuationToken
  nameWithType: BlobContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  nameWithType: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync
  isExternal: false
  name: ListBlobsSegmentedAsync
  nameWithType: CloudBlobContainer.ListBlobsSegmentedAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}'
  definition: Task`1
  name: Task<BlobResultSegment>
  nameWithType: Task<BlobResultSegment>
  fullName: Task<Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment>
  nameWithType.vb: Task(Of BlobResultSegment)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment)
  name.vb: Task(Of BlobResultSegment)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
    name: BlobResultSegment
    nameWithType: BlobResultSegment
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
    name: BlobResultSegment
    nameWithType: BlobResultSegment
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobListingDetails
  nameWithType: BlobListingDetails
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync
  isExternal: false
  name: SetPermissionsAsync
  nameWithType: CloudBlobContainer.SetPermissionsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerPermissions
  nameWithType: BlobContainerPermissions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  isExternal: false
  name: GetPermissionsAsync
  nameWithType: CloudBlobContainer.GetPermissionsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
- uid: Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
  commentId: '!:Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}'
  definition: Task`1
  name: Task<BlobContainerPermissions>
  nameWithType: Task<BlobContainerPermissions>
  fullName: Task<Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions>
  nameWithType.vb: Task(Of BlobContainerPermissions)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  name.vb: Task(Of BlobContainerPermissions)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
    name: BlobContainerPermissions
    nameWithType: BlobContainerPermissions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
    name: BlobContainerPermissions
    nameWithType: BlobContainerPermissions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: CloudBlobContainer.ExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  isExternal: false
  name: FetchAttributesAsync
  nameWithType: CloudBlobContainer.FetchAttributesAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  isExternal: false
  name: SetMetadataAsync
  nameWithType: CloudBlobContainer.SetMetadataAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync
  isExternal: false
  name: AcquireLeaseAsync
  nameWithType: CloudBlobContainer.AcquireLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.String}
  commentId: '!:Task{System.String}'
  definition: Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync
  isExternal: false
  name: RenewLeaseAsync
  nameWithType: CloudBlobContainer.RenewLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync
  isExternal: false
  name: ChangeLeaseAsync
  nameWithType: CloudBlobContainer.ChangeLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync
  isExternal: false
  name: ReleaseLeaseAsync
  nameWithType: CloudBlobContainer.ReleaseLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync
  isExternal: false
  name: BreakLeaseAsync
  nameWithType: CloudBlobContainer.BreakLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync
- uid: Task{TimeSpan}
  commentId: '!:Task{TimeSpan}'
  definition: Task`1
  name: Task<TimeSpan>
  nameWithType: Task<TimeSpan>
  fullName: Task<TimeSpan>
  nameWithType.vb: Task(Of TimeSpan)
  fullname.vb: Task(Of TimeSpan)
  name.vb: Task(Of TimeSpan)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
