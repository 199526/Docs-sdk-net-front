### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers
  commentId: T:Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers
  id: ReflectionHelpers
  parent: Azure.Batch.Unit.Tests.TestUtilities
  children:
  - Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments(System.Reflection.MethodInfo,System.Object,System.Func{System.Reflection.ParameterInfo,System.Object})
  langs:
  - csharp
  - vb
  name: ReflectionHelpers
  nameWithType: ReflectionHelpers
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ReflectionHelpers.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ReflectionHelpers
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ReflectionHelpers.cs
    startLine: 19
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public static class ReflectionHelpers
    content.vb: Public Module ReflectionHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments(System.Reflection.MethodInfo,System.Object,System.Func{System.Reflection.ParameterInfo,System.Object})
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments(System.Reflection.MethodInfo,System.Object,System.Func{System.Reflection.ParameterInfo,System.Object})
  id: InvokeMethodWithDefaultArguments(System.Reflection.MethodInfo,System.Object,System.Func{System.Reflection.ParameterInfo,System.Object})
  parent: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers
  langs:
  - csharp
  - vb
  name: InvokeMethodWithDefaultArguments(MethodInfo, Object, Func<ParameterInfo, Object>)
  nameWithType: ReflectionHelpers.InvokeMethodWithDefaultArguments(MethodInfo, Object, Func<ParameterInfo, Object>)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments(System.Reflection.MethodInfo, System.Object, System.Func<System.Reflection.ParameterInfo, System.Object>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ReflectionHelpers.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: InvokeMethodWithDefaultArguments
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ReflectionHelpers.cs
    startLine: 21
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public static object InvokeMethodWithDefaultArguments(MethodInfo method, object objectInstance, Func<ParameterInfo, object> objectCreationFunc = null)
    content.vb: Public Shared Function InvokeMethodWithDefaultArguments(method As MethodInfo, objectInstance As Object, objectCreationFunc As Func(Of ParameterInfo, Object) = Nothing) As Object
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
    - id: objectInstance
      type: System.Object
    - id: objectCreationFunc
      type: System.Func{System.Reflection.ParameterInfo,System.Object}
    return:
      type: System.Object
  overload: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments*
  nameWithType.vb: ReflectionHelpers.InvokeMethodWithDefaultArguments(MethodInfo, Object, Func(Of ParameterInfo, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments(System.Reflection.MethodInfo, System.Object, System.Func(Of System.Reflection.ParameterInfo, System.Object))
  name.vb: InvokeMethodWithDefaultArguments(MethodInfo, Object, Func(Of ParameterInfo, Object))
references:
- uid: Azure.Batch.Unit.Tests.TestUtilities
  commentId: N:Azure.Batch.Unit.Tests.TestUtilities
  isExternal: false
  name: Azure.Batch.Unit.Tests.TestUtilities
  nameWithType: Azure.Batch.Unit.Tests.TestUtilities
  fullName: Azure.Batch.Unit.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments
  isExternal: false
  name: InvokeMethodWithDefaultArguments
  nameWithType: ReflectionHelpers.InvokeMethodWithDefaultArguments
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ReflectionHelpers.InvokeMethodWithDefaultArguments
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Func{System.Reflection.ParameterInfo,System.Object}
  commentId: T:System.Func{System.Reflection.ParameterInfo,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<ParameterInfo, Object>
  nameWithType: Func<ParameterInfo, Object>
  fullName: System.Func<System.Reflection.ParameterInfo, System.Object>
  nameWithType.vb: Func(Of ParameterInfo, Object)
  fullname.vb: System.Func(Of System.Reflection.ParameterInfo, System.Object)
  name.vb: Func(Of ParameterInfo, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
