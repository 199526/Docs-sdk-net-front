### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  commentId: T:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  id: JobIdFixture
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  children:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.#ctor
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId
  langs:
  - csharp
  - vb
  name: JobIdFixture
  nameWithType: JobIdFixture
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  type: Class
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: JobIdFixture
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: 'public abstract class JobIdFixture : IAsyncLifetime, IReceiveMessages'
    content.vb: >-
      Public MustInherit Class JobIdFixture
          Implements IAsyncLifetime, IReceiveMessages
  inheritance:
  - System.Object
  implements:
  - Xunit.IAsyncLifetime
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId
  commentId: P:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId
  id: JobId
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: JobId
  nameWithType: JobIdFixture.JobId
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId
  type: Property
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: JobId
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: public string JobId { get; }
    content.vb: Public ReadOnly Property JobId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.#ctor
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: JobIdFixture()
  nameWithType: JobIdFixture.JobIdFixture()
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobIdFixture()
  type: Constructor
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: public JobIdFixture()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown
  id: CancelTeardown
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: CancelTeardown()
  nameWithType: JobIdFixture.CancelTeardown()
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown()
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CancelTeardown
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: public void CancelTeardown()
    content.vb: Public Sub CancelTeardown
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync
  id: InitializeAsync
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: InitializeAsync()
  nameWithType: JobIdFixture.InitializeAsync()
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync()
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: InitializeAsync
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: public Task InitializeAsync()
    content.vb: Public Function InitializeAsync As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync*
  implements:
  - Xunit.IAsyncLifetime.InitializeAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync
  id: DisposeAsync
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: JobIdFixture.DisposeAsync()
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync()
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DisposeAsync
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: public Task DisposeAsync()
    content.vb: Public Function DisposeAsync As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync*
  implements:
  - Xunit.IAsyncLifetime.DisposeAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  id: OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: OnTestCaseFinished(ITestCaseFinished)
  nameWithType: JobIdFixture.OnTestCaseFinished(ITestCaseFinished)
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OnTestCaseFinished
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: public void OnTestCaseFinished(ITestCaseFinished testCaseFinishedMessage)
    content.vb: Public Sub OnTestCaseFinished(testCaseFinishedMessage As ITestCaseFinished)
    parameters:
    - id: testCaseFinishedMessage
      type: Xunit.Abstractions.ITestCaseFinished
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished*
  implements:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId
  commentId: P:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId
  id: TestId
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: TestId
  nameWithType: JobIdFixture.TestId
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId
  type: Property
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TestId
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: protected abstract string TestId { get; }
    content.vb: Protected MustOverride ReadOnly Property TestId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer
  commentId: P:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer
  id: AutoCreateContainer
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture
  langs:
  - csharp
  - vb
  name: AutoCreateContainer
  nameWithType: JobIdFixture.AutoCreateContainer
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer
  type: Property
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AutoCreateContainer
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/JobIdFixture.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  syntax:
    content: protected virtual bool AutoCreateContainer { get; }
    content.vb: Protected Overridable ReadOnly Property AutoCreateContainer As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  commentId: N:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  isExternal: false
  name: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  nameWithType: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IAsyncLifetime
  commentId: T:Xunit.IAsyncLifetime
  parent: Xunit
  isExternal: true
  name: IAsyncLifetime
  nameWithType: IAsyncLifetime
  fullName: Xunit.IAsyncLifetime
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages
  commentId: T:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  isExternal: false
  name: IReceiveMessages
  nameWithType: IReceiveMessages
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  commentId: N:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  isExternal: false
  name: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  nameWithType: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId
  isExternal: false
  name: JobId
  nameWithType: JobIdFixture.JobId
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.#ctor
  isExternal: false
  name: JobIdFixture
  nameWithType: JobIdFixture.JobIdFixture
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.JobIdFixture
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown
  isExternal: false
  name: CancelTeardown
  nameWithType: JobIdFixture.CancelTeardown
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.CancelTeardown
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync
  isExternal: false
  name: InitializeAsync
  nameWithType: JobIdFixture.InitializeAsync
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.InitializeAsync
- uid: Xunit.IAsyncLifetime.InitializeAsync
  commentId: M:Xunit.IAsyncLifetime.InitializeAsync
  parent: Xunit.IAsyncLifetime
  isExternal: true
  name: InitializeAsync()
  nameWithType: IAsyncLifetime.InitializeAsync()
  fullName: Xunit.IAsyncLifetime.InitializeAsync()
  spec.csharp:
  - uid: Xunit.IAsyncLifetime.InitializeAsync
    name: InitializeAsync
    nameWithType: IAsyncLifetime.InitializeAsync
    fullName: Xunit.IAsyncLifetime.InitializeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.IAsyncLifetime.InitializeAsync
    name: InitializeAsync
    nameWithType: IAsyncLifetime.InitializeAsync
    fullName: Xunit.IAsyncLifetime.InitializeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync
  isExternal: false
  name: DisposeAsync
  nameWithType: JobIdFixture.DisposeAsync
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.DisposeAsync
- uid: Xunit.IAsyncLifetime.DisposeAsync
  commentId: M:Xunit.IAsyncLifetime.DisposeAsync
  parent: Xunit.IAsyncLifetime
  isExternal: true
  name: DisposeAsync()
  nameWithType: IAsyncLifetime.DisposeAsync()
  fullName: Xunit.IAsyncLifetime.DisposeAsync()
  spec.csharp:
  - uid: Xunit.IAsyncLifetime.DisposeAsync
    name: DisposeAsync
    nameWithType: IAsyncLifetime.DisposeAsync
    fullName: Xunit.IAsyncLifetime.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.IAsyncLifetime.DisposeAsync
    name: DisposeAsync
    nameWithType: IAsyncLifetime.DisposeAsync
    fullName: Xunit.IAsyncLifetime.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished
  isExternal: false
  name: OnTestCaseFinished
  nameWithType: JobIdFixture.OnTestCaseFinished
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.OnTestCaseFinished
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages
  isExternal: true
  name: OnTestCaseFinished(ITestCaseFinished)
  nameWithType: IReceiveMessages.OnTestCaseFinished(ITestCaseFinished)
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
    name: OnTestCaseFinished
    nameWithType: IReceiveMessages.OnTestCaseFinished
    fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestCaseFinished
    name: ITestCaseFinished
    nameWithType: ITestCaseFinished
    fullName: Xunit.Abstractions.ITestCaseFinished
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished(Xunit.Abstractions.ITestCaseFinished)
    name: OnTestCaseFinished
    nameWithType: IReceiveMessages.OnTestCaseFinished
    fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.IReceiveMessages.OnTestCaseFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestCaseFinished
    name: ITestCaseFinished
    nameWithType: ITestCaseFinished
    fullName: Xunit.Abstractions.ITestCaseFinished
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Abstractions.ITestCaseFinished
  commentId: T:Xunit.Abstractions.ITestCaseFinished
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestCaseFinished
  nameWithType: ITestCaseFinished
  fullName: Xunit.Abstractions.ITestCaseFinished
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId
  isExternal: false
  name: TestId
  nameWithType: JobIdFixture.TestId
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.TestId
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer
  isExternal: false
  name: AutoCreateContainer
  nameWithType: JobIdFixture.AutoCreateContainer
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.JobIdFixture.AutoCreateContainer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
