### YamlMime:ManagedReference
items:
- uid: CodeGenerationLibrary.CodeGenerationUtilities
  commentId: T:CodeGenerationLibrary.CodeGenerationUtilities
  id: CodeGenerationUtilities
  parent: CodeGenerationLibrary
  children:
  - CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString(CodeGenerationLibrary.BindingAccess)
  - CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  - CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  - CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  - CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  - CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex(System.String)
  langs:
  - csharp
  - vb
  name: CodeGenerationUtilities
  nameWithType: CodeGenerationUtilities
  fullName: CodeGenerationLibrary.CodeGenerationUtilities
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CodeGenerationUtilities
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 20
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public static class CodeGenerationUtilities
    content.vb: Public Module CodeGenerationUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString(CodeGenerationLibrary.BindingAccess)
  commentId: M:CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString(CodeGenerationLibrary.BindingAccess)
  id: GenerateBindingAccessString(CodeGenerationLibrary.BindingAccess)
  parent: CodeGenerationLibrary.CodeGenerationUtilities
  langs:
  - csharp
  - vb
  name: GenerateBindingAccessString(BindingAccess)
  nameWithType: CodeGenerationUtilities.GenerateBindingAccessString(BindingAccess)
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString(CodeGenerationLibrary.BindingAccess)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GenerateBindingAccessString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 22
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public static string GenerateBindingAccessString(BindingAccess access)
    content.vb: Public Shared Function GenerateBindingAccessString(access As BindingAccess) As String
    parameters:
    - id: access
      type: CodeGenerationLibrary.BindingAccess
    return:
      type: System.String
  overload: CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  commentId: M:CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  id: GetProtocolToObjectModelString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  parent: CodeGenerationLibrary.CodeGenerationUtilities
  langs:
  - csharp
  - vb
  name: GetProtocolToObjectModelString(PropertyData, PropertyData)
  nameWithType: CodeGenerationUtilities.GetProtocolToObjectModelString(PropertyData, PropertyData)
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString(CodeGenerationLibrary.PropertyData, CodeGenerationLibrary.PropertyData)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetProtocolToObjectModelString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 43
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public static string GetProtocolToObjectModelString(PropertyData omPropertyData, PropertyData protocolPropertyData)
    content.vb: Public Shared Function GetProtocolToObjectModelString(omPropertyData As PropertyData, protocolPropertyData As PropertyData) As String
    parameters:
    - id: omPropertyData
      type: CodeGenerationLibrary.PropertyData
    - id: protocolPropertyData
      type: CodeGenerationLibrary.PropertyData
    return:
      type: System.String
  overload: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  commentId: M:CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  id: GetObjectModelToProtocolString(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  parent: CodeGenerationLibrary.CodeGenerationUtilities
  langs:
  - csharp
  - vb
  name: GetObjectModelToProtocolString(PropertyData, PropertyData)
  nameWithType: CodeGenerationUtilities.GetObjectModelToProtocolString(PropertyData, PropertyData)
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString(CodeGenerationLibrary.PropertyData, CodeGenerationLibrary.PropertyData)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetObjectModelToProtocolString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 71
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public static string GetObjectModelToProtocolString(PropertyData omPropertyData, PropertyData protocolPropertyData)
    content.vb: Public Shared Function GetObjectModelToProtocolString(omPropertyData As PropertyData, protocolPropertyData As PropertyData) As String
    parameters:
    - id: omPropertyData
      type: CodeGenerationLibrary.PropertyData
    - id: protocolPropertyData
      type: CodeGenerationLibrary.PropertyData
    return:
      type: System.String
  overload: CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  commentId: M:CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  id: IsMappedEnumPair(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  parent: CodeGenerationLibrary.CodeGenerationUtilities
  langs:
  - csharp
  - vb
  name: IsMappedEnumPair(PropertyData, PropertyData)
  nameWithType: CodeGenerationUtilities.IsMappedEnumPair(PropertyData, PropertyData)
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair(CodeGenerationLibrary.PropertyData, CodeGenerationLibrary.PropertyData)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsMappedEnumPair
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 103
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGiven two <xref href=\"CodeGenerationLibrary.PropertyData\" data-throw-if-not-resolved=\"false\"></xref> objects, determines if they are a \"paired\" enum.  That is, if one of them is a \"Models\" enumeration and\nthe other of them is a \"Common\" enum.\n"
  example: []
  syntax:
    content: public static bool IsMappedEnumPair(PropertyData omPropertyData, PropertyData protocolPropertyData)
    content.vb: Public Shared Function IsMappedEnumPair(omPropertyData As PropertyData, protocolPropertyData As PropertyData) As Boolean
    parameters:
    - id: omPropertyData
      type: CodeGenerationLibrary.PropertyData
    - id: protocolPropertyData
      type: CodeGenerationLibrary.PropertyData
    return:
      type: System.Boolean
      description: True if the two properties are a "paired" enum, false otherwise
  overload: CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  commentId: M:CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  id: GetProtocolPropertyName(CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData)
  parent: CodeGenerationLibrary.CodeGenerationUtilities
  langs:
  - csharp
  - vb
  name: GetProtocolPropertyName(PropertyData, PropertyData)
  nameWithType: CodeGenerationUtilities.GetProtocolPropertyName(PropertyData, PropertyData)
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName(CodeGenerationLibrary.PropertyData, CodeGenerationLibrary.PropertyData)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetProtocolPropertyName
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 109
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public static string GetProtocolPropertyName(PropertyData omPropertyData, PropertyData protocolPropertyData)
    content.vb: Public Shared Function GetProtocolPropertyName(omPropertyData As PropertyData, protocolPropertyData As PropertyData) As String
    parameters:
    - id: omPropertyData
      type: CodeGenerationLibrary.PropertyData
    - id: protocolPropertyData
      type: CodeGenerationLibrary.PropertyData
    return:
      type: System.String
  overload: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex(System.String)
  commentId: M:CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex(System.String)
  id: IsTypeComplex(System.String)
  parent: CodeGenerationLibrary.CodeGenerationUtilities
  langs:
  - csharp
  - vb
  name: IsTypeComplex(String)
  nameWithType: CodeGenerationUtilities.IsTypeComplex(String)
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex(System.String)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsTypeComplex
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/CodeGenerationUtilities.cs
    startLine: 132
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets if the type is complex\n"
  example: []
  syntax:
    content: public static bool IsTypeComplex(string typeString)
    content.vb: Public Shared Function IsTypeComplex(typeString As String) As Boolean
    parameters:
    - id: typeString
      type: System.String
      description: The string of the type
    return:
      type: System.Boolean
      description: True if the type is complex, false otherwise.
  overload: CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CodeGenerationLibrary
  commentId: N:CodeGenerationLibrary
  isExternal: false
  name: CodeGenerationLibrary
  nameWithType: CodeGenerationLibrary
  fullName: CodeGenerationLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString*
  commentId: Overload:CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString
  isExternal: false
  name: GenerateBindingAccessString
  nameWithType: CodeGenerationUtilities.GenerateBindingAccessString
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GenerateBindingAccessString
- uid: CodeGenerationLibrary.BindingAccess
  commentId: T:CodeGenerationLibrary.BindingAccess
  parent: CodeGenerationLibrary
  isExternal: false
  name: BindingAccess
  nameWithType: BindingAccess
  fullName: CodeGenerationLibrary.BindingAccess
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString*
  commentId: Overload:CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString
  isExternal: false
  name: GetProtocolToObjectModelString
  nameWithType: CodeGenerationUtilities.GetProtocolToObjectModelString
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolToObjectModelString
- uid: CodeGenerationLibrary.PropertyData
  commentId: T:CodeGenerationLibrary.PropertyData
  parent: CodeGenerationLibrary
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: CodeGenerationLibrary.PropertyData
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString*
  commentId: Overload:CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString
  isExternal: false
  name: GetObjectModelToProtocolString
  nameWithType: CodeGenerationUtilities.GetObjectModelToProtocolString
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GetObjectModelToProtocolString
- uid: CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair*
  commentId: Overload:CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair
  isExternal: false
  name: IsMappedEnumPair
  nameWithType: CodeGenerationUtilities.IsMappedEnumPair
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.IsMappedEnumPair
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName*
  commentId: Overload:CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName
  isExternal: false
  name: GetProtocolPropertyName
  nameWithType: CodeGenerationUtilities.GetProtocolPropertyName
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.GetProtocolPropertyName
- uid: CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex*
  commentId: Overload:CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex
  isExternal: false
  name: IsTypeComplex
  nameWithType: CodeGenerationUtilities.IsTypeComplex
  fullName: CodeGenerationLibrary.CodeGenerationUtilities.IsTypeComplex
