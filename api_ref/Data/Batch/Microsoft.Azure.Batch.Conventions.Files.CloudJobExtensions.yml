### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  commentId: T:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  id: CloudJobExtensions
  parent: Microsoft.Azure.Batch.Conventions.Files
  children:
  - Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  - Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.TimeSpan)
  - Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  - Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName(Microsoft.Azure.Batch.CloudJob)
  - Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CloudJobExtensions
  nameWithType: CloudJobExtensions
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  type: Class
  source:
    remote:
      path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CloudJobExtensions
    path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files
  namespace: Microsoft.Azure.Batch.Conventions.Files
  summary: "\nProvides methods for working with the outputs of a <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class CloudJobExtensions
    content.vb: Public Module CloudJobExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  id: OutputStorage(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  langs:
  - csharp
  - vb
  name: OutputStorage(CloudJob, CloudStorageAccount)
  nameWithType: CloudJobExtensions.OutputStorage(CloudJob, CloudStorageAccount)
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage(Microsoft.Azure.Batch.CloudJob, Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OutputStorage
    path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files
  namespace: Microsoft.Azure.Batch.Conventions.Files
  summary: "\nGets the <xref href=\"Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage\" data-throw-if-not-resolved=\"false\"></xref> for a specified <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static JobOutputStorage OutputStorage(this CloudJob job, CloudStorageAccount storageAccount)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OutputStorage(job As CloudJob, storageAccount As CloudStorageAccount) As JobOutputStorage
    parameters:
    - id: job
      type: Microsoft.Azure.Batch.CloudJob
      description: The job for which to get output storage.
    - id: storageAccount
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: The storage account linked to the Azure Batch account.
    return:
      type: Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage
      description: A JobOutputStorage for the specified job.
  overload: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.Threading.CancellationToken)
  id: PrepareOutputStorageAsync(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  langs:
  - csharp
  - vb
  name: PrepareOutputStorageAsync(CloudJob, CloudStorageAccount, CancellationToken)
  nameWithType: CloudJobExtensions.PrepareOutputStorageAsync(CloudJob, CloudStorageAccount, CancellationToken)
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync(Microsoft.Azure.Batch.CloudJob, Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PrepareOutputStorageAsync
    path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files
  namespace: Microsoft.Azure.Batch.Conventions.Files
  summary: "\nCreates an Azure blob storage container for the outputs of a <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Task PrepareOutputStorageAsync(this CloudJob job, CloudStorageAccount storageAccount, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PrepareOutputStorageAsync(job As CloudJob, storageAccount As CloudStorageAccount, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: job
      type: Microsoft.Azure.Batch.CloudJob
      description: The job for which to create the container.
    - id: storageAccount
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: The storage account linked to the Azure Batch account.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  id: GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  langs:
  - csharp
  - vb
  name: GetOutputStorageContainerUrl(CloudJob, CloudStorageAccount)
  nameWithType: CloudJobExtensions.GetOutputStorageContainerUrl(CloudJob, CloudStorageAccount)
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob, Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetOutputStorageContainerUrl
    path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files
  namespace: Microsoft.Azure.Batch.Conventions.Files
  summary: "\nGets the URL, including a Shared Access Signature (SAS) that permits writing, for the job's\noutput storage container in Azure blob storage. This URL is suitable for passing to tasks\nso they can use the <xref href=\"Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage.%23ctor(System.Uri)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Microsoft.Azure.Batch.Conventions.Files.TaskOutputStorage.%23ctor(System.Uri%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> constructors that take a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: >-
    The SAS expires after 7 days. This default is chosen to match the maximum time that

    tasks can remain active.
  example: []
  syntax:
    content: public static string GetOutputStorageContainerUrl(this CloudJob job, CloudStorageAccount storageAccount)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOutputStorageContainerUrl(job As CloudJob, storageAccount As CloudStorageAccount) As String
    parameters:
    - id: job
      type: Microsoft.Azure.Batch.CloudJob
      description: The job for which to create the container.
    - id: storageAccount
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: The storage account linked to the Azure Batch account.
    return:
      type: System.String
      description: The URL, including SAS, of the job output container.
  overload: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.TimeSpan)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.TimeSpan)
  id: GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob,Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.TimeSpan)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  langs:
  - csharp
  - vb
  name: GetOutputStorageContainerUrl(CloudJob, CloudStorageAccount, TimeSpan)
  nameWithType: CloudJobExtensions.GetOutputStorageContainerUrl(CloudJob, CloudStorageAccount, TimeSpan)
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl(Microsoft.Azure.Batch.CloudJob, Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetOutputStorageContainerUrl
    path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files
  namespace: Microsoft.Azure.Batch.Conventions.Files
  summary: "\nGets the URL, including a Shared Access Signature (SAS) that permits writing, for the job's\noutput storage container in Azure blob storage. This URL is suitable for passing to tasks\nso they can use the <xref href=\"Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage.%23ctor(System.Uri)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Microsoft.Azure.Batch.Conventions.Files.TaskOutputStorage.%23ctor(System.Uri%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> constructors that take a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static string GetOutputStorageContainerUrl(this CloudJob job, CloudStorageAccount storageAccount, TimeSpan expiryTime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOutputStorageContainerUrl(job As CloudJob, storageAccount As CloudStorageAccount, expiryTime As TimeSpan) As String
    parameters:
    - id: job
      type: Microsoft.Azure.Batch.CloudJob
      description: The job for which to create the container.
    - id: storageAccount
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: The storage account linked to the Azure Batch account.
    - id: expiryTime
      type: System.TimeSpan
      description: >-
        The duration for which the SAS is valid.  This should be long enough

        to allow all tasks of the job to be created and run to completion, including leeway for errors

        and retries.
    return:
      type: System.String
      description: The URL, including SAS, of the job output container.
  overload: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName(Microsoft.Azure.Batch.CloudJob)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName(Microsoft.Azure.Batch.CloudJob)
  id: OutputStorageContainerName(Microsoft.Azure.Batch.CloudJob)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions
  langs:
  - csharp
  - vb
  name: OutputStorageContainerName(CloudJob)
  nameWithType: CloudJobExtensions.OutputStorageContainerName(CloudJob)
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName(Microsoft.Azure.Batch.CloudJob)
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OutputStorageContainerName
    path: src/Batch/FileConventions/Src/AzureBatchFileConventions/CloudJobExtensions.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files
  namespace: Microsoft.Azure.Batch.Conventions.Files
  summary: "\nGets the name of the Azure blob storage container for the outputs of a <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static string OutputStorageContainerName(this CloudJob job)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OutputStorageContainerName(job As CloudJob) As String
    parameters:
    - id: job
      type: Microsoft.Azure.Batch.CloudJob
      description: The job for which to get the container name.
    return:
      type: System.String
      description: The name of the container in which to save the outputs of this job.
  overload: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Batch.CloudJob
  commentId: T:Microsoft.Azure.Batch.CloudJob
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudJob
  nameWithType: CloudJob
  fullName: Microsoft.Azure.Batch.CloudJob
- uid: Microsoft.Azure.Batch.Conventions.Files
  commentId: N:Microsoft.Azure.Batch.Conventions.Files
  isExternal: false
  name: Microsoft.Azure.Batch.Conventions.Files
  nameWithType: Microsoft.Azure.Batch.Conventions.Files
  fullName: Microsoft.Azure.Batch.Conventions.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage
  commentId: T:Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage
  parent: Microsoft.Azure.Batch.Conventions.Files
  isExternal: false
  name: JobOutputStorage
  nameWithType: JobOutputStorage
  fullName: Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage
  isExternal: false
  name: OutputStorage
  nameWithType: CloudJobExtensions.OutputStorage
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorage
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  commentId: T:Microsoft.WindowsAzure.Storage.CloudStorageAccount
  parent: Microsoft.WindowsAzure.Storage
  isExternal: true
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync
  isExternal: false
  name: PrepareOutputStorageAsync
  nameWithType: CloudJobExtensions.PrepareOutputStorageAsync
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.PrepareOutputStorageAsync
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage.#ctor(System.Uri)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.JobOutputStorage.#ctor(System.Uri)
- uid: Microsoft.Azure.Batch.Conventions.Files.TaskOutputStorage.#ctor(System.Uri,System.String)
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.TaskOutputStorage.#ctor(System.Uri,System.String)
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl
  isExternal: false
  name: GetOutputStorageContainerUrl
  nameWithType: CloudJobExtensions.GetOutputStorageContainerUrl
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.GetOutputStorageContainerUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName
  isExternal: false
  name: OutputStorageContainerName
  nameWithType: CloudJobExtensions.OutputStorageContainerName
  fullName: Microsoft.Azure.Batch.Conventions.Files.CloudJobExtensions.OutputStorageContainerName
