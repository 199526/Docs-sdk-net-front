### YamlMime:ManagedReference
items:
- uid: CodeGenerationLibrary.PropertyData
  commentId: T:CodeGenerationLibrary.PropertyData
  id: PropertyData
  parent: CodeGenerationLibrary
  children:
  - CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement
  - CodeGenerationLibrary.PropertyData.BoundAccess
  - CodeGenerationLibrary.PropertyData.CamelName
  - CodeGenerationLibrary.PropertyData.CanSerializeToServer
  - CodeGenerationLibrary.PropertyData.ConstructorArgumentType
  - CodeGenerationLibrary.PropertyData.FullSummaryComment
  - CodeGenerationLibrary.PropertyData.GenericTypeParameter
  - CodeGenerationLibrary.PropertyData.GetCollectionSetterString
  - CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod
  - CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod
  - CodeGenerationLibrary.PropertyData.HasPublicSetter
  - CodeGenerationLibrary.PropertyData.HideSetter
  - CodeGenerationLibrary.PropertyData.IsClientOnly
  - CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer
  - CodeGenerationLibrary.PropertyData.IsTypeCollection
  - CodeGenerationLibrary.PropertyData.IsTypeNullable
  - CodeGenerationLibrary.PropertyData.IsWritable
  - CodeGenerationLibrary.PropertyData.Name
  - CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod
  - CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName
  - CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod
  - CodeGenerationLibrary.PropertyData.RemarksComment
  - CodeGenerationLibrary.PropertyData.SkipPropertyAssignment
  - CodeGenerationLibrary.PropertyData.SummaryComment
  - CodeGenerationLibrary.PropertyData.Type
  - CodeGenerationLibrary.PropertyData.UnboundAccess
  langs:
  - csharp
  - vb
  name: PropertyData
  nameWithType: PropertyData
  fullName: CodeGenerationLibrary.PropertyData
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PropertyData
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 20
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public class PropertyData
    content.vb: Public Class PropertyData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CodeGenerationLibrary.PropertyData.Type
  commentId: P:CodeGenerationLibrary.PropertyData.Type
  id: Type
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: PropertyData.Type
  fullName: CodeGenerationLibrary.PropertyData.Type
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 25
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the type of the property.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.Name
  commentId: P:CodeGenerationLibrary.PropertyData.Name
  id: Name
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertyData.Name
  fullName: CodeGenerationLibrary.PropertyData.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 30
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the name of the property in the object model.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.CamelName
  commentId: P:CodeGenerationLibrary.PropertyData.CamelName
  id: CamelName
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: CamelName
  nameWithType: PropertyData.CamelName
  fullName: CodeGenerationLibrary.PropertyData.CamelName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CamelName
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 35
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the camel name of the property.\n"
  example: []
  syntax:
    content: public string CamelName { get; }
    content.vb: Public ReadOnly Property CamelName As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.CamelName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName
  commentId: P:CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName
  id: PropertyContainerPropertyName
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: PropertyContainerPropertyName
  nameWithType: PropertyData.PropertyContainerPropertyName
  fullName: CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PropertyContainerPropertyName
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 40
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the name of the property to use in the property container.\n"
  example: []
  syntax:
    content: public string PropertyContainerPropertyName { get; }
    content.vb: Public ReadOnly Property PropertyContainerPropertyName As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.SummaryComment
  commentId: P:CodeGenerationLibrary.PropertyData.SummaryComment
  id: SummaryComment
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: SummaryComment
  nameWithType: PropertyData.SummaryComment
  fullName: CodeGenerationLibrary.PropertyData.SummaryComment
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SummaryComment
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 45
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the summary comment for the property.\n"
  example: []
  syntax:
    content: public string SummaryComment { get; set; }
    content.vb: Public Property SummaryComment As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.SummaryComment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.FullSummaryComment
  commentId: P:CodeGenerationLibrary.PropertyData.FullSummaryComment
  id: FullSummaryComment
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: FullSummaryComment
  nameWithType: PropertyData.FullSummaryComment
  fullName: CodeGenerationLibrary.PropertyData.FullSummaryComment
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: FullSummaryComment
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 51
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the full summary comment for use on the property itself (includes a \"gets or sets\" in front of the property\nis settable, or a \"gets\" if the property is not settable.\n"
  example: []
  syntax:
    content: public string FullSummaryComment { get; }
    content.vb: Public ReadOnly Property FullSummaryComment As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.FullSummaryComment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.RemarksComment
  commentId: P:CodeGenerationLibrary.PropertyData.RemarksComment
  id: RemarksComment
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: RemarksComment
  nameWithType: PropertyData.RemarksComment
  fullName: CodeGenerationLibrary.PropertyData.RemarksComment
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemarksComment
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 69
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the remarks comment for the property.\n"
  example: []
  syntax:
    content: public string RemarksComment { get; set; }
    content.vb: Public Property RemarksComment As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.RemarksComment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.BoundAccess
  commentId: P:CodeGenerationLibrary.PropertyData.BoundAccess
  id: BoundAccess
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: BoundAccess
  nameWithType: PropertyData.BoundAccess
  fullName: CodeGenerationLibrary.PropertyData.BoundAccess
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BoundAccess
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 74
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the access allowed when the property is bound.\n"
  example: []
  syntax:
    content: public BindingAccess BoundAccess { get; set; }
    content.vb: Public Property BoundAccess As BindingAccess
    parameters: []
    return:
      type: CodeGenerationLibrary.BindingAccess
  overload: CodeGenerationLibrary.PropertyData.BoundAccess*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.UnboundAccess
  commentId: P:CodeGenerationLibrary.PropertyData.UnboundAccess
  id: UnboundAccess
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: UnboundAccess
  nameWithType: PropertyData.UnboundAccess
  fullName: CodeGenerationLibrary.PropertyData.UnboundAccess
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundAccess
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 79
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the access allowed when the property is unbound.\n"
  example: []
  syntax:
    content: public BindingAccess UnboundAccess { get; set; }
    content.vb: Public Property UnboundAccess As BindingAccess
    parameters: []
    return:
      type: CodeGenerationLibrary.BindingAccess
  overload: CodeGenerationLibrary.PropertyData.UnboundAccess*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.IsWritable
  commentId: P:CodeGenerationLibrary.PropertyData.IsWritable
  id: IsWritable
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: IsWritable
  nameWithType: PropertyData.IsWritable
  fullName: CodeGenerationLibrary.PropertyData.IsWritable
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsWritable
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 84
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a value indicating if this property is writable.\n"
  example: []
  syntax:
    content: public bool IsWritable { get; }
    content.vb: Public ReadOnly Property IsWritable As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.IsWritable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.CanSerializeToServer
  commentId: P:CodeGenerationLibrary.PropertyData.CanSerializeToServer
  id: CanSerializeToServer
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: CanSerializeToServer
  nameWithType: PropertyData.CanSerializeToServer
  fullName: CodeGenerationLibrary.PropertyData.CanSerializeToServer
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanSerializeToServer
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 90
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a value indicating if this property can be serialized to the server.\n"
  example: []
  syntax:
    content: public bool CanSerializeToServer { get; }
    content.vb: Public ReadOnly Property CanSerializeToServer As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.CanSerializeToServer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.HasPublicSetter
  commentId: P:CodeGenerationLibrary.PropertyData.HasPublicSetter
  id: HasPublicSetter
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: HasPublicSetter
  nameWithType: PropertyData.HasPublicSetter
  fullName: CodeGenerationLibrary.PropertyData.HasPublicSetter
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HasPublicSetter
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 95
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a value indicating if this property has a public setter.\n"
  example: []
  syntax:
    content: public bool HasPublicSetter { get; }
    content.vb: Public ReadOnly Property HasPublicSetter As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.HasPublicSetter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.HideSetter
  commentId: P:CodeGenerationLibrary.PropertyData.HideSetter
  id: HideSetter
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: HideSetter
  nameWithType: PropertyData.HideSetter
  fullName: CodeGenerationLibrary.PropertyData.HideSetter
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HideSetter
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 100
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nSets whether the setter should be hidden (private).\n"
  example: []
  syntax:
    content: public bool HideSetter { set; }
    content.vb: Public WriteOnly Property HideSetter As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.HideSetter*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer
  commentId: P:CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer
  id: IsOutsidePropertyContainer
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: IsOutsidePropertyContainer
  nameWithType: PropertyData.IsOutsidePropertyContainer
  fullName: CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsOutsidePropertyContainer
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 109
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets if the property should live outside of the default property container.\n"
  remarks: "\nProperties which have this specified persist statically across Refresh().\n"
  example: []
  syntax:
    content: public bool IsOutsidePropertyContainer { get; set; }
    content.vb: Public Property IsOutsidePropertyContainer As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.SkipPropertyAssignment
  commentId: P:CodeGenerationLibrary.PropertyData.SkipPropertyAssignment
  id: SkipPropertyAssignment
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: SkipPropertyAssignment
  nameWithType: PropertyData.SkipPropertyAssignment
  fullName: CodeGenerationLibrary.PropertyData.SkipPropertyAssignment
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SkipPropertyAssignment
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 118
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets if the property should just be defined, and not assigned to in the generated constructors.\n"
  remarks: "\nThis is useful for example for properties such as BaseBehaviors, which we would like to autogenerate but\nwhich are assigned to in a special fashion.\n"
  example: []
  syntax:
    content: public bool SkipPropertyAssignment { get; set; }
    content.vb: Public Property SkipPropertyAssignment As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.SkipPropertyAssignment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod
  commentId: P:CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod
  id: ObjectModelToProtocolMethod
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: ObjectModelToProtocolMethod
  nameWithType: PropertyData.ObjectModelToProtocolMethod
  fullName: CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ObjectModelToProtocolMethod
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 126
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the name of the conversion method which turns an object model object into a protocol object.\n"
  remarks: "\nBy default this is null, which means use the default conversion method name.\n"
  example: []
  syntax:
    content: public string ObjectModelToProtocolMethod { get; set; }
    content.vb: Public Property ObjectModelToProtocolMethod As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod
  commentId: P:CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod
  id: HasObjectModelToProtocolMethod
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: HasObjectModelToProtocolMethod
  nameWithType: PropertyData.HasObjectModelToProtocolMethod
  fullName: CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HasObjectModelToProtocolMethod
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 131
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets if this has a custom conversion method for converting object model types to protocol types.\n"
  example: []
  syntax:
    content: public bool HasObjectModelToProtocolMethod { get; }
    content.vb: Public ReadOnly Property HasObjectModelToProtocolMethod As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod
  commentId: P:CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod
  id: ProtocolToObjectModelMethod
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: ProtocolToObjectModelMethod
  nameWithType: PropertyData.ProtocolToObjectModelMethod
  fullName: CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ProtocolToObjectModelMethod
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 139
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the name of the conversion method which turns a protocol object into an object model object.\n"
  remarks: "\nBy default this is null, which means use the default conversion method name.\n"
  example: []
  syntax:
    content: public string ProtocolToObjectModelMethod { get; set; }
    content.vb: Public Property ProtocolToObjectModelMethod As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod
  commentId: P:CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod
  id: HasProtocolToObjectModelMethod
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: HasProtocolToObjectModelMethod
  nameWithType: PropertyData.HasProtocolToObjectModelMethod
  fullName: CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HasProtocolToObjectModelMethod
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 144
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets if this has a custom conversion method for converting protocol types to object model types.\n"
  example: []
  syntax:
    content: public bool HasProtocolToObjectModelMethod { get; }
    content.vb: Public ReadOnly Property HasProtocolToObjectModelMethod As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement
  commentId: P:CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement
  id: AdditionalPropertyInitializationStatement
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: AdditionalPropertyInitializationStatement
  nameWithType: PropertyData.AdditionalPropertyInitializationStatement
  fullName: CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AdditionalPropertyInitializationStatement
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 149
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets an additional property statement to be included at the end of all constructors.\n"
  example: []
  syntax:
    content: public string AdditionalPropertyInitializationStatement { get; set; }
    content.vb: Public Property AdditionalPropertyInitializationStatement As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.ConstructorArgumentType
  commentId: P:CodeGenerationLibrary.PropertyData.ConstructorArgumentType
  id: ConstructorArgumentType
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: ConstructorArgumentType
  nameWithType: PropertyData.ConstructorArgumentType
  fullName: CodeGenerationLibrary.PropertyData.ConstructorArgumentType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConstructorArgumentType
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 154
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the constructor argument type.\n"
  example: []
  syntax:
    content: public ConstructorArgumentType ConstructorArgumentType { get; set; }
    content.vb: Public Property ConstructorArgumentType As ConstructorArgumentType
    parameters: []
    return:
      type: CodeGenerationLibrary.ConstructorArgumentType
  overload: CodeGenerationLibrary.PropertyData.ConstructorArgumentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.IsClientOnly
  commentId: P:CodeGenerationLibrary.PropertyData.IsClientOnly
  id: IsClientOnly
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: IsClientOnly
  nameWithType: PropertyData.IsClientOnly
  fullName: CodeGenerationLibrary.PropertyData.IsClientOnly
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsClientOnly
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 159
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets of this property is client only. A client only property cannot be serialized to or from the server.\n"
  example: []
  syntax:
    content: public bool IsClientOnly { get; set; }
    content.vb: Public Property IsClientOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.IsClientOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.PropertyData.IsTypeCollection
  commentId: P:CodeGenerationLibrary.PropertyData.IsTypeCollection
  id: IsTypeCollection
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: IsTypeCollection
  nameWithType: PropertyData.IsTypeCollection
  fullName: CodeGenerationLibrary.PropertyData.IsTypeCollection
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsTypeCollection
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 165
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets if the type is a collection.\n"
  example: []
  syntax:
    content: public bool IsTypeCollection { get; }
    content.vb: Public ReadOnly Property IsTypeCollection As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.IsTypeCollection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.GenericTypeParameter
  commentId: P:CodeGenerationLibrary.PropertyData.GenericTypeParameter
  id: GenericTypeParameter
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: GenericTypeParameter
  nameWithType: PropertyData.GenericTypeParameter
  fullName: CodeGenerationLibrary.PropertyData.GenericTypeParameter
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GenericTypeParameter
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 174
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the generic type parameter of this property.\n"
  example: []
  syntax:
    content: public string GenericTypeParameter { get; }
    content.vb: Public ReadOnly Property GenericTypeParameter As String
    parameters: []
    return:
      type: System.String
      description: The generic type parameter.
  overload: CodeGenerationLibrary.PropertyData.GenericTypeParameter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.IsTypeNullable
  commentId: P:CodeGenerationLibrary.PropertyData.IsTypeNullable
  id: IsTypeNullable
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: IsTypeNullable
  nameWithType: PropertyData.IsTypeNullable
  fullName: CodeGenerationLibrary.PropertyData.IsTypeNullable
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsTypeNullable
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 188
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets if this properties type is nullable.\n"
  example: []
  syntax:
    content: public bool IsTypeNullable { get; }
    content.vb: Public ReadOnly Property IsTypeNullable As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.PropertyData.IsTypeNullable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.PropertyData.GetCollectionSetterString
  commentId: M:CodeGenerationLibrary.PropertyData.GetCollectionSetterString
  id: GetCollectionSetterString
  parent: CodeGenerationLibrary.PropertyData
  langs:
  - csharp
  - vb
  name: GetCollectionSetterString()
  nameWithType: PropertyData.GetCollectionSetterString()
  fullName: CodeGenerationLibrary.PropertyData.GetCollectionSetterString()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCollectionSetterString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/PropertyData.cs
    startLine: 190
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public string GetCollectionSetterString()
    content.vb: Public Function GetCollectionSetterString As String
    return:
      type: System.String
  overload: CodeGenerationLibrary.PropertyData.GetCollectionSetterString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CodeGenerationLibrary
  commentId: N:CodeGenerationLibrary
  isExternal: false
  name: CodeGenerationLibrary
  nameWithType: CodeGenerationLibrary
  fullName: CodeGenerationLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeGenerationLibrary.PropertyData.Type*
  commentId: Overload:CodeGenerationLibrary.PropertyData.Type
  isExternal: false
  name: Type
  nameWithType: PropertyData.Type
  fullName: CodeGenerationLibrary.PropertyData.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CodeGenerationLibrary.PropertyData.Name*
  commentId: Overload:CodeGenerationLibrary.PropertyData.Name
  isExternal: false
  name: Name
  nameWithType: PropertyData.Name
  fullName: CodeGenerationLibrary.PropertyData.Name
- uid: CodeGenerationLibrary.PropertyData.CamelName*
  commentId: Overload:CodeGenerationLibrary.PropertyData.CamelName
  isExternal: false
  name: CamelName
  nameWithType: PropertyData.CamelName
  fullName: CodeGenerationLibrary.PropertyData.CamelName
- uid: CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName*
  commentId: Overload:CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName
  isExternal: false
  name: PropertyContainerPropertyName
  nameWithType: PropertyData.PropertyContainerPropertyName
  fullName: CodeGenerationLibrary.PropertyData.PropertyContainerPropertyName
- uid: CodeGenerationLibrary.PropertyData.SummaryComment*
  commentId: Overload:CodeGenerationLibrary.PropertyData.SummaryComment
  isExternal: false
  name: SummaryComment
  nameWithType: PropertyData.SummaryComment
  fullName: CodeGenerationLibrary.PropertyData.SummaryComment
- uid: CodeGenerationLibrary.PropertyData.FullSummaryComment*
  commentId: Overload:CodeGenerationLibrary.PropertyData.FullSummaryComment
  isExternal: false
  name: FullSummaryComment
  nameWithType: PropertyData.FullSummaryComment
  fullName: CodeGenerationLibrary.PropertyData.FullSummaryComment
- uid: CodeGenerationLibrary.PropertyData.RemarksComment*
  commentId: Overload:CodeGenerationLibrary.PropertyData.RemarksComment
  isExternal: false
  name: RemarksComment
  nameWithType: PropertyData.RemarksComment
  fullName: CodeGenerationLibrary.PropertyData.RemarksComment
- uid: CodeGenerationLibrary.PropertyData.BoundAccess*
  commentId: Overload:CodeGenerationLibrary.PropertyData.BoundAccess
  isExternal: false
  name: BoundAccess
  nameWithType: PropertyData.BoundAccess
  fullName: CodeGenerationLibrary.PropertyData.BoundAccess
- uid: CodeGenerationLibrary.BindingAccess
  commentId: T:CodeGenerationLibrary.BindingAccess
  parent: CodeGenerationLibrary
  isExternal: false
  name: BindingAccess
  nameWithType: BindingAccess
  fullName: CodeGenerationLibrary.BindingAccess
- uid: CodeGenerationLibrary.PropertyData.UnboundAccess*
  commentId: Overload:CodeGenerationLibrary.PropertyData.UnboundAccess
  isExternal: false
  name: UnboundAccess
  nameWithType: PropertyData.UnboundAccess
  fullName: CodeGenerationLibrary.PropertyData.UnboundAccess
- uid: CodeGenerationLibrary.PropertyData.IsWritable*
  commentId: Overload:CodeGenerationLibrary.PropertyData.IsWritable
  isExternal: false
  name: IsWritable
  nameWithType: PropertyData.IsWritable
  fullName: CodeGenerationLibrary.PropertyData.IsWritable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CodeGenerationLibrary.PropertyData.CanSerializeToServer*
  commentId: Overload:CodeGenerationLibrary.PropertyData.CanSerializeToServer
  isExternal: false
  name: CanSerializeToServer
  nameWithType: PropertyData.CanSerializeToServer
  fullName: CodeGenerationLibrary.PropertyData.CanSerializeToServer
- uid: CodeGenerationLibrary.PropertyData.HasPublicSetter*
  commentId: Overload:CodeGenerationLibrary.PropertyData.HasPublicSetter
  isExternal: false
  name: HasPublicSetter
  nameWithType: PropertyData.HasPublicSetter
  fullName: CodeGenerationLibrary.PropertyData.HasPublicSetter
- uid: CodeGenerationLibrary.PropertyData.HideSetter*
  commentId: Overload:CodeGenerationLibrary.PropertyData.HideSetter
  isExternal: false
  name: HideSetter
  nameWithType: PropertyData.HideSetter
  fullName: CodeGenerationLibrary.PropertyData.HideSetter
- uid: CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer*
  commentId: Overload:CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer
  isExternal: false
  name: IsOutsidePropertyContainer
  nameWithType: PropertyData.IsOutsidePropertyContainer
  fullName: CodeGenerationLibrary.PropertyData.IsOutsidePropertyContainer
- uid: CodeGenerationLibrary.PropertyData.SkipPropertyAssignment*
  commentId: Overload:CodeGenerationLibrary.PropertyData.SkipPropertyAssignment
  isExternal: false
  name: SkipPropertyAssignment
  nameWithType: PropertyData.SkipPropertyAssignment
  fullName: CodeGenerationLibrary.PropertyData.SkipPropertyAssignment
- uid: CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod*
  commentId: Overload:CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod
  isExternal: false
  name: ObjectModelToProtocolMethod
  nameWithType: PropertyData.ObjectModelToProtocolMethod
  fullName: CodeGenerationLibrary.PropertyData.ObjectModelToProtocolMethod
- uid: CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod*
  commentId: Overload:CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod
  isExternal: false
  name: HasObjectModelToProtocolMethod
  nameWithType: PropertyData.HasObjectModelToProtocolMethod
  fullName: CodeGenerationLibrary.PropertyData.HasObjectModelToProtocolMethod
- uid: CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod*
  commentId: Overload:CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod
  isExternal: false
  name: ProtocolToObjectModelMethod
  nameWithType: PropertyData.ProtocolToObjectModelMethod
  fullName: CodeGenerationLibrary.PropertyData.ProtocolToObjectModelMethod
- uid: CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod*
  commentId: Overload:CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod
  isExternal: false
  name: HasProtocolToObjectModelMethod
  nameWithType: PropertyData.HasProtocolToObjectModelMethod
  fullName: CodeGenerationLibrary.PropertyData.HasProtocolToObjectModelMethod
- uid: CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement*
  commentId: Overload:CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement
  isExternal: false
  name: AdditionalPropertyInitializationStatement
  nameWithType: PropertyData.AdditionalPropertyInitializationStatement
  fullName: CodeGenerationLibrary.PropertyData.AdditionalPropertyInitializationStatement
- uid: CodeGenerationLibrary.PropertyData.ConstructorArgumentType*
  commentId: Overload:CodeGenerationLibrary.PropertyData.ConstructorArgumentType
  isExternal: false
  name: ConstructorArgumentType
  nameWithType: PropertyData.ConstructorArgumentType
  fullName: CodeGenerationLibrary.PropertyData.ConstructorArgumentType
- uid: CodeGenerationLibrary.ConstructorArgumentType
  commentId: T:CodeGenerationLibrary.ConstructorArgumentType
  parent: CodeGenerationLibrary
  isExternal: false
  name: ConstructorArgumentType
  nameWithType: ConstructorArgumentType
  fullName: CodeGenerationLibrary.ConstructorArgumentType
- uid: CodeGenerationLibrary.PropertyData.IsClientOnly*
  commentId: Overload:CodeGenerationLibrary.PropertyData.IsClientOnly
  isExternal: false
  name: IsClientOnly
  nameWithType: PropertyData.IsClientOnly
  fullName: CodeGenerationLibrary.PropertyData.IsClientOnly
- uid: CodeGenerationLibrary.PropertyData.IsTypeCollection*
  commentId: Overload:CodeGenerationLibrary.PropertyData.IsTypeCollection
  isExternal: false
  name: IsTypeCollection
  nameWithType: PropertyData.IsTypeCollection
  fullName: CodeGenerationLibrary.PropertyData.IsTypeCollection
- uid: CodeGenerationLibrary.PropertyData.GenericTypeParameter*
  commentId: Overload:CodeGenerationLibrary.PropertyData.GenericTypeParameter
  isExternal: false
  name: GenericTypeParameter
  nameWithType: PropertyData.GenericTypeParameter
  fullName: CodeGenerationLibrary.PropertyData.GenericTypeParameter
- uid: CodeGenerationLibrary.PropertyData.IsTypeNullable*
  commentId: Overload:CodeGenerationLibrary.PropertyData.IsTypeNullable
  isExternal: false
  name: IsTypeNullable
  nameWithType: PropertyData.IsTypeNullable
  fullName: CodeGenerationLibrary.PropertyData.IsTypeNullable
- uid: CodeGenerationLibrary.PropertyData.GetCollectionSetterString*
  commentId: Overload:CodeGenerationLibrary.PropertyData.GetCollectionSetterString
  isExternal: false
  name: GetCollectionSetterString
  nameWithType: PropertyData.GetCollectionSetterString
  fullName: CodeGenerationLibrary.PropertyData.GetCollectionSetterString
