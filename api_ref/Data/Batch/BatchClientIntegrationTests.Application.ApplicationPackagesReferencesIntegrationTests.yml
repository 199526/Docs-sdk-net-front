### YamlMime:ManagedReference
items:
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  commentId: T:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  id: ApplicationPackagesReferencesIntegrationTests
  parent: BatchClientIntegrationTests.Application
  children:
  - BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences
  - BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences
  - BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  - BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  - BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  langs:
  - csharp
  - vb
  name: ApplicationPackagesReferencesIntegrationTests
  nameWithType: ApplicationPackagesReferencesIntegrationTests
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ApplicationPackagesReferencesIntegrationTests
    path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
    startLine: 33
  assemblies:
  - BatchClientIntegrationTests
  namespace: BatchClientIntegrationTests.Application
  syntax:
    content: 'public class ApplicationPackagesReferencesIntegrationTests : IClassFixture<ApplicationPackageFixture>'
    content.vb: >-
      Public Class ApplicationPackagesReferencesIntegrationTests
          Inherits IClassFixture(Of ApplicationPackageFixture)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  commentId: M:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  id: IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  parent: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  langs:
  - csharp
  - vb
  name: IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService()
  nameWithType: ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService()
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
    path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
    startLine: 39
  assemblies:
  - BatchClientIntegrationTests
  namespace: BatchClientIntegrationTests.Application
  syntax:
    content: public Task IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService()
    content.vb: Public Function IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService As Task
    return:
      type: Task
  overload: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  commentId: M:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  id: UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  parent: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  langs:
  - csharp
  - vb
  name: UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool()
  nameWithType: ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool()
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
    path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
    startLine: 81
  assemblies:
  - BatchClientIntegrationTests
  namespace: BatchClientIntegrationTests.Application
  syntax:
    content: public Task UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool()
    content.vb: Public Function UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool As Task
    return:
      type: Task
  overload: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  commentId: M:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  id: IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  parent: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  langs:
  - csharp
  - vb
  name: IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException()
  nameWithType: ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException()
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
    path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
    startLine: 120
  assemblies:
  - BatchClientIntegrationTests
  namespace: BatchClientIntegrationTests.Application
  syntax:
    content: public Task IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException()
    content.vb: Public Function IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException As Task
    return:
      type: Task
  overload: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences
  commentId: M:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences
  id: CanCreateAndUpdateJobScheduleWithApplicationReferences
  parent: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  langs:
  - csharp
  - vb
  name: CanCreateAndUpdateJobScheduleWithApplicationReferences()
  nameWithType: ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences()
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanCreateAndUpdateJobScheduleWithApplicationReferences
    path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
    startLine: 138
  assemblies:
  - BatchClientIntegrationTests
  namespace: BatchClientIntegrationTests.Application
  syntax:
    content: public Task CanCreateAndUpdateJobScheduleWithApplicationReferences()
    content.vb: Public Function CanCreateAndUpdateJobScheduleWithApplicationReferences As Task
    return:
      type: Task
  overload: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences
  commentId: M:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences
  id: CanCreateJobAndAutoPoolWithAppPackageReferences
  parent: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests
  langs:
  - csharp
  - vb
  name: CanCreateJobAndAutoPoolWithAppPackageReferences()
  nameWithType: ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences()
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanCreateJobAndAutoPoolWithAppPackageReferences
    path: src/Batch/Client/Tests/ObjectModel/BatchClientIntegrationTests/Application/ApplicationPackagesReferencesIntegrationTests.cs
    startLine: 221
  assemblies:
  - BatchClientIntegrationTests
  namespace: BatchClientIntegrationTests.Application
  syntax:
    content: public Task CanCreateJobAndAutoPoolWithAppPackageReferences()
    content.vb: Public Function CanCreateJobAndAutoPoolWithAppPackageReferences As Task
    return:
      type: Task
  overload: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BatchClientIntegrationTests.Application
  commentId: N:BatchClientIntegrationTests.Application
  isExternal: false
  name: BatchClientIntegrationTests.Application
  nameWithType: BatchClientIntegrationTests.Application
  fullName: BatchClientIntegrationTests.Application
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService*
  commentId: Overload:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  isExternal: false
  name: IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  nameWithType: ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolIsCommittedWithApplicationPackageReferences_ThenThoseReferencesArePersistedInTheService
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool*
  commentId: Overload:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  isExternal: false
  name: UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  nameWithType: ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.UpdateAnExistingPoolWithNewApplicationPackageReferences_AndChecksTheApplicationPackageReferencesIsOnThePool
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException*
  commentId: Overload:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  isExternal: false
  name: IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  nameWithType: ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.IfAPoolSpecifiesANonExistentApplicationPackage_ThenCommittingThePoolThrowsAnException
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences*
  commentId: Overload:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences
  isExternal: false
  name: CanCreateAndUpdateJobScheduleWithApplicationReferences
  nameWithType: ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateAndUpdateJobScheduleWithApplicationReferences
- uid: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences*
  commentId: Overload:BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences
  isExternal: false
  name: CanCreateJobAndAutoPoolWithAppPackageReferences
  nameWithType: ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences
  fullName: BatchClientIntegrationTests.Application.ApplicationPackagesReferencesIntegrationTests.CanCreateJobAndAutoPoolWithAppPackageReferences
