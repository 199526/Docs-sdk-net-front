### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  commentId: T:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  id: ComparisonRule
  parent: Azure.Batch.Unit.Tests.TestUtilities
  children:
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create``2(System.Type,System.Type,System.Func{``0,``1,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult},System.String,System.String)
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2
  - Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName
  langs:
  - csharp
  - vb
  name: ComparisonRule
  nameWithType: ComparisonRule
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ComparisonRule
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 18
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public class ComparisonRule
    content.vb: Public Class ComparisonRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1
  commentId: P:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1
  id: Type1
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Type1
  nameWithType: ComparisonRule.Type1
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type1
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 20
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public Type Type1 { get; }
    content.vb: Public ReadOnly Property Type1 As Type
    parameters: []
    return:
      type: System.Type
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2
  commentId: P:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2
  id: Type2
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Type2
  nameWithType: ComparisonRule.Type2
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type2
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 22
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public Type Type2 { get; }
    content.vb: Public ReadOnly Property Type2 As Type
    parameters: []
    return:
      type: System.Type
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer
  commentId: P:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer
  id: Comparer
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Comparer
  nameWithType: ComparisonRule.Comparer
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Comparer
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 24
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public Func<object, object, ObjectComparer.CheckEqualityResult> Comparer { get; }
    content.vb: Public ReadOnly Property Comparer As Func(Of Object, Object, ObjectComparer.CheckEqualityResult)
    parameters: []
    return:
      type: System.Func{System.Object,System.Object,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult}
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName
  commentId: P:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName
  id: Type1PropertyName
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Type1PropertyName
  nameWithType: ComparisonRule.Type1PropertyName
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type1PropertyName
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 26
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public string Type1PropertyName { get; }
    content.vb: Public ReadOnly Property Type1PropertyName As String
    parameters: []
    return:
      type: System.String
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName
  commentId: P:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName
  id: Type2PropertyName
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Type2PropertyName
  nameWithType: ComparisonRule.Type2PropertyName
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type2PropertyName
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 28
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public string Type2PropertyName { get; }
    content.vb: Public ReadOnly Property Type2PropertyName As String
    parameters: []
    return:
      type: System.String
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip
  id: Flip
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Flip()
  nameWithType: ComparisonRule.Flip()
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Flip
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 46
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public ComparisonRule Flip()
    content.vb: Public Function Flip As ComparisonRule
    return:
      type: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create``2(System.Type,System.Type,System.Func{``0,``1,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult},System.String,System.String)
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create``2(System.Type,System.Type,System.Func{``0,``1,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult},System.String,System.String)
  id: Create``2(System.Type,System.Type,System.Func{``0,``1,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult},System.String,System.String)
  parent: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  langs:
  - csharp
  - vb
  name: Create<TOne, TTwo>(Type, Type, Func<TOne, TTwo, ObjectComparer.CheckEqualityResult>, String, String)
  nameWithType: ComparisonRule.Create<TOne, TTwo>(Type, Type, Func<TOne, TTwo, ObjectComparer.CheckEqualityResult>, String, String)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create<TOne, TTwo>(System.Type, System.Type, System.Func<TOne, TTwo, Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Create
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ComparisonRule.cs
    startLine: 51
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public static ComparisonRule Create<TOne, TTwo>(Type type1, Type type2, Func<TOne, TTwo, ObjectComparer.CheckEqualityResult> comparer, string type1PropertyName, string type2PropertyName)
    content.vb: Public Shared Function Create(Of TOne, TTwo)(type1 As Type, type2 As Type, comparer As Func(Of TOne, TTwo, ObjectComparer.CheckEqualityResult), type1PropertyName As String, type2PropertyName As String) As ComparisonRule
    parameters:
    - id: type1
      type: System.Type
    - id: type2
      type: System.Type
    - id: comparer
      type: System.Func{{TOne},{TTwo},Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult}
    - id: type1PropertyName
      type: System.String
    - id: type2PropertyName
      type: System.String
    typeParameters:
    - id: TOne
    - id: TTwo
    return:
      type: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  overload: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create*
  nameWithType.vb: ComparisonRule.Create(Of TOne, TTwo)(Type, Type, Func(Of TOne, TTwo, ObjectComparer.CheckEqualityResult), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create(Of TOne, TTwo)(System.Type, System.Type, System.Func(Of TOne, TTwo, Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult), System.String, System.String)
  name.vb: Create(Of TOne, TTwo)(Type, Type, Func(Of TOne, TTwo, ObjectComparer.CheckEqualityResult), String, String)
references:
- uid: Azure.Batch.Unit.Tests.TestUtilities
  commentId: N:Azure.Batch.Unit.Tests.TestUtilities
  isExternal: false
  name: Azure.Batch.Unit.Tests.TestUtilities
  nameWithType: Azure.Batch.Unit.Tests.TestUtilities
  fullName: Azure.Batch.Unit.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1
  isExternal: false
  name: Type1
  nameWithType: ComparisonRule.Type1
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2
  isExternal: false
  name: Type2
  nameWithType: ComparisonRule.Type2
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer
  isExternal: false
  name: Comparer
  nameWithType: ComparisonRule.Comparer
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Comparer
- uid: System.Func{System.Object,System.Object,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult}
  commentId: T:System.Func{System.Object,System.Object,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult}
  parent: System
  definition: System.Func`3
  name: Func<Object, Object, ObjectComparer.CheckEqualityResult>
  nameWithType: Func<Object, Object, ObjectComparer.CheckEqualityResult>
  fullName: System.Func<System.Object, System.Object, Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult>
  nameWithType.vb: Func(Of Object, Object, ObjectComparer.CheckEqualityResult)
  fullname.vb: System.Func(Of System.Object, System.Object, Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult)
  name.vb: Func(Of Object, Object, ObjectComparer.CheckEqualityResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
    name: ObjectComparer.CheckEqualityResult
    nameWithType: ObjectComparer.CheckEqualityResult
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
    name: ObjectComparer.CheckEqualityResult
    nameWithType: ObjectComparer.CheckEqualityResult
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName
  isExternal: false
  name: Type1PropertyName
  nameWithType: ComparisonRule.Type1PropertyName
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type1PropertyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName
  isExternal: false
  name: Type2PropertyName
  nameWithType: ComparisonRule.Type2PropertyName
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Type2PropertyName
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip
  isExternal: false
  name: Flip
  nameWithType: ComparisonRule.Flip
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Flip
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  commentId: T:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  parent: Azure.Batch.Unit.Tests.TestUtilities
  isExternal: false
  name: ComparisonRule
  nameWithType: ComparisonRule
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
- uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create
  isExternal: false
  name: Create<TOne, TTwo>
  nameWithType: ComparisonRule.Create<TOne, TTwo>
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create<TOne, TTwo>
  nameWithType.vb: ComparisonRule.Create(Of TOne, TTwo)
  fullname.vb: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule.Create(Of TOne, TTwo)
  name.vb: Create(Of TOne, TTwo)
- uid: System.Func{{TOne},{TTwo},Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult}
  commentId: T:System.Func{``0,``1,Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult}
  parent: System
  definition: System.Func`3
  name: Func<TOne, TTwo, ObjectComparer.CheckEqualityResult>
  nameWithType: Func<TOne, TTwo, ObjectComparer.CheckEqualityResult>
  fullName: System.Func<TOne, TTwo, Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult>
  nameWithType.vb: Func(Of TOne, TTwo, ObjectComparer.CheckEqualityResult)
  fullname.vb: System.Func(Of TOne, TTwo, Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult)
  name.vb: Func(Of TOne, TTwo, ObjectComparer.CheckEqualityResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOne
    nameWithType: TOne
    fullName: TOne
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTwo
    nameWithType: TTwo
    fullName: TTwo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
    name: ObjectComparer.CheckEqualityResult
    nameWithType: ObjectComparer.CheckEqualityResult
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOne
    nameWithType: TOne
    fullName: TOne
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTwo
    nameWithType: TTwo
    fullName: TTwo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
    name: ObjectComparer.CheckEqualityResult
    nameWithType: ObjectComparer.CheckEqualityResult
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  - name: )
    nameWithType: )
    fullName: )
