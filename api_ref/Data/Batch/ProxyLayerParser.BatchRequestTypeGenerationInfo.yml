### YamlMime:ManagedReference
items:
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo
  commentId: T:ProxyLayerParser.BatchRequestTypeGenerationInfo
  id: BatchRequestTypeGenerationInfo
  parent: ProxyLayerParser
  children:
  - ProxyLayerParser.BatchRequestTypeGenerationInfo.#ctor(System.String,System.String,System.String,System.String)
  - ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType
  - ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType
  - ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType
  - ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType
  langs:
  - csharp
  - vb
  name: BatchRequestTypeGenerationInfo
  nameWithType: BatchRequestTypeGenerationInfo
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo
  type: Struct
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestTypeGenerationInfo
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
    startLine: 19
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nMetadata for creating a BatchRequest object.\n"
  example: []
  syntax:
    content: public struct BatchRequestTypeGenerationInfo
    content.vb: Public Structure BatchRequestTypeGenerationInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType
  commentId: P:ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType
  id: OperationType
  parent: ProxyLayerParser.BatchRequestTypeGenerationInfo
  langs:
  - csharp
  - vb
  name: OperationType
  nameWithType: BatchRequestTypeGenerationInfo.OperationType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OperationType
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
    startLine: 24
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nThe operation type, for example if the operation method was PoolOperations.AddWithHttpMessagesAsync, this would be \"Add\".\n"
  example: []
  syntax:
    content: public string OperationType { get; }
    content.vb: Public ReadOnly Property OperationType As String
    parameters: []
    return:
      type: System.String
  overload: ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType
  commentId: P:ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType
  id: ParameterType
  parent: ProxyLayerParser.BatchRequestTypeGenerationInfo
  langs:
  - csharp
  - vb
  name: ParameterType
  nameWithType: BatchRequestTypeGenerationInfo.ParameterType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ParameterType
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
    startLine: 29
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nThe parameter type, or null if there is no parameter. PoolOperations.AddWithHttpMessagesAsync has a parameter of type PoolAddParameter.\n"
  example: []
  syntax:
    content: public string ParameterType { get; }
    content.vb: Public ReadOnly Property ParameterType As String
    parameters: []
    return:
      type: System.String
  overload: ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType
  commentId: P:ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType
  id: OptionsType
  parent: ProxyLayerParser.BatchRequestTypeGenerationInfo
  langs:
  - csharp
  - vb
  name: OptionsType
  nameWithType: BatchRequestTypeGenerationInfo.OptionsType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OptionsType
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
    startLine: 34
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nThe options type. Every operation has an options type. For example, PoolOperations.AddWithHttpMessagesAsync has an options type of PoolAddOptions.\n"
  example: []
  syntax:
    content: public string OptionsType { get; }
    content.vb: Public ReadOnly Property OptionsType As String
    parameters: []
    return:
      type: System.String
  overload: ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType
  commentId: P:ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType
  id: ReturnType
  parent: ProxyLayerParser.BatchRequestTypeGenerationInfo
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: BatchRequestTypeGenerationInfo.ReturnType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ReturnType
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
    startLine: 39
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nThe return type. Every operation has a return type. For example, PoolOperations.AddWithHttpMessagesAsync has a return type of PoolAddHeaders.\n"
  example: []
  syntax:
    content: public string ReturnType { get; }
    content.vb: Public ReadOnly Property ReturnType As String
    parameters: []
    return:
      type: System.String
  overload: ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:ProxyLayerParser.BatchRequestTypeGenerationInfo.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: ProxyLayerParser.BatchRequestTypeGenerationInfo
  langs:
  - csharp
  - vb
  name: BatchRequestTypeGenerationInfo(String, String, String, String)
  nameWithType: BatchRequestTypeGenerationInfo.BatchRequestTypeGenerationInfo(String, String, String, String)
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.BatchRequestTypeGenerationInfo(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestTypeGenerationInfo.cs
    startLine: 41
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  syntax:
    content: public BatchRequestTypeGenerationInfo(string operationType, string parameterType, string optionsType, string returnType)
    content.vb: Public Sub New(operationType As String, parameterType As String, optionsType As String, returnType As String)
    parameters:
    - id: operationType
      type: System.String
    - id: parameterType
      type: System.String
    - id: optionsType
      type: System.String
    - id: returnType
      type: System.String
  overload: ProxyLayerParser.BatchRequestTypeGenerationInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ProxyLayerParser
  commentId: N:ProxyLayerParser
  isExternal: false
  name: ProxyLayerParser
  nameWithType: ProxyLayerParser
  fullName: ProxyLayerParser
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType*
  commentId: Overload:ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType
  isExternal: false
  name: OperationType
  nameWithType: BatchRequestTypeGenerationInfo.OperationType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.OperationType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType*
  commentId: Overload:ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType
  isExternal: false
  name: ParameterType
  nameWithType: BatchRequestTypeGenerationInfo.ParameterType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.ParameterType
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType*
  commentId: Overload:ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType
  isExternal: false
  name: OptionsType
  nameWithType: BatchRequestTypeGenerationInfo.OptionsType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.OptionsType
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType*
  commentId: Overload:ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType
  isExternal: false
  name: ReturnType
  nameWithType: BatchRequestTypeGenerationInfo.ReturnType
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.ReturnType
- uid: ProxyLayerParser.BatchRequestTypeGenerationInfo.#ctor*
  commentId: Overload:ProxyLayerParser.BatchRequestTypeGenerationInfo.#ctor
  isExternal: false
  name: BatchRequestTypeGenerationInfo
  nameWithType: BatchRequestTypeGenerationInfo.BatchRequestTypeGenerationInfo
  fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo.BatchRequestTypeGenerationInfo
