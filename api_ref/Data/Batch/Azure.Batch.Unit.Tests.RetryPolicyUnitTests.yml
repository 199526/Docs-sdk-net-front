### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  commentId: T:Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  id: RetryPolicyUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry
  - Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry
  langs:
  - csharp
  - vb
  name: RetryPolicyUnitTests
  nameWithType: RetryPolicyUnitTests
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RetryPolicyUnitTests
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 35
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class RetryPolicyUnitTests
    content.vb: Public Class RetryPolicyUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper)'
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: RetryPolicyUnitTests(ITestOutputHelper)
  nameWithType: RetryPolicyUnitTests.RetryPolicyUnitTests(ITestOutputHelper)
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.RetryPolicyUnitTests(Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 41
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public RetryPolicyUnitTests(ITestOutputHelper testOutputHelper)
    content.vb: Public Sub New(testOutputHelper As ITestOutputHelper)
    parameters:
    - id: testOutputHelper
      type: Xunit.Abstractions.ITestOutputHelper
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect
  id: LinearRetryPropertiesSetCorrect
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryPropertiesSetCorrect()
  nameWithType: RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryPropertiesSetCorrect
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 52
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void LinearRetryPropertiesSetCorrect()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub LinearRetryPropertiesSetCorrect
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException
  id: LinearRetryRetriesOnNonBatchException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryRetriesOnNonBatchException()
  nameWithType: RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryRetriesOnNonBatchException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 64
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task LinearRetryRetriesOnNonBatchException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function LinearRetryRetriesOnNonBatchException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException
  id: LinearRetryRetriesOnBatchException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryRetriesOnBatchException()
  nameWithType: RetryPolicyUnitTests.LinearRetryRetriesOnBatchException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryRetriesOnBatchException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 80
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task LinearRetryRetriesOnBatchException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function LinearRetryRetriesOnBatchException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount
  id: LinearRetryAbortsRetriesAfterMaxRetryCount
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryAbortsRetriesAfterMaxRetryCount()
  nameWithType: RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryAbortsRetriesAfterMaxRetryCount
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 97
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task LinearRetryAbortsRetriesAfterMaxRetryCount()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function LinearRetryAbortsRetriesAfterMaxRetryCount As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry
  id: LinearRetryThrowsOnInvalidMaxRetry
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryThrowsOnInvalidMaxRetry()
  nameWithType: RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryThrowsOnInvalidMaxRetry
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 127
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void LinearRetryThrowsOnInvalidMaxRetry()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub LinearRetryThrowsOnInvalidMaxRetry
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval
  id: LinearRetryThrowsOnInvalidInterval
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryThrowsOnInvalidInterval()
  nameWithType: RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryThrowsOnInvalidInterval
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 138
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void LinearRetryThrowsOnInvalidInterval()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub LinearRetryThrowsOnInvalidInterval
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions
  id: LinearRetryDoesNotRetryOnValidationExceptions
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: LinearRetryDoesNotRetryOnValidationExceptions()
  nameWithType: RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinearRetryDoesNotRetryOnValidationExceptions
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 149
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task LinearRetryDoesNotRetryOnValidationExceptions()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function LinearRetryDoesNotRetryOnValidationExceptions As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect
  id: ExponentialRetryPropertiesSetCorrect
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryPropertiesSetCorrect()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryPropertiesSetCorrect
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 161
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ExponentialRetryPropertiesSetCorrect()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ExponentialRetryPropertiesSetCorrect
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException
  id: ExponentialRetryRetriesOnNonBatchException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryRetriesOnNonBatchException()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryRetriesOnNonBatchException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 173
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExponentialRetryRetriesOnNonBatchException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExponentialRetryRetriesOnNonBatchException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException
  id: ExponentialRetryRetriesOnBatchException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryRetriesOnBatchException()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryRetriesOnBatchException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 191
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExponentialRetryRetriesOnBatchException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExponentialRetryRetriesOnBatchException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount
  id: ExponentialRetryAbortsRetriesAfterMaxRetryCount
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryAbortsRetriesAfterMaxRetryCount()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryAbortsRetriesAfterMaxRetryCount
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 211
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExponentialRetryAbortsRetriesAfterMaxRetryCount()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExponentialRetryAbortsRetriesAfterMaxRetryCount As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry
  id: ExponentialRetryThrowsOnInvalidMaxRetry
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryThrowsOnInvalidMaxRetry()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryThrowsOnInvalidMaxRetry
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 244
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ExponentialRetryThrowsOnInvalidMaxRetry()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ExponentialRetryThrowsOnInvalidMaxRetry
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval
  id: ExponentialRetryThrowsOnInvalidInterval
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryThrowsOnInvalidInterval()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryThrowsOnInvalidInterval
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 255
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ExponentialRetryThrowsOnInvalidInterval()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ExponentialRetryThrowsOnInvalidInterval
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions
  id: ExponentialRetryDoesNotRetryOnValidationExceptions
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ExponentialRetryDoesNotRetryOnValidationExceptions()
  nameWithType: RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExponentialRetryDoesNotRetryOnValidationExceptions
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 266
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExponentialRetryDoesNotRetryOnValidationExceptions()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExponentialRetryDoesNotRetryOnValidationExceptions As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException
  id: BatchRequestNoRetriesWithNonBatchException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestNoRetriesWithNonBatchException()
  nameWithType: RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestNoRetriesWithNonBatchException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 282
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestNoRetriesWithNonBatchException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestNoRetriesWithNonBatchException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException
  id: BatchRequestRetriesExecutedWithNonBatchException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestRetriesExecutedWithNonBatchException()
  nameWithType: RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestRetriesExecutedWithNonBatchException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 317
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestRetriesExecutedWithNonBatchException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestRetriesExecutedWithNonBatchException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException
  id: BatchRequestRetriesExecutedWithAggregateException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestRetriesExecutedWithAggregateException()
  nameWithType: RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestRetriesExecutedWithAggregateException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 354
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestRetriesExecutedWithAggregateException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestRetriesExecutedWithAggregateException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  id: BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException()
  nameWithType: RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 407
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved
  id: BatchRequestNoRetryStackTracePreserved
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestNoRetryStackTracePreserved()
  nameWithType: RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestNoRetryStackTracePreserved
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 444
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestNoRetryStackTracePreserved()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestNoRetryStackTracePreserved As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved
  id: BatchRequestRetryStackTracePreserved
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestRetryStackTracePreserved()
  nameWithType: RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestRetryStackTracePreserved
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 463
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestRetryStackTracePreserved()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestRetryStackTracePreserved As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries
  id: BatchRequestRetryPolicyNoExceptionNoRetries
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestRetryPolicyNoExceptionNoRetries()
  nameWithType: RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestRetryPolicyNoExceptionNoRetries
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 485
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestRetryPolicyNoExceptionNoRetries()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestRetryPolicyNoExceptionNoRetries As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries
  id: BatchRequestSetClientRequestIdOnRetries
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: BatchRequestSetClientRequestIdOnRetries()
  nameWithType: RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestSetClientRequestIdOnRetries
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 512
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task BatchRequestSetClientRequestIdOnRetries()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function BatchRequestSetClientRequestIdOnRetries As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry
  commentId: M:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry
  id: ListJobSchedulesWithRetry
  parent: Azure.Batch.Unit.Tests.RetryPolicyUnitTests
  langs:
  - csharp
  - vb
  name: ListJobSchedulesWithRetry()
  nameWithType: RetryPolicyUnitTests.ListJobSchedulesWithRetry()
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListJobSchedulesWithRetry
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/RetryPolicyUnitTests.cs
    startLine: 554
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ListJobSchedulesWithRetry()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ListJobSchedulesWithRetry As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.#ctor*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.#ctor
  isExternal: false
  name: RetryPolicyUnitTests
  nameWithType: RetryPolicyUnitTests.RetryPolicyUnitTests
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.RetryPolicyUnitTests
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect
  isExternal: false
  name: LinearRetryPropertiesSetCorrect
  nameWithType: RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryPropertiesSetCorrect
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException
  isExternal: false
  name: LinearRetryRetriesOnNonBatchException
  nameWithType: RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnNonBatchException
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException
  isExternal: false
  name: LinearRetryRetriesOnBatchException
  nameWithType: RetryPolicyUnitTests.LinearRetryRetriesOnBatchException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryRetriesOnBatchException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount
  isExternal: false
  name: LinearRetryAbortsRetriesAfterMaxRetryCount
  nameWithType: RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryAbortsRetriesAfterMaxRetryCount
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry
  isExternal: false
  name: LinearRetryThrowsOnInvalidMaxRetry
  nameWithType: RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidMaxRetry
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval
  isExternal: false
  name: LinearRetryThrowsOnInvalidInterval
  nameWithType: RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryThrowsOnInvalidInterval
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions
  isExternal: false
  name: LinearRetryDoesNotRetryOnValidationExceptions
  nameWithType: RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.LinearRetryDoesNotRetryOnValidationExceptions
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect
  isExternal: false
  name: ExponentialRetryPropertiesSetCorrect
  nameWithType: RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryPropertiesSetCorrect
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException
  isExternal: false
  name: ExponentialRetryRetriesOnNonBatchException
  nameWithType: RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnNonBatchException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException
  isExternal: false
  name: ExponentialRetryRetriesOnBatchException
  nameWithType: RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryRetriesOnBatchException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount
  isExternal: false
  name: ExponentialRetryAbortsRetriesAfterMaxRetryCount
  nameWithType: RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryAbortsRetriesAfterMaxRetryCount
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry
  isExternal: false
  name: ExponentialRetryThrowsOnInvalidMaxRetry
  nameWithType: RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidMaxRetry
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval
  isExternal: false
  name: ExponentialRetryThrowsOnInvalidInterval
  nameWithType: RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryThrowsOnInvalidInterval
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions
  isExternal: false
  name: ExponentialRetryDoesNotRetryOnValidationExceptions
  nameWithType: RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ExponentialRetryDoesNotRetryOnValidationExceptions
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException
  isExternal: false
  name: BatchRequestNoRetriesWithNonBatchException
  nameWithType: RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetriesWithNonBatchException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException
  isExternal: false
  name: BatchRequestRetriesExecutedWithNonBatchException
  nameWithType: RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithNonBatchException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException
  isExternal: false
  name: BatchRequestRetriesExecutedWithAggregateException
  nameWithType: RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetriesExecutedWithAggregateException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  isExternal: false
  name: BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  nameWithType: RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryPolicyNoRetriesExecutedWithAggregateException
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved
  isExternal: false
  name: BatchRequestNoRetryStackTracePreserved
  nameWithType: RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestNoRetryStackTracePreserved
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved
  isExternal: false
  name: BatchRequestRetryStackTracePreserved
  nameWithType: RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryStackTracePreserved
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries
  isExternal: false
  name: BatchRequestRetryPolicyNoExceptionNoRetries
  nameWithType: RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestRetryPolicyNoExceptionNoRetries
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries
  isExternal: false
  name: BatchRequestSetClientRequestIdOnRetries
  nameWithType: RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.BatchRequestSetClientRequestIdOnRetries
- uid: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry*
  commentId: Overload:Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry
  isExternal: false
  name: ListJobSchedulesWithRetry
  nameWithType: RetryPolicyUnitTests.ListJobSchedulesWithRetry
  fullName: Azure.Batch.Unit.Tests.RetryPolicyUnitTests.ListJobSchedulesWithRetry
