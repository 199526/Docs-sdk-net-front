### YamlMime:ManagedReference
items:
- uid: CodeGenerationLibrary.ObjectModelTypeData
  commentId: T:CodeGenerationLibrary.ObjectModelTypeData
  id: ObjectModelTypeData
  parent: CodeGenerationLibrary
  children:
  - CodeGenerationLibrary.ObjectModelTypeData.#ctor
  - CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements
  - CodeGenerationLibrary.ObjectModelTypeData.BoundProperties
  - CodeGenerationLibrary.ObjectModelTypeData.Comment
  - CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties
  - CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString
  - CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes
  - CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder
  - CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString(System.Int32)
  - CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString(System.Int32)
  - CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor
  - CodeGenerationLibrary.ObjectModelTypeData.Includes
  - CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic
  - CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly
  - CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject
  - CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections
  - CodeGenerationLibrary.ObjectModelTypeData.Name
  - CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties
  - CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties
  - CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables
  - CodeGenerationLibrary.ObjectModelTypeData.Properties
  - CodeGenerationLibrary.ObjectModelTypeData.ProtocolName
  - CodeGenerationLibrary.ObjectModelTypeData.PublicProperties
  - CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor
  - CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject
  - CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName
  - CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName
  - CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties
  langs:
  - csharp
  - vb
  name: ObjectModelTypeData
  nameWithType: ObjectModelTypeData
  fullName: CodeGenerationLibrary.ObjectModelTypeData
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ObjectModelTypeData
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 20
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public class ObjectModelTypeData
    content.vb: Public Class ObjectModelTypeData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CodeGenerationLibrary.ObjectModelTypeData.#ctor
  commentId: M:CodeGenerationLibrary.ObjectModelTypeData.#ctor
  id: '#ctor'
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ObjectModelTypeData()
  nameWithType: ObjectModelTypeData.ObjectModelTypeData()
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ObjectModelTypeData()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 27
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  syntax:
    content: public ObjectModelTypeData()
    content.vb: Public Sub New
  overload: CodeGenerationLibrary.ObjectModelTypeData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.Name
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.Name
  id: Name
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ObjectModelTypeData.Name
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 52
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the object model type name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.ObjectModelTypeData.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.ProtocolName
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ProtocolName
  id: ProtocolName
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ProtocolName
  nameWithType: ObjectModelTypeData.ProtocolName
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ProtocolName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ProtocolName
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 57
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the protocol type name.\n"
  example: []
  syntax:
    content: public string ProtocolName { get; set; }
    content.vb: Public Property ProtocolName As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.ObjectModelTypeData.ProtocolName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName
  id: TransportProtocolName
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: TransportProtocolName
  nameWithType: ObjectModelTypeData.TransportProtocolName
  fullName: CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TransportProtocolName
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 62
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the protocol type used by GetTransportObject.\n"
  example: []
  syntax:
    content: public string TransportProtocolName { get; set; }
    content.vb: Public Property TransportProtocolName As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.Comment
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.Comment
  id: Comment
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: Comment
  nameWithType: ObjectModelTypeData.Comment
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Comment
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Comment
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 67
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the comment for the object model type.\n"
  example: []
  syntax:
    content: public string Comment { get; set; }
    content.vb: Public Property Comment As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.ObjectModelTypeData.Comment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections
  id: IsUsedInCollections
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: IsUsedInCollections
  nameWithType: ObjectModelTypeData.IsUsedInCollections
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsUsedInCollections
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 73
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets a value indicating if this type is used in collections and should have the\ncollection converters generated.\n"
  example: []
  syntax:
    content: public bool IsUsedInCollections { get; set; }
    content.vb: Public Property IsUsedInCollections As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly
  id: IsStaticallyReadOnly
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: IsStaticallyReadOnly
  nameWithType: ObjectModelTypeData.IsStaticallyReadOnly
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsStaticallyReadOnly
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 79
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a value indicating if this type is statically read only. A statically read\nonly type has properties which do not have any setters.\n"
  example: []
  syntax:
    content: public bool IsStaticallyReadOnly { get; }
    content.vb: Public ReadOnly Property IsStaticallyReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic
  id: IsConstructorPublic
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: IsConstructorPublic
  nameWithType: ObjectModelTypeData.IsConstructorPublic
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsConstructorPublic
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 84
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets a value indicating if the constructor of this type is public.\n"
  example: []
  syntax:
    content: public bool IsConstructorPublic { get; set; }
    content.vb: Public Property IsConstructorPublic As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder
  id: ForceConstructorOrder
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ForceConstructorOrder
  nameWithType: ObjectModelTypeData.ForceConstructorOrder
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ForceConstructorOrder
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 90
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets a value indicating if the constructor parameter order should be as written in\nthe metadata file instead of alphabetic.\n"
  example: []
  syntax:
    content: public bool ForceConstructorOrder { get; set; }
    content.vb: Public Property ForceConstructorOrder As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor
  id: HideCustomConstructor
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: HideCustomConstructor
  nameWithType: ObjectModelTypeData.HideCustomConstructor
  fullName: CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HideCustomConstructor
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 95
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets a value indicating if the custom constructor should be hidden no matter what.\n"
  example: []
  syntax:
    content: public bool HideCustomConstructor { get; set; }
    content.vb: Public Property HideCustomConstructor As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject
  id: IsTopLevelObject
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: IsTopLevelObject
  nameWithType: ObjectModelTypeData.IsTopLevelObject
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsTopLevelObject
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 101
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets a value indicating if this type is a \"top level\" object. For example top level objects\ninclude job, job schedule, certificate.\n"
  example: []
  syntax:
    content: public bool IsTopLevelObject { get; set; }
    content.vb: Public Property IsTopLevelObject As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables
  id: ParentPathVariables
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ParentPathVariables
  nameWithType: ObjectModelTypeData.ParentPathVariables
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ParentPathVariables
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 107
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets the parent path variables for this type. These generate some additional private\nproperties in top level objects.\n"
  example: []
  syntax:
    content: public List<string> ParentPathVariables { get; set; }
    content.vb: Public Property ParentPathVariables As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
  overload: CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes
  id: CustomIncludes
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: CustomIncludes
  nameWithType: ObjectModelTypeData.CustomIncludes
  fullName: CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CustomIncludes
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 112
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets or sets a list of custom includes to be added to the set of universal includes.\n"
  example: []
  syntax:
    content: public List<string> CustomIncludes { get; set; }
    content.vb: Public Property CustomIncludes As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
  overload: CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.Includes
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.Includes
  id: Includes
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: Includes
  nameWithType: ObjectModelTypeData.Includes
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Includes
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Includes
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 117
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a collection of includes that are used by this object model type.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Includes { get; }
    content.vb: Public ReadOnly Property Includes As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  overload: CodeGenerationLibrary.ObjectModelTypeData.Includes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.Properties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.Properties
  id: Properties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ObjectModelTypeData.Properties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Properties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Properties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 122
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a mapping of OM properties to protocol properties. Protocol type can be null in which case the default property mapper (same name, same type) will be used.\n"
  example: []
  syntax:
    content: public List<KeyValuePair<PropertyData, PropertyData>> Properties { get; set; }
    content.vb: Public Property Properties As List(Of KeyValuePair(Of PropertyData, PropertyData))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  overload: CodeGenerationLibrary.ObjectModelTypeData.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.PublicProperties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.PublicProperties
  id: PublicProperties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: PublicProperties
  nameWithType: ObjectModelTypeData.PublicProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.PublicProperties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PublicProperties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 127
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a mapping of OM properties to protocol properties that are public.\n"
  example: []
  syntax:
    content: public List<KeyValuePair<PropertyData, PropertyData>> PublicProperties { get; }
    content.vb: Public ReadOnly Property PublicProperties As List(Of KeyValuePair(Of PropertyData, PropertyData))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  overload: CodeGenerationLibrary.ObjectModelTypeData.PublicProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties
  id: OrderedPublicProperties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: OrderedPublicProperties
  nameWithType: ObjectModelTypeData.OrderedPublicProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OrderedPublicProperties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 133
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a mapping of properties ordered by property name.\n"
  example: []
  syntax:
    content: public List<KeyValuePair<PropertyData, PropertyData>> OrderedPublicProperties { get; }
    content.vb: Public ReadOnly Property OrderedPublicProperties As List(Of KeyValuePair(Of PropertyData, PropertyData))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  overload: CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties
  id: OutsidePropertyContainerProperties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: OutsidePropertyContainerProperties
  nameWithType: ObjectModelTypeData.OutsidePropertyContainerProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OutsidePropertyContainerProperties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 138
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a mapping of properties that are outside the property container.  This is used for example for properties like ParentBatchClient.\n"
  example: []
  syntax:
    content: public List<KeyValuePair<PropertyData, PropertyData>> OutsidePropertyContainerProperties { get; }
    content.vb: Public ReadOnly Property OutsidePropertyContainerProperties As List(Of KeyValuePair(Of PropertyData, PropertyData))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  overload: CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.BoundProperties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.BoundProperties
  id: BoundProperties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: BoundProperties
  nameWithType: ObjectModelTypeData.BoundProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.BoundProperties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BoundProperties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 144
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a mapping of properties which are retrieved from the underlying protocol object.\n"
  example: []
  syntax:
    content: public List<KeyValuePair<PropertyData, PropertyData>> BoundProperties { get; }
    content.vb: Public ReadOnly Property BoundProperties As List(Of KeyValuePair(Of PropertyData, PropertyData))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  overload: CodeGenerationLibrary.ObjectModelTypeData.BoundProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties
  id: UnboundProperties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: UnboundProperties
  nameWithType: ObjectModelTypeData.UnboundProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundProperties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 150
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a mapping of properties which can be set on the underlying protocol object.\n"
  example: []
  syntax:
    content: public List<KeyValuePair<PropertyData, PropertyData>> UnboundProperties { get; }
    content.vb: Public ReadOnly Property UnboundProperties As List(Of KeyValuePair(Of PropertyData, PropertyData))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  overload: CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties
  id: ConstructorProperties
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ConstructorProperties
  nameWithType: ObjectModelTypeData.ConstructorProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConstructorProperties
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 157
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a collection of properties which are used in the constructor of this type.\n"
  example: []
  syntax:
    content: public IEnumerable<PropertyData> ConstructorProperties { get; }
    content.vb: Public ReadOnly Property ConstructorProperties As IEnumerable(Of PropertyData)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{CodeGenerationLibrary.PropertyData}
      description: A collection of properties used in the constructor of this type.
  overload: CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor
  id: ShouldDefineCustomConstructor
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ShouldDefineCustomConstructor
  nameWithType: ObjectModelTypeData.ShouldDefineCustomConstructor
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ShouldDefineCustomConstructor
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 212
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a value indicating if this type should define a custom constructor.\n"
  example: []
  syntax:
    content: public bool ShouldDefineCustomConstructor { get; }
    content.vb: Public ReadOnly Property ShouldDefineCustomConstructor As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject
  id: ShouldDefineGetTransportObject
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ShouldDefineGetTransportObject
  nameWithType: ObjectModelTypeData.ShouldDefineGetTransportObject
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ShouldDefineGetTransportObject
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 219
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets a value indicating if this type should define a GetTransportObject method and implement the corresponding interface.\nIn cases where the type is never serialized back to the server, GetTransportObject and the corresponding interface are not\nneeded.\n"
  example: []
  syntax:
    content: public bool ShouldDefineGetTransportObject { get; }
    content.vb: Public ReadOnly Property ShouldDefineGetTransportObject As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName
  id: TransportObjectTypeName
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: TransportObjectTypeName
  nameWithType: ObjectModelTypeData.TransportObjectTypeName
  fullName: CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TransportObjectTypeName
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 225
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the name of the transport type (used in the GetTransportObject method).\n"
  example: []
  syntax:
    content: public string TransportObjectTypeName { get; }
    content.vb: Public ReadOnly Property TransportObjectTypeName As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString
  id: ConstructorVisibilityString
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: ConstructorVisibilityString
  nameWithType: ObjectModelTypeData.ConstructorVisibilityString
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConstructorVisibilityString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 230
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets this types constructor visibility string.\n"
  example: []
  syntax:
    content: public string ConstructorVisibilityString { get; }
    content.vb: Public ReadOnly Property ConstructorVisibilityString As String
    parameters: []
    return:
      type: System.String
  overload: CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString(System.Int32)
  commentId: M:CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString(System.Int32)
  id: GetCustomConstructorParametersString(System.Int32)
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: GetCustomConstructorParametersString(Int32)
  nameWithType: ObjectModelTypeData.GetCustomConstructorParametersString(Int32)
  fullName: CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString(System.Int32)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCustomConstructorParametersString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 237
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the custom constructors parameter string.\n"
  example: []
  syntax:
    content: public string GetCustomConstructorParametersString(int spacesIndented)
    content.vb: Public Function GetCustomConstructorParametersString(spacesIndented As Integer) As String
    parameters:
    - id: spacesIndented
      type: System.Int32
      description: The number of spaces to indent.
    return:
      type: System.String
      description: The custom constructors parameter string.
  overload: CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString(System.Int32)
  commentId: M:CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString(System.Int32)
  id: GetBoundConstructorParameterString(System.Int32)
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: GetBoundConstructorParameterString(Int32)
  nameWithType: ObjectModelTypeData.GetBoundConstructorParameterString(Int32)
  fullName: CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString(System.Int32)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetBoundConstructorParameterString
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 263
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the bound constructors parameter string\n"
  example: []
  syntax:
    content: public string GetBoundConstructorParameterString(int spacesIndented)
    content.vb: Public Function GetBoundConstructorParameterString(spacesIndented As Integer) As String
    parameters:
    - id: spacesIndented
      type: System.Int32
      description: The number of spaces to indent.
    return:
      type: System.String
      description: The bound constructors parameter string.
  overload: CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements
  commentId: P:CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements
  id: AdditionalPropertyInitializationStatements
  parent: CodeGenerationLibrary.ObjectModelTypeData
  langs:
  - csharp
  - vb
  name: AdditionalPropertyInitializationStatements
  nameWithType: ObjectModelTypeData.AdditionalPropertyInitializationStatements
  fullName: CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AdditionalPropertyInitializationStatements
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/CodeGenerationLibrary/ObjectModelTypeData.cs
    startLine: 286
  assemblies:
  - CodeGenerationLibrary
  namespace: CodeGenerationLibrary
  summary: "\nGets the additional property initialization statements\n"
  example: []
  syntax:
    content: public IEnumerable<string> AdditionalPropertyInitializationStatements { get; }
    content.vb: Public ReadOnly Property AdditionalPropertyInitializationStatements As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  overload: CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CodeGenerationLibrary
  commentId: N:CodeGenerationLibrary
  isExternal: false
  name: CodeGenerationLibrary
  nameWithType: CodeGenerationLibrary
  fullName: CodeGenerationLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeGenerationLibrary.ObjectModelTypeData.#ctor*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.#ctor
  isExternal: false
  name: ObjectModelTypeData
  nameWithType: ObjectModelTypeData.ObjectModelTypeData
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ObjectModelTypeData
- uid: CodeGenerationLibrary.ObjectModelTypeData.Name*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.Name
  isExternal: false
  name: Name
  nameWithType: ObjectModelTypeData.Name
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CodeGenerationLibrary.ObjectModelTypeData.ProtocolName*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ProtocolName
  isExternal: false
  name: ProtocolName
  nameWithType: ObjectModelTypeData.ProtocolName
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ProtocolName
- uid: CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName
  isExternal: false
  name: TransportProtocolName
  nameWithType: ObjectModelTypeData.TransportProtocolName
  fullName: CodeGenerationLibrary.ObjectModelTypeData.TransportProtocolName
- uid: CodeGenerationLibrary.ObjectModelTypeData.Comment*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.Comment
  isExternal: false
  name: Comment
  nameWithType: ObjectModelTypeData.Comment
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Comment
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections
  isExternal: false
  name: IsUsedInCollections
  nameWithType: ObjectModelTypeData.IsUsedInCollections
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsUsedInCollections
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly
  isExternal: false
  name: IsStaticallyReadOnly
  nameWithType: ObjectModelTypeData.IsStaticallyReadOnly
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsStaticallyReadOnly
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic
  isExternal: false
  name: IsConstructorPublic
  nameWithType: ObjectModelTypeData.IsConstructorPublic
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsConstructorPublic
- uid: CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder
  isExternal: false
  name: ForceConstructorOrder
  nameWithType: ObjectModelTypeData.ForceConstructorOrder
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ForceConstructorOrder
- uid: CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor
  isExternal: false
  name: HideCustomConstructor
  nameWithType: ObjectModelTypeData.HideCustomConstructor
  fullName: CodeGenerationLibrary.ObjectModelTypeData.HideCustomConstructor
- uid: CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject
  isExternal: false
  name: IsTopLevelObject
  nameWithType: ObjectModelTypeData.IsTopLevelObject
  fullName: CodeGenerationLibrary.ObjectModelTypeData.IsTopLevelObject
- uid: CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables
  isExternal: false
  name: ParentPathVariables
  nameWithType: ObjectModelTypeData.ParentPathVariables
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ParentPathVariables
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes
  isExternal: false
  name: CustomIncludes
  nameWithType: ObjectModelTypeData.CustomIncludes
  fullName: CodeGenerationLibrary.ObjectModelTypeData.CustomIncludes
- uid: CodeGenerationLibrary.ObjectModelTypeData.Includes*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.Includes
  isExternal: false
  name: Includes
  nameWithType: ObjectModelTypeData.Includes
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Includes
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeGenerationLibrary.ObjectModelTypeData.Properties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.Properties
  isExternal: false
  name: Properties
  nameWithType: ObjectModelTypeData.Properties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.Properties
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{CodeGenerationLibrary.PropertyData,CodeGenerationLibrary.PropertyData}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<PropertyData, PropertyData>>
  nameWithType: List<KeyValuePair<PropertyData, PropertyData>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<CodeGenerationLibrary.PropertyData, CodeGenerationLibrary.PropertyData>>
  nameWithType.vb: List(Of KeyValuePair(Of PropertyData, PropertyData))
  fullname.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of CodeGenerationLibrary.PropertyData, CodeGenerationLibrary.PropertyData))
  name.vb: List(Of KeyValuePair(Of PropertyData, PropertyData))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CodeGenerationLibrary.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: CodeGenerationLibrary.PropertyData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CodeGenerationLibrary.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: CodeGenerationLibrary.PropertyData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CodeGenerationLibrary.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: CodeGenerationLibrary.PropertyData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CodeGenerationLibrary.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: CodeGenerationLibrary.PropertyData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeGenerationLibrary.ObjectModelTypeData.PublicProperties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.PublicProperties
  isExternal: false
  name: PublicProperties
  nameWithType: ObjectModelTypeData.PublicProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.PublicProperties
- uid: CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties
  isExternal: false
  name: OrderedPublicProperties
  nameWithType: ObjectModelTypeData.OrderedPublicProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.OrderedPublicProperties
- uid: CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties
  isExternal: false
  name: OutsidePropertyContainerProperties
  nameWithType: ObjectModelTypeData.OutsidePropertyContainerProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.OutsidePropertyContainerProperties
- uid: CodeGenerationLibrary.ObjectModelTypeData.BoundProperties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.BoundProperties
  isExternal: false
  name: BoundProperties
  nameWithType: ObjectModelTypeData.BoundProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.BoundProperties
- uid: CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties
  isExternal: false
  name: UnboundProperties
  nameWithType: ObjectModelTypeData.UnboundProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.UnboundProperties
- uid: CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties
  isExternal: false
  name: ConstructorProperties
  nameWithType: ObjectModelTypeData.ConstructorProperties
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ConstructorProperties
- uid: System.Collections.Generic.IEnumerable{CodeGenerationLibrary.PropertyData}
  commentId: T:System.Collections.Generic.IEnumerable{CodeGenerationLibrary.PropertyData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PropertyData>
  nameWithType: IEnumerable<PropertyData>
  fullName: System.Collections.Generic.IEnumerable<CodeGenerationLibrary.PropertyData>
  nameWithType.vb: IEnumerable(Of PropertyData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of CodeGenerationLibrary.PropertyData)
  name.vb: IEnumerable(Of PropertyData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CodeGenerationLibrary.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: CodeGenerationLibrary.PropertyData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CodeGenerationLibrary.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: CodeGenerationLibrary.PropertyData
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor
  isExternal: false
  name: ShouldDefineCustomConstructor
  nameWithType: ObjectModelTypeData.ShouldDefineCustomConstructor
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineCustomConstructor
- uid: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject
  isExternal: false
  name: ShouldDefineGetTransportObject
  nameWithType: ObjectModelTypeData.ShouldDefineGetTransportObject
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ShouldDefineGetTransportObject
- uid: CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName
  isExternal: false
  name: TransportObjectTypeName
  nameWithType: ObjectModelTypeData.TransportObjectTypeName
  fullName: CodeGenerationLibrary.ObjectModelTypeData.TransportObjectTypeName
- uid: CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString
  isExternal: false
  name: ConstructorVisibilityString
  nameWithType: ObjectModelTypeData.ConstructorVisibilityString
  fullName: CodeGenerationLibrary.ObjectModelTypeData.ConstructorVisibilityString
- uid: CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString
  isExternal: false
  name: GetCustomConstructorParametersString
  nameWithType: ObjectModelTypeData.GetCustomConstructorParametersString
  fullName: CodeGenerationLibrary.ObjectModelTypeData.GetCustomConstructorParametersString
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString
  isExternal: false
  name: GetBoundConstructorParameterString
  nameWithType: ObjectModelTypeData.GetBoundConstructorParameterString
  fullName: CodeGenerationLibrary.ObjectModelTypeData.GetBoundConstructorParameterString
- uid: CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements*
  commentId: Overload:CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements
  isExternal: false
  name: AdditionalPropertyInitializationStatements
  nameWithType: ObjectModelTypeData.AdditionalPropertyInitializationStatements
  fullName: CodeGenerationLibrary.ObjectModelTypeData.AdditionalPropertyInitializationStatements
