### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  commentId: T:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  id: ObjectFactory
  parent: Azure.Batch.Unit.Tests.TestUtilities
  children:
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification})
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance(System.Type)
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance``1(System.Type)
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew(System.Type)
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew``1
  langs:
  - csharp
  - vb
  name: ObjectFactory
  nameWithType: ObjectFactory
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ObjectFactory
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
    startLine: 22
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public class ObjectFactory
    content.vb: Public Class ObjectFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification})
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification})
  id: '#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification})'
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  langs:
  - csharp
  - vb
  name: ObjectFactory(IList<ObjectFactoryConstructionSpecification>)
  nameWithType: ObjectFactory.ObjectFactory(IList<ObjectFactoryConstructionSpecification>)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.ObjectFactory(System.Collections.Generic.IList<Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
    startLine: 30
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public ObjectFactory(IList<ObjectFactoryConstructionSpecification> typeConstructionSpecifications = null)
    content.vb: Public Sub New(typeConstructionSpecifications As IList(Of ObjectFactoryConstructionSpecification) = Nothing)
    parameters:
    - id: typeConstructionSpecifications
      type: System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification}
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.#ctor*
  nameWithType.vb: ObjectFactory.ObjectFactory(IList(Of ObjectFactoryConstructionSpecification))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.ObjectFactory(System.Collections.Generic.IList(Of Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification))
  name.vb: ObjectFactory(IList(Of ObjectFactoryConstructionSpecification))
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew``1
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew``1
  id: GenerateNew``1
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  langs:
  - csharp
  - vb
  name: GenerateNew<T>()
  nameWithType: ObjectFactory.GenerateNew<T>()
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew<T>()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GenerateNew
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
    startLine: 36
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: 'public T GenerateNew<T>()where T : new ()'
    content.vb: Public Function GenerateNew(Of T As New) As T
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew*
  nameWithType.vb: ObjectFactory.GenerateNew(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew(Of T)()
  name.vb: GenerateNew(Of T)()
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew(System.Type)
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew(System.Type)
  id: GenerateNew(System.Type)
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  langs:
  - csharp
  - vb
  name: GenerateNew(Type)
  nameWithType: ObjectFactory.GenerateNew(Type)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew(System.Type)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GenerateNew
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
    startLine: 41
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public object GenerateNew(Type objectType)
    content.vb: Public Function GenerateNew(objectType As Type) As Object
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Object
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance``1(System.Type)
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance``1(System.Type)
  id: CreateInstance``1(System.Type)
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  langs:
  - csharp
  - vb
  name: CreateInstance<T>(Type)
  nameWithType: ObjectFactory.CreateInstance<T>(Type)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance<T>(System.Type)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateInstance
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
    startLine: 153
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public T CreateInstance<T>(Type type)
    content.vb: Public Function CreateInstance(Of T)(type As Type) As T
    parameters:
    - id: type
      type: System.Type
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance*
  nameWithType.vb: ObjectFactory.CreateInstance(Of T)(Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance(Of T)(System.Type)
  name.vb: CreateInstance(Of T)(Type)
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance(System.Type)
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory
  langs:
  - csharp
  - vb
  name: CreateInstance(Type)
  nameWithType: ObjectFactory.CreateInstance(Type)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance(System.Type)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateInstance
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectFactory.cs
    startLine: 158
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public object CreateInstance(Type type)
    content.vb: Public Function CreateInstance(type As Type) As Object
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests.TestUtilities
  commentId: N:Azure.Batch.Unit.Tests.TestUtilities
  isExternal: false
  name: Azure.Batch.Unit.Tests.TestUtilities
  nameWithType: Azure.Batch.Unit.Tests.TestUtilities
  fullName: Azure.Batch.Unit.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.#ctor*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.#ctor
  isExternal: false
  name: ObjectFactory
  nameWithType: ObjectFactory.ObjectFactory
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.ObjectFactory
- uid: System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification}
  commentId: T:System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ObjectFactoryConstructionSpecification>
  nameWithType: IList<ObjectFactoryConstructionSpecification>
  fullName: System.Collections.Generic.IList<Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification>
  nameWithType.vb: IList(Of ObjectFactoryConstructionSpecification)
  fullname.vb: System.Collections.Generic.IList(Of Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification)
  name.vb: IList(Of ObjectFactoryConstructionSpecification)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification
    name: ObjectFactoryConstructionSpecification
    nameWithType: ObjectFactoryConstructionSpecification
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification
    name: ObjectFactoryConstructionSpecification
    nameWithType: ObjectFactoryConstructionSpecification
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactoryConstructionSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew
  isExternal: false
  name: GenerateNew<T>
  nameWithType: ObjectFactory.GenerateNew<T>
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew<T>
  nameWithType.vb: ObjectFactory.GenerateNew(Of T)
  fullname.vb: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.GenerateNew(Of T)
  name.vb: GenerateNew(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance
  isExternal: false
  name: CreateInstance<T>
  nameWithType: ObjectFactory.CreateInstance<T>
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance<T>
  nameWithType.vb: ObjectFactory.CreateInstance(Of T)
  fullname.vb: Azure.Batch.Unit.Tests.TestUtilities.ObjectFactory.CreateInstance(Of T)
  name.vb: CreateInstance(Of T)
