### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  commentId: T:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  id: ApplicationPackageReferencesUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest
  - Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferencesUnitTests
  nameWithType: ApplicationPackageReferencesUnitTests
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ApplicationPackageReferencesUnitTests
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 31
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class ApplicationPackageReferencesUnitTests
    content.vb: Public Class ApplicationPackageReferencesUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest
  id: GetPoolWithApplicationReferencesTest
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: GetPoolWithApplicationReferencesTest()
  nameWithType: ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetPoolWithApplicationReferencesTest
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 33
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void GetPoolWithApplicationReferencesTest()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub GetPoolWithApplicationReferencesTest
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages
  id: UpdateAPoolWithNewApplicationPackages
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: UpdateAPoolWithNewApplicationPackages()
  nameWithType: ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateAPoolWithNewApplicationPackages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 80
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UpdateAPoolWithNewApplicationPackages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UpdateAPoolWithNewApplicationPackages As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest
  id: CreateJobWithApplicationReferencesTest
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: CreateJobWithApplicationReferencesTest()
  nameWithType: ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateJobWithApplicationReferencesTest
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 146
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CreateJobWithApplicationReferencesTest()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CreateJobWithApplicationReferencesTest
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences
  id: CreateJobScheduleWithApplicationPackageReferences
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: CreateJobScheduleWithApplicationPackageReferences()
  nameWithType: ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateJobScheduleWithApplicationPackageReferences
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 185
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task CreateJobScheduleWithApplicationPackageReferences()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function CreateJobScheduleWithApplicationPackageReferences As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences
  id: GetPoolWithApplicationPackageReferences
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: GetPoolWithApplicationPackageReferences()
  nameWithType: ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetPoolWithApplicationPackageReferences
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 243
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task GetPoolWithApplicationPackageReferences()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function GetPoolWithApplicationPackageReferences As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences
  id: GetJobScheduleWithApplicationPackageReferences
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: GetJobScheduleWithApplicationPackageReferences()
  nameWithType: ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetJobScheduleWithApplicationPackageReferences
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 289
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task GetJobScheduleWithApplicationPackageReferences()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function GetJobScheduleWithApplicationPackageReferences As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences
  id: CreateCloudTaskWithApplicationPackageReferences
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: CreateCloudTaskWithApplicationPackageReferences()
  nameWithType: ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateCloudTaskWithApplicationPackageReferences
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 344
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CreateCloudTaskWithApplicationPackageReferences()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CreateCloudTaskWithApplicationPackageReferences
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences
  id: GetJobManagerTaskWithApplicationPackageReferences
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: GetJobManagerTaskWithApplicationPackageReferences()
  nameWithType: ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetJobManagerTaskWithApplicationPackageReferences
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 386
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void GetJobManagerTaskWithApplicationPackageReferences()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub GetJobManagerTaskWithApplicationPackageReferences
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  commentId: M:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  id: CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  parent: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests
  langs:
  - csharp
  - vb
  name: CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool()
  nameWithType: ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool()
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ApplicationPackageReferencesUnitTests.cs
    startLine: 417
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  overload: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest
  isExternal: false
  name: GetPoolWithApplicationReferencesTest
  nameWithType: ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationReferencesTest
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages
  isExternal: false
  name: UpdateAPoolWithNewApplicationPackages
  nameWithType: ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.UpdateAPoolWithNewApplicationPackages
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest
  isExternal: false
  name: CreateJobWithApplicationReferencesTest
  nameWithType: ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobWithApplicationReferencesTest
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences
  isExternal: false
  name: CreateJobScheduleWithApplicationPackageReferences
  nameWithType: ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateJobScheduleWithApplicationPackageReferences
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences
  isExternal: false
  name: GetPoolWithApplicationPackageReferences
  nameWithType: ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetPoolWithApplicationPackageReferences
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences
  isExternal: false
  name: GetJobScheduleWithApplicationPackageReferences
  nameWithType: ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobScheduleWithApplicationPackageReferences
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences
  isExternal: false
  name: CreateCloudTaskWithApplicationPackageReferences
  nameWithType: ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CreateCloudTaskWithApplicationPackageReferences
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences
  isExternal: false
  name: GetJobManagerTaskWithApplicationPackageReferences
  nameWithType: ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.GetJobManagerTaskWithApplicationPackageReferences
- uid: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool*
  commentId: Overload:Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  isExternal: false
  name: CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  nameWithType: ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
  fullName: Azure.Batch.Unit.Tests.ApplicationPackageReferencesUnitTests.CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool
