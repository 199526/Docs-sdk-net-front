### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  commentId: T:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  id: CommitAndRefreshUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables
  - Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails
  langs:
  - csharp
  - vb
  name: CommitAndRefreshUnitTests
  nameWithType: CommitAndRefreshUnitTests
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CommitAndRefreshUnitTests
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 27
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class CommitAndRefreshUnitTests
    content.vb: Public Class CommitAndRefreshUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper)'
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: CommitAndRefreshUnitTests(ITestOutputHelper)
  nameWithType: CommitAndRefreshUnitTests.CommitAndRefreshUnitTests(ITestOutputHelper)
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.CommitAndRefreshUnitTests(Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 31
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public CommitAndRefreshUnitTests(ITestOutputHelper testOutputHelper)
    content.vb: Public Sub New(testOutputHelper As ITestOutputHelper)
    parameters:
    - id: testOutputHelper
      type: Xunit.Abstractions.ITestOutputHelper
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks
  id: UnboundJobCommitAndRefreshWorks
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundJobCommitAndRefreshWorks()
  nameWithType: CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundJobCommitAndRefreshWorks
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 36
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundJobCommitAndRefreshWorks()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundJobCommitAndRefreshWorks As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks
  id: UnboundPoolCommitAndRefreshWorks
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundPoolCommitAndRefreshWorks()
  nameWithType: CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundPoolCommitAndRefreshWorks
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 68
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundPoolCommitAndRefreshWorks()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundPoolCommitAndRefreshWorks As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks
  id: UnboundJobScheduleCommitAndRefreshWorks
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundJobScheduleCommitAndRefreshWorks()
  nameWithType: CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundJobScheduleCommitAndRefreshWorks
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 96
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundJobScheduleCommitAndRefreshWorks()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundJobScheduleCommitAndRefreshWorks As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks
  id: UnboundCertificateCommitAndRefreshWorks
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundCertificateCommitAndRefreshWorks()
  nameWithType: CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundCertificateCommitAndRefreshWorks
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 127
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundCertificateCommitAndRefreshWorks()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundCertificateCommitAndRefreshWorks As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails
  id: UnboundTaskRefreshFails
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundTaskRefreshFails()
  nameWithType: CommitAndRefreshUnitTests.UnboundTaskRefreshFails()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundTaskRefreshFails
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 160
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundTaskRefreshFails()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundTaskRefreshFails As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables
  id: UnboundJobDirectRefreshFailsWithMissingPathVariables
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundJobDirectRefreshFailsWithMissingPathVariables()
  nameWithType: CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundJobDirectRefreshFailsWithMissingPathVariables
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 168
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundJobDirectRefreshFailsWithMissingPathVariables()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundJobDirectRefreshFailsWithMissingPathVariables As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables
  id: UnboundPoolDirectRefreshFailsWithMissingPathVariables
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundPoolDirectRefreshFailsWithMissingPathVariables()
  nameWithType: CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundPoolDirectRefreshFailsWithMissingPathVariables
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 181
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundPoolDirectRefreshFailsWithMissingPathVariables()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundPoolDirectRefreshFailsWithMissingPathVariables As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  id: UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables()
  nameWithType: CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 194
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  commentId: M:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  id: UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  parent: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests
  langs:
  - csharp
  - vb
  name: UnboundCertificateDirectRefreshFailsWithMissingPathVariables()
  nameWithType: CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables()
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnboundCertificateDirectRefreshFailsWithMissingPathVariables
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/CommitAndRefreshUnitTests.cs
    startLine: 207
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task UnboundCertificateDirectRefreshFailsWithMissingPathVariables()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function UnboundCertificateDirectRefreshFailsWithMissingPathVariables As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.#ctor*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.#ctor
  isExternal: false
  name: CommitAndRefreshUnitTests
  nameWithType: CommitAndRefreshUnitTests.CommitAndRefreshUnitTests
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.CommitAndRefreshUnitTests
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks
  isExternal: false
  name: UnboundJobCommitAndRefreshWorks
  nameWithType: CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobCommitAndRefreshWorks
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks
  isExternal: false
  name: UnboundPoolCommitAndRefreshWorks
  nameWithType: CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolCommitAndRefreshWorks
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks
  isExternal: false
  name: UnboundJobScheduleCommitAndRefreshWorks
  nameWithType: CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleCommitAndRefreshWorks
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks
  isExternal: false
  name: UnboundCertificateCommitAndRefreshWorks
  nameWithType: CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateCommitAndRefreshWorks
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails
  isExternal: false
  name: UnboundTaskRefreshFails
  nameWithType: CommitAndRefreshUnitTests.UnboundTaskRefreshFails
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundTaskRefreshFails
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables
  isExternal: false
  name: UnboundJobDirectRefreshFailsWithMissingPathVariables
  nameWithType: CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobDirectRefreshFailsWithMissingPathVariables
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables
  isExternal: false
  name: UnboundPoolDirectRefreshFailsWithMissingPathVariables
  nameWithType: CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundPoolDirectRefreshFailsWithMissingPathVariables
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  isExternal: false
  name: UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  nameWithType: CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundJobScheduleDirectRefreshFailsWithMissingPathVariables
- uid: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables*
  commentId: Overload:Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  isExternal: false
  name: UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  nameWithType: CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables
  fullName: Azure.Batch.Unit.Tests.CommitAndRefreshUnitTests.UnboundCertificateDirectRefreshFailsWithMissingPathVariables
