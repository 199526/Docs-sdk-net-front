### YamlMime:ManagedReference
items:
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  commentId: T:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  id: ConfigureAwaitAnalyzerTests
  parent: ConfigureAwaitAnalyzerTests
  children:
  - ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer
  - ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer
  - ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  - ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError
  - ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError
  - ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError
  langs:
  - csharp
  - vb
  name: ConfigureAwaitAnalyzerTests
  nameWithType: ConfigureAwaitAnalyzerTests
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConfigureAwaitAnalyzerTests
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 23
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: 'public class ConfigureAwaitAnalyzerTests : DiagnosticVerifier'
    content.vb: >-
      Public Class ConfigureAwaitAnalyzerTests
          Inherits DiagnosticVerifier
  inheritance:
  - System.Object
  - ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  inheritedMembers:
  - ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String,ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  - ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String[],ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  - ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Document[])
  - ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument(System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError
  commentId: M:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError
  id: TestEmptyCodeBlock_ShouldBeNoError
  parent: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  langs:
  - csharp
  - vb
  name: TestEmptyCodeBlock_ShouldBeNoError()
  nameWithType: ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError()
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TestEmptyCodeBlock_ShouldBeNoError
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 27
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: >-
      [Fact]

      public void TestEmptyCodeBlock_ShouldBeNoError()
    content.vb: >-
      <Fact>

      Public Sub TestEmptyCodeBlock_ShouldBeNoError
  overload: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError
  commentId: M:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError
  id: TestAwaitWithNoConfigureAwait_ShouldBeError
  parent: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  langs:
  - csharp
  - vb
  name: TestAwaitWithNoConfigureAwait_ShouldBeError()
  nameWithType: ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError()
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TestAwaitWithNoConfigureAwait_ShouldBeError
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 35
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: >-
      [Fact]

      public void TestAwaitWithNoConfigureAwait_ShouldBeError()
    content.vb: >-
      <Fact>

      Public Sub TestAwaitWithNoConfigureAwait_ShouldBeError
  overload: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError
  commentId: M:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError
  id: TestAwaitWithConfigureAwaitTrue_ShouldBeError
  parent: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  langs:
  - csharp
  - vb
  name: TestAwaitWithConfigureAwaitTrue_ShouldBeError()
  nameWithType: ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError()
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TestAwaitWithConfigureAwaitTrue_ShouldBeError
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 59
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: >-
      [Fact]

      public void TestAwaitWithConfigureAwaitTrue_ShouldBeError()
    content.vb: >-
      <Fact>

      Public Sub TestAwaitWithConfigureAwaitTrue_ShouldBeError
  overload: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  commentId: M:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  id: TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  parent: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  langs:
  - csharp
  - vb
  name: TestAwaitWithConfigureAwaitFalse_ShouldBeNoError()
  nameWithType: ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError()
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 83
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: >-
      [Fact]

      public void TestAwaitWithConfigureAwaitFalse_ShouldBeNoError()
    content.vb: >-
      <Fact>

      Public Sub TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  overload: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer
  commentId: M:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer
  id: GetCSharpDiagnosticAnalyzer
  parent: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  langs:
  - csharp
  - vb
  name: GetCSharpDiagnosticAnalyzer()
  nameWithType: ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer()
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCSharpDiagnosticAnalyzer
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 108
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: protected override DiagnosticAnalyzer GetCSharpDiagnosticAnalyzer()
    content.vb: Protected Overrides Function GetCSharpDiagnosticAnalyzer As DiagnosticAnalyzer
    return:
      type: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  overridden: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
  overload: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer
  commentId: M:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer
  id: GetBasicDiagnosticAnalyzer
  parent: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests
  langs:
  - csharp
  - vb
  name: GetBasicDiagnosticAnalyzer()
  nameWithType: ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer()
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetBasicDiagnosticAnalyzer
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer.Tests/ConfigureAwaitAnalyzerTests.cs
    startLine: 113
  assemblies:
  - ConfigureAwaitAnalyzer.Tests
  namespace: ConfigureAwaitAnalyzerTests
  syntax:
    content: protected override DiagnosticAnalyzer GetBasicDiagnosticAnalyzer()
    content.vb: Protected Overrides Function GetBasicDiagnosticAnalyzer As DiagnosticAnalyzer
    return:
      type: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  overridden: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
  overload: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: ConfigureAwaitAnalyzerTests
  commentId: N:ConfigureAwaitAnalyzerTests
  isExternal: false
  name: ConfigureAwaitAnalyzerTests
  nameWithType: ConfigureAwaitAnalyzerTests
  fullName: ConfigureAwaitAnalyzerTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  commentId: T:ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  parent: ConfigureAwaitAnalyzerTests
  isExternal: false
  name: DiagnosticVerifier
  nameWithType: DiagnosticVerifier
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String,ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  commentId: M:ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String,ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  parent: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  isExternal: true
  name: VerifyCSharpDiagnostic(String, DiagnosticResult[])
  nameWithType: DiagnosticVerifier.VerifyCSharpDiagnostic(String, DiagnosticResult[])
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String, ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  nameWithType.vb: DiagnosticVerifier.VerifyCSharpDiagnostic(String, DiagnosticResult())
  fullname.vb: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String, ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult())
  name.vb: VerifyCSharpDiagnostic(String, DiagnosticResult())
  spec.csharp:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String,ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
    name: VerifyCSharpDiagnostic
    nameWithType: DiagnosticVerifier.VerifyCSharpDiagnostic
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String,ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
    name: VerifyCSharpDiagnostic
    nameWithType: DiagnosticVerifier.VerifyCSharpDiagnostic
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String[],ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  commentId: M:ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String[],ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  parent: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  isExternal: true
  name: VerifyCSharpDiagnostic(String[], DiagnosticResult[])
  nameWithType: DiagnosticVerifier.VerifyCSharpDiagnostic(String[], DiagnosticResult[])
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String[], ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
  nameWithType.vb: DiagnosticVerifier.VerifyCSharpDiagnostic(String(), DiagnosticResult())
  fullname.vb: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String(), ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult())
  name.vb: VerifyCSharpDiagnostic(String(), DiagnosticResult())
  spec.csharp:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String[],ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
    name: VerifyCSharpDiagnostic
    nameWithType: DiagnosticVerifier.VerifyCSharpDiagnostic
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic(System.String[],ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult[])
    name: VerifyCSharpDiagnostic
    nameWithType: DiagnosticVerifier.VerifyCSharpDiagnostic
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.VerifyCSharpDiagnostic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: ConfigureAwaitAnalyzerTests.Helpers.DiagnosticResult
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Document[])
  commentId: M:ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Document[])
  parent: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  isExternal: true
  name: GetSortedDiagnosticsFromDocuments(DiagnosticAnalyzer, Document[])
  nameWithType: DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(DiagnosticAnalyzer, Document[])
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, Microsoft.CodeAnalysis.Document[])
  nameWithType.vb: DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(DiagnosticAnalyzer, Document())
  fullname.vb: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, Microsoft.CodeAnalysis.Document())
  name.vb: GetSortedDiagnosticsFromDocuments(DiagnosticAnalyzer, Document())
  spec.csharp:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Document[])
    name: GetSortedDiagnosticsFromDocuments
    nameWithType: DiagnosticVerifier.GetSortedDiagnosticsFromDocuments
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
    name: DiagnosticAnalyzer
    nameWithType: DiagnosticAnalyzer
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Document
    name: Document
    nameWithType: Document
    fullName: Microsoft.CodeAnalysis.Document
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Document[])
    name: GetSortedDiagnosticsFromDocuments
    nameWithType: DiagnosticVerifier.GetSortedDiagnosticsFromDocuments
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetSortedDiagnosticsFromDocuments
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
    name: DiagnosticAnalyzer
    nameWithType: DiagnosticAnalyzer
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Document
    name: Document
    nameWithType: Document
    fullName: Microsoft.CodeAnalysis.Document
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument(System.String,System.String)
  commentId: M:ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument(System.String,System.String)
  parent: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  isExternal: true
  name: CreateDocument(String, String)
  nameWithType: DiagnosticVerifier.CreateDocument(String, String)
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument(System.String, System.String)
  spec.csharp:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument(System.String,System.String)
    name: CreateDocument
    nameWithType: DiagnosticVerifier.CreateDocument
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument(System.String,System.String)
    name: CreateDocument
    nameWithType: DiagnosticVerifier.CreateDocument
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.CreateDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError*
  commentId: Overload:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError
  isExternal: false
  name: TestEmptyCodeBlock_ShouldBeNoError
  nameWithType: ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestEmptyCodeBlock_ShouldBeNoError
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError*
  commentId: Overload:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError
  isExternal: false
  name: TestAwaitWithNoConfigureAwait_ShouldBeError
  nameWithType: ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithNoConfigureAwait_ShouldBeError
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError*
  commentId: Overload:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError
  isExternal: false
  name: TestAwaitWithConfigureAwaitTrue_ShouldBeError
  nameWithType: ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitTrue_ShouldBeError
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError*
  commentId: Overload:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  isExternal: false
  name: TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  nameWithType: ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.TestAwaitWithConfigureAwaitFalse_ShouldBeNoError
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
  commentId: M:ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
  parent: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  isExternal: false
  name: GetCSharpDiagnosticAnalyzer()
  nameWithType: DiagnosticVerifier.GetCSharpDiagnosticAnalyzer()
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer()
  spec.csharp:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
    name: GetCSharpDiagnosticAnalyzer
    nameWithType: DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
    name: GetCSharpDiagnosticAnalyzer
    nameWithType: DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetCSharpDiagnosticAnalyzer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer*
  commentId: Overload:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer
  isExternal: false
  name: GetCSharpDiagnosticAnalyzer
  nameWithType: ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetCSharpDiagnosticAnalyzer
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  commentId: T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  parent: Microsoft.CodeAnalysis.Diagnostics
  isExternal: true
  name: DiagnosticAnalyzer
  nameWithType: DiagnosticAnalyzer
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
- uid: Microsoft.CodeAnalysis.Diagnostics
  commentId: N:Microsoft.CodeAnalysis.Diagnostics
  isExternal: false
  name: Microsoft.CodeAnalysis.Diagnostics
  nameWithType: Microsoft.CodeAnalysis.Diagnostics
  fullName: Microsoft.CodeAnalysis.Diagnostics
- uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
  commentId: M:ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
  parent: ConfigureAwaitAnalyzerTests.DiagnosticVerifier
  isExternal: false
  name: GetBasicDiagnosticAnalyzer()
  nameWithType: DiagnosticVerifier.GetBasicDiagnosticAnalyzer()
  fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer()
  spec.csharp:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
    name: GetBasicDiagnosticAnalyzer
    nameWithType: DiagnosticVerifier.GetBasicDiagnosticAnalyzer
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
    name: GetBasicDiagnosticAnalyzer
    nameWithType: DiagnosticVerifier.GetBasicDiagnosticAnalyzer
    fullName: ConfigureAwaitAnalyzerTests.DiagnosticVerifier.GetBasicDiagnosticAnalyzer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer*
  commentId: Overload:ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer
  isExternal: false
  name: GetBasicDiagnosticAnalyzer
  nameWithType: ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer
  fullName: ConfigureAwaitAnalyzerTests.ConfigureAwaitAnalyzerTests.GetBasicDiagnosticAnalyzer
