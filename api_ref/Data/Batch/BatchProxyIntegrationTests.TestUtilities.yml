### YamlMime:ManagedReference
items:
- uid: BatchProxyIntegrationTests.TestUtilities
  commentId: T:BatchProxyIntegrationTests.TestUtilities
  id: TestUtilities
  parent: BatchProxyIntegrationTests
  children:
  - BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  - BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  langs:
  - csharp
  - vb
  name: TestUtilities
  nameWithType: TestUtilities
  fullName: BatchProxyIntegrationTests.TestUtilities
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ProtocolLayer/BatchProxyIntegrationTests/TestUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TestUtilities
    path: src/Batch/Client/Tests/ProtocolLayer/BatchProxyIntegrationTests/TestUtilities.cs
    startLine: 23
  assemblies:
  - BatchProxyIntegrationTests
  namespace: BatchProxyIntegrationTests
  syntax:
    content: 'public static class TestUtilities : object'
    content.vb: >-
      Public Module TestUtilities
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  commentId: M:BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  id: DeleteJobIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  parent: BatchProxyIntegrationTests.TestUtilities
  langs:
  - csharp
  - vb
  name: DeleteJobIfExistsNoThrow(BatchServiceClient, String, ITestOutputHelper)
  nameWithType: TestUtilities.DeleteJobIfExistsNoThrow(BatchServiceClient, String, ITestOutputHelper)
  fullName: BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient, System.String, ITestOutputHelper)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ProtocolLayer/BatchProxyIntegrationTests/TestUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteJobIfExistsNoThrow
    path: src/Batch/Client/Tests/ProtocolLayer/BatchProxyIntegrationTests/TestUtilities.cs
    startLine: 25
  assemblies:
  - BatchProxyIntegrationTests
  namespace: BatchProxyIntegrationTests
  syntax:
    content: public static void DeleteJobIfExistsNoThrow(BatchServiceClient client, string jobId, ITestOutputHelper output)
    content.vb: Public Shared Sub DeleteJobIfExistsNoThrow(client As BatchServiceClient, jobId As String, output As ITestOutputHelper)
    parameters:
    - id: client
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
    - id: jobId
      type: System.String
    - id: output
      type: ITestOutputHelper
  overload: BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  commentId: M:BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  id: DeletePoolIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,ITestOutputHelper)
  parent: BatchProxyIntegrationTests.TestUtilities
  langs:
  - csharp
  - vb
  name: DeletePoolIfExistsNoThrow(BatchServiceClient, String, ITestOutputHelper)
  nameWithType: TestUtilities.DeletePoolIfExistsNoThrow(BatchServiceClient, String, ITestOutputHelper)
  fullName: BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow(Microsoft.Azure.Batch.Protocol.BatchServiceClient, System.String, ITestOutputHelper)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ProtocolLayer/BatchProxyIntegrationTests/TestUtilities.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeletePoolIfExistsNoThrow
    path: src/Batch/Client/Tests/ProtocolLayer/BatchProxyIntegrationTests/TestUtilities.cs
    startLine: 37
  assemblies:
  - BatchProxyIntegrationTests
  namespace: BatchProxyIntegrationTests
  syntax:
    content: public static void DeletePoolIfExistsNoThrow(BatchServiceClient client, string poolId, ITestOutputHelper output)
    content.vb: Public Shared Sub DeletePoolIfExistsNoThrow(client As BatchServiceClient, poolId As String, output As ITestOutputHelper)
    parameters:
    - id: client
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
    - id: poolId
      type: System.String
    - id: output
      type: ITestOutputHelper
  overload: BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BatchProxyIntegrationTests
  commentId: N:BatchProxyIntegrationTests
  isExternal: false
  name: BatchProxyIntegrationTests
  nameWithType: BatchProxyIntegrationTests
  fullName: BatchProxyIntegrationTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow*
  commentId: Overload:BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow
  isExternal: false
  name: DeleteJobIfExistsNoThrow
  nameWithType: TestUtilities.DeleteJobIfExistsNoThrow
  fullName: BatchProxyIntegrationTests.TestUtilities.DeleteJobIfExistsNoThrow
- uid: Microsoft.Azure.Batch.Protocol.BatchServiceClient
  commentId: T:Microsoft.Azure.Batch.Protocol.BatchServiceClient
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: BatchServiceClient
  nameWithType: BatchServiceClient
  fullName: Microsoft.Azure.Batch.Protocol.BatchServiceClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ITestOutputHelper
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: ITestOutputHelper
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow*
  commentId: Overload:BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow
  isExternal: false
  name: DeletePoolIfExistsNoThrow
  nameWithType: TestUtilities.DeletePoolIfExistsNoThrow
  fullName: BatchProxyIntegrationTests.TestUtilities.DeletePoolIfExistsNoThrow
