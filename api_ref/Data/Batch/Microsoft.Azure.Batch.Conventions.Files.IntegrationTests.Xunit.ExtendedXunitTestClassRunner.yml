### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner
  commentId: T:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner
  id: ExtendedXunitTestClassRunner
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  children:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.#ctor(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource,System.Collections.Generic.IDictionary{System.Type,System.Object})
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments
  langs:
  - csharp
  - vb
  name: ExtendedXunitTestClassRunner
  nameWithType: ExtendedXunitTestClassRunner
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner
  type: Class
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/Xunit/XunitInfrastructure.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExtendedXunitTestClassRunner
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/Xunit/XunitInfrastructure.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  syntax:
    content: 'public class ExtendedXunitTestClassRunner : XunitTestClassRunner'
    content.vb: >-
      Public Class ExtendedXunitTestClassRunner
          Inherits XunitTestClassRunner
  inheritance:
  - System.Object
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  - Xunit.Sdk.XunitTestClassRunner
  inheritedMembers:
  - Xunit.Sdk.XunitTestClassRunner.CreateClassFixture(System.Type)
  - Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList{System.Tuple{System.Int32,System.Reflection.ParameterInfo}})
  - Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
  - Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
  - Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},System.Object[])
  - Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
  - Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object@)
  - Xunit.Sdk.XunitTestClassRunner.ClassFixtureMappings
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.RunAsync
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.RunTestMethodsAsync
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.Aggregator
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.CancellationTokenSource
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.Class
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.DiagnosticMessageSink
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.MessageBus
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestCaseOrderer
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestCases
  - Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestClass
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.#ctor(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource,System.Collections.Generic.IDictionary{System.Type,System.Object})
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.#ctor(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource,System.Collections.Generic.IDictionary{System.Type,System.Object})
  id: '#ctor(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource,System.Collections.Generic.IDictionary{System.Type,System.Object})'
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner
  langs:
  - csharp
  - vb
  name: ExtendedXunitTestClassRunner(ITestClass, IReflectionTypeInfo, IEnumerable<IXunitTestCase>, IMessageSink, IMessageBus, ITestCaseOrderer, ExceptionAggregator, CancellationTokenSource, IDictionary<Type, Object>)
  nameWithType: ExtendedXunitTestClassRunner.ExtendedXunitTestClassRunner(ITestClass, IReflectionTypeInfo, IEnumerable<IXunitTestCase>, IMessageSink, IMessageBus, ITestCaseOrderer, ExceptionAggregator, CancellationTokenSource, IDictionary<Type, Object>)
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.ExtendedXunitTestClassRunner(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable<Xunit.Sdk.IXunitTestCase>, Xunit.Abstractions.IMessageSink, Xunit.Sdk.IMessageBus, Xunit.Sdk.ITestCaseOrderer, Xunit.Sdk.ExceptionAggregator, System.Threading.CancellationTokenSource, System.Collections.Generic.IDictionary<System.Type, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/Xunit/XunitInfrastructure.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/Xunit/XunitInfrastructure.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  syntax:
    content: public ExtendedXunitTestClassRunner(ITestClass testClass, IReflectionTypeInfo class, IEnumerable<IXunitTestCase> testCases, IMessageSink diagnosticMessageSink, IMessageBus messageBus, ITestCaseOrderer testCaseOrderer, ExceptionAggregator aggregator, CancellationTokenSource cancellationTokenSource, IDictionary<Type, object> collectionFixtureMappings)
    content.vb: Public Sub New(testClass As ITestClass, class As IReflectionTypeInfo, testCases As IEnumerable(Of IXunitTestCase), diagnosticMessageSink As IMessageSink, messageBus As IMessageBus, testCaseOrderer As ITestCaseOrderer, aggregator As ExceptionAggregator, cancellationTokenSource As CancellationTokenSource, collectionFixtureMappings As IDictionary(Of Type, Object))
    parameters:
    - id: testClass
      type: Xunit.Abstractions.ITestClass
    - id: class
      type: Xunit.Abstractions.IReflectionTypeInfo
    - id: testCases
      type: System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase}
    - id: diagnosticMessageSink
      type: Xunit.Abstractions.IMessageSink
    - id: messageBus
      type: Xunit.Sdk.IMessageBus
    - id: testCaseOrderer
      type: Xunit.Sdk.ITestCaseOrderer
    - id: aggregator
      type: Xunit.Sdk.ExceptionAggregator
    - id: cancellationTokenSource
      type: System.Threading.CancellationTokenSource
    - id: collectionFixtureMappings
      type: System.Collections.Generic.IDictionary{System.Type,System.Object}
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.#ctor*
  nameWithType.vb: ExtendedXunitTestClassRunner.ExtendedXunitTestClassRunner(ITestClass, IReflectionTypeInfo, IEnumerable(Of IXunitTestCase), IMessageSink, IMessageBus, ITestCaseOrderer, ExceptionAggregator, CancellationTokenSource, IDictionary(Of Type, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.ExtendedXunitTestClassRunner(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable(Of Xunit.Sdk.IXunitTestCase), Xunit.Abstractions.IMessageSink, Xunit.Sdk.IMessageBus, Xunit.Sdk.ITestCaseOrderer, Xunit.Sdk.ExceptionAggregator, System.Threading.CancellationTokenSource, System.Collections.Generic.IDictionary(Of System.Type, System.Object))
  name.vb: ExtendedXunitTestClassRunner(ITestClass, IReflectionTypeInfo, IEnumerable(Of IXunitTestCase), IMessageSink, IMessageBus, ITestCaseOrderer, ExceptionAggregator, CancellationTokenSource, IDictionary(Of Type, Object))
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments
  commentId: M:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments
  id: CreateTestClassConstructorArguments
  parent: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner
  langs:
  - csharp
  - vb
  name: CreateTestClassConstructorArguments()
  nameWithType: ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments()
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments()
  type: Method
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/Xunit/XunitInfrastructure.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateTestClassConstructorArguments
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.IntegrationTests/Xunit/XunitInfrastructure.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.IntegrationTests
  namespace: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  syntax:
    content: protected override object[] CreateTestClassConstructorArguments()
    content.vb: Protected Overrides Function CreateTestClassConstructorArguments As Object()
    return:
      type: System.Object[]
  overridden: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.CreateTestClassConstructorArguments
  overload: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  commentId: N:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  isExternal: false
  name: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  nameWithType: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  commentId: T:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  parent: Xunit.Sdk
  definition: Xunit.Sdk.TestClassRunner`1
  name: TestClassRunner<IXunitTestCase>
  nameWithType: TestClassRunner<IXunitTestCase>
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>
  nameWithType.vb: TestClassRunner(Of IXunitTestCase)
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase)
  name.vb: TestClassRunner(Of IXunitTestCase)
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1
    name: TestClassRunner
    nameWithType: TestClassRunner
    fullName: Xunit.Sdk.TestClassRunner
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1
    name: TestClassRunner
    nameWithType: TestClassRunner
    fullName: Xunit.Sdk.TestClassRunner
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner
  commentId: T:Xunit.Sdk.XunitTestClassRunner
  parent: Xunit.Sdk
  isExternal: true
  name: XunitTestClassRunner
  nameWithType: XunitTestClassRunner
  fullName: Xunit.Sdk.XunitTestClassRunner
- uid: Xunit.Sdk.XunitTestClassRunner.CreateClassFixture(System.Type)
  commentId: M:Xunit.Sdk.XunitTestClassRunner.CreateClassFixture(System.Type)
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: CreateClassFixture(Type)
  nameWithType: XunitTestClassRunner.CreateClassFixture(Type)
  fullName: Xunit.Sdk.XunitTestClassRunner.CreateClassFixture(System.Type)
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.CreateClassFixture(System.Type)
    name: CreateClassFixture
    nameWithType: XunitTestClassRunner.CreateClassFixture
    fullName: Xunit.Sdk.XunitTestClassRunner.CreateClassFixture
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.CreateClassFixture(System.Type)
    name: CreateClassFixture
    nameWithType: XunitTestClassRunner.CreateClassFixture
    fullName: Xunit.Sdk.XunitTestClassRunner.CreateClassFixture
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList{System.Tuple{System.Int32,System.Reflection.ParameterInfo}})
  commentId: M:Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList{System.Tuple{System.Int32,System.Reflection.ParameterInfo}})
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: FormatConstructorArgsMissingMessage(ConstructorInfo, IReadOnlyList<Tuple<Int32, ParameterInfo>>)
  nameWithType: XunitTestClassRunner.FormatConstructorArgsMissingMessage(ConstructorInfo, IReadOnlyList<Tuple<Int32, ParameterInfo>>)
  fullName: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo, System.Collections.Generic.IReadOnlyList<System.Tuple<System.Int32, System.Reflection.ParameterInfo>>)
  nameWithType.vb: XunitTestClassRunner.FormatConstructorArgsMissingMessage(ConstructorInfo, IReadOnlyList(Of Tuple(Of Int32, ParameterInfo)))
  fullname.vb: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo, System.Collections.Generic.IReadOnlyList(Of System.Tuple(Of System.Int32, System.Reflection.ParameterInfo)))
  name.vb: FormatConstructorArgsMissingMessage(ConstructorInfo, IReadOnlyList(Of Tuple(Of Int32, ParameterInfo)))
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList{System.Tuple{System.Int32,System.Reflection.ParameterInfo}})
    name: FormatConstructorArgsMissingMessage
    nameWithType: XunitTestClassRunner.FormatConstructorArgsMissingMessage
    fullName: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList{System.Tuple{System.Int32,System.Reflection.ParameterInfo}})
    name: FormatConstructorArgsMissingMessage
    nameWithType: XunitTestClassRunner.FormatConstructorArgsMissingMessage
    fullName: Xunit.Sdk.XunitTestClassRunner.FormatConstructorArgsMissingMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
  commentId: M:Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: AfterTestClassStartingAsync()
  nameWithType: XunitTestClassRunner.AfterTestClassStartingAsync()
  fullName: Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync()
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
    name: AfterTestClassStartingAsync
    nameWithType: XunitTestClassRunner.AfterTestClassStartingAsync
    fullName: Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
    name: AfterTestClassStartingAsync
    nameWithType: XunitTestClassRunner.AfterTestClassStartingAsync
    fullName: Xunit.Sdk.XunitTestClassRunner.AfterTestClassStartingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
  commentId: M:Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: BeforeTestClassFinishedAsync()
  nameWithType: XunitTestClassRunner.BeforeTestClassFinishedAsync()
  fullName: Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync()
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
    name: BeforeTestClassFinishedAsync
    nameWithType: XunitTestClassRunner.BeforeTestClassFinishedAsync
    fullName: Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
    name: BeforeTestClassFinishedAsync
    nameWithType: XunitTestClassRunner.BeforeTestClassFinishedAsync
    fullName: Xunit.Sdk.XunitTestClassRunner.BeforeTestClassFinishedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},System.Object[])
  commentId: M:Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},System.Object[])
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: RunTestMethodAsync(ITestMethod, IReflectionMethodInfo, IEnumerable<IXunitTestCase>, Object[])
  nameWithType: XunitTestClassRunner.RunTestMethodAsync(ITestMethod, IReflectionMethodInfo, IEnumerable<IXunitTestCase>, Object[])
  fullName: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IReflectionMethodInfo, System.Collections.Generic.IEnumerable<Xunit.Sdk.IXunitTestCase>, System.Object[])
  nameWithType.vb: XunitTestClassRunner.RunTestMethodAsync(ITestMethod, IReflectionMethodInfo, IEnumerable(Of IXunitTestCase), Object())
  fullname.vb: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IReflectionMethodInfo, System.Collections.Generic.IEnumerable(Of Xunit.Sdk.IXunitTestCase), System.Object())
  name.vb: RunTestMethodAsync(ITestMethod, IReflectionMethodInfo, IEnumerable(Of IXunitTestCase), Object())
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},System.Object[])
    name: RunTestMethodAsync
    nameWithType: XunitTestClassRunner.RunTestMethodAsync
    fullName: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestMethod
    name: ITestMethod
    nameWithType: ITestMethod
    fullName: Xunit.Abstractions.ITestMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IReflectionMethodInfo
    name: IReflectionMethodInfo
    nameWithType: IReflectionMethodInfo
    fullName: Xunit.Abstractions.IReflectionMethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase},System.Object[])
    name: RunTestMethodAsync
    nameWithType: XunitTestClassRunner.RunTestMethodAsync
    fullName: Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Xunit.Abstractions.ITestMethod
    name: ITestMethod
    nameWithType: ITestMethod
    fullName: Xunit.Abstractions.ITestMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Xunit.Abstractions.IReflectionMethodInfo
    name: IReflectionMethodInfo
    nameWithType: IReflectionMethodInfo
    fullName: Xunit.Abstractions.IReflectionMethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
  commentId: M:Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: SelectTestClassConstructor()
  nameWithType: XunitTestClassRunner.SelectTestClassConstructor()
  fullName: Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor()
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
    name: SelectTestClassConstructor
    nameWithType: XunitTestClassRunner.SelectTestClassConstructor
    fullName: Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
    name: SelectTestClassConstructor
    nameWithType: XunitTestClassRunner.SelectTestClassConstructor
    fullName: Xunit.Sdk.XunitTestClassRunner.SelectTestClassConstructor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object@)
  commentId: M:Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object@)
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: TryGetConstructorArgument(ConstructorInfo, Int32, ParameterInfo, Object)
  nameWithType: XunitTestClassRunner.TryGetConstructorArgument(ConstructorInfo, Int32, ParameterInfo, Object)
  fullName: Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument(System.Reflection.ConstructorInfo, System.Int32, System.Reflection.ParameterInfo, System.Object)
  spec.csharp:
  - uid: Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object@)
    name: TryGetConstructorArgument
    nameWithType: XunitTestClassRunner.TryGetConstructorArgument
    fullName: Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object@)
    name: TryGetConstructorArgument
    nameWithType: XunitTestClassRunner.TryGetConstructorArgument
    fullName: Xunit.Sdk.XunitTestClassRunner.TryGetConstructorArgument
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.XunitTestClassRunner.ClassFixtureMappings
  commentId: P:Xunit.Sdk.XunitTestClassRunner.ClassFixtureMappings
  parent: Xunit.Sdk.XunitTestClassRunner
  isExternal: true
  name: ClassFixtureMappings
  nameWithType: XunitTestClassRunner.ClassFixtureMappings
  fullName: Xunit.Sdk.XunitTestClassRunner.ClassFixtureMappings
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.RunAsync
  commentId: M:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.RunAsync
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.RunAsync
  name: RunAsync()
  nameWithType: TestClassRunner<IXunitTestCase>.RunAsync()
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.RunAsync()
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).RunAsync()
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).RunAsync()
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1.RunAsync
    name: RunAsync
    nameWithType: TestClassRunner<IXunitTestCase>.RunAsync
    fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.RunAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1.RunAsync
    name: RunAsync
    nameWithType: TestClassRunner(Of IXunitTestCase).RunAsync
    fullName: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).RunAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.RunTestMethodsAsync
  commentId: M:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.RunTestMethodsAsync
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
  name: RunTestMethodsAsync()
  nameWithType: TestClassRunner<IXunitTestCase>.RunTestMethodsAsync()
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.RunTestMethodsAsync()
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).RunTestMethodsAsync()
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).RunTestMethodsAsync()
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
    name: RunTestMethodsAsync
    nameWithType: TestClassRunner<IXunitTestCase>.RunTestMethodsAsync
    fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.RunTestMethodsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
    name: RunTestMethodsAsync
    nameWithType: TestClassRunner(Of IXunitTestCase).RunTestMethodsAsync
    fullName: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).RunTestMethodsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.Aggregator
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.Aggregator
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.Aggregator
  name: Aggregator
  nameWithType: TestClassRunner<IXunitTestCase>.Aggregator
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.Aggregator
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).Aggregator
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).Aggregator
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.CancellationTokenSource
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.CancellationTokenSource
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.CancellationTokenSource
  name: CancellationTokenSource
  nameWithType: TestClassRunner<IXunitTestCase>.CancellationTokenSource
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.CancellationTokenSource
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).CancellationTokenSource
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).CancellationTokenSource
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.Class
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.Class
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.Class
  name: Class
  nameWithType: TestClassRunner<IXunitTestCase>.Class
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.Class
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).Class
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).Class
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.DiagnosticMessageSink
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.DiagnosticMessageSink
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.DiagnosticMessageSink
  name: DiagnosticMessageSink
  nameWithType: TestClassRunner<IXunitTestCase>.DiagnosticMessageSink
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.DiagnosticMessageSink
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).DiagnosticMessageSink
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).DiagnosticMessageSink
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.MessageBus
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.MessageBus
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.MessageBus
  name: MessageBus
  nameWithType: TestClassRunner<IXunitTestCase>.MessageBus
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.MessageBus
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).MessageBus
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).MessageBus
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestCaseOrderer
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestCaseOrderer
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.TestCaseOrderer
  name: TestCaseOrderer
  nameWithType: TestClassRunner<IXunitTestCase>.TestCaseOrderer
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.TestCaseOrderer
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).TestCaseOrderer
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).TestCaseOrderer
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestCases
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestCases
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.TestCases
  name: TestCases
  nameWithType: TestClassRunner<IXunitTestCase>.TestCases
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.TestCases
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).TestCases
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).TestCases
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestClass
  commentId: P:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.TestClass
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.TestClass
  name: TestClass
  nameWithType: TestClassRunner<IXunitTestCase>.TestClass
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.TestClass
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).TestClass
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).TestClass
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Sdk.TestClassRunner`1
  commentId: T:Xunit.Sdk.TestClassRunner`1
  isExternal: true
  name: TestClassRunner<TTestCase>
  nameWithType: TestClassRunner<TTestCase>
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>
  nameWithType.vb: TestClassRunner(Of TTestCase)
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase)
  name.vb: TestClassRunner(Of TTestCase)
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1
    name: TestClassRunner
    nameWithType: TestClassRunner
    fullName: Xunit.Sdk.TestClassRunner
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTestCase
    nameWithType: TTestCase
    fullName: TTestCase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1
    name: TestClassRunner
    nameWithType: TestClassRunner
    fullName: Xunit.Sdk.TestClassRunner
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTestCase
    nameWithType: TTestCase
    fullName: TTestCase
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk
  commentId: N:Xunit.Sdk
  isExternal: false
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
- uid: Xunit.Sdk.TestClassRunner`1.RunAsync
  commentId: M:Xunit.Sdk.TestClassRunner`1.RunAsync
  isExternal: true
  name: RunAsync()
  nameWithType: TestClassRunner<TTestCase>.RunAsync()
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.RunAsync()
  nameWithType.vb: TestClassRunner(Of TTestCase).RunAsync()
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).RunAsync()
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1.RunAsync
    name: RunAsync
    nameWithType: TestClassRunner<TTestCase>.RunAsync
    fullName: Xunit.Sdk.TestClassRunner<TTestCase>.RunAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1.RunAsync
    name: RunAsync
    nameWithType: TestClassRunner(Of TTestCase).RunAsync
    fullName: Xunit.Sdk.TestClassRunner(Of TTestCase).RunAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
  commentId: M:Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
  isExternal: true
  name: RunTestMethodsAsync()
  nameWithType: TestClassRunner<TTestCase>.RunTestMethodsAsync()
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.RunTestMethodsAsync()
  nameWithType.vb: TestClassRunner(Of TTestCase).RunTestMethodsAsync()
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).RunTestMethodsAsync()
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
    name: RunTestMethodsAsync
    nameWithType: TestClassRunner<TTestCase>.RunTestMethodsAsync
    fullName: Xunit.Sdk.TestClassRunner<TTestCase>.RunTestMethodsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1.RunTestMethodsAsync
    name: RunTestMethodsAsync
    nameWithType: TestClassRunner(Of TTestCase).RunTestMethodsAsync
    fullName: Xunit.Sdk.TestClassRunner(Of TTestCase).RunTestMethodsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestClassRunner`1.Aggregator
  commentId: P:Xunit.Sdk.TestClassRunner`1.Aggregator
  isExternal: true
  name: Aggregator
  nameWithType: TestClassRunner<TTestCase>.Aggregator
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.Aggregator
  nameWithType.vb: TestClassRunner(Of TTestCase).Aggregator
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).Aggregator
- uid: Xunit.Sdk.TestClassRunner`1.CancellationTokenSource
  commentId: P:Xunit.Sdk.TestClassRunner`1.CancellationTokenSource
  isExternal: true
  name: CancellationTokenSource
  nameWithType: TestClassRunner<TTestCase>.CancellationTokenSource
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.CancellationTokenSource
  nameWithType.vb: TestClassRunner(Of TTestCase).CancellationTokenSource
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).CancellationTokenSource
- uid: Xunit.Sdk.TestClassRunner`1.Class
  commentId: P:Xunit.Sdk.TestClassRunner`1.Class
  isExternal: true
  name: Class
  nameWithType: TestClassRunner<TTestCase>.Class
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.Class
  nameWithType.vb: TestClassRunner(Of TTestCase).Class
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).Class
- uid: Xunit.Sdk.TestClassRunner`1.DiagnosticMessageSink
  commentId: P:Xunit.Sdk.TestClassRunner`1.DiagnosticMessageSink
  isExternal: true
  name: DiagnosticMessageSink
  nameWithType: TestClassRunner<TTestCase>.DiagnosticMessageSink
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.DiagnosticMessageSink
  nameWithType.vb: TestClassRunner(Of TTestCase).DiagnosticMessageSink
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).DiagnosticMessageSink
- uid: Xunit.Sdk.TestClassRunner`1.MessageBus
  commentId: P:Xunit.Sdk.TestClassRunner`1.MessageBus
  isExternal: true
  name: MessageBus
  nameWithType: TestClassRunner<TTestCase>.MessageBus
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.MessageBus
  nameWithType.vb: TestClassRunner(Of TTestCase).MessageBus
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).MessageBus
- uid: Xunit.Sdk.TestClassRunner`1.TestCaseOrderer
  commentId: P:Xunit.Sdk.TestClassRunner`1.TestCaseOrderer
  isExternal: true
  name: TestCaseOrderer
  nameWithType: TestClassRunner<TTestCase>.TestCaseOrderer
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.TestCaseOrderer
  nameWithType.vb: TestClassRunner(Of TTestCase).TestCaseOrderer
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).TestCaseOrderer
- uid: Xunit.Sdk.TestClassRunner`1.TestCases
  commentId: P:Xunit.Sdk.TestClassRunner`1.TestCases
  isExternal: true
  name: TestCases
  nameWithType: TestClassRunner<TTestCase>.TestCases
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.TestCases
  nameWithType.vb: TestClassRunner(Of TTestCase).TestCases
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).TestCases
- uid: Xunit.Sdk.TestClassRunner`1.TestClass
  commentId: P:Xunit.Sdk.TestClassRunner`1.TestClass
  isExternal: true
  name: TestClass
  nameWithType: TestClassRunner<TTestCase>.TestClass
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.TestClass
  nameWithType.vb: TestClassRunner(Of TTestCase).TestClass
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).TestClass
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.#ctor
  isExternal: false
  name: ExtendedXunitTestClassRunner
  nameWithType: ExtendedXunitTestClassRunner.ExtendedXunitTestClassRunner
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.ExtendedXunitTestClassRunner
- uid: Xunit.Abstractions.ITestClass
  commentId: T:Xunit.Abstractions.ITestClass
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestClass
  nameWithType: ITestClass
  fullName: Xunit.Abstractions.ITestClass
- uid: Xunit.Abstractions.IReflectionTypeInfo
  commentId: T:Xunit.Abstractions.IReflectionTypeInfo
  parent: Xunit.Abstractions
  isExternal: true
  name: IReflectionTypeInfo
  nameWithType: IReflectionTypeInfo
  fullName: Xunit.Abstractions.IReflectionTypeInfo
- uid: System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase}
  commentId: T:System.Collections.Generic.IEnumerable{Xunit.Sdk.IXunitTestCase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IXunitTestCase>
  nameWithType: IEnumerable<IXunitTestCase>
  fullName: System.Collections.Generic.IEnumerable<Xunit.Sdk.IXunitTestCase>
  nameWithType.vb: IEnumerable(Of IXunitTestCase)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Xunit.Sdk.IXunitTestCase)
  name.vb: IEnumerable(Of IXunitTestCase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Xunit.Sdk.IXunitTestCase
    name: IXunitTestCase
    nameWithType: IXunitTestCase
    fullName: Xunit.Sdk.IXunitTestCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Abstractions.IMessageSink
  commentId: T:Xunit.Abstractions.IMessageSink
  parent: Xunit.Abstractions
  isExternal: true
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: Xunit.Abstractions.IMessageSink
- uid: Xunit.Sdk.IMessageBus
  commentId: T:Xunit.Sdk.IMessageBus
  parent: Xunit.Sdk
  isExternal: true
  name: IMessageBus
  nameWithType: IMessageBus
  fullName: Xunit.Sdk.IMessageBus
- uid: Xunit.Sdk.ITestCaseOrderer
  commentId: T:Xunit.Sdk.ITestCaseOrderer
  parent: Xunit.Sdk
  isExternal: true
  name: ITestCaseOrderer
  nameWithType: ITestCaseOrderer
  fullName: Xunit.Sdk.ITestCaseOrderer
- uid: Xunit.Sdk.ExceptionAggregator
  commentId: T:Xunit.Sdk.ExceptionAggregator
  parent: Xunit.Sdk
  isExternal: true
  name: ExceptionAggregator
  nameWithType: ExceptionAggregator
  fullName: Xunit.Sdk.ExceptionAggregator
- uid: System.Threading.CancellationTokenSource
  commentId: T:System.Threading.CancellationTokenSource
  parent: System.Threading
  isExternal: true
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
- uid: System.Collections.Generic.IDictionary{System.Type,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, Object>
  nameWithType: IDictionary<Type, Object>
  fullName: System.Collections.Generic.IDictionary<System.Type, System.Object>
  nameWithType.vb: IDictionary(Of Type, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Type, System.Object)
  name.vb: IDictionary(Of Type, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.CreateTestClassConstructorArguments
  commentId: M:Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}.CreateTestClassConstructorArguments
  parent: Xunit.Sdk.TestClassRunner{Xunit.Sdk.IXunitTestCase}
  definition: Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
  name: CreateTestClassConstructorArguments()
  nameWithType: TestClassRunner<IXunitTestCase>.CreateTestClassConstructorArguments()
  fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.CreateTestClassConstructorArguments()
  nameWithType.vb: TestClassRunner(Of IXunitTestCase).CreateTestClassConstructorArguments()
  fullname.vb: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).CreateTestClassConstructorArguments()
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
    name: CreateTestClassConstructorArguments
    nameWithType: TestClassRunner<IXunitTestCase>.CreateTestClassConstructorArguments
    fullName: Xunit.Sdk.TestClassRunner<Xunit.Sdk.IXunitTestCase>.CreateTestClassConstructorArguments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
    name: CreateTestClassConstructorArguments
    nameWithType: TestClassRunner(Of IXunitTestCase).CreateTestClassConstructorArguments
    fullName: Xunit.Sdk.TestClassRunner(Of Xunit.Sdk.IXunitTestCase).CreateTestClassConstructorArguments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments
  isExternal: false
  name: CreateTestClassConstructorArguments
  nameWithType: ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments
  fullName: Microsoft.Azure.Batch.Conventions.Files.IntegrationTests.Xunit.ExtendedXunitTestClassRunner.CreateTestClassConstructorArguments
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
  commentId: M:Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
  isExternal: true
  name: CreateTestClassConstructorArguments()
  nameWithType: TestClassRunner<TTestCase>.CreateTestClassConstructorArguments()
  fullName: Xunit.Sdk.TestClassRunner<TTestCase>.CreateTestClassConstructorArguments()
  nameWithType.vb: TestClassRunner(Of TTestCase).CreateTestClassConstructorArguments()
  fullname.vb: Xunit.Sdk.TestClassRunner(Of TTestCase).CreateTestClassConstructorArguments()
  spec.csharp:
  - uid: Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
    name: CreateTestClassConstructorArguments
    nameWithType: TestClassRunner<TTestCase>.CreateTestClassConstructorArguments
    fullName: Xunit.Sdk.TestClassRunner<TTestCase>.CreateTestClassConstructorArguments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.TestClassRunner`1.CreateTestClassConstructorArguments
    name: CreateTestClassConstructorArguments
    nameWithType: TestClassRunner(Of TTestCase).CreateTestClassConstructorArguments
    fullName: Xunit.Sdk.TestClassRunner(Of TTestCase).CreateTestClassConstructorArguments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
