### YamlMime:ManagedReference
items:
- uid: ProxyLayerParser.BatchRequestGroup
  commentId: T:ProxyLayerParser.BatchRequestGroup
  id: BatchRequestGroup
  parent: ProxyLayerParser
  children:
  - ProxyLayerParser.BatchRequestGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo})
  - ProxyLayerParser.BatchRequestGroup.BatchRequests
  - ProxyLayerParser.BatchRequestGroup.Name
  langs:
  - csharp
  - vb
  name: BatchRequestGroup
  nameWithType: BatchRequestGroup
  fullName: ProxyLayerParser.BatchRequestGroup
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequestGroup
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
    startLine: 18
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  syntax:
    content: public class BatchRequestGroup
    content.vb: Public Class BatchRequestGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ProxyLayerParser.BatchRequestGroup.Name
  commentId: P:ProxyLayerParser.BatchRequestGroup.Name
  id: Name
  parent: ProxyLayerParser.BatchRequestGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BatchRequestGroup.Name
  fullName: ProxyLayerParser.BatchRequestGroup.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
    startLine: 23
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nGets the name of the operation group which the collection of <xref href=\"ProxyLayerParser.BatchRequestGroup.BatchRequests\" data-throw-if-not-resolved=\"false\"></xref> belong to.  For example \"Accounts\" or \"Pools\".\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: ProxyLayerParser.BatchRequestGroup.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ProxyLayerParser.BatchRequestGroup.BatchRequests
  commentId: P:ProxyLayerParser.BatchRequestGroup.BatchRequests
  id: BatchRequests
  parent: ProxyLayerParser.BatchRequestGroup
  langs:
  - csharp
  - vb
  name: BatchRequests
  nameWithType: BatchRequestGroup.BatchRequests
  fullName: ProxyLayerParser.BatchRequestGroup.BatchRequests
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchRequests
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
    startLine: 28
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  summary: "\nGets the collection of BatchRequests in this group.\n"
  example: []
  syntax:
    content: public IEnumerable<BatchRequestTypeGenerationInfo> BatchRequests { get; }
    content.vb: Public ReadOnly Property BatchRequests As IEnumerable(Of BatchRequestTypeGenerationInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo}
  overload: ProxyLayerParser.BatchRequestGroup.BatchRequests*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ProxyLayerParser.BatchRequestGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo})
  commentId: M:ProxyLayerParser.BatchRequestGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo})'
  parent: ProxyLayerParser.BatchRequestGroup
  langs:
  - csharp
  - vb
  name: BatchRequestGroup(String, IEnumerable<BatchRequestTypeGenerationInfo>)
  nameWithType: BatchRequestGroup.BatchRequestGroup(String, IEnumerable<BatchRequestTypeGenerationInfo>)
  fullName: ProxyLayerParser.BatchRequestGroup.BatchRequestGroup(System.String, System.Collections.Generic.IEnumerable<ProxyLayerParser.BatchRequestTypeGenerationInfo>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Batch/Client/Tools/ObjectModelCodeGeneration/RoslynParser/BatchRequestGroup.cs
    startLine: 30
  assemblies:
  - ProxyLayerParser
  namespace: ProxyLayerParser
  syntax:
    content: public BatchRequestGroup(string name, IEnumerable<BatchRequestTypeGenerationInfo> batchRequests)
    content.vb: Public Sub New(name As String, batchRequests As IEnumerable(Of BatchRequestTypeGenerationInfo))
    parameters:
    - id: name
      type: System.String
    - id: batchRequests
      type: System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo}
  overload: ProxyLayerParser.BatchRequestGroup.#ctor*
  nameWithType.vb: BatchRequestGroup.BatchRequestGroup(String, IEnumerable(Of BatchRequestTypeGenerationInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ProxyLayerParser.BatchRequestGroup.BatchRequestGroup(System.String, System.Collections.Generic.IEnumerable(Of ProxyLayerParser.BatchRequestTypeGenerationInfo))
  name.vb: BatchRequestGroup(String, IEnumerable(Of BatchRequestTypeGenerationInfo))
references:
- uid: ProxyLayerParser
  commentId: N:ProxyLayerParser
  isExternal: false
  name: ProxyLayerParser
  nameWithType: ProxyLayerParser
  fullName: ProxyLayerParser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ProxyLayerParser.BatchRequestGroup.BatchRequests
  commentId: P:ProxyLayerParser.BatchRequestGroup.BatchRequests
- uid: ProxyLayerParser.BatchRequestGroup.Name*
  commentId: Overload:ProxyLayerParser.BatchRequestGroup.Name
  isExternal: false
  name: Name
  nameWithType: BatchRequestGroup.Name
  fullName: ProxyLayerParser.BatchRequestGroup.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ProxyLayerParser.BatchRequestGroup.BatchRequests*
  commentId: Overload:ProxyLayerParser.BatchRequestGroup.BatchRequests
  isExternal: false
  name: BatchRequests
  nameWithType: BatchRequestGroup.BatchRequests
  fullName: ProxyLayerParser.BatchRequestGroup.BatchRequests
- uid: System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo}
  commentId: T:System.Collections.Generic.IEnumerable{ProxyLayerParser.BatchRequestTypeGenerationInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BatchRequestTypeGenerationInfo>
  nameWithType: IEnumerable<BatchRequestTypeGenerationInfo>
  fullName: System.Collections.Generic.IEnumerable<ProxyLayerParser.BatchRequestTypeGenerationInfo>
  nameWithType.vb: IEnumerable(Of BatchRequestTypeGenerationInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of ProxyLayerParser.BatchRequestTypeGenerationInfo)
  name.vb: IEnumerable(Of BatchRequestTypeGenerationInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ProxyLayerParser.BatchRequestTypeGenerationInfo
    name: BatchRequestTypeGenerationInfo
    nameWithType: BatchRequestTypeGenerationInfo
    fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ProxyLayerParser.BatchRequestTypeGenerationInfo
    name: BatchRequestTypeGenerationInfo
    nameWithType: BatchRequestTypeGenerationInfo
    fullName: ProxyLayerParser.BatchRequestTypeGenerationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ProxyLayerParser.BatchRequestGroup.#ctor*
  commentId: Overload:ProxyLayerParser.BatchRequestGroup.#ctor
  isExternal: false
  name: BatchRequestGroup
  nameWithType: BatchRequestGroup.BatchRequestGroup
  fullName: ProxyLayerParser.BatchRequestGroup.BatchRequestGroup
