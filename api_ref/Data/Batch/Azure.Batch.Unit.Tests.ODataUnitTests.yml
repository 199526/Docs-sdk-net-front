### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.ODataUnitTests
  commentId: T:Azure.Batch.Unit.Tests.ODataUnitTests
  id: ODataUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages
  - Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages
  langs:
  - csharp
  - vb
  name: ODataUnitTests
  nameWithType: ODataUnitTests
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ODataUnitTests
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 25
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class ODataUnitTests
    content.vb: Public Class ODataUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages
  id: CanUseODataPredicatesOnTaskListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnTaskListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnTaskListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 36
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnTaskListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnTaskListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages
  id: CanUseODataPredicatesOnJobListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnJobListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnJobListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 57
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnJobListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnJobListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  id: CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnJobScheduleListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnJobScheduleListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 77
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnJobScheduleListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  id: CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 97
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages
  id: CanUseODataPredicatesOnPoolListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnPoolListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnPoolListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 118
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnPoolListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnPoolListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages
  id: CanUseODataPredicatesOnCertificateListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnCertificateListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnCertificateListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 139
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnCertificateListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnCertificateListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  id: CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnComputeNodeListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnComputeNodeListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 159
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnComputeNodeListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  commentId: M:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  id: CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  parent: Azure.Batch.Unit.Tests.ODataUnitTests
  langs:
  - csharp
  - vb
  name: CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages()
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages()
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
    path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ODataUnitTests.cs
    startLine: 180
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  overload: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnTaskListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnTaskListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnJobListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobScheduleListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobFromJobScheduleListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnPoolListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnPoolListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnCertificateListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnCertificateListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnComputeNodeListWithMultiplePages
- uid: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages*
  commentId: Overload:Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  isExternal: false
  name: CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  nameWithType: ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
  fullName: Azure.Batch.Unit.Tests.ODataUnitTests.CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages
