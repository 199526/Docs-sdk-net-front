### YamlMime:ManagedReference
items:
- uid: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer
  commentId: T:ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer
  id: ConfigureAwaitAnalyzer
  parent: ConfigureAwaitAnalyzer
  children:
  - ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.DiagnosticId
  - ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  - ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics
  langs:
  - csharp
  - vb
  name: ConfigureAwaitAnalyzer
  nameWithType: ConfigureAwaitAnalyzer
  fullName: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConfigureAwaitAnalyzer
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
    startLine: 24
  assemblies:
  - ConfigureAwaitAnalyzer
  namespace: ConfigureAwaitAnalyzer
  syntax:
    content: >-
      [DiagnosticAnalyzer("C#", new string[]{})]

      public class ConfigureAwaitAnalyzer : DiagnosticAnalyzer
    content.vb: >-
      <DiagnosticAnalyzer("C#", New String() {})>

      Public Class ConfigureAwaitAnalyzer
          Inherits DiagnosticAnalyzer
  inheritance:
  - System.Object
  - Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  inheritedMembers:
  - Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)
  - Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
  - Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.DiagnosticId
  commentId: F:ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.DiagnosticId
  id: DiagnosticId
  parent: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer
  langs:
  - csharp
  - vb
  name: DiagnosticId
  nameWithType: ConfigureAwaitAnalyzer.DiagnosticId
  fullName: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.DiagnosticId
  type: Field
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DiagnosticId
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
    startLine: 27
  assemblies:
  - ConfigureAwaitAnalyzer
  namespace: ConfigureAwaitAnalyzer
  syntax:
    content: public const string DiagnosticId = "ConfigureAwaitAnalyzer"
    content.vb: Public Const DiagnosticId As String = "ConfigureAwaitAnalyzer"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics
  commentId: P:ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics
  id: SupportedDiagnostics
  parent: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer
  langs:
  - csharp
  - vb
  name: SupportedDiagnostics
  nameWithType: ConfigureAwaitAnalyzer.SupportedDiagnostics
  fullName: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics
  type: Property
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SupportedDiagnostics
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
    startLine: 57
  assemblies:
  - ConfigureAwaitAnalyzer
  namespace: ConfigureAwaitAnalyzer
  syntax:
    content: public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics { get; }
    content.vb: Public Overrides ReadOnly Property SupportedDiagnostics As ImmutableArray(Of DiagnosticDescriptor)
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.DiagnosticDescriptor}
  overridden: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics
  overload: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  commentId: M:ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  id: Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  parent: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer
  langs:
  - csharp
  - vb
  name: Initialize(AnalysisContext)
  nameWithType: ConfigureAwaitAnalyzer.Initialize(AnalysisContext)
  fullName: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Initialize
    path: src/Batch/Client/Tools/ConfigureAwaitAnalyzer/ConfigureAwaitAnalyzer/DiagnosticAnalyzer.cs
    startLine: 59
  assemblies:
  - ConfigureAwaitAnalyzer
  namespace: ConfigureAwaitAnalyzer
  syntax:
    content: public override void Initialize(AnalysisContext context)
    content.vb: Public Overrides Sub Initialize(context As AnalysisContext)
    parameters:
    - id: context
      type: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
  overridden: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  overload: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: ConfigureAwaitAnalyzer
  commentId: N:ConfigureAwaitAnalyzer
  isExternal: false
  name: ConfigureAwaitAnalyzer
  nameWithType: ConfigureAwaitAnalyzer
  fullName: ConfigureAwaitAnalyzer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  commentId: T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  parent: Microsoft.CodeAnalysis.Diagnostics
  isExternal: true
  name: DiagnosticAnalyzer
  nameWithType: DiagnosticAnalyzer
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)
  parent: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  isExternal: true
  name: Equals(Object)
  nameWithType: DiagnosticAnalyzer.Equals(Object)
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)
    name: Equals
    nameWithType: DiagnosticAnalyzer.Equals
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)
    name: Equals
    nameWithType: DiagnosticAnalyzer.Equals
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
  parent: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  isExternal: true
  name: GetHashCode()
  nameWithType: DiagnosticAnalyzer.GetHashCode()
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode()
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
    name: GetHashCode
    nameWithType: DiagnosticAnalyzer.GetHashCode
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
    name: GetHashCode
    nameWithType: DiagnosticAnalyzer.GetHashCode
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
  parent: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  isExternal: true
  name: ToString()
  nameWithType: DiagnosticAnalyzer.ToString()
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString()
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
    name: ToString
    nameWithType: DiagnosticAnalyzer.ToString
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
    name: ToString
    nameWithType: DiagnosticAnalyzer.ToString
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.CodeAnalysis.Diagnostics
  commentId: N:Microsoft.CodeAnalysis.Diagnostics
  isExternal: false
  name: Microsoft.CodeAnalysis.Diagnostics
  nameWithType: Microsoft.CodeAnalysis.Diagnostics
  fullName: Microsoft.CodeAnalysis.Diagnostics
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics
  commentId: P:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics
  parent: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  isExternal: true
  name: SupportedDiagnostics
  nameWithType: DiagnosticAnalyzer.SupportedDiagnostics
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics
- uid: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics*
  commentId: Overload:ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics
  isExternal: false
  name: SupportedDiagnostics
  nameWithType: ConfigureAwaitAnalyzer.SupportedDiagnostics
  fullName: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.SupportedDiagnostics
- uid: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.DiagnosticDescriptor}
  commentId: T:System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.DiagnosticDescriptor}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<DiagnosticDescriptor>
  nameWithType: ImmutableArray<DiagnosticDescriptor>
  fullName: System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticDescriptor>
  nameWithType.vb: ImmutableArray(Of DiagnosticDescriptor)
  fullname.vb: System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.DiagnosticDescriptor)
  name.vb: ImmutableArray(Of DiagnosticDescriptor)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.CodeAnalysis.DiagnosticDescriptor
    name: DiagnosticDescriptor
    nameWithType: DiagnosticDescriptor
    fullName: Microsoft.CodeAnalysis.DiagnosticDescriptor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.CodeAnalysis.DiagnosticDescriptor
    name: DiagnosticDescriptor
    nameWithType: DiagnosticDescriptor
    fullName: Microsoft.CodeAnalysis.DiagnosticDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullname.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  parent: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
  isExternal: true
  name: Initialize(AnalysisContext)
  nameWithType: DiagnosticAnalyzer.Initialize(AnalysisContext)
  fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
    name: Initialize
    nameWithType: DiagnosticAnalyzer.Initialize
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
    name: AnalysisContext
    nameWithType: AnalysisContext
    fullName: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)
    name: Initialize
    nameWithType: DiagnosticAnalyzer.Initialize
    fullName: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
    name: AnalysisContext
    nameWithType: AnalysisContext
    fullName: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize*
  commentId: Overload:ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize
  isExternal: false
  name: Initialize
  nameWithType: ConfigureAwaitAnalyzer.Initialize
  fullName: ConfigureAwaitAnalyzer.ConfigureAwaitAnalyzer.Initialize
- uid: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
  commentId: T:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
  parent: Microsoft.CodeAnalysis.Diagnostics
  isExternal: true
  name: AnalysisContext
  nameWithType: AnalysisContext
  fullName: Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
