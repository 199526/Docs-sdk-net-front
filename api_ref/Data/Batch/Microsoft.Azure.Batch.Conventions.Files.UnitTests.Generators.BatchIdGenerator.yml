### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator
  commentId: T:Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator
  id: BatchIdGenerator
  parent: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  children:
  - Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId
  - Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName
  langs:
  - csharp
  - vb
  name: BatchIdGenerator
  nameWithType: BatchIdGenerator
  fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator
  type: Class
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.Tests/Generators/BatchIdGenerator.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchIdGenerator
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.Tests/Generators/BatchIdGenerator.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.Tests
  namespace: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  syntax:
    content: public static class BatchIdGenerator
    content.vb: Public Module BatchIdGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId
  commentId: P:Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId
  id: BatchId
  parent: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator
  langs:
  - csharp
  - vb
  name: BatchId
  nameWithType: BatchIdGenerator.BatchId
  fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId
  type: Property
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.Tests/Generators/BatchIdGenerator.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchId
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.Tests/Generators/BatchIdGenerator.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.Tests
  namespace: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  syntax:
    content: public static Arbitrary<BatchId> BatchId { get; }
    content.vb: Public Shared ReadOnly Property BatchId As Arbitrary(Of BatchId)
    parameters: []
    return:
      type: FsCheck.Arbitrary{Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId}
  overload: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName
  commentId: P:Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName
  id: BatchIdThatIsValidContainerName
  parent: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator
  langs:
  - csharp
  - vb
  name: BatchIdThatIsValidContainerName
  nameWithType: BatchIdGenerator.BatchIdThatIsValidContainerName
  fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName
  type: Property
  source:
    remote:
      path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.Tests/Generators/BatchIdGenerator.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BatchIdThatIsValidContainerName
    path: src/Batch/FileConventions/Tests/AzureBatchFileConventions.Tests/Generators/BatchIdGenerator.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Batch.Conventions.Files.Tests
  namespace: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  syntax:
    content: public static Arbitrary<BatchIdThatIsValidContainerName> BatchIdThatIsValidContainerName { get; }
    content.vb: Public Shared ReadOnly Property BatchIdThatIsValidContainerName As Arbitrary(Of BatchIdThatIsValidContainerName)
    parameters: []
    return:
      type: FsCheck.Arbitrary{Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName}
  overload: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  commentId: N:Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  isExternal: false
  name: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  nameWithType: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
  fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId
  isExternal: false
  name: BatchId
  nameWithType: BatchIdGenerator.BatchId
  fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchId
- uid: FsCheck.Arbitrary{Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId}
  commentId: T:FsCheck.Arbitrary{Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId}
  parent: FsCheck
  definition: FsCheck.Arbitrary`1
  name: Arbitrary<BatchId>
  nameWithType: Arbitrary<BatchId>
  fullName: FsCheck.Arbitrary<Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId>
  nameWithType.vb: Arbitrary(Of BatchId)
  fullname.vb: FsCheck.Arbitrary(Of Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId)
  name.vb: Arbitrary(Of BatchId)
  spec.csharp:
  - uid: FsCheck.Arbitrary`1
    name: Arbitrary
    nameWithType: Arbitrary
    fullName: FsCheck.Arbitrary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId
    name: BatchId
    nameWithType: BatchId
    fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FsCheck.Arbitrary`1
    name: Arbitrary
    nameWithType: Arbitrary
    fullName: FsCheck.Arbitrary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId
    name: BatchId
    nameWithType: BatchId
    fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchId
  - name: )
    nameWithType: )
    fullName: )
- uid: FsCheck.Arbitrary`1
  commentId: T:FsCheck.Arbitrary`1
  isExternal: true
  name: Arbitrary<a>
  nameWithType: Arbitrary<a>
  fullName: FsCheck.Arbitrary<a>
  nameWithType.vb: Arbitrary(Of a)
  fullname.vb: FsCheck.Arbitrary(Of a)
  name.vb: Arbitrary(Of a)
  spec.csharp:
  - uid: FsCheck.Arbitrary`1
    name: Arbitrary
    nameWithType: Arbitrary
    fullName: FsCheck.Arbitrary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: a
    nameWithType: a
    fullName: a
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FsCheck.Arbitrary`1
    name: Arbitrary
    nameWithType: Arbitrary
    fullName: FsCheck.Arbitrary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: a
    nameWithType: a
    fullName: a
  - name: )
    nameWithType: )
    fullName: )
- uid: FsCheck
  commentId: N:FsCheck
  isExternal: false
  name: FsCheck
  nameWithType: FsCheck
  fullName: FsCheck
- uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName*
  commentId: Overload:Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName
  isExternal: false
  name: BatchIdThatIsValidContainerName
  nameWithType: BatchIdGenerator.BatchIdThatIsValidContainerName
  fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdGenerator.BatchIdThatIsValidContainerName
- uid: FsCheck.Arbitrary{Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName}
  commentId: T:FsCheck.Arbitrary{Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName}
  parent: FsCheck
  definition: FsCheck.Arbitrary`1
  name: Arbitrary<BatchIdThatIsValidContainerName>
  nameWithType: Arbitrary<BatchIdThatIsValidContainerName>
  fullName: FsCheck.Arbitrary<Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName>
  nameWithType.vb: Arbitrary(Of BatchIdThatIsValidContainerName)
  fullname.vb: FsCheck.Arbitrary(Of Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName)
  name.vb: Arbitrary(Of BatchIdThatIsValidContainerName)
  spec.csharp:
  - uid: FsCheck.Arbitrary`1
    name: Arbitrary
    nameWithType: Arbitrary
    fullName: FsCheck.Arbitrary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName
    name: BatchIdThatIsValidContainerName
    nameWithType: BatchIdThatIsValidContainerName
    fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FsCheck.Arbitrary`1
    name: Arbitrary
    nameWithType: Arbitrary
    fullName: FsCheck.Arbitrary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName
    name: BatchIdThatIsValidContainerName
    nameWithType: BatchIdThatIsValidContainerName
    fullName: Microsoft.Azure.Batch.Conventions.Files.UnitTests.Generators.BatchIdThatIsValidContainerName
  - name: )
    nameWithType: )
    fullName: )
