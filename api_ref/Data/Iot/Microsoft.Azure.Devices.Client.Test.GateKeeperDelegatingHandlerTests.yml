items:
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  commentId: T:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  id: GateKeeperDelegatingHandlerTests
  parent: Microsoft.Azure.Devices.Client.Test
  children:
  - Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.ImplicitOpen_SubjWasNotOpen_SubjIsOpen
  - Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_ClosedCannotBeReopened_Throws
  - Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen
  - Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCompleted_SutIsOpen
  - Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen
  - Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_TwoCallers_OnlyOneOpenCalled
  langs:
  - csharp
  - vb
  name: GateKeeperDelegatingHandlerTests
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GateKeeperDelegatingHandlerTests
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestClass]

      public class GateKeeperDelegatingHandlerTests
    content.vb: >-
      <TestClass>

      Public Class GateKeeperDelegatingHandlerTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCompleted_SutIsOpen
  commentId: M:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCompleted_SutIsOpen
  id: OpenAsync_InnerCompleted_SutIsOpen
  parent: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  langs:
  - csharp
  - vb
  name: OpenAsync_InnerCompleted_SutIsOpen()
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCompleted_SutIsOpen()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: OpenAsync_InnerCompleted_SutIsOpen
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("DelegatingHandlers")]

      [TestCategory("Owner [mtuchkov]")]

      public Task OpenAsync_InnerCompleted_SutIsOpen()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("DelegatingHandlers")>

      <TestCategory("Owner [mtuchkov]")>

      Public Function OpenAsync_InnerCompleted_SutIsOpen As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelegatingHandlers
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Owner [mtuchkov]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.ImplicitOpen_SubjWasNotOpen_SubjIsOpen
  commentId: M:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.ImplicitOpen_SubjWasNotOpen_SubjIsOpen
  id: ImplicitOpen_SubjWasNotOpen_SubjIsOpen
  parent: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  langs:
  - csharp
  - vb
  name: ImplicitOpen_SubjWasNotOpen_SubjIsOpen()
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.ImplicitOpen_SubjWasNotOpen_SubjIsOpen()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ImplicitOpen_SubjWasNotOpen_SubjIsOpen
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("DelegatingHandlers")]

      [TestCategory("Owner [mtuchkov]")]

      public Task ImplicitOpen_SubjWasNotOpen_SubjIsOpen()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("DelegatingHandlers")>

      <TestCategory("Owner [mtuchkov]")>

      Public Function ImplicitOpen_SubjWasNotOpen_SubjIsOpen As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelegatingHandlers
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Owner [mtuchkov]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_ClosedCannotBeReopened_Throws
  commentId: M:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_ClosedCannotBeReopened_Throws
  id: OpenAsync_ClosedCannotBeReopened_Throws
  parent: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  langs:
  - csharp
  - vb
  name: OpenAsync_ClosedCannotBeReopened_Throws()
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_ClosedCannotBeReopened_Throws()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: OpenAsync_ClosedCannotBeReopened_Throws
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("DelegatingHandlers")]

      [TestCategory("Owner [mtuchkov]")]

      public Task OpenAsync_ClosedCannotBeReopened_Throws()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("DelegatingHandlers")>

      <TestCategory("Owner [mtuchkov]")>

      Public Function OpenAsync_ClosedCannotBeReopened_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelegatingHandlers
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Owner [mtuchkov]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_TwoCallers_OnlyOneOpenCalled
  commentId: M:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_TwoCallers_OnlyOneOpenCalled
  id: OpenAsync_TwoCallers_OnlyOneOpenCalled
  parent: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  langs:
  - csharp
  - vb
  name: OpenAsync_TwoCallers_OnlyOneOpenCalled()
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_TwoCallers_OnlyOneOpenCalled()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: OpenAsync_TwoCallers_OnlyOneOpenCalled
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("DelegatingHandlers")]

      [TestCategory("Owner [mtuchkov]")]

      public Task OpenAsync_TwoCallers_OnlyOneOpenCalled()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("DelegatingHandlers")>

      <TestCategory("Owner [mtuchkov]")>

      Public Function OpenAsync_TwoCallers_OnlyOneOpenCalled As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelegatingHandlers
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Owner [mtuchkov]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen
  commentId: M:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen
  id: OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen
  parent: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  langs:
  - csharp
  - vb
  name: OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen()
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("DelegatingHandlers")]

      [TestCategory("Owner [mtuchkov]")]

      public Task OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("DelegatingHandlers")>

      <TestCategory("Owner [mtuchkov]")>

      Public Function OpenAsync_InnerFailed_SutIsOpenAndCanBeReopen As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelegatingHandlers
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Owner [mtuchkov]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen
  commentId: M:Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen
  id: OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen
  parent: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests
  langs:
  - csharp
  - vb
  name: OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen()
  fullName: Microsoft.Azure.Devices.Client.Test.GateKeeperDelegatingHandlerTests.OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/GateKeeperDelegatingHandlerTests.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("DelegatingHandlers")]

      [TestCategory("Owner [mtuchkov]")]

      public Task OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("DelegatingHandlers")>

      <TestCategory("Owner [mtuchkov]")>

      Public Function OpenAsync_InnerCancelled_SutIsOpenAndCanBeReopen As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelegatingHandlers
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Owner [mtuchkov]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client.Test
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Test
  fullName: Microsoft.Azure.Devices.Client.Test
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
