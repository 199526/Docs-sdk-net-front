items:
- uid: Microsoft.Azure.Devices.Client.Message
  commentId: T:Microsoft.Azure.Devices.Client.Message
  id: Message
  parent: Microsoft.Azure.Devices.Client
  children:
  - Microsoft.Azure.Devices.Client.Message.#ctor
  - Microsoft.Azure.Devices.Client.Message.#ctor(System.Byte[])
  - Microsoft.Azure.Devices.Client.Message.#ctor(System.IO.Stream)
  - Microsoft.Azure.Devices.Client.Message.CorrelationId
  - Microsoft.Azure.Devices.Client.Message.DeliveryCount
  - Microsoft.Azure.Devices.Client.Message.EnqueuedTimeUtc
  - Microsoft.Azure.Devices.Client.Message.ExpiryTimeUtc
  - Microsoft.Azure.Devices.Client.Message.GetBytes
  - Microsoft.Azure.Devices.Client.Message.LockToken
  - Microsoft.Azure.Devices.Client.Message.MessageId
  - Microsoft.Azure.Devices.Client.Message.Microsoft#Azure#Devices#Client#IReadOnlyIndicator#IsReadOnly
  - Microsoft.Azure.Devices.Client.Message.Properties
  - Microsoft.Azure.Devices.Client.Message.SequenceNumber
  - Microsoft.Azure.Devices.Client.Message.To
  - Microsoft.Azure.Devices.Client.Message.UserId
  langs:
  - csharp
  - vb
  name: Message
  fullName: Microsoft.Azure.Devices.Client.Message
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Message
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nThe data structure represent the message that is used for interacting with IotHub.\n"
  example: []
  syntax:
    content: 'public sealed class Message : IReadOnlyIndicator'
    content.vb: >-
      Public NotInheritable Class Message
          Implements IReadOnlyIndicator
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Devices.Client.IReadOnlyIndicator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.Client.Message.#ctor
  commentId: M:Microsoft.Azure.Devices.Client.Message.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: Message()
  fullName: Microsoft.Azure.Devices.Client.Message.Message()
  type: Constructor
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: .ctor
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDefault constructor with no body data\n"
  example: []
  syntax:
    content: public Message()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Message.#ctor(System.IO.Stream)
  commentId: M:Microsoft.Azure.Devices.Client.Message.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: Message(Stream)
  fullName: Microsoft.Azure.Devices.Client.Message.Message(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: .ctor
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nConstructor which uses the argument stream as the body stream.\n"
  remarks: User is expected to own the disposing of the stream when using this constructor.
  example: []
  syntax:
    content: public Message(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: a stream which will be used as body stream.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Message.#ctor(System.Byte[])
  commentId: M:Microsoft.Azure.Devices.Client.Message.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: Message(Byte[])
  fullName: Microsoft.Azure.Devices.Client.Message.Message(System.Byte[])
  type: Constructor
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: .ctor
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nConstructor which uses the input byte array as the body\n"
  remarks: >-
    user should treat the input byte array as immutable when

    sending the message.
  example: []
  syntax:
    content: public Message([ReadOnlyArray] byte[] byteArray)
    content.vb: Public Sub New(byteArray As Byte())
    parameters:
    - id: byteArray
      type: System.Byte[]
      description: >-
        a byte array which will be used to

        form the body stream
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.Message.Message(System.Byte())
  name.vb: Message(Byte())
- uid: Microsoft.Azure.Devices.Client.Message.MessageId
  commentId: P:Microsoft.Azure.Devices.Client.Message.MessageId
  id: MessageId
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: MessageId
  fullName: Microsoft.Azure.Devices.Client.Message.MessageId
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: MessageId
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\n[Required for two way requests] Used to correlate two-way communication. \nFormat: A case-sensitive string ( up to 128 char long) of ASCII 7-bit alphanumeric chars \n+ {'-', ':', '/', '\\', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}. \nNon-alphanumeric characters are from URN RFC.\n"
  example: []
  syntax:
    content: public string MessageId { get; set; }
    content.vb: Public Property MessageId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Message.To
  commentId: P:Microsoft.Azure.Devices.Client.Message.To
  id: To
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: To
  fullName: Microsoft.Azure.Devices.Client.Message.To
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: To
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\n[Required] Destination of the message\n"
  example: []
  syntax:
    content: public string To { get; set; }
    content.vb: Public Property To As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Message.ExpiryTimeUtc
  commentId: P:Microsoft.Azure.Devices.Client.Message.ExpiryTimeUtc
  id: ExpiryTimeUtc
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: ExpiryTimeUtc
  fullName: Microsoft.Azure.Devices.Client.Message.ExpiryTimeUtc
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ExpiryTimeUtc
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\n[Optional] The time when this message is considered expired\n"
  example: []
  syntax:
    content: public DateTimeOffset ExpiryTimeUtc { get; }
    content.vb: Public ReadOnly Property ExpiryTimeUtc As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.CorrelationId
  commentId: P:Microsoft.Azure.Devices.Client.Message.CorrelationId
  id: CorrelationId
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: CorrelationId
  fullName: Microsoft.Azure.Devices.Client.Message.CorrelationId
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CorrelationId
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nUsed in message responses and feedback\n"
  example: []
  syntax:
    content: public string CorrelationId { get; set; }
    content.vb: Public Property CorrelationId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Message.SequenceNumber
  commentId: P:Microsoft.Azure.Devices.Client.Message.SequenceNumber
  id: SequenceNumber
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: SequenceNumber
  fullName: Microsoft.Azure.Devices.Client.Message.SequenceNumber
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: SequenceNumber
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 265
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\n[Required] SequenceNumber of the received message\n"
  example: []
  syntax:
    content: public ulong SequenceNumber { get; }
    content.vb: Public ReadOnly Property SequenceNumber As ULong
    parameters: []
    return:
      type: System.UInt64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.LockToken
  commentId: P:Microsoft.Azure.Devices.Client.Message.LockToken
  id: LockToken
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: LockToken
  fullName: Microsoft.Azure.Devices.Client.Message.LockToken
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LockToken
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\n[Required] LockToken of the received message\n"
  example: []
  syntax:
    content: public string LockToken { get; }
    content.vb: Public ReadOnly Property LockToken As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.EnqueuedTimeUtc
  commentId: P:Microsoft.Azure.Devices.Client.Message.EnqueuedTimeUtc
  id: EnqueuedTimeUtc
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: EnqueuedTimeUtc
  fullName: Microsoft.Azure.Devices.Client.Message.EnqueuedTimeUtc
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: EnqueuedTimeUtc
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 305
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nTime when the message was received by the server\n"
  example: []
  syntax:
    content: public DateTimeOffset EnqueuedTimeUtc { get; }
    content.vb: Public ReadOnly Property EnqueuedTimeUtc As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.DeliveryCount
  commentId: P:Microsoft.Azure.Devices.Client.Message.DeliveryCount
  id: DeliveryCount
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: DeliveryCount
  fullName: Microsoft.Azure.Devices.Client.Message.DeliveryCount
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DeliveryCount
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 325
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nTime when the message was received by the server\n"
  example: []
  syntax:
    content: public uint DeliveryCount { get; }
    content.vb: Public ReadOnly Property DeliveryCount As UInteger
    parameters: []
    return:
      type: System.UInt32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.UserId
  commentId: P:Microsoft.Azure.Devices.Client.Message.UserId
  id: UserId
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: UserId
  fullName: Microsoft.Azure.Devices.Client.Message.UserId
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: UserId
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 346
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\n[Required in feedback messages] Used to specify the origin of messages generated by device hub. \nPossible value: “{hub name}/”\n"
  example: []
  syntax:
    content: public string UserId { get; set; }
    content.vb: Public Property UserId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Message.Properties
  commentId: P:Microsoft.Azure.Devices.Client.Message.Properties
  id: Properties
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.Azure.Devices.Client.Message.Properties
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Properties
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 369
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nGets the dictionary of user properties which are set when user send the data.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.Microsoft#Azure#Devices#Client#IReadOnlyIndicator#IsReadOnly
  commentId: P:Microsoft.Azure.Devices.Client.Message.Microsoft#Azure#Devices#Client#IReadOnlyIndicator#IsReadOnly
  id: Microsoft#Azure#Devices#Client#IReadOnlyIndicator#IsReadOnly
  isEii: true
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: IReadOnlyIndicator.IsReadOnly
  fullName: Microsoft.Azure.Devices.Client.Message.Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 382
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: bool IReadOnlyIndicator.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly As Boolean Implements IReadOnlyIndicator.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly
- uid: Microsoft.Azure.Devices.Client.Message.GetBytes
  commentId: M:Microsoft.Azure.Devices.Client.Message.GetBytes
  id: GetBytes
  parent: Microsoft.Azure.Devices.Client.Message
  langs:
  - csharp
  - vb
  name: GetBytes()
  fullName: Microsoft.Azure.Devices.Client.Message.GetBytes()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetBytes
    path: csharp/device/Microsoft.Azure.Devices.Client/Message.cs
    startLine: 461
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nThis methods return the body stream as a byte array\n"
  example: []
  syntax:
    content: public byte[] GetBytes()
    content.vb: Public Function GetBytes As Byte()
    return:
      type: System.Byte[]
      description: 
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: throws if the method has been called.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: throws if the event data has already been disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Microsoft.Azure.Devices.Client
  fullName: Microsoft.Azure.Devices.Client
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Devices.Client.IReadOnlyIndicator
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: IReadOnlyIndicator
  fullName: Microsoft.Azure.Devices.Client.IReadOnlyIndicator
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  fullName: System.UInt64
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly
  parent: Microsoft.Azure.Devices.Client.IReadOnlyIndicator
  isExternal: false
  name: IsReadOnly
  fullName: Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: true
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
