items:
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  commentId: T:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  id: ReadOnlyDictionary45`2.KeyCollection
  parent: Microsoft.Azure.Devices.Common
  children:
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.Count
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#IsSynchronized
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#SyncRoot
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45<TKey, TValue>.KeyCollection
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: KeyCollection
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 472
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: >-
      [DebuggerDisplay("Count = {Count}")]

      [Serializable]

      public sealed class KeyCollection : ICollection<TKey>, IEnumerable<TKey>, ICollection, IEnumerable
    content.vb: >-
      <DebuggerDisplay("Count = {Count}")>

      <Serializable>

      Public NotInheritable Class KeyCollection
          Implements ICollection(Of TKey), IEnumerable(Of TKey), ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{TKey}}
  - System.Collections.Generic.IEnumerable{{TKey}}
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.DebuggerDisplayAttribute
    ctor: System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Count = {Count}
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection
  name.vb: ReadOnlyDictionary45(Of TKey, TValue).KeyCollection
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)
  id: System#Collections#Generic#ICollection{TKey}#Add(`0)
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection<TKey>.Add(TKey)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.Generic.ICollection<TKey>.Add(TKey)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TKey>.Add
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 500
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: void ICollection<TKey>.Add(TKey item)
    content.vb: Sub System.Collections.Generic.ICollection<TKey>.Add(item As TKey) Implements ICollection(Of TKey).Add
    parameters:
    - id: item
      type: '{TKey}'
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.Add({TKey})
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.Generic.ICollection<TKey>.Add(TKey)
  name.vb: System.Collections.Generic.ICollection<TKey>.Add(TKey)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear
  id: System#Collections#Generic#ICollection{TKey}#Clear
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection<TKey>.Clear()
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.Generic.ICollection<TKey>.Clear()
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TKey>.Clear
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 510
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: void ICollection<TKey>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<TKey>.Clear Implements ICollection(Of TKey).Clear
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.Clear
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.Generic.ICollection<TKey>.Clear()
  name.vb: System.Collections.Generic.ICollection<TKey>.Clear()
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)
  id: System#Collections#Generic#ICollection{TKey}#Contains(`0)
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection<TKey>.Contains(TKey)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.Generic.ICollection<TKey>.Contains(TKey)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TKey>.Contains
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 520
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: bool ICollection<TKey>.Contains(TKey item)
    content.vb: Function System.Collections.Generic.ICollection<TKey>.Contains(item As TKey) As Boolean Implements ICollection(Of TKey).Contains
    parameters:
    - id: item
      type: '{TKey}'
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.Contains({TKey})
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.Generic.ICollection<TKey>.Contains(TKey)
  name.vb: System.Collections.Generic.ICollection<TKey>.Contains(TKey)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: CopyTo(TKey[], Int32)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.CopyTo(TKey[], System.Int32)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CopyTo
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 525
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public void CopyTo(TKey[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As TKey(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{TKey}[]'
    - id: arrayIndex
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.CopyTo({TKey}[],System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.CopyTo(TKey(), System.Int32)
  name.vb: CopyTo(TKey(), Int32)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.Count
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.Count
  id: Count
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.Count
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Count
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 530
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.Count
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.Count
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly
  id: System#Collections#Generic#ICollection{TKey}#IsReadOnly
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection<TKey>.IsReadOnly
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.Generic.ICollection<TKey>.IsReadOnly
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TKey>.IsReadOnly
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 535
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: bool ICollection<TKey>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<TKey>.IsReadOnly As Boolean Implements ICollection(Of TKey).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.Generic.ICollection<TKey>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<TKey>.IsReadOnly
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)
  id: System#Collections#Generic#ICollection{TKey}#Remove(`0)
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection<TKey>.Remove(TKey)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.Generic.ICollection<TKey>.Remove(TKey)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TKey>.Remove
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 540
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: bool ICollection<TKey>.Remove(TKey item)
    content.vb: Function System.Collections.Generic.ICollection<TKey>.Remove(item As TKey) As Boolean Implements ICollection(Of TKey).Remove
    parameters:
    - id: item
      type: '{TKey}'
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{{TKey}}.Remove({TKey})
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.Generic.ICollection<TKey>.Remove(TKey)
  name.vb: System.Collections.Generic.ICollection<TKey>.Remove(TKey)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetEnumerator
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 554
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public IEnumerator<TKey> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of TKey)
    return:
      type: System.Collections.Generic.IEnumerator{{TKey}}
  implements:
  - System.Collections.Generic.IEnumerable{{TKey}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.GetEnumerator()
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.IEnumerable.GetEnumerator
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 563
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.ICollection.CopyTo
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 572
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.ICollection.IsSynchronized
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 577
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#SyncRoot
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.KeyCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.ICollection.SyncRoot
    path: csharp/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 582
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).KeyCollection.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
references:
- uid: Microsoft.Azure.Devices.Common
  isExternal: false
  name: Microsoft.Azure.Devices.Common
  fullName: Microsoft.Azure.Devices.Common
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.ICollection{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  fullname.vb: System.Collections.Generic.ICollection(Of TKey)
  name.vb: ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TKey>
  fullName: System.Collections.Generic.IEnumerable<TKey>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TKey)
  name.vb: IEnumerable(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.ICollection{{TKey}}.Add({TKey})
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TKey)
  fullName: System.Collections.Generic.ICollection<TKey>.Add(TKey)
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).Add(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<TKey>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of TKey).Add
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TKey}}.Clear
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  fullName: System.Collections.Generic.ICollection<TKey>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<TKey>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of TKey).Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TKey}}.Contains({TKey})
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(TKey)
  fullName: System.Collections.Generic.ICollection<TKey>.Contains(TKey)
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).Contains(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<TKey>.Contains
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of TKey).Contains
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TKey}}.CopyTo({TKey}[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TKey[], Int32)
  fullName: System.Collections.Generic.ICollection<TKey>.CopyTo(TKey[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).CopyTo(TKey(), System.Int32)
  name.vb: CopyTo(TKey(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<TKey>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of TKey).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: '{TKey}[]'
  isExternal: false
  name: TKey[]
  fullName: TKey[]
  fullname.vb: TKey()
  name.vb: TKey()
  spec.csharp:
  - name: TKey
    fullName: TKey
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: TKey
    fullName: TKey
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TKey}}.Count
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  fullName: System.Collections.Generic.ICollection<TKey>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).Count
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.Generic.ICollection`1.Count
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{TKey}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<TKey>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{TKey}}.Remove({TKey})
  parent: System.Collections.Generic.ICollection{{TKey}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TKey)
  fullName: System.Collections.Generic.ICollection<TKey>.Remove(TKey)
  fullname.vb: System.Collections.Generic.ICollection(Of TKey).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<TKey>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of TKey).Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TKey}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TKey}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TKey>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of TKey).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TKey>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TKey).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TKey>
  fullName: System.Collections.Generic.IEnumerator<TKey>
  fullname.vb: System.Collections.Generic.IEnumerator(Of TKey)
  name.vb: IEnumerator(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
