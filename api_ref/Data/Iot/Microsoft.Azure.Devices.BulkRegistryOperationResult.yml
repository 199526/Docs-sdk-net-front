items:
- uid: Microsoft.Azure.Devices.BulkRegistryOperationResult
  commentId: T:Microsoft.Azure.Devices.BulkRegistryOperationResult
  id: BulkRegistryOperationResult
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.BulkRegistryOperationResult.Errors
  - Microsoft.Azure.Devices.BulkRegistryOperationResult.IsSuccessful
  langs:
  - csharp
  - vb
  name: BulkRegistryOperationResult
  fullName: Microsoft.Azure.Devices.BulkRegistryOperationResult
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/BulkRegistryOperationResult.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: BulkRegistryOperationResult
    path: csharp/service/Microsoft.Azure.Devices/BulkRegistryOperationResult.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nEncapsulates the result of a bulk registry operation.\n"
  example: []
  syntax:
    content: public sealed class BulkRegistryOperationResult
    content.vb: Public NotInheritable Class BulkRegistryOperationResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.BulkRegistryOperationResult.IsSuccessful
  commentId: P:Microsoft.Azure.Devices.BulkRegistryOperationResult.IsSuccessful
  id: IsSuccessful
  parent: Microsoft.Azure.Devices.BulkRegistryOperationResult
  langs:
  - csharp
  - vb
  name: IsSuccessful
  fullName: Microsoft.Azure.Devices.BulkRegistryOperationResult.IsSuccessful
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/BulkRegistryOperationResult.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: IsSuccessful
    path: csharp/service/Microsoft.Azure.Devices/BulkRegistryOperationResult.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nWhether or not the operation was successful.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isSuccessful", Required = Required.Always)]

      public bool IsSuccessful { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isSuccessful", Required:=Required.Always)>

      Public Property IsSuccessful As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isSuccessful
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.BulkRegistryOperationResult.Errors
  commentId: P:Microsoft.Azure.Devices.BulkRegistryOperationResult.Errors
  id: Errors
  parent: Microsoft.Azure.Devices.BulkRegistryOperationResult
  langs:
  - csharp
  - vb
  name: Errors
  fullName: Microsoft.Azure.Devices.BulkRegistryOperationResult.Errors
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/BulkRegistryOperationResult.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Errors
    path: csharp/service/Microsoft.Azure.Devices/BulkRegistryOperationResult.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nIf the operation was not successful, this contains an array of DeviceRegistryOperationError objects.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "errors", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public DeviceRegistryOperationError[] Errors { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="errors", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property Errors As DeviceRegistryOperationError()
    parameters: []
    return:
      type: Microsoft.Azure.Devices.DeviceRegistryOperationError[]
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: errors
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Devices.DeviceRegistryOperationError[]
  isExternal: false
  name: DeviceRegistryOperationError[]
  fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError[]
  fullname.vb: Microsoft.Azure.Devices.DeviceRegistryOperationError()
  name.vb: DeviceRegistryOperationError()
  spec.csharp:
  - uid: Microsoft.Azure.Devices.DeviceRegistryOperationError
    name: DeviceRegistryOperationError
    fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Devices.DeviceRegistryOperationError
    name: DeviceRegistryOperationError
    fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError
  - name: ()
    fullName: ()
