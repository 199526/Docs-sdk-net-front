items:
- uid: Microsoft.Azure.Devices.DeviceRegistryOperationError
  commentId: T:Microsoft.Azure.Devices.DeviceRegistryOperationError
  id: DeviceRegistryOperationError
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.DeviceRegistryOperationError.DeviceId
  - Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorCode
  - Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorStatus
  langs:
  - csharp
  - vb
  name: DeviceRegistryOperationError
  fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DeviceRegistryOperationError
    path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nEncapsulates device registry operation error details.\n"
  example: []
  syntax:
    content: public sealed class DeviceRegistryOperationError
    content.vb: Public NotInheritable Class DeviceRegistryOperationError
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.DeviceRegistryOperationError.DeviceId
  commentId: P:Microsoft.Azure.Devices.DeviceRegistryOperationError.DeviceId
  id: DeviceId
  parent: Microsoft.Azure.Devices.DeviceRegistryOperationError
  langs:
  - csharp
  - vb
  name: DeviceId
  fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError.DeviceId
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DeviceId
    path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nThe ID of the device that indicated the error.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deviceId", NullValueHandling = NullValueHandling.Ignore)]

      public string DeviceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deviceId", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property DeviceId As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deviceId
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorCode
  commentId: P:Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorCode
  id: ErrorCode
  parent: Microsoft.Azure.Devices.DeviceRegistryOperationError
  langs:
  - csharp
  - vb
  name: ErrorCode
  fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorCode
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ErrorCode
    path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nErrorCode associated with the error.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "errorCode", NullValueHandling = NullValueHandling.Ignore)]

      public ErrorCode ErrorCode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="errorCode", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ErrorCode As ErrorCode
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Common.Exceptions.ErrorCode
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: errorCode
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorStatus
  commentId: P:Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorStatus
  id: ErrorStatus
  parent: Microsoft.Azure.Devices.DeviceRegistryOperationError
  langs:
  - csharp
  - vb
  name: ErrorStatus
  fullName: Microsoft.Azure.Devices.DeviceRegistryOperationError.ErrorStatus
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ErrorStatus
    path: csharp/service/Microsoft.Azure.Devices/DeviceRegistryOperationError.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nAdditional details associated with the error.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "errorStatus", NullValueHandling = NullValueHandling.Ignore)]

      public string ErrorStatus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="errorStatus", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ErrorStatus As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: errorStatus
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.Common.Exceptions.ErrorCode
  parent: Microsoft.Azure.Devices.Common.Exceptions
  isExternal: false
  name: ErrorCode
  fullName: Microsoft.Azure.Devices.Common.Exceptions.ErrorCode
- uid: Microsoft.Azure.Devices.Common.Exceptions
  isExternal: false
  name: Microsoft.Azure.Devices.Common.Exceptions
  fullName: Microsoft.Azure.Devices.Common.Exceptions
