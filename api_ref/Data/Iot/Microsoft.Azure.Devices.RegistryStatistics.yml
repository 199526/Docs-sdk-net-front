items:
- uid: Microsoft.Azure.Devices.RegistryStatistics
  commentId: T:Microsoft.Azure.Devices.RegistryStatistics
  id: RegistryStatistics
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.RegistryStatistics.DisabledDeviceCount
  - Microsoft.Azure.Devices.RegistryStatistics.EnabledDeviceCount
  - Microsoft.Azure.Devices.RegistryStatistics.TotalDeviceCount
  langs:
  - csharp
  - vb
  name: RegistryStatistics
  fullName: Microsoft.Azure.Devices.RegistryStatistics
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: RegistryStatistics
    path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nContains device registry statistics that can be retrieved from IotHub.\n"
  example: []
  syntax:
    content: public class RegistryStatistics
    content.vb: Public Class RegistryStatistics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.RegistryStatistics.TotalDeviceCount
  commentId: P:Microsoft.Azure.Devices.RegistryStatistics.TotalDeviceCount
  id: TotalDeviceCount
  parent: Microsoft.Azure.Devices.RegistryStatistics
  langs:
  - csharp
  - vb
  name: TotalDeviceCount
  fullName: Microsoft.Azure.Devices.RegistryStatistics.TotalDeviceCount
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: TotalDeviceCount
    path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "totalDeviceCount")]

      public long TotalDeviceCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="totalDeviceCount")>

      Public Property TotalDeviceCount As Long
    parameters: []
    return:
      type: System.Int64
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: totalDeviceCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.RegistryStatistics.EnabledDeviceCount
  commentId: P:Microsoft.Azure.Devices.RegistryStatistics.EnabledDeviceCount
  id: EnabledDeviceCount
  parent: Microsoft.Azure.Devices.RegistryStatistics
  langs:
  - csharp
  - vb
  name: EnabledDeviceCount
  fullName: Microsoft.Azure.Devices.RegistryStatistics.EnabledDeviceCount
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: EnabledDeviceCount
    path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enabledDeviceCount")]

      public long EnabledDeviceCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="enabledDeviceCount")>

      Public Property EnabledDeviceCount As Long
    parameters: []
    return:
      type: System.Int64
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enabledDeviceCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.RegistryStatistics.DisabledDeviceCount
  commentId: P:Microsoft.Azure.Devices.RegistryStatistics.DisabledDeviceCount
  id: DisabledDeviceCount
  parent: Microsoft.Azure.Devices.RegistryStatistics
  langs:
  - csharp
  - vb
  name: DisabledDeviceCount
  fullName: Microsoft.Azure.Devices.RegistryStatistics.DisabledDeviceCount
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DisabledDeviceCount
    path: csharp/service/Microsoft.Azure.Devices/RegistryStatistics.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "disabledDeviceCount")]

      public long DisabledDeviceCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="disabledDeviceCount")>

      Public Property DisabledDeviceCount As Long
    parameters: []
    return:
      type: System.Int64
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: disabledDeviceCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
