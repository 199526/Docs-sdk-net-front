items:
- uid: Microsoft.Azure.Devices.SymmetricKey
  commentId: T:Microsoft.Azure.Devices.SymmetricKey
  id: SymmetricKey
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.SymmetricKey.IsEmpty
  - Microsoft.Azure.Devices.SymmetricKey.IsValid(System.Boolean)
  - Microsoft.Azure.Devices.SymmetricKey.PrimaryKey
  - Microsoft.Azure.Devices.SymmetricKey.SecondaryKey
  langs:
  - csharp
  - vb
  name: SymmetricKey
  fullName: Microsoft.Azure.Devices.SymmetricKey
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: SymmetricKey
    path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nprimary and secondary symmetric keys of a device.\n"
  example: []
  syntax:
    content: public sealed class SymmetricKey
    content.vb: Public NotInheritable Class SymmetricKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.SymmetricKey.PrimaryKey
  commentId: P:Microsoft.Azure.Devices.SymmetricKey.PrimaryKey
  id: PrimaryKey
  parent: Microsoft.Azure.Devices.SymmetricKey
  langs:
  - csharp
  - vb
  name: PrimaryKey
  fullName: Microsoft.Azure.Devices.SymmetricKey.PrimaryKey
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: PrimaryKey
    path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "primaryKey")]

      public string PrimaryKey { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="primaryKey")>

      Public Property PrimaryKey As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: primaryKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.SymmetricKey.SecondaryKey
  commentId: P:Microsoft.Azure.Devices.SymmetricKey.SecondaryKey
  id: SecondaryKey
  parent: Microsoft.Azure.Devices.SymmetricKey
  langs:
  - csharp
  - vb
  name: SecondaryKey
  fullName: Microsoft.Azure.Devices.SymmetricKey.SecondaryKey
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: SecondaryKey
    path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "secondaryKey")]

      public string SecondaryKey { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="secondaryKey")>

      Public Property SecondaryKey As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: secondaryKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.SymmetricKey.IsValid(System.Boolean)
  commentId: M:Microsoft.Azure.Devices.SymmetricKey.IsValid(System.Boolean)
  id: IsValid(System.Boolean)
  parent: Microsoft.Azure.Devices.SymmetricKey
  langs:
  - csharp
  - vb
  name: IsValid(Boolean)
  fullName: Microsoft.Azure.Devices.SymmetricKey.IsValid(System.Boolean)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: IsValid
    path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nChecks if the contents are valid\n"
  example: []
  syntax:
    content: public bool IsValid(bool throwArgumentException)
    content.vb: Public Function IsValid(throwArgumentException As Boolean) As Boolean
    parameters:
    - id: throwArgumentException
      type: System.Boolean
      description: 
    return:
      type: System.Boolean
      description: bool
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.SymmetricKey.IsEmpty
  commentId: M:Microsoft.Azure.Devices.SymmetricKey.IsEmpty
  id: IsEmpty
  parent: Microsoft.Azure.Devices.SymmetricKey
  langs:
  - csharp
  - vb
  name: IsEmpty()
  fullName: Microsoft.Azure.Devices.SymmetricKey.IsEmpty()
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: IsEmpty
    path: csharp/service/Microsoft.Azure.Devices/SymmetricKey.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices
  summary: "\nChecks if the fields are populated\n"
  example: []
  syntax:
    content: public bool IsEmpty()
    content.vb: Public Function IsEmpty As Boolean
    return:
      type: System.Boolean
      description: bool
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
