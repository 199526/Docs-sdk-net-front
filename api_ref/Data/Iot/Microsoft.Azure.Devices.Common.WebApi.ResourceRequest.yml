items:
- uid: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  commentId: T:Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  id: ResourceRequest
  parent: Microsoft.Azure.Devices.Common.WebApi
  children:
  - Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Location
  - Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Name
  - Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Properties
  - Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Tags
  - Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Type
  langs:
  - csharp
  - vb
  name: ResourceRequest
  fullName: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ResourceRequest
    path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
    startLine: 9
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common.WebApi
  syntax:
    content: public class ResourceRequest
    content.vb: Public Class ResourceRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Name
  commentId: P:Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Name
  id: Name
  parent: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Name
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Name
    path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common.WebApi
  syntax:
    content: >-
      [DataMember]

      [JsonProperty("name")]

      public string Name { get; set; }
    content.vb: >-
      <DataMember>

      <JsonProperty("name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Type
  commentId: P:Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Type
  id: Type
  parent: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Type
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Type
    path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common.WebApi
  syntax:
    content: >-
      [DataMember]

      [JsonProperty("type")]

      public string Type { get; set; }
    content.vb: >-
      <DataMember>

      <JsonProperty("type")>

      Public Property Type As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Location
  commentId: P:Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Location
  id: Location
  parent: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  langs:
  - csharp
  - vb
  name: Location
  fullName: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Location
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Location
    path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common.WebApi
  summary: "\nTODO: hard code locations in enum\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [JsonProperty("location")]

      public string Location { get; set; }
    content.vb: >-
      <DataMember>

      <JsonProperty("location")>

      Public Property Location As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Tags
  commentId: P:Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Tags
  id: Tags
  parent: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  langs:
  - csharp
  - vb
  name: Tags
  fullName: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Tags
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Tags
    path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common.WebApi
  summary: "\nTODO: No more than 15 tags, max length per key is 512 chars\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [JsonProperty("tags")]

      public IDictionary<string, string> Tags { get; set; }
    content.vb: >-
      <DataMember>

      <JsonProperty("tags")>

      Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Properties
  commentId: P:Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Properties
  id: Properties
  parent: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.Azure.Devices.Common.WebApi.ResourceRequest.Properties
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Properties
    path: csharp/service/Microsoft.Azure.Devices/Common/WebApi/ResourceRequest.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Devices
  namespace: Microsoft.Azure.Devices.Common.WebApi
  syntax:
    content: >-
      [DataMember]

      [JsonProperty("properties")]

      public IDictionary<string, object> Properties { get; set; }
    content.vb: >-
      <DataMember>

      <JsonProperty("properties")>

      Public Property Properties As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: properties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Common.WebApi
  isExternal: false
  name: Microsoft.Azure.Devices.Common.WebApi
  fullName: Microsoft.Azure.Devices.Common.WebApi
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
