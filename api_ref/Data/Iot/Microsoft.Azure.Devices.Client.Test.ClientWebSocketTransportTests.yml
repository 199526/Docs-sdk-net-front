items:
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  commentId: T:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  id: ClientWebSocketTransportTests
  parent: Microsoft.Azure.Devices.Client.Test
  children:
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssemblyCleanup
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssembyInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportReadWithoutConnectTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportWriteWithoutConnectTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportReadWithoutConnectTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportWriteWithoutConnectTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterAbortTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterCloseTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadWriteTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterAbortTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterCloseTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterAbortTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterCloseTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadWriteTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.RunWebSocketServer
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterAbortTest
  - Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterCloseTest
  langs:
  - csharp
  - vb
  name: ClientWebSocketTransportTests
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ClientWebSocketTransportTests
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestClass]

      public class ClientWebSocketTransportTests
    content.vb: >-
      <TestClass>

      Public Class ClientWebSocketTransportTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssembyInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssembyInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  id: AssembyInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: AssembyInitialize(TestContext)
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssembyInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: AssembyInitialize
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ClassInitialize]

      public static void AssembyInitialize(TestContext testcontext)
    content.vb: >-
      <ClassInitialize>

      Public Shared Sub AssembyInitialize(testcontext As TestContext)
    parameters:
    - id: testcontext
      type: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssemblyCleanup
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssemblyCleanup
  id: AssemblyCleanup
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: AssemblyCleanup()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.AssemblyCleanup()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: AssemblyCleanup
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ClassCleanup]

      public static void AssemblyCleanup()
    content.vb: >-
      <ClassCleanup>

      Public Shared Sub AssemblyCleanup
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportWriteWithoutConnectTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportWriteWithoutConnectTest
  id: ClientWebSocketTransportWriteWithoutConnectTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: ClientWebSocketTransportWriteWithoutConnectTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportWriteWithoutConnectTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ClientWebSocketTransportWriteWithoutConnectTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (AmqpException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public void ClientWebSocketTransportWriteWithoutConnectTest()
    content.vb: >-
      <ExpectedException(GetType(AmqpException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Sub ClientWebSocketTransportWriteWithoutConnectTest
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: AmqpException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportReadWithoutConnectTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportReadWithoutConnectTest
  id: ClientWebSocketTransportReadWithoutConnectTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: ClientWebSocketTransportReadWithoutConnectTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ClientWebSocketTransportReadWithoutConnectTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ClientWebSocketTransportReadWithoutConnectTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (AmqpException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task ClientWebSocketTransportReadWithoutConnectTest()
    content.vb: >-
      <ExpectedException(GetType(AmqpException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function ClientWebSocketTransportReadWithoutConnectTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: AmqpException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadWriteTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadWriteTest
  id: ReadWriteTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: ReadWriteTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadWriteTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReadWriteTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task ReadWriteTest()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function ReadWriteTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterCloseTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterCloseTest
  id: ReadAfterCloseTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: ReadAfterCloseTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterCloseTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReadAfterCloseTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task ReadAfterCloseTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function ReadAfterCloseTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterCloseTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterCloseTest
  id: WriteAfterCloseTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: WriteAfterCloseTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterCloseTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WriteAfterCloseTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task WriteAfterCloseTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function WriteAfterCloseTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterAbortTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterAbortTest
  id: ReadAfterAbortTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: ReadAfterAbortTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.ReadAfterAbortTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReadAfterAbortTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task ReadAfterAbortTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function ReadAfterAbortTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterAbortTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterAbortTest
  id: WriteAfterAbortTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: WriteAfterAbortTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.WriteAfterAbortTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WriteAfterAbortTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task WriteAfterAbortTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function WriteAfterAbortTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportWriteWithoutConnectTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportWriteWithoutConnectTest
  id: LegacyClientWebSocketTransportWriteWithoutConnectTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyClientWebSocketTransportWriteWithoutConnectTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportWriteWithoutConnectTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyClientWebSocketTransportWriteWithoutConnectTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (AmqpException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public void LegacyClientWebSocketTransportWriteWithoutConnectTest()
    content.vb: >-
      <ExpectedException(GetType(AmqpException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Sub LegacyClientWebSocketTransportWriteWithoutConnectTest
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: AmqpException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportReadWithoutConnectTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportReadWithoutConnectTest
  id: LegacyClientWebSocketTransportReadWithoutConnectTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyClientWebSocketTransportReadWithoutConnectTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyClientWebSocketTransportReadWithoutConnectTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyClientWebSocketTransportReadWithoutConnectTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 204
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (AmqpException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task LegacyClientWebSocketTransportReadWithoutConnectTest()
    content.vb: >-
      <ExpectedException(GetType(AmqpException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function LegacyClientWebSocketTransportReadWithoutConnectTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: AmqpException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadWriteTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadWriteTest
  id: LegacyWebSocketReadWriteTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyWebSocketReadWriteTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadWriteTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyWebSocketReadWriteTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 227
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task LegacyWebSocketReadWriteTest()
    content.vb: >-
      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function LegacyWebSocketReadWriteTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterCloseTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterCloseTest
  id: LegacyWebSocketReadAfterCloseTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyWebSocketReadAfterCloseTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterCloseTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyWebSocketReadAfterCloseTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 257
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task LegacyWebSocketReadAfterCloseTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function LegacyWebSocketReadAfterCloseTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterCloseTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterCloseTest
  id: LegacyWebSocketWriteAfterCloseTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyWebSocketWriteAfterCloseTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterCloseTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyWebSocketWriteAfterCloseTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 273
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task LegacyWebSocketWriteAfterCloseTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function LegacyWebSocketWriteAfterCloseTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterAbortTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterAbortTest
  id: LegacyWebSocketReadAfterAbortTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyWebSocketReadAfterAbortTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketReadAfterAbortTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyWebSocketReadAfterAbortTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 288
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task LegacyWebSocketReadAfterAbortTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function LegacyWebSocketReadAfterAbortTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterAbortTest
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterAbortTest
  id: LegacyWebSocketWriteAfterAbortTest
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: LegacyWebSocketWriteAfterAbortTest()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.LegacyWebSocketWriteAfterAbortTest()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: LegacyWebSocketWriteAfterAbortTest
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 306
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: >-
      [ExpectedException(typeof (ObjectDisposedException))]

      [TestMethod]

      [TestCategory("CIT")]

      [TestCategory("WebSocket")]

      public Task LegacyWebSocketWriteAfterAbortTest()
    content.vb: >-
      <ExpectedException(GetType(ObjectDisposedException))>

      <TestMethod>

      <TestCategory("CIT")>

      <TestCategory("WebSocket")>

      Public Function LegacyWebSocketWriteAfterAbortTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ObjectDisposedException
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CIT
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WebSocket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.RunWebSocketServer
  commentId: M:Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.RunWebSocketServer
  id: RunWebSocketServer
  parent: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests
  langs:
  - csharp
  - vb
  name: RunWebSocketServer()
  fullName: Microsoft.Azure.Devices.Client.Test.ClientWebSocketTransportTests.RunWebSocketServer()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: RunWebSocketServer
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ClientWebSocketTransportTests.cs
    startLine: 360
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static Task RunWebSocketServer()
    content.vb: Public Shared Function RunWebSocketServer As Task
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Devices.Client.Test
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Test
  fullName: Microsoft.Azure.Devices.Client.Test
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  parent: Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: true
  name: TestContext
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
- uid: Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: false
  name: Microsoft.VisualStudio.TestTools.UnitTesting
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
