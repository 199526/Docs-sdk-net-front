items:
- uid: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert
  commentId: T:Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert
  id: TestAssert
  parent: Microsoft.Azure.Devices.Client.Tests.PCLTests
  children:
  - Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws``1(Action,System.String)
  - Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws``1(Func{Task},System.String)
  - Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.ThrowsAsync``1(Func{Task},System.String)
  langs:
  - csharp
  - vb
  name: TestAssert
  fullName: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert
  type: Class
  source:
    remote:
      path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: TestAssert
    path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Client.Tests.PCLTests
  namespace: Microsoft.Azure.Devices.Client.Tests.PCLTests
  syntax:
    content: 'public class TestAssert : object'
    content.vb: >-
      Public Class TestAssert
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws``1(Action,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws``1(Action,System.String)
  id: Throws``1(Action,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert
  langs:
  - csharp
  - vb
  name: Throws<TException>(Action, String)
  fullName: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws<TException>(Action, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Throws
    path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Client.Tests.PCLTests
  namespace: Microsoft.Azure.Devices.Client.Tests.PCLTests
  syntax:
    content: 'public static TException Throws<TException>(this Action action, string errorMessage = null)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Throws(Of TException As Exception)(action As Action, errorMessage As String = Nothing) As TException
    parameters:
    - id: action
      type: Action
    - id: errorMessage
      type: System.String
    typeParameters:
    - id: TException
    return:
      type: '{TException}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws(Of TException)(Action, System.String)
  name.vb: Throws(Of TException)(Action, String)
- uid: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws``1(Func{Task},System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws``1(Func{Task},System.String)
  id: Throws``1(Func{Task},System.String)
  parent: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert
  langs:
  - csharp
  - vb
  name: Throws<TException>(Func<Task>, String)
  fullName: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws<TException>(Func<Task>, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Throws
    path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Devices.Client.Tests.PCLTests
  namespace: Microsoft.Azure.Devices.Client.Tests.PCLTests
  syntax:
    content: 'public static TException Throws<TException>(Func<Task> action, string errorMessage = null)where TException : Exception'
    content.vb: Public Shared Function Throws(Of TException As Exception)(action As Func(Of Task), errorMessage As String = Nothing) As TException
    parameters:
    - id: action
      type: Func{Task}
    - id: errorMessage
      type: System.String
    typeParameters:
    - id: TException
    return:
      type: '{TException}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.Throws(Of TException)(Func(Of Task), System.String)
  name.vb: Throws(Of TException)(Func(Of Task), String)
- uid: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.ThrowsAsync``1(Func{Task},System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.ThrowsAsync``1(Func{Task},System.String)
  id: ThrowsAsync``1(Func{Task},System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert
  langs:
  - csharp
  - vb
  name: ThrowsAsync<TException>(Func<Task>, String)
  fullName: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.ThrowsAsync<TException>(Func<Task>, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ThrowsAsync
    path: csharp/device/tests/Microsoft.Azure.Devices.Client.Tests.PCLTests/TestAssert.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Devices.Client.Tests.PCLTests
  namespace: Microsoft.Azure.Devices.Client.Tests.PCLTests
  syntax:
    content: 'public static Task<TException> ThrowsAsync<TException>(this Func<Task> action, string errorMessage = null)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ThrowsAsync(Of TException As Exception)(action As Func(Of Task), errorMessage As String = Nothing) As Task(Of TException)
    parameters:
    - id: action
      type: Func{Task}
    - id: errorMessage
      type: System.String
    typeParameters:
    - id: TException
    return:
      type: Task{{TException}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Tests.PCLTests.TestAssert.ThrowsAsync(Of TException)(Func(Of Task), System.String)
  name.vb: ThrowsAsync(Of TException)(Func(Of Task), String)
references:
- uid: Microsoft.Azure.Devices.Client.Tests.PCLTests
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Tests.PCLTests
  fullName: Microsoft.Azure.Devices.Client.Tests.PCLTests
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Action
  isExternal: true
  name: Action
  fullName: Action
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{TException}'
  isExternal: false
  name: TException
  fullName: TException
- uid: Func{Task}
  definition: Func`1
  name: Func<Task>
  fullName: Func<Task>
  fullname.vb: Func(Of Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: Func`1
    name: Func
    fullName: Func
    isExternal: true
  - name: <
    fullName: <
  - uid: Task
    name: Task
    fullName: Task
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`1
    name: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Task
    name: Task
    fullName: Task
    isExternal: true
  - name: )
    fullName: )
- uid: Func`1
  isExternal: true
  name: Func<>
  fullName: Func<>
  fullname.vb: Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: Func`1
    name: Func
    fullName: Func
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`1
    name: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Task{{TException}}
  definition: Task`1
  name: Task<TException>
  fullName: Task<TException>
  fullname.vb: Task(Of TException)
  name.vb: Task(Of TException)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: TException
    fullName: TException
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TException
    fullName: TException
  - name: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  fullName: Task<>
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
