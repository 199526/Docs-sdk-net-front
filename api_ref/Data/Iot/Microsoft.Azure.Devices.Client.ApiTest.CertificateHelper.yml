### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  commentId: T:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  id: CertificateHelper
  parent: Microsoft.Azure.Devices.Client.ApiTest
  children:
  - Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile(System.String,System.String)
  - Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.StoreLocation)
  - Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String,System.String)
  - Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  langs:
  - csharp
  - vb
  name: CertificateHelper
  nameWithType: CertificateHelper
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CertificateHelper
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
    startLine: 9
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.ApiTest
  syntax:
    content: public static class CertificateHelper
    content.vb: Public Module CertificateHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile(System.String,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile(System.String,System.String)
  id: GetCertificateFromFile(System.String,System.String)
  parent: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  langs:
  - csharp
  - vb
  name: GetCertificateFromFile(String, String)
  nameWithType: CertificateHelper.GetCertificateFromFile(String, String)
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetCertificateFromFile
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.ApiTest
  syntax:
    content: public static X509Certificate2 GetCertificateFromFile(string fileName, string password)
    content.vb: Public Shared Function GetCertificateFromFile(fileName As String, password As String) As X509Certificate2
    parameters:
    - id: fileName
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  overload: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.StoreLocation)
  commentId: M:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: InstallCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.StoreLocation)
  parent: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  langs:
  - csharp
  - vb
  name: InstallCertificate(X509Certificate2, StoreLocation)
  nameWithType: CertificateHelper.InstallCertificate(X509Certificate2, StoreLocation)
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: InstallCertificate
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.ApiTest
  syntax:
    content: public static void InstallCertificate(X509Certificate2 certificate, StoreLocation storeLocation)
    content.vb: Public Shared Sub InstallCertificate(certificate As X509Certificate2, storeLocation As StoreLocation)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
  overload: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String,System.String)
  id: InstallCertificateFromFile(System.String,System.String)
  parent: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  langs:
  - csharp
  - vb
  name: InstallCertificateFromFile(String, String)
  nameWithType: CertificateHelper.InstallCertificateFromFile(String, String)
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: InstallCertificateFromFile
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.ApiTest
  syntax:
    content: public static X509Certificate2 InstallCertificateFromFile(string pfxFile, string passwordFile)
    content.vb: Public Shared Function InstallCertificateFromFile(pfxFile As String, passwordFile As String) As X509Certificate2
    parameters:
    - id: pfxFile
      type: System.String
    - id: passwordFile
      type: System.String
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  overload: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  commentId: M:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: InstallCertificateFromFile(System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  parent: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper
  langs:
  - csharp
  - vb
  name: InstallCertificateFromFile(String, String, StoreLocation)
  nameWithType: CertificateHelper.InstallCertificateFromFile(String, String, StoreLocation)
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile(System.String, System.String, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: InstallCertificateFromFile
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/CertificateHelper.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.ApiTest
  syntax:
    content: public static X509Certificate2 InstallCertificateFromFile(string pfxFile, string passwordFile, StoreLocation storeLocation)
    content.vb: Public Shared Function InstallCertificateFromFile(pfxFile As String, passwordFile As String, storeLocation As StoreLocation) As X509Certificate2
    parameters:
    - id: pfxFile
      type: System.String
    - id: passwordFile
      type: System.String
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  overload: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Devices.Client.ApiTest
  commentId: N:Microsoft.Azure.Devices.Client.ApiTest
  isExternal: false
  name: Microsoft.Azure.Devices.Client.ApiTest
  nameWithType: Microsoft.Azure.Devices.Client.ApiTest
  fullName: Microsoft.Azure.Devices.Client.ApiTest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile*
  commentId: Overload:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile
  isExternal: false
  name: GetCertificateFromFile
  nameWithType: CertificateHelper.GetCertificateFromFile
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.GetCertificateFromFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate*
  commentId: Overload:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate
  isExternal: false
  name: InstallCertificate
  nameWithType: CertificateHelper.InstallCertificate
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificate
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile*
  commentId: Overload:Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile
  isExternal: false
  name: InstallCertificateFromFile
  nameWithType: CertificateHelper.InstallCertificateFromFile
  fullName: Microsoft.Azure.Devices.Client.ApiTest.CertificateHelper.InstallCertificateFromFile
