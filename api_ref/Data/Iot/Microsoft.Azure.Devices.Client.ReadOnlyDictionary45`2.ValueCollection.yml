items:
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  commentId: T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  id: ReadOnlyDictionary45`2.ValueCollection
  parent: Microsoft.Azure.Devices.Client
  children:
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.Count
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  - Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ValueCollection
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 607
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: >-
      [DebuggerDisplay("Count = {Count}")]

      [Serializable]

      public sealed class ValueCollection : ICollection<TValue>, IEnumerable<TValue>, ICollection, IEnumerable
    content.vb: >-
      <DebuggerDisplay("Count = {Count}")>

      <Serializable>

      Public NotInheritable Class ValueCollection
          Implements ICollection(Of TValue), IEnumerable(Of TValue), ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{TValue}}
  - System.Collections.Generic.IEnumerable{{TValue}}
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.DebuggerDisplayAttribute
    ctor: System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Count = {Count}
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
  name.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)
  id: System#Collections#Generic#ICollection{TValue}#Add(`1)
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Add(TValue)
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Add(TValue)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TValue>.Add
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 636
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: void ICollection<TValue>.Add(TValue item)
    content.vb: Sub System.Collections.Generic.ICollection<TValue>.Add(item As TValue) Implements ICollection(Of TValue).Add
    parameters:
    - id: item
      type: '{TValue}'
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Add({TValue})
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Add(TValue)
  name.vb: System.Collections.Generic.ICollection<TValue>.Add(TValue)
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  id: System#Collections#Generic#ICollection{TValue}#Clear
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Clear()
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TValue>.Clear
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 646
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: void ICollection<TValue>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<TValue>.Clear Implements ICollection(Of TValue).Clear
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Clear
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear()
  name.vb: System.Collections.Generic.ICollection<TValue>.Clear()
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)
  id: System#Collections#Generic#ICollection{TValue}#Contains(`1)
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Contains(TValue)
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TValue>.Contains
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 656
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: bool ICollection<TValue>.Contains(TValue item)
    content.vb: Function System.Collections.Generic.ICollection<TValue>.Contains(item As TValue) As Boolean Implements ICollection(Of TValue).Contains
    parameters:
    - id: item
      type: '{TValue}'
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Contains({TValue})
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  name.vb: System.Collections.Generic.ICollection<TValue>.Contains(TValue)
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  id: CopyTo(`1[],System.Int32)
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: CopyTo(TValue[], Int32)
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.CopyTo(TValue[], System.Int32)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CopyTo
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 661
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: public void CopyTo(TValue[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As TValue(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{TValue}[]'
    - id: arrayIndex
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.CopyTo({TValue}[],System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.CopyTo(TValue(), System.Int32)
  name.vb: CopyTo(TValue(), Int32)
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.Count
  commentId: P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.Count
  id: Count
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Count
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 666
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Count
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  commentId: P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  id: System#Collections#Generic#ICollection{TValue}#IsReadOnly
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.IsReadOnly
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TValue>.IsReadOnly
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 671
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: bool ICollection<TValue>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<TValue>.IsReadOnly As Boolean Implements ICollection(Of TValue).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<TValue>.IsReadOnly
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)
  id: System#Collections#Generic#ICollection{TValue}#Remove(`1)
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Remove(TValue)
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.Generic.ICollection<TValue>.Remove
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 676
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: bool ICollection<TValue>.Remove(TValue item)
    content.vb: Function System.Collections.Generic.ICollection<TValue>.Remove(item As TValue) As Boolean Implements ICollection(Of TValue).Remove
    parameters:
    - id: item
      type: '{TValue}'
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Remove({TValue})
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  name.vb: System.Collections.Generic.ICollection<TValue>.Remove(TValue)
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetEnumerator
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 690
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: public IEnumerator<TValue> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of TValue)
    return:
      type: System.Collections.Generic.IEnumerator{{TValue}}
  implements:
  - System.Collections.Generic.IEnumerable{{TValue}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.GetEnumerator()
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.IEnumerable.GetEnumerator
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 699
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.ICollection.CopyTo
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 708
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.ICollection.IsSynchronized
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 713
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  commentId: P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: System.Collections.ICollection.SyncRoot
    path: csharp/device/Microsoft.Azure.Devices.Client/Common/ReadOnlyDictionary45.cs
    startLine: 718
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Client.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
references:
- uid: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Microsoft.Azure.Devices.Client
  fullName: Microsoft.Azure.Devices.Client
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.ICollection{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  fullname.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue)
  name.vb: IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.ICollection{{TValue}}.Add({TValue})
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Add(TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Add(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<TValue>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of TValue).Add
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TValue}}.Clear
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  fullName: System.Collections.Generic.ICollection<TValue>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<TValue>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of TValue).Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TValue}}.Contains({TValue})
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Contains(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<TValue>.Contains
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of TValue).Contains
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TValue}}.CopyTo({TValue}[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TValue[], Int32)
  fullName: System.Collections.Generic.ICollection<TValue>.CopyTo(TValue[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).CopyTo(TValue(), System.Int32)
  name.vb: CopyTo(TValue(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<TValue>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of TValue).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: '{TValue}[]'
  isExternal: false
  name: TValue[]
  fullName: TValue[]
  fullname.vb: TValue()
  name.vb: TValue()
  spec.csharp:
  - name: TValue
    fullName: TValue
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: TValue
    fullName: TValue
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TValue}}.Count
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  fullName: System.Collections.Generic.ICollection<TValue>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Count
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.Generic.ICollection`1.Count
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{TValue}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<TValue>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{TValue}}.Remove({TValue})
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Remove(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<TValue>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of TValue).Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: true
  name: Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TValue}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TValue}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TValue).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TValue>
  fullName: System.Collections.Generic.IEnumerator<TValue>
  fullname.vb: System.Collections.Generic.IEnumerator(Of TValue)
  name.vb: IEnumerator(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
