items:
- uid: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  commentId: T:Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  id: DictionaryExtensions
  parent: Microsoft.Azure.Devices.Common.Extensions
  children:
  - Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetOrAddNonNull``2(ConcurrentDictionary{``0,``1},``0,Func{``0,``1})
  - Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrAdd``2(IDictionary{``0,``1},``0,Func{``0,``1})
  - Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrDefault``2(IDictionary{``0,``1},``0,``1)
  - Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.TryRemove``2(Dictionary{``0,``1},``0,``1@)
  langs:
  - csharp
  - vb
  name: DictionaryExtensions
  fullName: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DictionaryExtensions
    path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
    startLine: 9
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common.Extensions
  syntax:
    content: 'public class DictionaryExtensions : object'
    content.vb: >-
      Public Class DictionaryExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrDefault``2(IDictionary{``0,``1},``0,``1)
  commentId: M:Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrDefault``2(IDictionary{``0,``1},``0,``1)
  id: GetValueOrDefault``2(IDictionary{``0,``1},``0,``1)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: GetValueOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey, TValue)
  fullName: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey, TValue)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetValueOrDefault
    path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common.Extensions
  syntax:
    content: public static TValue GetValueOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, TValue defaultValue = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetValueOrDefault(Of TKey, TValue)(dictionary As IDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue = Nothing) As TValue
    parameters:
    - id: dictionary
      type: IDictionary{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    - id: defaultValue
      type: '{TValue}'
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: '{TValue}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrDefault(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey, TValue)
  name.vb: GetValueOrDefault(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey, TValue)
- uid: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrAdd``2(IDictionary{``0,``1},``0,Func{``0,``1})
  commentId: M:Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrAdd``2(IDictionary{``0,``1},``0,Func{``0,``1})
  id: GetValueOrAdd``2(IDictionary{``0,``1},``0,Func{``0,``1})
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: GetValueOrAdd<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>)
  fullName: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrAdd<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetValueOrAdd
    path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common.Extensions
  syntax:
    content: public static TValue GetValueOrAdd<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> valueProvider)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetValueOrAdd(Of TKey, TValue)(dictionary As IDictionary(Of TKey, TValue), key As TKey, valueProvider As Func(Of TKey, TValue)) As TValue
    parameters:
    - id: dictionary
      type: IDictionary{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    - id: valueProvider
      type: Func{{TKey},{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: '{TValue}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetValueOrAdd(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey, Func(Of TKey, TValue))
  name.vb: GetValueOrAdd(Of TKey, TValue)(IDictionary(Of TKey, TValue), TKey, Func(Of TKey, TValue))
- uid: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.TryRemove``2(Dictionary{``0,``1},``0,``1@)
  commentId: M:Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.TryRemove``2(Dictionary{``0,``1},``0,``1@)
  id: TryRemove``2(Dictionary{``0,``1},``0,``1@)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: TryRemove<TKey, TValue>(Dictionary<TKey, TValue>, TKey, out TValue)
  fullName: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.TryRemove<TKey, TValue>(Dictionary<TKey, TValue>, TKey, out TValue)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: TryRemove
    path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common.Extensions
  syntax:
    content: public static bool TryRemove<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, out TValue value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryRemove(Of TKey, TValue)(dictionary As Dictionary(Of TKey, TValue), key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: dictionary
      type: Dictionary{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.TryRemove(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, ByRef TValue)
  name.vb: TryRemove(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, ByRef TValue)
- uid: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetOrAddNonNull``2(ConcurrentDictionary{``0,``1},``0,Func{``0,``1})
  commentId: M:Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetOrAddNonNull``2(ConcurrentDictionary{``0,``1},``0,Func{``0,``1})
  id: GetOrAddNonNull``2(ConcurrentDictionary{``0,``1},``0,Func{``0,``1})
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: GetOrAddNonNull<TKey, TValue>(ConcurrentDictionary<TKey, TValue>, TKey, Func<TKey, TValue>)
  fullName: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetOrAddNonNull<TKey, TValue>(ConcurrentDictionary<TKey, TValue>, TKey, Func<TKey, TValue>)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: GetOrAddNonNull
    path: csharp/service/Microsoft.Azure.Devices/Common/Extensions/DictionaryExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common.Extensions
  syntax:
    content: 'public static TValue GetOrAddNonNull<TKey, TValue>(this ConcurrentDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> valueFactory)where TValue : class'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOrAddNonNull(Of TKey, TValue As Class)(dictionary As ConcurrentDictionary(Of TKey, TValue), key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue
    parameters:
    - id: dictionary
      type: ConcurrentDictionary{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    - id: valueFactory
      type: Func{{TKey},{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: '{TValue}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Common.Extensions.DictionaryExtensions.GetOrAddNonNull(Of TKey, TValue)(ConcurrentDictionary(Of TKey, TValue), TKey, Func(Of TKey, TValue))
  name.vb: GetOrAddNonNull(Of TKey, TValue)(ConcurrentDictionary(Of TKey, TValue), TKey, Func(Of TKey, TValue))
references:
- uid: Microsoft.Azure.Devices.Common.Extensions
  isExternal: false
  name: Microsoft.Azure.Devices.Common.Extensions
  fullName: Microsoft.Azure.Devices.Common.Extensions
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: IDictionary{{TKey},{TValue}}
  definition: IDictionary`2
  name: IDictionary<TKey, TValue>
  fullName: IDictionary<TKey, TValue>
  fullname.vb: IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Func{{TKey},{TValue}}
  definition: Func`2
  name: Func<TKey, TValue>
  fullName: Func<TKey, TValue>
  fullname.vb: Func(Of TKey, TValue)
  name.vb: Func(Of TKey, TValue)
  spec.csharp:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  fullName: Func<, >
  fullname.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Dictionary{{TKey},{TValue}}
  definition: Dictionary`2
  name: Dictionary<TKey, TValue>
  fullName: Dictionary<TKey, TValue>
  fullname.vb: Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  fullName: Dictionary<, >
  fullname.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: ConcurrentDictionary{{TKey},{TValue}}
  definition: ConcurrentDictionary`2
  name: ConcurrentDictionary<TKey, TValue>
  fullName: ConcurrentDictionary<TKey, TValue>
  fullname.vb: ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: ConcurrentDictionary`2
    name: ConcurrentDictionary
    fullName: ConcurrentDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ConcurrentDictionary`2
    name: ConcurrentDictionary
    fullName: ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<, >
  fullName: ConcurrentDictionary<, >
  fullname.vb: ConcurrentDictionary(Of , )
  name.vb: ConcurrentDictionary(Of , )
  spec.csharp:
  - uid: ConcurrentDictionary`2
    name: ConcurrentDictionary
    fullName: ConcurrentDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ConcurrentDictionary`2
    name: ConcurrentDictionary
    fullName: ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
