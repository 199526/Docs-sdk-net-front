items:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage
  id: WillMessage
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  children:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.#ctor(QualityOfService,Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.Message
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.QoS
  langs:
  - csharp
  - vb
  name: WillMessage
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WillMessage
    path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
    startLine: 7
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: 'public class WillMessage : IWillMessage'
    content.vb: >-
      Public Class WillMessage
          Implements IWillMessage
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.Message
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.Message
  id: Message
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage
  langs:
  - csharp
  - vb
  name: Message
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.Message
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Message
    path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
    startLine: 9
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public Message Message { get; }
    content.vb: Public ReadOnly Property Message As Message
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Client.Message
  implements:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.Message
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.QoS
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.QoS
  id: QoS
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage
  langs:
  - csharp
  - vb
  name: QoS
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.QoS
  type: Property
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: QoS
    path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public QualityOfService QoS { get; set; }
    content.vb: Public Property QoS As QualityOfService
    parameters: []
    return:
      type: QualityOfService
  implements:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.QoS
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.#ctor(QualityOfService,Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.#ctor(QualityOfService,Microsoft.Azure.Devices.Client.Message)
  id: '#ctor(QualityOfService,Microsoft.Azure.Devices.Client.Message)'
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage
  langs:
  - csharp
  - vb
  name: WillMessage(QualityOfService, Message)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.WillMessage(QualityOfService, Microsoft.Azure.Devices.Client.Message)
  type: Constructor
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: .ctor
    path: csharp/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/WillMessage.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public WillMessage(QualityOfService qos, Message message)
    content.vb: Public Sub New(qos As QualityOfService, message As Message)
    parameters:
    - id: qos
      type: QualityOfService
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Transport.Mqtt
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: IWillMessage
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.Message
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
  isExternal: false
  name: Message
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.Message
- uid: Microsoft.Azure.Devices.Client.Message
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Message
  fullName: Microsoft.Azure.Devices.Client.Message
- uid: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Microsoft.Azure.Devices.Client
  fullName: Microsoft.Azure.Devices.Client
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.QoS
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
  isExternal: false
  name: QoS
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.QoS
- uid: QualityOfService
  isExternal: true
  name: QualityOfService
  fullName: QualityOfService
