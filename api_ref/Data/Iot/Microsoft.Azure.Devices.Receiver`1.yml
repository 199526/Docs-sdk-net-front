items:
- uid: Microsoft.Azure.Devices.Receiver`1
  commentId: T:Microsoft.Azure.Devices.Receiver`1
  id: Receiver`1
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.Receiver`1.AbandonAsync(`0)
  - Microsoft.Azure.Devices.Receiver`1.CompleteAsync(`0)
  - Microsoft.Azure.Devices.Receiver`1.ReceiveAsync
  - Microsoft.Azure.Devices.Receiver`1.ReceiveAsync(TimeSpan)
  langs:
  - csharp
  - vb
  name: Receiver<T>
  fullName: Microsoft.Azure.Devices.Receiver<T>
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Receiver
    path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nContains methods that services can use to perform receive operations.\n"
  example: []
  syntax:
    content: 'public abstract class Receiver<T> : object'
    content.vb: >-
      Public MustInherit Class Receiver(Of T)
          Inherits Object
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Azure.Devices.Receiver(Of T)
  name.vb: Receiver(Of T)
- uid: Microsoft.Azure.Devices.Receiver`1.ReceiveAsync
  commentId: M:Microsoft.Azure.Devices.Receiver`1.ReceiveAsync
  id: ReceiveAsync
  parent: Microsoft.Azure.Devices.Receiver`1
  langs:
  - csharp
  - vb
  name: ReceiveAsync()
  fullName: Microsoft.Azure.Devices.Receiver<T>.ReceiveAsync()
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReceiveAsync
    path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nReceive a message using the default timeout.\n"
  example: []
  syntax:
    content: public abstract Task<T> ReceiveAsync()
    content.vb: Public MustOverride Function ReceiveAsync As Task(Of T)
    return:
      type: Task{{T}}
      description: The receive message or null if there was no message until the default timeout
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Devices.Receiver(Of T).ReceiveAsync()
- uid: Microsoft.Azure.Devices.Receiver`1.ReceiveAsync(TimeSpan)
  commentId: M:Microsoft.Azure.Devices.Receiver`1.ReceiveAsync(TimeSpan)
  id: ReceiveAsync(TimeSpan)
  parent: Microsoft.Azure.Devices.Receiver`1
  langs:
  - csharp
  - vb
  name: ReceiveAsync(TimeSpan)
  fullName: Microsoft.Azure.Devices.Receiver<T>.ReceiveAsync(TimeSpan)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReceiveAsync
    path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nReceives a message\n"
  example: []
  syntax:
    content: public abstract Task<T> ReceiveAsync(TimeSpan timeout)
    content.vb: Public MustOverride Function ReceiveAsync(timeout As TimeSpan) As Task(Of T)
    parameters:
    - id: timeout
      type: TimeSpan
      description: The timeout for receiving a message
    return:
      type: Task{{T}}
      description: The receive message or null if there was no message until the specified timeout
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Devices.Receiver(Of T).ReceiveAsync(TimeSpan)
- uid: Microsoft.Azure.Devices.Receiver`1.CompleteAsync(`0)
  commentId: M:Microsoft.Azure.Devices.Receiver`1.CompleteAsync(`0)
  id: CompleteAsync(`0)
  parent: Microsoft.Azure.Devices.Receiver`1
  langs:
  - csharp
  - vb
  name: CompleteAsync(T)
  fullName: Microsoft.Azure.Devices.Receiver<T>.CompleteAsync(T)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CompleteAsync
    path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDeletes a received message from the queue\n"
  example: []
  syntax:
    content: public abstract Task CompleteAsync(T t)
    content.vb: Public MustOverride Function CompleteAsync(t As T) As Task
    parameters:
    - id: t
      type: '{T}'
    return:
      type: Task
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Devices.Receiver(Of T).CompleteAsync(T)
- uid: Microsoft.Azure.Devices.Receiver`1.AbandonAsync(`0)
  commentId: M:Microsoft.Azure.Devices.Receiver`1.AbandonAsync(`0)
  id: AbandonAsync(`0)
  parent: Microsoft.Azure.Devices.Receiver`1
  langs:
  - csharp
  - vb
  name: AbandonAsync(T)
  fullName: Microsoft.Azure.Devices.Receiver<T>.AbandonAsync(T)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: AbandonAsync
    path: csharp/service/Microsoft.Azure.Devices/Receiver.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nPuts a received message back into the queue\n"
  example: []
  syntax:
    content: public abstract Task AbandonAsync(T t)
    content.vb: Public MustOverride Function AbandonAsync(t As T) As Task
    parameters:
    - id: t
      type: '{T}'
    return:
      type: Task
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Devices.Receiver(Of T).AbandonAsync(T)
references:
- uid: Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Task{{T}}
  definition: Task`1
  name: Task<T>
  fullName: Task<T>
  fullname.vb: Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  fullName: Task<>
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  fullName: TimeSpan
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: Task
  isExternal: true
  name: Task
  fullName: Task
