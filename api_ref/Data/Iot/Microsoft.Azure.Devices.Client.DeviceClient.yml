items:
- uid: Microsoft.Azure.Devices.Client.DeviceClient
  commentId: T:Microsoft.Azure.Devices.Client.DeviceClient
  id: DeviceClient
  parent: Microsoft.Azure.Devices.Client
  children:
  - Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  - Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  - Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  - Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  - Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  - Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  - Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  langs:
  - csharp
  - vb
  name: DeviceClient
  fullName: Microsoft.Azure.Devices.Client.DeviceClient
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DeviceClient
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nContains methods that a device can use to send messages to and receive from the service.\n"
  example: []
  syntax:
    content: public sealed class DeviceClient
    content.vb: Public NotInheritable Class DeviceClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  id: Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Create(String, IAuthenticationMethod)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String, Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Create
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 187
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate an Amqp DeviceClient from individual parameters\n"
  example: []
  syntax:
    content: public static DeviceClient Create(string hostname, IAuthenticationMethod authenticationMethod)
    content.vb: Public Shared Function Create(hostname As String, authenticationMethod As IAuthenticationMethod) As DeviceClient
    parameters:
    - id: hostname
      type: System.String
      description: The fully-qualified DNS hostname of IoT Hub
    - id: authenticationMethod
      type: Microsoft.Azure.Devices.Client.IAuthenticationMethod
      description: The authentication method that is used
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  id: Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Create(String, IAuthenticationMethod, TransportType)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String, Microsoft.Azure.Devices.Client.IAuthenticationMethod, Microsoft.Azure.Devices.Client.TransportType)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Create
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 206
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient from individual parameters\n"
  example: []
  syntax:
    content: public static DeviceClient Create(string hostname, IAuthenticationMethod authenticationMethod, TransportType transportType)
    content.vb: Public Shared Function Create(hostname As String, authenticationMethod As IAuthenticationMethod, transportType As TransportType) As DeviceClient
    parameters:
    - id: hostname
      type: System.String
      description: The fully-qualified DNS hostname of IoT Hub
    - id: authenticationMethod
      type: Microsoft.Azure.Devices.Client.IAuthenticationMethod
      description: The authentication method that is used
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
      description: The transportType used (Http1 or Amqp)
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  id: CreateFromConnectionString(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CreateFromConnectionString
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 275
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient using Amqp transport from the specified connection string\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: Connection string for the IoT hub (including DeviceId)
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String)
  id: CreateFromConnectionString(System.String,System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CreateFromConnectionString
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 291
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient using Amqp transport from the specified connection string\n(WinRT) Create a DeviceClient using Http transport from the specified connection string\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, string deviceId)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, deviceId As String) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: IoT Hub-Scope Connection string for the IoT hub (without DeviceId)
    - id: deviceId
      type: System.String
      description: Id of the Device
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  id: CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, TransportType)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, Microsoft.Azure.Devices.Client.TransportType)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CreateFromConnectionString
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 311
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate DeviceClient from the specified connection string using the specified transport type\n(PCL) Only Http transport is allowed\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, TransportType transportType)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, transportType As TransportType) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: Connection string for the IoT hub (including DeviceId)
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
      description: Specifies whether Amqp or Http transport is used
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  id: CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, String, TransportType)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, System.String, Microsoft.Azure.Devices.Client.TransportType)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CreateFromConnectionString
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 366
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate DeviceClient from the specified connection string using the specified transport type\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, string deviceId, TransportType transportType)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, deviceId As String, transportType As TransportType) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: IoT Hub-Scope Connection string for the IoT hub (without DeviceId)
    - id: deviceId
      type: System.String
      description: Id of the device
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
      description: The transportType used (Http1 or Amqp)
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  id: OpenAsync
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: OpenAsync()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: OpenAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 480
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nExplicitly open the DeviceClient instance.\n"
  example: []
  syntax:
    content: public Task OpenAsync()
    content.vb: Public Function OpenAsync As Task
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  id: CloseAsync
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CloseAsync()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CloseAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 489
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nClose the DeviceClient instance\n"
  example: []
  syntax:
    content: public Task CloseAsync()
    content.vb: Public Function CloseAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  id: ReceiveAsync
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: ReceiveAsync()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReceiveAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 498
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nReceive a message from the device queue using the default timeout.\n"
  example: []
  syntax:
    content: public Task<Message> ReceiveAsync()
    content.vb: Public Function ReceiveAsync As Task(Of Message)
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
      description: The receive message or null if there was no message until the default timeout
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  id: ReceiveAsync(System.TimeSpan)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: ReceiveAsync(TimeSpan)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ReceiveAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 507
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nReceive a message from the device queue with the specified timeout\n"
  example: []
  syntax:
    content: public Task<Message> ReceiveAsync(TimeSpan timeout)
    content.vb: Public Function ReceiveAsync(timeout As TimeSpan) As Task(Of Message)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
      description: The receive message or null if there was no message until the specified time has elapsed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  id: CompleteAsync(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CompleteAsync(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CompleteAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 520
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue\n"
  example: []
  syntax:
    content: public Task CompleteAsync(string lockToken)
    content.vb: Public Function CompleteAsync(lockToken As String) As Task
    parameters:
    - id: lockToken
      type: System.String
    return:
      type: System.Threading.Tasks.Task
      description: The lock identifier for the previously received message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  id: CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CompleteAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: CompleteAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 534
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue\n"
  example: []
  syntax:
    content: public Task CompleteAsync(Message message)
    content.vb: Public Function CompleteAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The previously received message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  id: AbandonAsync(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: AbandonAsync(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: AbandonAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 552
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nPuts a received message back onto the device queue\n"
  example: []
  syntax:
    content: public Task AbandonAsync(string lockToken)
    content.vb: Public Function AbandonAsync(lockToken As String) As Task
    parameters:
    - id: lockToken
      type: System.String
    return:
      type: System.Threading.Tasks.Task
      description: The previously received message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  id: AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: AbandonAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: AbandonAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 566
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nPuts a received message back onto the device queue\n"
  example: []
  syntax:
    content: public Task AbandonAsync(Message message)
    content.vb: Public Function AbandonAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The lock identifier for the previously received message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  id: RejectAsync(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: RejectAsync(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: RejectAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 584
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue and indicates to the server that the message could not be processed.\n"
  example: []
  syntax:
    content: public Task RejectAsync(string lockToken)
    content.vb: Public Function RejectAsync(lockToken As String) As Task
    parameters:
    - id: lockToken
      type: System.String
    return:
      type: System.Threading.Tasks.Task
      description: The previously received message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  id: RejectAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: RejectAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: RejectAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 598
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue and indicates to the server that the message could not be processed.\n"
  example: []
  syntax:
    content: public Task RejectAsync(Message message)
    content.vb: Public Function RejectAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The lock identifier for the previously received message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  id: SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: SendEventAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: SendEventAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 612
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nSends an event to device hub\n"
  example: []
  syntax:
    content: public Task SendEventAsync(Message message)
    content.vb: Public Function SendEventAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The message containing the event
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  id: SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: SendEventBatchAsync(IEnumerable<Message>)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Devices.Client.Message>)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: SendEventBatchAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 626
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nSends a batch of events to device hub\n"
  example: []
  syntax:
    content: public Task SendEventBatchAsync(IEnumerable<Message> messages)
    content.vb: Public Function SendEventBatchAsync(messages As IEnumerable(Of Message)) As Task
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message}
    return:
      type: System.Threading.Tasks.Task
      description: The task containing the event
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Devices.Client.Message))
  name.vb: SendEventBatchAsync(IEnumerable(Of Message))
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  id: Dispose
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Dispose()
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Dispose
    path: csharp/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 668
  assemblies:
  - Microsoft.Azure.Devices.Client.PCL
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Microsoft.Azure.Devices.Client
  fullName: Microsoft.Azure.Devices.Client
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.Client.IAuthenticationMethod
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: IAuthenticationMethod
  fullName: Microsoft.Azure.Devices.Client.IAuthenticationMethod
- uid: Microsoft.Azure.Devices.Client.DeviceClient
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: DeviceClient
  fullName: Microsoft.Azure.Devices.Client.DeviceClient
- uid: Microsoft.Azure.Devices.Client.TransportType
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: TransportType
  fullName: Microsoft.Azure.Devices.Client.TransportType
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Message>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Devices.Client.Message>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Devices.Client.Message)
  name.vb: Task(Of Message)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Azure.Devices.Client.Message
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Message
  fullName: Microsoft.Azure.Devices.Client.Message
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Message>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Devices.Client.Message>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Devices.Client.Message)
  name.vb: IEnumerable(Of Message)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
