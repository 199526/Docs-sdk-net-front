items:
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.BackendImpl
  id: BackendImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.Attach
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.BackendNicIpConfigurationNames
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.GetVirtualMachineIds
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.LoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IBackend#BackendNicIpConfigurationNames
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IBackend#GetVirtualMachineIds
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.BackendImpl.Name
  langs:
  - csharp
  - vb
  name: BackendImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation for Backend.\n"
  example: []
  syntax:
    content: 'public class BackendImpl : ChildResource<BackendAddressPoolInner, LoadBalancerImpl, ILoadBalancer>, IBackend, IWrapper<BackendAddressPoolInner>, IChildResource<ILoadBalancer>, IHasLoadBalancingRules, IDefinition<IWithBackendOrProbe>, IBlank<IWithBackendOrProbe>, IWithAttach<IWithBackendOrProbe>, IInDefinition<IWithBackendOrProbe>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithAttach<IUpdate>, IInUpdate<IUpdate>, IUpdate, ISettable<IUpdate>'
    content.vb: >-
      Public Class BackendImpl
          Inherits ChildResource(Of BackendAddressPoolInner, LoadBalancerImpl, ILoadBalancer)
          Implements IBackend, IWrapper(Of BackendAddressPoolInner), IChildResource(Of ILoadBalancer), IHasLoadBalancingRules, IDefinition(Of IWithBackendOrProbe), IBlank(Of IWithBackendOrProbe), IWithAttach(Of IWithBackendOrProbe), IInDefinition(Of IWithBackendOrProbe), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithAttach(Of IUpdate), IInUpdate(Of IUpdate), IUpdate, ISettable(Of IUpdate)
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IBackend
  - IWrapper{Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner}
  - IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  - Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  - Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  - IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  - Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.Backend.Update.IUpdate
  - ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.BackendNicIpConfigurationNames
  commentId: P:Microsoft.Azure.Management.Fluent.Network.BackendImpl.BackendNicIpConfigurationNames
  id: BackendNicIpConfigurationNames
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: BackendNicIpConfigurationNames
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.BackendNicIpConfigurationNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendNicIpConfigurationNames
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, string> BackendNicIpConfigurationNames { get; }
    content.vb: Public ReadOnly Property BackendNicIpConfigurationNames As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.LoadBalancingRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.BackendImpl.LoadBalancingRules
  id: LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.LoadBalancingRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancingRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, ILoadBalancingRule> LoadBalancingRules()
    content.vb: Public Function LoadBalancingRules As IDictionary(Of String, ILoadBalancingRule)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Network.BackendImpl.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.GetVirtualMachineIds
  commentId: M:Microsoft.Azure.Management.Fluent.Network.BackendImpl.GetVirtualMachineIds
  id: GetVirtualMachineIds
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: GetVirtualMachineIds()
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.GetVirtualMachineIds()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetVirtualMachineIds
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public ISet<string> GetVirtualMachineIds()
    content.vb: Public Function GetVirtualMachineIds As ISet(Of String)
    return:
      type: System.Collections.Generic.ISet{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Attach
  commentId: M:Microsoft.Azure.Management.Fluent.Network.BackendImpl.Attach
  id: Attach
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: Attach()
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Attach()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attach
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/BackendImpl.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl Attach()
    content.vb: Public Function Attach As LoadBalancerImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  id: Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: IHasLoadBalancingRules.LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, ILoadBalancingRule> IHasLoadBalancingRules.LoadBalancingRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules As IDictionary(Of String, ILoadBalancingRule) Implements IHasLoadBalancingRules.LoadBalancingRules
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
      description: the associated load balancing rules from this load balancer, indexed by their names
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IBackend#GetVirtualMachineIds
  commentId: M:Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IBackend#GetVirtualMachineIds
  id: Microsoft#Azure#Management#Fluent#Network#IBackend#GetVirtualMachineIds
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: IBackend.GetVirtualMachineIds()
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: ISet<string> IBackend.GetVirtualMachineIds()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds As ISet(Of String) Implements IBackend.GetVirtualMachineIds
    return:
      type: System.Collections.Generic.ISet{System.String}
      description: a list of the resource IDs of the virtual machines associated with this backend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  name.vb: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds()
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IBackend#BackendNicIpConfigurationNames
  commentId: P:Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft#Azure#Management#Fluent#Network#IBackend#BackendNicIpConfigurationNames
  id: Microsoft#Azure#Management#Fluent#Network#IBackend#BackendNicIpConfigurationNames
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  langs:
  - csharp
  - vb
  name: IBackend.BackendNicIpConfigurationNames
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl.Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/BackendImpl.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, string> IBackend.BackendNicIpConfigurationNames { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames As IDictionary(Of String, String) Implements IBackend.BackendNicIpConfigurationNames
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: a map of names of the IP configurations of network interfaces assigned to this backend,
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner}
  definition: IWrapper`1
  name: IWrapper<BackendAddressPoolInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner)
  name.vb: IWrapper(Of BackendAddressPoolInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner
    name: BackendAddressPoolInner
    fullName: Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner
    name: BackendAddressPoolInner
    fullName: Microsoft.Azure.Management.Network.Models.BackendAddressPoolInner
  - name: )
    fullName: )
- uid: IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IChildResource`1
  name: IChildResource<ILoadBalancer>
  fullName: IChildResource<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IChildResource(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IChildResource(Of ILoadBalancer)
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasLoadBalancingRules
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition`1
  name: IDefinition<IWithBackendOrProbe>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IDefinition(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
  name: IBlank<IWithBackendOrProbe>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IBlank(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach`1
  name: IWithAttach<IWithBackendOrProbe>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IWithAttach(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  definition: IInDefinition`1
  name: IInDefinition<IWithBackendOrProbe>
  fullName: IInDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: IInDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IInDefinition(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IInUpdate`1
  name: IInUpdate<IUpdate>
  fullName: IInUpdate<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IInUpdate(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IInUpdate(Of IUpdate)
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Update.IUpdate
- uid: ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: ISettable`1
  name: ISettable<IUpdate>
  fullName: ISettable<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: ISettable(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: ISettable(Of IUpdate)
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IChildResource`1
  isExternal: true
  name: IChildResource<>
  fullName: IChildResource<>
  fullname.vb: IChildResource(Of )
  name.vb: IChildResource(Of )
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinition`1
  isExternal: true
  name: IInDefinition<>
  fullName: IInDefinition<>
  fullname.vb: IInDefinition(Of )
  name.vb: IInDefinition(Of )
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdate`1
  isExternal: true
  name: IInUpdate<>
  fullName: IInUpdate<>
  fullname.vb: IInUpdate(Of )
  name.vb: IInUpdate(Of )
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.Backend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Update
- uid: ISettable`1
  isExternal: true
  name: ISettable<>
  fullName: ISettable<>
  fullname.vb: ISettable(Of )
  name.vb: ISettable(Of )
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ILoadBalancingRule>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule)
  name.vb: IDictionary(Of String, ILoadBalancingRule)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
    name: ILoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
    name: ILoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  fullname.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  parent: System.Collections.Generic
  isExternal: true
  name: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  isExternal: false
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  parent: Microsoft.Azure.Management.Fluent.Network.IBackend
  isExternal: false
  name: GetVirtualMachineIds()
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
    name: GetVirtualMachineIds
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
    name: GetVirtualMachineIds
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  parent: Microsoft.Azure.Management.Fluent.Network.IBackend
  isExternal: false
  name: BackendNicIpConfigurationNames
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
