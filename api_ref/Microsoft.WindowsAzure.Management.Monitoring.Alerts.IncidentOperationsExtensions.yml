### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  id: IncidentOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  children:
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscription(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscriptionAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRule(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRuleAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: IncidentOperationsExtensions
  nameWithType: IncidentOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IncidentOperationsExtensions
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  syntax:
    content: public static class IncidentOperationsExtensions
    content.vb: Public Module IncidentOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  id: Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IIncidentOperations, String)
  nameWithType: IncidentOperationsExtensions.Get(IIncidentOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static IncidentGetResponse Get(this IIncidentOperations operations, string incidentId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IIncidentOperations, incidentId As String) As IncidentGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations.\n"
    - id: incidentId
      type: System.String
      description: "\nRequired. The id of the incident to retrieve.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
      description: "\nThe Get Incident operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  id: GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IIncidentOperations, String)
  nameWithType: IncidentOperationsExtensions.GetAsync(IIncidentOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static Task<IncidentGetResponse> GetAsync(this IIncidentOperations operations, string incidentId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IIncidentOperations, incidentId As String) As Task(Of IncidentGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations.\n"
    - id: incidentId
      type: System.String
      description: "\nRequired. The id of the incident to retrieve.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse}
      description: "\nThe Get Incident operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscription(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscription(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  id: ListActiveForSubscription(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListActiveForSubscription(IIncidentOperations)
  nameWithType: IncidentOperationsExtensions.ListActiveForSubscription(IIncidentOperations)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscription(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListActiveForSubscription
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static IncidentListResponse ListActiveForSubscription(this IIncidentOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListActiveForSubscription(operations As IIncidentOperations) As IncidentListResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
      description: "\nThe List incidents operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscriptionAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscriptionAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  id: ListActiveForSubscriptionAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListActiveForSubscriptionAsync(IIncidentOperations)
  nameWithType: IncidentOperationsExtensions.ListActiveForSubscriptionAsync(IIncidentOperations)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListActiveForSubscriptionAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListActiveForSubscriptionAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static Task<IncidentListResponse> ListActiveForSubscriptionAsync(this IIncidentOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListActiveForSubscriptionAsync(operations As IIncidentOperations) As Task(Of IncidentListResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse}
      description: "\nThe List incidents operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRule(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRule(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  id: ListForRule(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListForRule(IIncidentOperations, String, Boolean)
  nameWithType: IncidentOperationsExtensions.ListForRule(IIncidentOperations, String, Boolean)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRule(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListForRule
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static IncidentListResponse ListForRule(this IIncidentOperations operations, string ruleId, bool isActive)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListForRule(operations As IIncidentOperations, ruleId As String, isActive As Boolean) As IncidentListResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations.\n"
    - id: ruleId
      type: System.String
      description: "\nRequired. The rule id.\n"
    - id: isActive
      type: System.Boolean
      description: "\nRequired. A boolean to retrieve only active or resolved incidents.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
      description: "\nThe List incidents operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRuleAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRuleAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  id: ListForRuleAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListForRuleAsync(IIncidentOperations, String, Boolean)
  nameWithType: IncidentOperationsExtensions.ListForRuleAsync(IIncidentOperations, String, Boolean)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IncidentOperationsExtensions.ListForRuleAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListForRuleAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/IncidentOperationsExtensions.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static Task<IncidentListResponse> ListForRuleAsync(this IIncidentOperations operations, string ruleId, bool isActive)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListForRuleAsync(operations As IIncidentOperations, ruleId As String, isActive As Boolean) As Task(Of IncidentListResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations.\n"
    - id: ruleId
      type: System.String
      description: "\nRequired. The rule id.\n"
    - id: isActive
      type: System.Boolean
      description: "\nRequired. A boolean to retrieve only active or resolved incidents.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse}
      description: "\nThe List incidents operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  commentId: N:Microsoft.WindowsAzure.Management.Monitoring.Alerts
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  nameWithType: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  isExternal: false
  name: IIncidentOperations
  nameWithType: IIncidentOperations
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IIncidentOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: IncidentGetResponse
  nameWithType: IncidentGetResponse
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  commentId: N:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  nameWithType: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IncidentGetResponse>
  nameWithType: Task<IncidentGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse>
  nameWithType.vb: Task(Of IncidentGetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse)
  name.vb: Task(Of IncidentGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
    name: IncidentGetResponse
    nameWithType: IncidentGetResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
    name: IncidentGetResponse
    nameWithType: IncidentGetResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: IncidentListResponse
  nameWithType: IncidentListResponse
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IncidentListResponse>
  nameWithType: Task<IncidentListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse>
  nameWithType.vb: Task(Of IncidentListResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse)
  name.vb: Task(Of IncidentListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
    name: IncidentListResponse
    nameWithType: IncidentListResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
    name: IncidentListResponse
    nameWithType: IncidentListResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.IncidentListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
