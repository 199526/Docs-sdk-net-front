items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  id: ExternalChildResources`5
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.#ctor(`4,System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.AddChildResource(`0)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Collection
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.CommitAndGetAllAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.InitializeCollection
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.ListChildResources
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.NewChildResource(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Parent
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareDefine(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareRemove(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareUpdate(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Refresh
  langs:
  - csharp
  - vb
  name: ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExternalChildResources
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: >-
      public abstract class ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>
          where FluentModelTImpl : ExternalChildResource<IFluentModelT, InnerModelT, IParentT, ParentImplT>, IFluentModelT where IFluentModelT : IExternalChildResource<IFluentModelT, IParentT> where ParentImplT : IParentT
    content.vb: Public MustInherit Class ExternalChildResources(Of FluentModelTImpl As {ExternalChildResource(Of IFluentModelT, InnerModelT, IParentT, ParentImplT), IFluentModelT}, IFluentModelT As IExternalChildResource(Of IFluentModelT, IParentT), InnerModelT, IParentT, ParentImplT As IParentT)
    typeParameters:
    - id: FluentModelTImpl
    - id: IFluentModelT
    - id: InnerModelT
    - id: IParentT
    - id: ParentImplT
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT)
  name.vb: ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.#ctor(`4,System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.#ctor(`4,System.String)
  id: '#ctor(`4,System.String)'
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: ExternalChildResources(ParentImplT, String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.ExternalChildResources(ParentImplT, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nCreates a new ExternalChildResources.\n"
  example: []
  syntax:
    content: protected ExternalChildResources(ParentImplT parent, string childResourceName)
    content.vb: Protected Sub New(parent As ParentImplT, childResourceName As String)
    parameters:
    - id: parent
      type: '{ParentImplT}'
      description: the parent Azure resource
    - id: childResourceName
      type: System.String
      description: the child resource name
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).ExternalChildResources(ParentImplT, System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Parent
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Parent
  id: Parent
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: Parent
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.Parent
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Parent
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  example: []
  syntax:
    content: protected ParentImplT Parent { get; }
    content.vb: Protected ReadOnly Property Parent As ParentImplT
    parameters: []
    return:
      type: '{ParentImplT}'
      description: The parent resource of this collection of child resources.
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).Parent
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Collection
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Collection
  id: Collection
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: Collection
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.Collection
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Collection
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  example: []
  syntax:
    content: protected IDictionary<string, FluentModelTImpl> Collection { get; }
    content.vb: Protected ReadOnly Property Collection As IDictionary(Of String, FluentModelTImpl)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,{FluentModelTImpl}}
      description: the child resource collection as a read-only dictionary.
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).Collection
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Refresh
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.Refresh
  id: Refresh
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: Refresh()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.Refresh()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Refresh
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nRefresh the collection.\n"
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).Refresh()
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.CommitAndGetAllAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.CommitAndGetAllAsync(System.Threading.CancellationToken)
  id: CommitAndGetAllAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: CommitAndGetAllAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.CommitAndGetAllAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitAndGetAllAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public Task<List<FluentModelTImpl>> CommitAndGetAllAsync(CancellationToken cacellationToken)
    content.vb: Public Function CommitAndGetAllAsync(cacellationToken As CancellationToken) As Task(Of List(Of FluentModelTImpl))
    parameters:
    - id: cacellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{FluentModelTImpl}}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).CommitAndGetAllAsync(System.Threading.CancellationToken)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareDefine(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareDefine(System.String)
  id: PrepareDefine(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: PrepareDefine(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.PrepareDefine(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrepareDefine
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nPrepare for definition of a new external child resource.\n"
  example: []
  syntax:
    content: protected FluentModelTImpl PrepareDefine(string name)
    content.vb: Protected Function PrepareDefine(name As String) As FluentModelTImpl
    parameters:
    - id: name
      type: System.String
      description: the name for the new external child resource
    return:
      type: '{FluentModelTImpl}'
      description: the child resource
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).PrepareDefine(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareUpdate(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareUpdate(System.String)
  id: PrepareUpdate(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: PrepareUpdate(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.PrepareUpdate(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrepareUpdate
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nPrepare for an external child resource update.\n"
  example: []
  syntax:
    content: protected FluentModelTImpl PrepareUpdate(string name)
    content.vb: Protected Function PrepareUpdate(name As String) As FluentModelTImpl
    parameters:
    - id: name
      type: System.String
      description: the name of the external child resource
    return:
      type: '{FluentModelTImpl}'
      description: the external child resource to be updated
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).PrepareUpdate(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareRemove(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.PrepareRemove(System.String)
  id: PrepareRemove(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: PrepareRemove(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.PrepareRemove(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrepareRemove
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 202
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nMark an external child resource with given name as to be removed.\n"
  example: []
  syntax:
    content: protected void PrepareRemove(string name)
    content.vb: Protected Sub PrepareRemove(name As String)
    parameters:
    - id: name
      type: System.String
      description: the name of the external child resource
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).PrepareRemove(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.AddChildResource(`0)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.AddChildResource(`0)
  id: AddChildResource(`0)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: AddChildResource(FluentModelTImpl)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.AddChildResource(FluentModelTImpl)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddChildResource
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 217
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nAdds an external child resource to the collection.\n"
  example: []
  syntax:
    content: protected void AddChildResource(FluentModelTImpl childResource)
    content.vb: Protected Sub AddChildResource(childResource As FluentModelTImpl)
    parameters:
    - id: childResource
      type: '{FluentModelTImpl}'
      description: childResource the external child resource
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).AddChildResource(FluentModelTImpl)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.InitializeCollection
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.InitializeCollection
  id: InitializeCollection
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: InitializeCollection()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.InitializeCollection()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InitializeCollection
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 228
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nInitializes the external child resource collection.\n"
  example: []
  syntax:
    content: protected void InitializeCollection()
    content.vb: Protected Sub InitializeCollection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).InitializeCollection()
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.ListChildResources
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.ListChildResources
  id: ListChildResources
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: ListChildResources()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.ListChildResources()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListChildResources
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 243
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nGets the list of external child resources.\n"
  example: []
  syntax:
    content: protected abstract IList<FluentModelTImpl> ListChildResources()
    content.vb: Protected MustOverride Function ListChildResources As IList(Of FluentModelTImpl)
    return:
      type: System.Collections.Generic.IList{{FluentModelTImpl}}
      description: the list of external child resources
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).ListChildResources()
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.NewChildResource(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5.NewChildResource(System.String)
  id: NewChildResource(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources`5
  langs:
  - csharp
  - vb
  name: NewChildResource(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources<FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT>.NewChildResource(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NewChildResource
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResources.cs
    startLine: 250
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nGets a new external child resource model instance.\n"
  example: []
  syntax:
    content: protected abstract FluentModelTImpl NewChildResource(string name)
    content.vb: Protected MustOverride Function NewChildResource(name As String) As FluentModelTImpl
    parameters:
    - id: name
      type: System.String
      description: the name for the new child resource
    return:
      type: '{FluentModelTImpl}'
      description: the new child resource
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResources(Of FluentModelTImpl, IFluentModelT, InnerModelT, IParentT, ParentImplT).NewChildResource(System.String)
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{ParentImplT}'
  isExternal: false
  name: ParentImplT
  fullName: ParentImplT
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,{FluentModelTImpl}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, FluentModelTImpl>
  fullName: System.Collections.Generic.IDictionary<System.String, FluentModelTImpl>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, FluentModelTImpl)
  name.vb: IDictionary(Of String, FluentModelTImpl)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: FluentModelTImpl
    fullName: FluentModelTImpl
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: FluentModelTImpl
    fullName: FluentModelTImpl
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{FluentModelTImpl}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<FluentModelTImpl>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<FluentModelTImpl>>
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of FluentModelTImpl))
  name.vb: Task(Of List(Of FluentModelTImpl))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: FluentModelTImpl
    fullName: FluentModelTImpl
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: FluentModelTImpl
    fullName: FluentModelTImpl
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: '{FluentModelTImpl}'
  isExternal: false
  name: FluentModelTImpl
  fullName: FluentModelTImpl
- uid: System.Collections.Generic.IList{{FluentModelTImpl}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FluentModelTImpl>
  fullName: System.Collections.Generic.IList<FluentModelTImpl>
  fullname.vb: System.Collections.Generic.IList(Of FluentModelTImpl)
  name.vb: IList(Of FluentModelTImpl)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: FluentModelTImpl
    fullName: FluentModelTImpl
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: FluentModelTImpl
    fullName: FluentModelTImpl
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
