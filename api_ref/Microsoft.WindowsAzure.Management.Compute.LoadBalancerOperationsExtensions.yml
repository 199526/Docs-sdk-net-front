### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  id: LoadBalancerOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Compute
  children:
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeleting(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeletingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Create(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  langs:
  - csharp
  - vb
  name: LoadBalancerOperationsExtensions
  nameWithType: LoadBalancerOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LoadBalancerOperationsExtensions
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nThe Service Management API provides programmatic access to much of the\nfunctionality available through the Management Portal. The Service\nManagement API is a REST API. All API operations are performed over\nSSL, and are mutually authenticated using X.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class LoadBalancerOperationsExtensions
    content.vb: Public Module LoadBalancerOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  id: BeginCreating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreating(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  nameWithType: LoadBalancerOperationsExtensions.BeginCreating(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginCreating
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nAdd an internal load balancer to a an existing deployment. When\nused by an input endpoint, the internal load balancer will provide\nan additional private VIP that can be used for load balancing to\nthe roles in this deployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse BeginCreating(this ILoadBalancerOperations operations, string serviceName, string deploymentName, LoadBalancerCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreating(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, parameters As LoadBalancerCreateParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
      description: "\nRequired. Parameters supplied to the Create Load Balancer operation.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  id: BeginCreatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreatingAsync(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  nameWithType: LoadBalancerOperationsExtensions.BeginCreatingAsync(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginCreatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginCreatingAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nAdd an internal load balancer to a an existing deployment. When\nused by an input endpoint, the internal load balancer will provide\nan additional private VIP that can be used for load balancing to\nthe roles in this deployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> BeginCreatingAsync(this ILoadBalancerOperations operations, string serviceName, string deploymentName, LoadBalancerCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreatingAsync(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, parameters As LoadBalancerCreateParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
      description: "\nRequired. Parameters supplied to the Create Load Balancer operation.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeleting(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeleting(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  id: BeginDeleting(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleting(ILoadBalancerOperations, String, String, String)
  nameWithType: LoadBalancerOperationsExtensions.BeginDeleting(ILoadBalancerOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeleting(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginDeleting
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nDelete an internal load balancer from the deployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse BeginDeleting(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleting(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the load balancer.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeletingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeletingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  id: BeginDeletingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeletingAsync(ILoadBalancerOperations, String, String, String)
  nameWithType: LoadBalancerOperationsExtensions.BeginDeletingAsync(ILoadBalancerOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginDeletingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginDeletingAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nDelete an internal load balancer from the deployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> BeginDeletingAsync(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeletingAsync(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the load balancer.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  id: BeginUpdating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdating(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  nameWithType: LoadBalancerOperationsExtensions.BeginUpdating(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginUpdating
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 214
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdates an internal load balancer associated with an existing\ndeployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse BeginUpdating(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName, LoadBalancerUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdating(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String, parameters As LoadBalancerUpdateParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the loadBalancer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Load Balancer operation.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  id: BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdatingAsync(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  nameWithType: LoadBalancerOperationsExtensions.BeginUpdatingAsync(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginUpdatingAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 254
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdates an internal load balancer associated with an existing\ndeployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> BeginUpdatingAsync(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName, LoadBalancerUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdatingAsync(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String, parameters As LoadBalancerUpdateParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the loadBalancer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Load Balancer operation.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Create(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Create(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  id: Create(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  nameWithType: LoadBalancerOperationsExtensions.Create(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Create(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Create
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 289
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nAdd an internal load balancer to a an existing deployment. When\nused by an input endpoint, the internal load balancer will provide\nan additional private VIP that can be used for load balancing to\nthe roles in this deployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Create(this ILoadBalancerOperations operations, string serviceName, string deploymentName, LoadBalancerCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, parameters As LoadBalancerCreateParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
      description: "\nRequired. Parameters supplied to the Create Load Balancer operation.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  id: CreateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  nameWithType: LoadBalancerOperationsExtensions.CreateAsync(ILoadBalancerOperations, String, String, LoadBalancerCreateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 328
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nAdd an internal load balancer to a an existing deployment. When\nused by an input endpoint, the internal load balancer will provide\nan additional private VIP that can be used for load balancing to\nthe roles in this deployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> CreateAsync(this ILoadBalancerOperations operations, string serviceName, string deploymentName, LoadBalancerCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, parameters As LoadBalancerCreateParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
      description: "\nRequired. Parameters supplied to the Create Load Balancer operation.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  id: Delete(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(ILoadBalancerOperations, String, String, String)
  nameWithType: LoadBalancerOperationsExtensions.Delete(ILoadBalancerOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Delete
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 353
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nDelete an internal load balancer from the deployment.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Delete(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the load balancer.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  id: DeleteAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(ILoadBalancerOperations, String, String, String)
  nameWithType: LoadBalancerOperationsExtensions.DeleteAsync(ILoadBalancerOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 382
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nDelete an internal load balancer from the deployment.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DeleteAsync(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the load balancer.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  id: Update(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  nameWithType: LoadBalancerOperationsExtensions.Update(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Update
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 418
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdates an internal load balancer associated with an existing\ndeployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Update(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName, LoadBalancerUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String, parameters As LoadBalancerUpdateParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the loadBalancer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Load Balancer operation.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  id: UpdateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations,System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  nameWithType: LoadBalancerOperationsExtensions.UpdateAsync(ILoadBalancerOperations, String, String, String, LoadBalancerUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.LoadBalancerOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations, System.String, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/LoadBalancerOperationsExtensions.cs
    startLine: 458
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdates an internal load balancer associated with an existing\ndeployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> UpdateAsync(this ILoadBalancerOperations operations, string serviceName, string deploymentName, string loadBalancerName, LoadBalancerUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As ILoadBalancerOperations, serviceName As String, deploymentName As String, loadBalancerName As String, parameters As LoadBalancerUpdateParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: loadBalancerName
      type: System.String
      description: "\nRequired. The name of the loadBalancer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Load Balancer operation.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Compute
  commentId: N:Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute
  nameWithType: Microsoft.WindowsAzure.Management.Compute
  fullName: Microsoft.WindowsAzure.Management.Compute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  commentId: T:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  parent: Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: ILoadBalancerOperations
  nameWithType: ILoadBalancerOperations
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: LoadBalancerCreateParameters
  nameWithType: LoadBalancerCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
- uid: OperationStatusResponse
  isExternal: true
  name: OperationStatusResponse
  nameWithType: OperationStatusResponse
  fullName: OperationStatusResponse
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Threading.Tasks.Task{OperationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{OperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatusResponse>
  nameWithType: Task<OperationStatusResponse>
  fullName: System.Threading.Tasks.Task<OperationStatusResponse>
  nameWithType.vb: Task(Of OperationStatusResponse)
  fullname.vb: System.Threading.Tasks.Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: LoadBalancerUpdateParameters
  nameWithType: LoadBalancerUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
