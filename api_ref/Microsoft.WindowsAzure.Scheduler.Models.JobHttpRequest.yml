### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  id: JobHttpRequest
  parent: Microsoft.WindowsAzure.Scheduler.Models
  children:
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.#ctor
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.#ctor(System.Uri,System.String)
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Authentication
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Body
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Headers
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Method
  - Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Uri
  langs:
  - csharp
  - vb
  name: JobHttpRequest
  nameWithType: JobHttpRequest
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobHttpRequest
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nRequest for an http or https action type.\n"
  example: []
  syntax:
    content: public class JobHttpRequest
    content.vb: Public Class JobHttpRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Authentication
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Authentication
  id: Authentication
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: Authentication
  nameWithType: JobHttpRequest.Authentication
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Authentication
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Authentication
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Gets or sets the request authentication.\n"
  example: []
  syntax:
    content: public HttpAuthentication Authentication { get; set; }
    content.vb: Public Property Authentication As HttpAuthentication
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Scheduler.Models.HttpAuthentication
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Body
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Body
  id: Body
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: JobHttpRequest.Body
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Body
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Body
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Gets or sets the request body.\n"
  example: []
  syntax:
    content: public string Body { get; set; }
    content.vb: Public Property Body As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Headers
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Headers
  id: Headers
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: JobHttpRequest.Headers
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Headers
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Headers
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Gets or sets Header name value pairs to supply with the\nhttp/https action.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Headers { get; set; }
    content.vb: Public Property Headers As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Method
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Method
  id: Method
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: JobHttpRequest.Method
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Method
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Method
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nRequired. Gets or sets Http method e.g. GET, PUT, POST, DELETE.\n"
  example: []
  syntax:
    content: public string Method { get; set; }
    content.vb: Public Property Method As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Uri
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: JobHttpRequest.Uri
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.Uri
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Uri
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nRequired. Gets or sets Uri of the endpoint to invoke.\n"
  example: []
  syntax:
    content: public Uri Uri { get; set; }
    content.vb: Public Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.#ctor
  commentId: M:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: JobHttpRequest()
  nameWithType: JobHttpRequest.JobHttpRequest()
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.JobHttpRequest()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nInitializes a new instance of the JobHttpRequest class.\n"
  example: []
  syntax:
    content: public JobHttpRequest()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.#ctor(System.Uri,System.String)
  commentId: M:Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest
  langs:
  - csharp
  - vb
  name: JobHttpRequest(Uri, String)
  nameWithType: JobHttpRequest.JobHttpRequest(Uri, String)
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobHttpRequest.JobHttpRequest(System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobHttpRequest.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nInitializes a new instance of the JobHttpRequest class with\nrequired arguments.\n"
  example: []
  syntax:
    content: public JobHttpRequest(Uri uri, string method)
    content.vb: Public Sub New(uri As Uri, method As String)
    parameters:
    - id: uri
      type: System.Uri
    - id: method
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Scheduler.Models
  commentId: N:Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Scheduler.Models
  nameWithType: Microsoft.WindowsAzure.Scheduler.Models
  fullName: Microsoft.WindowsAzure.Scheduler.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Scheduler.Models.HttpAuthentication
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.HttpAuthentication
  parent: Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: HttpAuthentication
  nameWithType: HttpAuthentication
  fullName: Microsoft.WindowsAzure.Scheduler.Models.HttpAuthentication
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
