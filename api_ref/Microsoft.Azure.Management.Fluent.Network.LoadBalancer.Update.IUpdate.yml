items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  id: IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  children: []
  langs:
  - csharp
  - vb
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IUpdate
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  syntax:
    content: 'public interface IUpdate : IAppliable<ILoadBalancer>, IUpdateWithTags<IUpdate>, IWithProbe, IWithBackend, IWithLoadBalancingRule, IWithInternetFrontend, IWithPublicIpAddress, IWithInternalFrontend, IWithNetworkSubnet, IWithInboundNatRule, IWithInboundNatPool'
    content.vb: >-
      Public Interface IUpdate
          Inherits IAppliable(Of ILoadBalancer), IUpdateWithTags(Of IUpdate), IWithProbe, IWithBackend, IWithLoadBalancingRule, IWithInternetFrontend, IWithInternalFrontend, IWithNetworkSubnet, IWithInboundNatRule, IWithInboundNatPool
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: WithTcpProbe(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
    name: WithTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
    name: WithTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: WithHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
    name: WithHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
    name: WithHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: DefineHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
    name: DefineHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
    name: DefineHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: DefineTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
    name: DefineTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
    name: DefineTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: WithoutProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
    name: WithoutProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
    name: WithoutProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: UpdateTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
    name: UpdateTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
    name: UpdateTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: UpdateHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
    name: UpdateHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
    name: UpdateHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  isExternal: true
  name: WithoutBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
    name: WithoutBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
    name: WithoutBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  isExternal: true
  name: DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  isExternal: true
  name: UpdateBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
    name: UpdateBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
    name: UpdateBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: WithLoadBalancingRule(Int32, String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: WithLoadBalancingRule(Int32, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: DefineLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
    name: DefineLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
    name: DefineLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: WithoutLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
    name: WithoutLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
    name: WithoutLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: UpdateLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
    name: UpdateLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
    name: UpdateLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  isExternal: true
  name: DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  isExternal: true
  name: WithoutFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
    name: WithoutFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
    name: WithoutFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  isExternal: true
  name: UpdateInternetFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
    name: UpdateInternetFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
    name: UpdateInternetFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  isExternal: true
  name: DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
    name: DefinePrivateFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
    name: DefinePrivateFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  isExternal: true
  name: UpdateInternalFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
    name: UpdateInternalFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
    name: UpdateInternalFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  isExternal: true
  name: WithoutInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
    name: WithoutInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
    name: WithoutInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  isExternal: true
  name: DefineInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
    name: DefineInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
    name: DefineInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  isExternal: true
  name: UpdateInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
    name: UpdateInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
    name: UpdateInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  isExternal: true
  name: WithoutInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
    name: WithoutInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
    name: WithoutInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  isExternal: true
  name: DefineInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
    name: DefineInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
    name: DefineInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  isExternal: true
  name: UpdateInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
    name: UpdateInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
    name: UpdateInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithProbe
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithLoadBalancingRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInternetFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInternalFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInboundNatRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInboundNatPool
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
