### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  commentId: T:Microsoft.Azure.Management.Cdn.Models.EdgeNode
  id: EdgeNode
  parent: Microsoft.Azure.Management.Cdn.Models
  children:
  - Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor
  - Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup})
  - Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups
  - Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name
  - Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup
  langs:
  - csharp
  - vb
  name: EdgeNode
  nameWithType: EdgeNode
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EdgeNode
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nEdge node of CDN service.\n"
  example: []
  syntax:
    content: public class EdgeNode
    content.vb: Public Class EdgeNode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor
  commentId: M:Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  langs:
  - csharp
  - vb
  name: EdgeNode()
  nameWithType: EdgeNode.EdgeNode()
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.EdgeNode()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the EdgeNode class.\n"
  example: []
  syntax:
    content: public EdgeNode()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup})
  commentId: M:Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup})'
  parent: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  langs:
  - csharp
  - vb
  name: EdgeNode(String, String, IList<IpAddressGroup>)
  nameWithType: EdgeNode.EdgeNode(String, String, IList<IpAddressGroup>)
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.EdgeNode(System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.IpAddressGroup>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the EdgeNode class.\n"
  example: []
  syntax:
    content: public EdgeNode(string name = null, string resourceGroup = null, IList<IpAddressGroup> ipAddressGroups = null)
    content.vb: Public Sub New(name As String = Nothing, resourceGroup As String = Nothing, ipAddressGroups As IList(Of IpAddressGroup) = Nothing)
    parameters:
    - id: name
      type: System.String
      description: >-
        Ip adress group that contains Ipv4 and Ipv6

        addresses
    - id: resourceGroup
      type: System.String
      description: >-
        The resource group of the edge

        node.
    - id: ipAddressGroups
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup}
      description: List of ip address groups.
  overload: Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor*
  nameWithType.vb: EdgeNode.EdgeNode(String, String, IList(Of IpAddressGroup))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Cdn.Models.EdgeNode.EdgeNode(System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.IpAddressGroup))
  name.vb: EdgeNode(String, String, IList(Of IpAddressGroup))
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name
  commentId: P:Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name
  id: Name
  parent: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EdgeNode.Name
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets ip adress group that contains Ipv4 and Ipv6 addresses\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup
  commentId: P:Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup
  id: ResourceGroup
  parent: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  langs:
  - csharp
  - vb
  name: ResourceGroup
  nameWithType: EdgeNode.ResourceGroup
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the resource group of the edge node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceGroup")]

      public string ResourceGroup { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceGroup")>

      Public Property ResourceGroup As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceGroup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups
  commentId: P:Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups
  id: IpAddressGroups
  parent: Microsoft.Azure.Management.Cdn.Models.EdgeNode
  langs:
  - csharp
  - vb
  name: IpAddressGroups
  nameWithType: EdgeNode.IpAddressGroups
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpAddressGroups
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/EdgeNode.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets list of ip address groups.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "ipAddressGroups")]

      public IList<IpAddressGroup> IpAddressGroups { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="ipAddressGroups")>

      Public Property IpAddressGroups As IList(Of IpAddressGroup)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup}
  overload: Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: ipAddressGroups
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Cdn.Models
  commentId: N:Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: Microsoft.Azure.Management.Cdn.Models
  nameWithType: Microsoft.Azure.Management.Cdn.Models
  fullName: Microsoft.Azure.Management.Cdn.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.EdgeNode.#ctor
  isExternal: false
  name: EdgeNode
  nameWithType: EdgeNode.EdgeNode
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.EdgeNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.IpAddressGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IpAddressGroup>
  nameWithType: IList<IpAddressGroup>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.IpAddressGroup>
  nameWithType.vb: IList(Of IpAddressGroup)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.IpAddressGroup)
  name.vb: IList(Of IpAddressGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
    name: IpAddressGroup
    nameWithType: IpAddressGroup
    fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
    name: IpAddressGroup
    nameWithType: IpAddressGroup
    fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name
  isExternal: false
  name: Name
  nameWithType: EdgeNode.Name
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.Name
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup
  isExternal: false
  name: ResourceGroup
  nameWithType: EdgeNode.ResourceGroup
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.ResourceGroup
- uid: Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups
  isExternal: false
  name: IpAddressGroups
  nameWithType: EdgeNode.IpAddressGroups
  fullName: Microsoft.Azure.Management.Cdn.Models.EdgeNode.IpAddressGroups
