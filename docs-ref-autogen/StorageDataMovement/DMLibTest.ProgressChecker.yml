### YamlMime:ManagedReference
items:
- uid: DMLibTest.ProgressChecker
  commentId: T:DMLibTest.ProgressChecker
  id: ProgressChecker
  parent: DMLibTest
  children:
  - DMLibTest.ProgressChecker.#ctor
  - DMLibTest.ProgressChecker.#ctor(System.Int64,System.Int64)
  - DMLibTest.ProgressChecker.#ctor(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})
  - DMLibTest.ProgressChecker.DataTransferred
  - DMLibTest.ProgressChecker.FailedFilesNumber
  - DMLibTest.ProgressChecker.GetProgressHandler
  - DMLibTest.ProgressChecker.Report(TransferStatus)
  - DMLibTest.ProgressChecker.Reset
  - DMLibTest.ProgressChecker.SkippedFilesNumber
  - DMLibTest.ProgressChecker.TransferredFilesNumber
  langs:
  - csharp
  - vb
  name: ProgressChecker
  nameWithType: ProgressChecker
  fullName: DMLibTest.ProgressChecker
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ProgressChecker
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 12
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public class ProgressChecker : IProgress<TransferStatus>'
    content.vb: >-
      Public Class ProgressChecker
          Inherits IProgress(Of TransferStatus)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.ProgressChecker.#ctor
  commentId: M:DMLibTest.ProgressChecker.#ctor
  id: '#ctor'
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: ProgressChecker()
  nameWithType: ProgressChecker.ProgressChecker()
  fullName: DMLibTest.ProgressChecker.ProgressChecker()
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 22
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public ProgressChecker()
    content.vb: Public Sub New
  overload: DMLibTest.ProgressChecker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.ProgressChecker.#ctor(System.Int64,System.Int64)
  commentId: M:DMLibTest.ProgressChecker.#ctor(System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64)'
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: ProgressChecker(Int64, Int64)
  nameWithType: ProgressChecker.ProgressChecker(Int64, Int64)
  fullName: DMLibTest.ProgressChecker.ProgressChecker(System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 26
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public ProgressChecker(long totalNumber, long totalBytes)
    content.vb: Public Sub New(totalNumber As Long, totalBytes As Long)
    parameters:
    - id: totalNumber
      type: System.Int64
    - id: totalBytes
      type: System.Int64
  overload: DMLibTest.ProgressChecker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.ProgressChecker.#ctor(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:DMLibTest.ProgressChecker.#ctor(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: ProgressChecker(Int64, Int64, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>)
  nameWithType: ProgressChecker.ProgressChecker(Int64, Int64, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>)
  fullName: DMLibTest.ProgressChecker.ProgressChecker(System.Int64, System.Int64, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 30
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public ProgressChecker(long totalNumber, long totalBytes, long ? transferedNumber, long ? failedNumber, long ? skippedNumber, long ? transferedBytes)
    content.vb: Public Sub New(totalNumber As Long, totalBytes As Long, transferedNumber As Long?, failedNumber As Long?, skippedNumber As Long?, transferedBytes As Long?)
    parameters:
    - id: totalNumber
      type: System.Int64
    - id: totalBytes
      type: System.Int64
    - id: transferedNumber
      type: System.Nullable{System.Int64}
    - id: failedNumber
      type: System.Nullable{System.Int64}
    - id: skippedNumber
      type: System.Nullable{System.Int64}
    - id: transferedBytes
      type: System.Nullable{System.Int64}
  overload: DMLibTest.ProgressChecker.#ctor*
  nameWithType.vb: ProgressChecker.ProgressChecker(Int64, Int64, Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.ProgressChecker.ProgressChecker(System.Int64, System.Int64, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: ProgressChecker(Int64, Int64, Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64))
- uid: DMLibTest.ProgressChecker.TransferredFilesNumber
  commentId: P:DMLibTest.ProgressChecker.TransferredFilesNumber
  id: TransferredFilesNumber
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: TransferredFilesNumber
  nameWithType: ProgressChecker.TransferredFilesNumber
  fullName: DMLibTest.ProgressChecker.TransferredFilesNumber
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferredFilesNumber
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 43
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public long TransferredFilesNumber { get; }
    content.vb: Public ReadOnly Property TransferredFilesNumber As Long
    parameters: []
    return:
      type: System.Int64
  overload: DMLibTest.ProgressChecker.TransferredFilesNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.ProgressChecker.SkippedFilesNumber
  commentId: P:DMLibTest.ProgressChecker.SkippedFilesNumber
  id: SkippedFilesNumber
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: SkippedFilesNumber
  nameWithType: ProgressChecker.SkippedFilesNumber
  fullName: DMLibTest.ProgressChecker.SkippedFilesNumber
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SkippedFilesNumber
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 51
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public long SkippedFilesNumber { get; }
    content.vb: Public ReadOnly Property SkippedFilesNumber As Long
    parameters: []
    return:
      type: System.Int64
  overload: DMLibTest.ProgressChecker.SkippedFilesNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.ProgressChecker.FailedFilesNumber
  commentId: P:DMLibTest.ProgressChecker.FailedFilesNumber
  id: FailedFilesNumber
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: FailedFilesNumber
  nameWithType: ProgressChecker.FailedFilesNumber
  fullName: DMLibTest.ProgressChecker.FailedFilesNumber
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FailedFilesNumber
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 59
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public long FailedFilesNumber { get; }
    content.vb: Public ReadOnly Property FailedFilesNumber As Long
    parameters: []
    return:
      type: System.Int64
  overload: DMLibTest.ProgressChecker.FailedFilesNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.ProgressChecker.GetProgressHandler
  commentId: M:DMLibTest.ProgressChecker.GetProgressHandler
  id: GetProgressHandler
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: GetProgressHandler()
  nameWithType: ProgressChecker.GetProgressHandler()
  fullName: DMLibTest.ProgressChecker.GetProgressHandler()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetProgressHandler
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 77
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public IProgress<TransferStatus> GetProgressHandler()
    content.vb: Public Function GetProgressHandler As IProgress(Of TransferStatus)
    return:
      type: IProgress{TransferStatus}
  overload: DMLibTest.ProgressChecker.GetProgressHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.ProgressChecker.Report(TransferStatus)
  commentId: M:DMLibTest.ProgressChecker.Report(TransferStatus)
  id: Report(TransferStatus)
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: Report(TransferStatus)
  nameWithType: ProgressChecker.Report(TransferStatus)
  fullName: DMLibTest.ProgressChecker.Report(TransferStatus)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Report
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 82
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public void Report(TransferStatus progress)
    content.vb: Public Sub Report(progress As TransferStatus)
    parameters:
    - id: progress
      type: TransferStatus
  overload: DMLibTest.ProgressChecker.Report*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.ProgressChecker.Reset
  commentId: M:DMLibTest.ProgressChecker.Reset
  id: Reset
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ProgressChecker.Reset()
  fullName: DMLibTest.ProgressChecker.Reset()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Reset
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 96
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: DMLibTest.ProgressChecker.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.ProgressChecker.DataTransferred
  commentId: P:DMLibTest.ProgressChecker.DataTransferred
  id: DataTransferred
  parent: DMLibTest.ProgressChecker
  langs:
  - csharp
  - vb
  name: DataTransferred
  nameWithType: ProgressChecker.DataTransferred
  fullName: DMLibTest.ProgressChecker.DataTransferred
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/ProgressChecker.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DataTransferred
    path: src/storage-data-movement/test/DMLibTest/Framework/ProgressChecker.cs
    startLine: 110
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public WaitHandle DataTransferred { get; }
    content.vb: Public ReadOnly Property DataTransferred As WaitHandle
    parameters: []
    return:
      type: WaitHandle
  overload: DMLibTest.ProgressChecker.DataTransferred*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.ProgressChecker.#ctor*
  commentId: Overload:DMLibTest.ProgressChecker.#ctor
  isExternal: false
  name: ProgressChecker
  nameWithType: ProgressChecker.ProgressChecker
  fullName: DMLibTest.ProgressChecker.ProgressChecker
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.ProgressChecker.TransferredFilesNumber*
  commentId: Overload:DMLibTest.ProgressChecker.TransferredFilesNumber
  isExternal: false
  name: TransferredFilesNumber
  nameWithType: ProgressChecker.TransferredFilesNumber
  fullName: DMLibTest.ProgressChecker.TransferredFilesNumber
- uid: DMLibTest.ProgressChecker.SkippedFilesNumber*
  commentId: Overload:DMLibTest.ProgressChecker.SkippedFilesNumber
  isExternal: false
  name: SkippedFilesNumber
  nameWithType: ProgressChecker.SkippedFilesNumber
  fullName: DMLibTest.ProgressChecker.SkippedFilesNumber
- uid: DMLibTest.ProgressChecker.FailedFilesNumber*
  commentId: Overload:DMLibTest.ProgressChecker.FailedFilesNumber
  isExternal: false
  name: FailedFilesNumber
  nameWithType: ProgressChecker.FailedFilesNumber
  fullName: DMLibTest.ProgressChecker.FailedFilesNumber
- uid: DMLibTest.ProgressChecker.GetProgressHandler*
  commentId: Overload:DMLibTest.ProgressChecker.GetProgressHandler
  isExternal: false
  name: GetProgressHandler
  nameWithType: ProgressChecker.GetProgressHandler
  fullName: DMLibTest.ProgressChecker.GetProgressHandler
- uid: IProgress{TransferStatus}
  commentId: '!:IProgress{TransferStatus}'
  definition: IProgress`1
  name: IProgress<TransferStatus>
  nameWithType: IProgress<TransferStatus>
  fullName: IProgress<TransferStatus>
  nameWithType.vb: IProgress(Of TransferStatus)
  fullname.vb: IProgress(Of TransferStatus)
  name.vb: IProgress(Of TransferStatus)
  spec.csharp:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TransferStatus
    name: TransferStatus
    nameWithType: TransferStatus
    fullName: TransferStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TransferStatus
    name: TransferStatus
    nameWithType: TransferStatus
    fullName: TransferStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IProgress`1
  isExternal: true
  name: IProgress<>
  nameWithType: IProgress<>
  fullName: IProgress<>
  nameWithType.vb: IProgress(Of )
  fullname.vb: IProgress(Of )
  name.vb: IProgress(Of )
  spec.csharp:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.ProgressChecker.Report*
  commentId: Overload:DMLibTest.ProgressChecker.Report
  isExternal: false
  name: Report
  nameWithType: ProgressChecker.Report
  fullName: DMLibTest.ProgressChecker.Report
- uid: TransferStatus
  isExternal: true
  name: TransferStatus
  nameWithType: TransferStatus
  fullName: TransferStatus
- uid: DMLibTest.ProgressChecker.Reset*
  commentId: Overload:DMLibTest.ProgressChecker.Reset
  isExternal: false
  name: Reset
  nameWithType: ProgressChecker.Reset
  fullName: DMLibTest.ProgressChecker.Reset
- uid: DMLibTest.ProgressChecker.DataTransferred*
  commentId: Overload:DMLibTest.ProgressChecker.DataTransferred
  isExternal: false
  name: DataTransferred
  nameWithType: ProgressChecker.DataTransferred
  fullName: DMLibTest.ProgressChecker.DataTransferred
- uid: WaitHandle
  commentId: '!:WaitHandle'
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: WaitHandle
