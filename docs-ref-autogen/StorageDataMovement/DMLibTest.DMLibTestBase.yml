### YamlMime:ManagedReference
items:
- uid: DMLibTest.DMLibTestBase
  commentId: T:DMLibTest.DMLibTestBase
  id: DMLibTestBase
  parent: DMLibTest
  children:
  - DMLibTest.DMLibTestBase.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  - DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions
  - DMLibTest.DMLibTestBase.DefaultTransferOptions
  - DMLibTest.DMLibTestBase.DirName
  - DMLibTest.DMLibTestBase.ExecuteTestCase(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  - DMLibTest.DMLibTestBase.FileName
  - DMLibTest.DMLibTestBase.FileSizeInKB
  - DMLibTest.DMLibTestBase.FolderName
  - DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.Int32,System.String)
  - DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.String)
  - DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions(DMLibDataType,DMLibDataType)
  - DMLibTest.DMLibTestBase.GetDefaultTransferOptions(DMLibDataType,DMLibDataType)
  - DMLibTest.DMLibTestBase.GetDestConnectionString(DMLibDataType)
  - DMLibTest.DMLibTestBase.GetDMLibWrapper(DMLibDataType,DMLibDataType,System.Boolean)
  - DMLibTest.DMLibTestBase.GetSourceConnectionString(DMLibDataType)
  - DMLibTest.DMLibTestBase.IsCloudBlob(DMLibDataType)
  - DMLibTest.DMLibTestBase.IsCloudService(DMLibDataType)
  - DMLibTest.DMLibTestBase.IsLocal(DMLibDataType)
  - DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType(DMLibDataType)
  - DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  - DMLibTest.DMLibTestBase.RunTransferItems(List{DMLibTest.TransferItem},DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  - DMLibTest.DMLibTestBase.SetDestConnectionString(System.String,DMLibDataType)
  - DMLibTest.DMLibTestBase.SetSourceConnectionString(System.String,DMLibDataType)
  - DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  langs:
  - csharp
  - vb
  name: DMLibTestBase
  nameWithType: DMLibTestBase
  fullName: DMLibTest.DMLibTestBase
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DMLibTestBase
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 20
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public class DMLibTestBase : MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>'
    content.vb: >-
      Public Class DMLibTestBase
          Inherits MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType)
  inheritance:
  - System.Object
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  derivedClasses:
  - DMLibTest.AllTransferDirectionTest
  - DMLibTest.BigFileTest
  - DMLibTest.BlockSizeTest
  - DMLibTest.BVT
  - DMLibTest.Cases.AccessConditionTest
  - DMLibTest.Cases.CheckContentMD5Test
  - DMLibTest.Cases.DelimiterTest
  - DMLibTest.Cases.OverwriteTest
  - DMLibTest.Cases.ProgressHandlerTest
  - DMLibTest.Cases.SASTokenVersionTest
  - DMLibTest.Cases.SetAttributesTest
  - DMLibTest.Cases.ShouldTransferTest
  - DMLibTest.Cases.SnapshotTest
  - DMLibTest.Cases.UnsupportedDirectionTest
  - DMLibTest.DMLibDataPreparedTestBase
  - DMLibTest.MetadataTest
  - DMLibTest.ResumeTest
  inheritedMembers:
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceRoot
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestRoot
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceFolder
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestFolder
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.random
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.TestContext
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.NetworkShare
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupSource
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupDestination
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceAdaptor
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestAdaptor
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseClassCleanup
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseTestInitialize
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseTestCleanup
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupData
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupData(System.Boolean,System.Boolean)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetLocationKey(DMLibDataType)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetSourceAdaptor(DMLibDataType)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetDestAdaptor(DMLibDataType)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SetSourceAdaptor(DMLibDataType,DMLibTest.DataAdaptor{DMLibTest.DMLibDataInfo})
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SetDestAdaptor(DMLibDataType,DMLibTest.DataAdaptor{DMLibTest.DMLibDataInfo})
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.IsCloudService(DMLibDataType)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetRandomCredentialType
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetRelativePath(System.String,System.String)
  - DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.NormalizePath(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.DMLibTestBase.FolderName
  commentId: F:DMLibTest.DMLibTestBase.FolderName
  id: FolderName
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: FolderName
  nameWithType: DMLibTestBase.FolderName
  fullName: DMLibTest.DMLibTestBase.FolderName
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FolderName
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 25
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string FolderName = null
    content.vb: Public Const FolderName As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.DMLibTestBase.FileName
  commentId: F:DMLibTest.DMLibTestBase.FileName
  id: FileName
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: DMLibTestBase.FileName
  fullName: DMLibTest.DMLibTestBase.FileName
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileName
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 26
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string FileName = null
    content.vb: Public Const FileName As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.DMLibTestBase.DirName
  commentId: F:DMLibTest.DMLibTestBase.DirName
  id: DirName
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: DirName
  nameWithType: DMLibTestBase.DirName
  fullName: DMLibTest.DMLibTestBase.DirName
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DirName
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 27
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string DirName = null
    content.vb: Public Const DirName As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.DMLibTestBase.FileSizeInKB
  commentId: P:DMLibTest.DMLibTestBase.FileSizeInKB
  id: FileSizeInKB
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: FileSizeInKB
  nameWithType: DMLibTestBase.FileSizeInKB
  fullName: DMLibTest.DMLibTestBase.FileSizeInKB
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileSizeInKB
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 29
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static int FileSizeInKB { get; set; }
    content.vb: Public Shared Property FileSizeInKB As Integer
    parameters: []
    return:
      type: System.Int32
  overload: DMLibTest.DMLibTestBase.FileSizeInKB*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.SetSourceConnectionString(System.String,DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.SetSourceConnectionString(System.String,DMLibDataType)
  id: SetSourceConnectionString(System.String,DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: SetSourceConnectionString(String, DMLibDataType)
  nameWithType: DMLibTestBase.SetSourceConnectionString(String, DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.SetSourceConnectionString(System.String, DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetSourceConnectionString
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 35
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void SetSourceConnectionString(string value, DMLibDataType dataType)
    content.vb: Public Shared Sub SetSourceConnectionString(value As String, dataType As DMLibDataType)
    parameters:
    - id: value
      type: System.String
    - id: dataType
      type: DMLibDataType
  overload: DMLibTest.DMLibTestBase.SetSourceConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.SetDestConnectionString(System.String,DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.SetDestConnectionString(System.String,DMLibDataType)
  id: SetDestConnectionString(System.String,DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: SetDestConnectionString(String, DMLibDataType)
  nameWithType: DMLibTestBase.SetDestConnectionString(String, DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.SetDestConnectionString(System.String, DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetDestConnectionString
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 41
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void SetDestConnectionString(string value, DMLibDataType dataType)
    content.vb: Public Shared Sub SetDestConnectionString(value As String, dataType As DMLibDataType)
    parameters:
    - id: value
      type: System.String
    - id: dataType
      type: DMLibDataType
  overload: DMLibTest.DMLibTestBase.SetDestConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.GetSourceConnectionString(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.GetSourceConnectionString(DMLibDataType)
  id: GetSourceConnectionString(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GetSourceConnectionString(DMLibDataType)
  nameWithType: DMLibTestBase.GetSourceConnectionString(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.GetSourceConnectionString(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetSourceConnectionString
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 47
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetSourceConnectionString(DMLibDataType dataType)
    content.vb: Public Shared Function GetSourceConnectionString(dataType As DMLibDataType) As String
    parameters:
    - id: dataType
      type: DMLibDataType
    return:
      type: System.String
  overload: DMLibTest.DMLibTestBase.GetSourceConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.GetDestConnectionString(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.GetDestConnectionString(DMLibDataType)
  id: GetDestConnectionString(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GetDestConnectionString(DMLibDataType)
  nameWithType: DMLibTestBase.GetDestConnectionString(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.GetDestConnectionString(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDestConnectionString
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 52
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetDestConnectionString(DMLibDataType dataType)
    content.vb: Public Shared Function GetDestConnectionString(dataType As DMLibDataType) As String
    parameters:
    - id: dataType
      type: DMLibDataType
    return:
      type: System.String
  overload: DMLibTest.DMLibTestBase.GetDestConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  commentId: M:DMLibTest.DMLibTestBase.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  id: BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: BaseClassInitialize(TestContext)
  nameWithType: DMLibTestBase.BaseClassInitialize(TestContext)
  fullName: DMLibTest.DMLibTestBase.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BaseClassInitialize
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 78
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void BaseClassInitialize(TestContext testContext)
    content.vb: Public Shared Sub BaseClassInitialize(testContext As TestContext)
    parameters:
    - id: testContext
      type: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  overload: DMLibTest.DMLibTestBase.BaseClassInitialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.ExecuteTestCase(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  commentId: M:DMLibTest.DMLibTestBase.ExecuteTestCase(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  id: ExecuteTestCase(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: ExecuteTestCase(DMLibDataInfo, TestExecutionOptions<DMLibDataInfo>)
  nameWithType: DMLibTestBase.ExecuteTestCase(DMLibDataInfo, TestExecutionOptions<DMLibDataInfo>)
  fullName: DMLibTest.DMLibTestBase.ExecuteTestCase(DMLibTest.DMLibDataInfo, DMLibTest.TestExecutionOptions<DMLibTest.DMLibDataInfo>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ExecuteTestCase
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 110
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public TestResult<DMLibDataInfo> ExecuteTestCase(DMLibDataInfo sourceDataInfo, TestExecutionOptions<DMLibDataInfo> options)
    content.vb: Public Function ExecuteTestCase(sourceDataInfo As DMLibDataInfo, options As TestExecutionOptions(Of DMLibDataInfo)) As TestResult(Of DMLibDataInfo)
    parameters:
    - id: sourceDataInfo
      type: DMLibTest.DMLibDataInfo
    - id: options
      type: DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo}
    return:
      type: DMLibTest.TestResult{DMLibTest.DMLibDataInfo}
  overload: DMLibTest.DMLibTestBase.ExecuteTestCase*
  nameWithType.vb: DMLibTestBase.ExecuteTestCase(DMLibDataInfo, TestExecutionOptions(Of DMLibDataInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.DMLibTestBase.ExecuteTestCase(DMLibTest.DMLibDataInfo, DMLibTest.TestExecutionOptions(Of DMLibTest.DMLibDataInfo))
  name.vb: ExecuteTestCase(DMLibDataInfo, TestExecutionOptions(Of DMLibDataInfo))
- uid: DMLibTest.DMLibTestBase.RunTransferItems(List{DMLibTest.TransferItem},DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  commentId: M:DMLibTest.DMLibTestBase.RunTransferItems(List{DMLibTest.TransferItem},DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  id: RunTransferItems(List{DMLibTest.TransferItem},DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: RunTransferItems(List<TransferItem>, TestExecutionOptions<DMLibDataInfo>)
  nameWithType: DMLibTestBase.RunTransferItems(List<TransferItem>, TestExecutionOptions<DMLibDataInfo>)
  fullName: DMLibTest.DMLibTestBase.RunTransferItems(List<DMLibTest.TransferItem>, DMLibTest.TestExecutionOptions<DMLibTest.DMLibDataInfo>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RunTransferItems
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 183
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public TestResult<DMLibDataInfo> RunTransferItems(List<TransferItem> items, TestExecutionOptions<DMLibDataInfo> options)
    content.vb: Public Function RunTransferItems(items As List(Of TransferItem), options As TestExecutionOptions(Of DMLibDataInfo)) As TestResult(Of DMLibDataInfo)
    parameters:
    - id: items
      type: List{DMLibTest.TransferItem}
    - id: options
      type: DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo}
    return:
      type: DMLibTest.TestResult{DMLibTest.DMLibDataInfo}
  overload: DMLibTest.DMLibTestBase.RunTransferItems*
  nameWithType.vb: DMLibTestBase.RunTransferItems(List(Of TransferItem), TestExecutionOptions(Of DMLibDataInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.DMLibTestBase.RunTransferItems(List(Of DMLibTest.TransferItem), DMLibTest.TestExecutionOptions(Of DMLibTest.DMLibDataInfo))
  name.vb: RunTransferItems(List(Of TransferItem), TestExecutionOptions(Of DMLibDataInfo))
- uid: DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  commentId: M:DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  id: ValidateDestinationMD5ByDownloading(DMLibTest.DMLibDataInfo,DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo})
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: ValidateDestinationMD5ByDownloading(DMLibDataInfo, TestExecutionOptions<DMLibDataInfo>)
  nameWithType: DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibDataInfo, TestExecutionOptions<DMLibDataInfo>)
  fullName: DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibTest.DMLibDataInfo, DMLibTest.TestExecutionOptions<DMLibTest.DMLibDataInfo>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ValidateDestinationMD5ByDownloading
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 293
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public void ValidateDestinationMD5ByDownloading(DMLibDataInfo destDataInfo, TestExecutionOptions<DMLibDataInfo> options)
    content.vb: Public Sub ValidateDestinationMD5ByDownloading(destDataInfo As DMLibDataInfo, options As TestExecutionOptions(Of DMLibDataInfo))
    parameters:
    - id: destDataInfo
      type: DMLibTest.DMLibDataInfo
    - id: options
      type: DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo}
  overload: DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading*
  nameWithType.vb: DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibDataInfo, TestExecutionOptions(Of DMLibDataInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading(DMLibTest.DMLibDataInfo, DMLibTest.TestExecutionOptions(Of DMLibTest.DMLibDataInfo))
  name.vb: ValidateDestinationMD5ByDownloading(DMLibDataInfo, TestExecutionOptions(Of DMLibDataInfo))
- uid: DMLibTest.DMLibTestBase.GetDMLibWrapper(DMLibDataType,DMLibDataType,System.Boolean)
  commentId: M:DMLibTest.DMLibTestBase.GetDMLibWrapper(DMLibDataType,DMLibDataType,System.Boolean)
  id: GetDMLibWrapper(DMLibDataType,DMLibDataType,System.Boolean)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GetDMLibWrapper(DMLibDataType, DMLibDataType, Boolean)
  nameWithType: DMLibTestBase.GetDMLibWrapper(DMLibDataType, DMLibDataType, Boolean)
  fullName: DMLibTest.DMLibTestBase.GetDMLibWrapper(DMLibDataType, DMLibDataType, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDMLibWrapper
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 302
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public DMLibWrapper GetDMLibWrapper(DMLibDataType sourceType, DMLibDataType destType, bool isServiceCopy)
    content.vb: Public Function GetDMLibWrapper(sourceType As DMLibDataType, destType As DMLibDataType, isServiceCopy As Boolean) As DMLibWrapper
    parameters:
    - id: sourceType
      type: DMLibDataType
    - id: destType
      type: DMLibDataType
    - id: isServiceCopy
      type: System.Boolean
    return:
      type: DMLibTest.DMLibWrapper
  overload: DMLibTest.DMLibTestBase.GetDMLibWrapper*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.DMLibTestBase.DefaultTransferOptions
  commentId: P:DMLibTest.DMLibTestBase.DefaultTransferOptions
  id: DefaultTransferOptions
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: DefaultTransferOptions
  nameWithType: DMLibTestBase.DefaultTransferOptions
  fullName: DMLibTest.DMLibTestBase.DefaultTransferOptions
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DefaultTransferOptions
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 318
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static object DefaultTransferOptions { get; }
    content.vb: Public Shared ReadOnly Property DefaultTransferOptions As Object
    parameters: []
    return:
      type: System.Object
  overload: DMLibTest.DMLibTestBase.DefaultTransferOptions*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions
  commentId: P:DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions
  id: DefaultTransferDirectoryOptions
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: DefaultTransferDirectoryOptions
  nameWithType: DMLibTestBase.DefaultTransferDirectoryOptions
  fullName: DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DefaultTransferDirectoryOptions
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 326
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static object DefaultTransferDirectoryOptions { get; }
    content.vb: Public Shared ReadOnly Property DefaultTransferDirectoryOptions As Object
    parameters: []
    return:
      type: System.Object
  overload: DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: DMLibTest.DMLibTestBase.GetDefaultTransferOptions(DMLibDataType,DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.GetDefaultTransferOptions(DMLibDataType,DMLibDataType)
  id: GetDefaultTransferOptions(DMLibDataType,DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GetDefaultTransferOptions(DMLibDataType, DMLibDataType)
  nameWithType: DMLibTestBase.GetDefaultTransferOptions(DMLibDataType, DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.GetDefaultTransferOptions(DMLibDataType, DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDefaultTransferOptions
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 334
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static object GetDefaultTransferOptions(DMLibDataType sourceType, DMLibDataType destType)
    content.vb: Public Shared Function GetDefaultTransferOptions(sourceType As DMLibDataType, destType As DMLibDataType) As Object
    parameters:
    - id: sourceType
      type: DMLibDataType
    - id: destType
      type: DMLibDataType
    return:
      type: System.Object
  overload: DMLibTest.DMLibTestBase.GetDefaultTransferOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions(DMLibDataType,DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions(DMLibDataType,DMLibDataType)
  id: GetDefaultTransferDirectoryOptions(DMLibDataType,DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GetDefaultTransferDirectoryOptions(DMLibDataType, DMLibDataType)
  nameWithType: DMLibTestBase.GetDefaultTransferDirectoryOptions(DMLibDataType, DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions(DMLibDataType, DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDefaultTransferDirectoryOptions
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 350
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static object GetDefaultTransferDirectoryOptions(DMLibDataType sourceType, DMLibDataType destType)
    content.vb: Public Shared Function GetDefaultTransferDirectoryOptions(sourceType As DMLibDataType, destType As DMLibDataType) As Object
    parameters:
    - id: sourceType
      type: DMLibDataType
    - id: destType
      type: DMLibDataType
    return:
      type: System.Object
  overload: DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType(DMLibDataType)
  id: MapBlobDataTypeToBlobType(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: MapBlobDataTypeToBlobType(DMLibDataType)
  nameWithType: DMLibTestBase.MapBlobDataTypeToBlobType(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MapBlobDataTypeToBlobType
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 380
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string MapBlobDataTypeToBlobType(DMLibDataType blobDataType)
    content.vb: Public Shared Function MapBlobDataTypeToBlobType(blobDataType As DMLibDataType) As String
    parameters:
    - id: blobDataType
      type: DMLibDataType
    return:
      type: System.String
  overload: DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  id: MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  nameWithType: DMLibTestBase.MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MapBlobDataTypeToXSCLBlobType
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 395
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static WindowsAzure.Storage.Blob.BlobType MapBlobDataTypeToXSCLBlobType(DMLibDataType blobDataType)
    content.vb: Public Shared Function MapBlobDataTypeToXSCLBlobType(blobDataType As DMLibDataType) As WindowsAzure.Storage.Blob.BlobType
    parameters:
    - id: blobDataType
      type: DMLibDataType
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
  overload: DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.String)
  commentId: M:DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.String)
  id: GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.String)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GenerateSourceDataInfo(DMLibTestBase.FileNumOption, String)
  nameWithType: DMLibTestBase.GenerateSourceDataInfo(DMLibTestBase.FileNumOption, String)
  fullName: DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateSourceDataInfo
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 415
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public DMLibDataInfo GenerateSourceDataInfo(DMLibTestBase.FileNumOption fileNumOption, string folderName = "")
    content.vb: Public Function GenerateSourceDataInfo(fileNumOption As DMLibTestBase.FileNumOption, folderName As String = "") As DMLibDataInfo
    parameters:
    - id: fileNumOption
      type: DMLibTest.DMLibTestBase.FileNumOption
    - id: folderName
      type: System.String
    return:
      type: DMLibTest.DMLibDataInfo
  overload: DMLibTest.DMLibTestBase.GenerateSourceDataInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.Int32,System.String)
  commentId: M:DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.Int32,System.String)
  id: GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption,System.Int32,System.String)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: GenerateSourceDataInfo(DMLibTestBase.FileNumOption, Int32, String)
  nameWithType: DMLibTestBase.GenerateSourceDataInfo(DMLibTestBase.FileNumOption, Int32, String)
  fullName: DMLibTest.DMLibTestBase.GenerateSourceDataInfo(DMLibTest.DMLibTestBase.FileNumOption, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateSourceDataInfo
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 420
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public DMLibDataInfo GenerateSourceDataInfo(DMLibTestBase.FileNumOption fileNumOption, int totalSizeInKB, string folderName = "")
    content.vb: Public Function GenerateSourceDataInfo(fileNumOption As DMLibTestBase.FileNumOption, totalSizeInKB As Integer, folderName As String = "") As DMLibDataInfo
    parameters:
    - id: fileNumOption
      type: DMLibTest.DMLibTestBase.FileNumOption
    - id: totalSizeInKB
      type: System.Int32
    - id: folderName
      type: System.String
    return:
      type: DMLibTest.DMLibDataInfo
  overload: DMLibTest.DMLibTestBase.GenerateSourceDataInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.DMLibTestBase.IsCloudService(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.IsCloudService(DMLibDataType)
  id: IsCloudService(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: IsCloudService(DMLibDataType)
  nameWithType: DMLibTestBase.IsCloudService(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.IsCloudService(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsCloudService
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 457
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override bool IsCloudService(DMLibDataType dataType)
    content.vb: Public Overrides Function IsCloudService(dataType As DMLibDataType) As Boolean
    parameters:
    - id: dataType
      type: DMLibDataType
    return:
      type: System.Boolean
  overridden: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.IsCloudService(DMLibDataType)
  overload: DMLibTest.DMLibTestBase.IsCloudService*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DMLibTest.DMLibTestBase.IsLocal(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.IsLocal(DMLibDataType)
  id: IsLocal(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: IsLocal(DMLibDataType)
  nameWithType: DMLibTestBase.IsLocal(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.IsLocal(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsLocal
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 462
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool IsLocal(DMLibDataType dataType)
    content.vb: Public Shared Function IsLocal(dataType As DMLibDataType) As Boolean
    parameters:
    - id: dataType
      type: DMLibDataType
    return:
      type: System.Boolean
  overload: DMLibTest.DMLibTestBase.IsLocal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestBase.IsCloudBlob(DMLibDataType)
  commentId: M:DMLibTest.DMLibTestBase.IsCloudBlob(DMLibDataType)
  id: IsCloudBlob(DMLibDataType)
  parent: DMLibTest.DMLibTestBase
  langs:
  - csharp
  - vb
  name: IsCloudBlob(DMLibDataType)
  nameWithType: DMLibTestBase.IsCloudBlob(DMLibDataType)
  fullName: DMLibTest.DMLibTestBase.IsCloudBlob(DMLibDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsCloudBlob
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibTestBase.cs
    startLine: 467
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool IsCloudBlob(DMLibDataType dataType)
    content.vb: Public Shared Function IsCloudBlob(dataType As DMLibDataType) As Boolean
    parameters:
    - id: dataType
      type: DMLibDataType
    return:
      type: System.Boolean
  overload: DMLibTest.DMLibTestBase.IsCloudBlob*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  commentId: T:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  parent: DMLibTest
  definition: DMLibTest.MultiDirectionTestBase`2
  name: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType)
  name.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2
    name: MultiDirectionTestBase
    nameWithType: MultiDirectionTestBase
    fullName: DMLibTest.MultiDirectionTestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2
    name: MultiDirectionTestBase
    nameWithType: MultiDirectionTestBase
    fullName: DMLibTest.MultiDirectionTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceRoot
  commentId: F:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceRoot
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.SourceRoot
  name: SourceRoot
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SourceRoot
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SourceRoot
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SourceRoot
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SourceRoot
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestRoot
  commentId: F:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestRoot
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.DestRoot
  name: DestRoot
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.DestRoot
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.DestRoot
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).DestRoot
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).DestRoot
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceFolder
  commentId: F:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceFolder
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.SourceFolder
  name: SourceFolder
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SourceFolder
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SourceFolder
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SourceFolder
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SourceFolder
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestFolder
  commentId: F:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestFolder
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.DestFolder
  name: DestFolder
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.DestFolder
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.DestFolder
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).DestFolder
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).DestFolder
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.random
  commentId: F:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.random
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.random
  name: random
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.random
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.random
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).random
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).random
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.TestContext
  commentId: P:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.TestContext
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.TestContext
  name: TestContext
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.TestContext
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.TestContext
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).TestContext
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).TestContext
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.NetworkShare
  commentId: P:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.NetworkShare
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.NetworkShare
  name: NetworkShare
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.NetworkShare
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.NetworkShare
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).NetworkShare
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).NetworkShare
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupSource
  commentId: P:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupSource
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.CleanupSource
  name: CleanupSource
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.CleanupSource
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.CleanupSource
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).CleanupSource
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).CleanupSource
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupDestination
  commentId: P:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupDestination
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  name: CleanupDestination
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.CleanupDestination
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.CleanupDestination
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).CleanupDestination
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).CleanupDestination
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceAdaptor
  commentId: P:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SourceAdaptor
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  name: SourceAdaptor
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SourceAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SourceAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SourceAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SourceAdaptor
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestAdaptor
  commentId: P:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.DestAdaptor
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  name: DestAdaptor
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.DestAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.DestAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).DestAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).DestAdaptor
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: BaseClassInitialize(TestContext)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseClassInitialize(TestContext)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseClassInitialize(TestContext)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
    name: BaseClassInitialize
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseClassInitialize
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseClassInitialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
    name: TestContext
    nameWithType: TestContext
    fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
    name: BaseClassInitialize
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseClassInitialize
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseClassInitialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
    name: TestContext
    nameWithType: TestContext
    fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseClassCleanup
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseClassCleanup
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  name: BaseClassCleanup()
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseClassCleanup()
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseClassCleanup()
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseClassCleanup()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseClassCleanup()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
    name: BaseClassCleanup
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseClassCleanup
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseClassCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
    name: BaseClassCleanup
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseClassCleanup
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseClassCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseTestInitialize
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseTestInitialize
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  name: BaseTestInitialize()
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseTestInitialize()
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseTestInitialize()
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseTestInitialize()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseTestInitialize()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
    name: BaseTestInitialize
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseTestInitialize
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseTestInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
    name: BaseTestInitialize
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseTestInitialize
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseTestInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseTestCleanup
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.BaseTestCleanup
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  name: BaseTestCleanup()
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseTestCleanup()
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseTestCleanup()
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseTestCleanup()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseTestCleanup()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
    name: BaseTestCleanup
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.BaseTestCleanup
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.BaseTestCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
    name: BaseTestCleanup
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).BaseTestCleanup
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).BaseTestCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupData
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupData
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.CleanupData
  name: CleanupData()
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.CleanupData()
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.CleanupData()
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).CleanupData()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).CleanupData()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData
    name: CleanupData
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.CleanupData
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData
    name: CleanupData
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).CleanupData
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupData(System.Boolean,System.Boolean)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.CleanupData(System.Boolean,System.Boolean)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
  name: CleanupData(Boolean, Boolean)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.CleanupData(Boolean, Boolean)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.CleanupData(System.Boolean, System.Boolean)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).CleanupData(Boolean, Boolean)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).CleanupData(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
    name: CleanupData
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.CleanupData
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
    name: CleanupData
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).CleanupData
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetLocationKey(DMLibDataType)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetLocationKey(DMLibDataType)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
  name: GetLocationKey(DMLibDataType)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetLocationKey(DMLibDataType)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetLocationKey(DMLibDataType)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetLocationKey(DMLibDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetLocationKey(DMLibDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
    name: GetLocationKey
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetLocationKey
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetLocationKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
    name: GetLocationKey
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetLocationKey
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetLocationKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetSourceAdaptor(DMLibDataType)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetSourceAdaptor(DMLibDataType)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
  name: GetSourceAdaptor(DMLibDataType)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetSourceAdaptor(DMLibDataType)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetSourceAdaptor(DMLibDataType)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetSourceAdaptor(DMLibDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetSourceAdaptor(DMLibDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
    name: GetSourceAdaptor
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
    name: GetSourceAdaptor
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetDestAdaptor(DMLibDataType)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetDestAdaptor(DMLibDataType)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
  name: GetDestAdaptor(DMLibDataType)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetDestAdaptor(DMLibDataType)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetDestAdaptor(DMLibDataType)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetDestAdaptor(DMLibDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetDestAdaptor(DMLibDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
    name: GetDestAdaptor
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
    name: GetDestAdaptor
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SetSourceAdaptor(DMLibDataType,DMLibTest.DataAdaptor{DMLibTest.DMLibDataInfo})
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SetSourceAdaptor(DMLibDataType,DMLibTest.DataAdaptor{DMLibTest.DMLibDataInfo})
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  name: SetSourceAdaptor(DMLibDataType, DataAdaptor<DMLibDataInfo>)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SetSourceAdaptor(DMLibDataType, DataAdaptor<DMLibDataInfo>)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SetSourceAdaptor(DMLibDataType, DMLibTest.DataAdaptor<DMLibTest.DMLibDataInfo>)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SetSourceAdaptor(DMLibDataType, DataAdaptor(Of DMLibDataInfo))
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SetSourceAdaptor(DMLibDataType, DMLibTest.DataAdaptor(Of DMLibTest.DMLibDataInfo))
  name.vb: SetSourceAdaptor(DMLibDataType, DataAdaptor(Of DMLibDataInfo))
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetSourceAdaptor
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetSourceAdaptor
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SetDestAdaptor(DMLibDataType,DMLibTest.DataAdaptor{DMLibTest.DMLibDataInfo})
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.SetDestAdaptor(DMLibDataType,DMLibTest.DataAdaptor{DMLibTest.DMLibDataInfo})
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  name: SetDestAdaptor(DMLibDataType, DataAdaptor<DMLibDataInfo>)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SetDestAdaptor(DMLibDataType, DataAdaptor<DMLibDataInfo>)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SetDestAdaptor(DMLibDataType, DMLibTest.DataAdaptor<DMLibTest.DMLibDataInfo>)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SetDestAdaptor(DMLibDataType, DataAdaptor(Of DMLibDataInfo))
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SetDestAdaptor(DMLibDataType, DMLibTest.DataAdaptor(Of DMLibTest.DMLibDataInfo))
  name.vb: SetDestAdaptor(DMLibDataType, DataAdaptor(Of DMLibDataInfo))
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetDestAdaptor
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.SetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.SetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetDestAdaptor
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).SetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).SetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.IsCloudService(DMLibDataType)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.IsCloudService(DMLibDataType)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
  name: IsCloudService(DMLibDataType)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.IsCloudService(DMLibDataType)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.IsCloudService(DMLibDataType)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).IsCloudService(DMLibDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).IsCloudService(DMLibDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
    name: IsCloudService
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.IsCloudService
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.IsCloudService
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
    name: IsCloudService
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).IsCloudService
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).IsCloudService
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibDataType
    name: DMLibDataType
    nameWithType: DMLibDataType
    fullName: DMLibDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetRandomCredentialType
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetRandomCredentialType
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  name: GetRandomCredentialType()
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetRandomCredentialType()
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetRandomCredentialType()
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetRandomCredentialType()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetRandomCredentialType()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
    name: GetRandomCredentialType
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetRandomCredentialType
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetRandomCredentialType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
    name: GetRandomCredentialType
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetRandomCredentialType
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetRandomCredentialType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetRelativePath(System.String,System.String)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.GetRelativePath(System.String,System.String)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
  name: GetRelativePath(String, String)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetRelativePath(String, String)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetRelativePath(System.String, System.String)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetRelativePath(String, String)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetRelativePath(System.String, System.String)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
    name: GetRelativePath
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.GetRelativePath
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.GetRelativePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
    name: GetRelativePath
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).GetRelativePath
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).GetRelativePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.NormalizePath(System.String)
  commentId: M:DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}.NormalizePath(System.String)
  parent: DMLibTest.MultiDirectionTestBase{DMLibTest.DMLibDataInfo,DMLibDataType}
  definition: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
  name: NormalizePath(String)
  nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.NormalizePath(String)
  fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.NormalizePath(System.String)
  nameWithType.vb: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).NormalizePath(String)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).NormalizePath(System.String)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
    name: NormalizePath
    nameWithType: MultiDirectionTestBase<DMLibDataInfo, DMLibDataType>.NormalizePath
    fullName: DMLibTest.MultiDirectionTestBase<DMLibTest.DMLibDataInfo, DMLibDataType>.NormalizePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
    name: NormalizePath
    nameWithType: MultiDirectionTestBase(Of DMLibDataInfo, DMLibDataType).NormalizePath
    fullName: DMLibTest.MultiDirectionTestBase(Of DMLibTest.DMLibDataInfo, DMLibDataType).NormalizePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2
  commentId: T:DMLibTest.MultiDirectionTestBase`2
  isExternal: false
  name: MultiDirectionTestBase<TDataInfo, TDataType>
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType)
  name.vb: MultiDirectionTestBase(Of TDataInfo, TDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2
    name: MultiDirectionTestBase
    nameWithType: MultiDirectionTestBase
    fullName: DMLibTest.MultiDirectionTestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2
    name: MultiDirectionTestBase
    nameWithType: MultiDirectionTestBase
    fullName: DMLibTest.MultiDirectionTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.SourceRoot
  commentId: F:DMLibTest.MultiDirectionTestBase`2.SourceRoot
  isExternal: false
  name: SourceRoot
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceRoot
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceRoot
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceRoot
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceRoot
- uid: DMLibTest.MultiDirectionTestBase`2.DestRoot
  commentId: F:DMLibTest.MultiDirectionTestBase`2.DestRoot
  isExternal: false
  name: DestRoot
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestRoot
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestRoot
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestRoot
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestRoot
- uid: DMLibTest.MultiDirectionTestBase`2.SourceFolder
  commentId: F:DMLibTest.MultiDirectionTestBase`2.SourceFolder
  isExternal: false
  name: SourceFolder
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceFolder
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceFolder
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceFolder
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceFolder
- uid: DMLibTest.MultiDirectionTestBase`2.DestFolder
  commentId: F:DMLibTest.MultiDirectionTestBase`2.DestFolder
  isExternal: false
  name: DestFolder
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestFolder
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestFolder
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestFolder
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestFolder
- uid: DMLibTest.MultiDirectionTestBase`2.random
  commentId: F:DMLibTest.MultiDirectionTestBase`2.random
  isExternal: false
  name: random
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.random
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.random
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).random
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).random
- uid: DMLibTest.MultiDirectionTestBase`2.TestContext
  commentId: P:DMLibTest.MultiDirectionTestBase`2.TestContext
  isExternal: false
  name: TestContext
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.TestContext
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.TestContext
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).TestContext
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).TestContext
- uid: DMLibTest.MultiDirectionTestBase`2.NetworkShare
  commentId: P:DMLibTest.MultiDirectionTestBase`2.NetworkShare
  isExternal: false
  name: NetworkShare
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NetworkShare
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NetworkShare
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).NetworkShare
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NetworkShare
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupSource
  commentId: P:DMLibTest.MultiDirectionTestBase`2.CleanupSource
  isExternal: false
  name: CleanupSource
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupSource
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupSource
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupSource
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupSource
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  commentId: P:DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  isExternal: false
  name: CleanupDestination
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupDestination
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupDestination
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupDestination
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupDestination
- uid: DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  commentId: P:DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  isExternal: false
  name: SourceAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  commentId: P:DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  isExternal: false
  name: DestAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  isExternal: false
  name: BaseClassInitialize(TestContext)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize(TestContext)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize(TestContext)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
    name: BaseClassInitialize
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
    name: TestContext
    nameWithType: TestContext
    fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
    name: BaseClassInitialize
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
    name: TestContext
    nameWithType: TestContext
    fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  isExternal: false
  name: BaseClassCleanup()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup()
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
    name: BaseClassCleanup
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
    name: BaseClassCleanup
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  isExternal: false
  name: BaseTestInitialize()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize()
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
    name: BaseTestInitialize
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
    name: BaseTestInitialize
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  isExternal: false
  name: BaseTestCleanup()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup()
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
    name: BaseTestCleanup
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
    name: BaseTestCleanup
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupData
  commentId: M:DMLibTest.MultiDirectionTestBase`2.CleanupData
  isExternal: false
  name: CleanupData()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData()
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData
    name: CleanupData
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData
    name: CleanupData
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
  isExternal: true
  name: CleanupData(Boolean, Boolean)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData(Boolean, Boolean)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData(System.Boolean, System.Boolean)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData(Boolean, Boolean)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
    name: CleanupData
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
    name: CleanupData
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
  isExternal: false
  name: GetLocationKey(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey(TDataType)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey(TDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey(TDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
    name: GetLocationKey
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
    name: GetLocationKey
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
  isExternal: false
  name: GetSourceAdaptor(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor(TDataType)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor(TDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor(TDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
    name: GetSourceAdaptor
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
    name: GetSourceAdaptor
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
  isExternal: false
  name: GetDestAdaptor(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor(TDataType)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor(TDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor(TDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
    name: GetDestAdaptor
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
    name: GetDestAdaptor
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  commentId: M:DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  isExternal: false
  name: SetSourceAdaptor(TDataType, DataAdaptor<TDataInfo>)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor(TDataType, DataAdaptor<TDataInfo>)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor(TDataType, DMLibTest.DataAdaptor<TDataInfo>)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor(TDataType, DataAdaptor(Of TDataInfo))
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor(TDataType, DMLibTest.DataAdaptor(Of TDataInfo))
  name.vb: SetSourceAdaptor(TDataType, DataAdaptor(Of TDataInfo))
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetSourceAdaptor
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetSourceAdaptor
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  commentId: M:DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  isExternal: false
  name: SetDestAdaptor(TDataType, DataAdaptor<TDataInfo>)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor(TDataType, DataAdaptor<TDataInfo>)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor(TDataType, DMLibTest.DataAdaptor<TDataInfo>)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor(TDataType, DataAdaptor(Of TDataInfo))
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor(TDataType, DMLibTest.DataAdaptor(Of TDataInfo))
  name.vb: SetDestAdaptor(TDataType, DataAdaptor(Of TDataInfo))
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetDestAdaptor
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
    name: SetDestAdaptor
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
  isExternal: false
  name: IsCloudService(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService(TDataType)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService(TDataType)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService(TDataType)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
    name: IsCloudService
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
    name: IsCloudService
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataType
    nameWithType: TDataType
    fullName: TDataType
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  isExternal: false
  name: GetRandomCredentialType()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType()
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType()
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType()
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
    name: GetRandomCredentialType
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
    name: GetRandomCredentialType
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
  isExternal: true
  name: GetRelativePath(String, String)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath(String, String)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath(System.String, System.String)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath(String, String)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath(System.String, System.String)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
    name: GetRelativePath
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
    name: GetRelativePath
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
  isExternal: true
  name: NormalizePath(String)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath(String)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath(System.String)
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath(String)
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath(System.String)
  spec.csharp:
  - uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
    name: NormalizePath
    nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath
    fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
    name: NormalizePath
    nameWithType: MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath
    fullName: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DMLibTest.DMLibTestBase.FileSizeInKB*
  commentId: Overload:DMLibTest.DMLibTestBase.FileSizeInKB
  isExternal: false
  name: FileSizeInKB
  nameWithType: DMLibTestBase.FileSizeInKB
  fullName: DMLibTest.DMLibTestBase.FileSizeInKB
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DMLibTest.DMLibTestBase.SetSourceConnectionString*
  commentId: Overload:DMLibTest.DMLibTestBase.SetSourceConnectionString
  isExternal: false
  name: SetSourceConnectionString
  nameWithType: DMLibTestBase.SetSourceConnectionString
  fullName: DMLibTest.DMLibTestBase.SetSourceConnectionString
- uid: DMLibDataType
  isExternal: true
  name: DMLibDataType
  nameWithType: DMLibDataType
  fullName: DMLibDataType
- uid: DMLibTest.DMLibTestBase.SetDestConnectionString*
  commentId: Overload:DMLibTest.DMLibTestBase.SetDestConnectionString
  isExternal: false
  name: SetDestConnectionString
  nameWithType: DMLibTestBase.SetDestConnectionString
  fullName: DMLibTest.DMLibTestBase.SetDestConnectionString
- uid: DMLibTest.DMLibTestBase.GetSourceConnectionString*
  commentId: Overload:DMLibTest.DMLibTestBase.GetSourceConnectionString
  isExternal: false
  name: GetSourceConnectionString
  nameWithType: DMLibTestBase.GetSourceConnectionString
  fullName: DMLibTest.DMLibTestBase.GetSourceConnectionString
- uid: DMLibTest.DMLibTestBase.GetDestConnectionString*
  commentId: Overload:DMLibTest.DMLibTestBase.GetDestConnectionString
  isExternal: false
  name: GetDestConnectionString
  nameWithType: DMLibTestBase.GetDestConnectionString
  fullName: DMLibTest.DMLibTestBase.GetDestConnectionString
- uid: DMLibTest.DMLibTestBase.BaseClassInitialize*
  commentId: Overload:DMLibTest.DMLibTestBase.BaseClassInitialize
  isExternal: false
  name: BaseClassInitialize
  nameWithType: DMLibTestBase.BaseClassInitialize
  fullName: DMLibTest.DMLibTestBase.BaseClassInitialize
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  commentId: T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  parent: Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: false
  name: TestContext
  nameWithType: TestContext
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
- uid: Microsoft.VisualStudio.TestTools.UnitTesting
  commentId: N:Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: false
  name: Microsoft.VisualStudio.TestTools.UnitTesting
  nameWithType: Microsoft.VisualStudio.TestTools.UnitTesting
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting
- uid: DMLibTest.DMLibTestBase.ExecuteTestCase*
  commentId: Overload:DMLibTest.DMLibTestBase.ExecuteTestCase
  isExternal: false
  name: ExecuteTestCase
  nameWithType: DMLibTestBase.ExecuteTestCase
  fullName: DMLibTest.DMLibTestBase.ExecuteTestCase
- uid: DMLibTest.DMLibDataInfo
  commentId: T:DMLibTest.DMLibDataInfo
  parent: DMLibTest
  isExternal: false
  name: DMLibDataInfo
  nameWithType: DMLibDataInfo
  fullName: DMLibTest.DMLibDataInfo
- uid: DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo}
  commentId: T:DMLibTest.TestExecutionOptions{DMLibTest.DMLibDataInfo}
  parent: DMLibTest
  definition: DMLibTest.TestExecutionOptions`1
  name: TestExecutionOptions<DMLibDataInfo>
  nameWithType: TestExecutionOptions<DMLibDataInfo>
  fullName: DMLibTest.TestExecutionOptions<DMLibTest.DMLibDataInfo>
  nameWithType.vb: TestExecutionOptions(Of DMLibDataInfo)
  fullname.vb: DMLibTest.TestExecutionOptions(Of DMLibTest.DMLibDataInfo)
  name.vb: TestExecutionOptions(Of DMLibDataInfo)
  spec.csharp:
  - uid: DMLibTest.TestExecutionOptions`1
    name: TestExecutionOptions
    nameWithType: TestExecutionOptions
    fullName: DMLibTest.TestExecutionOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.TestExecutionOptions`1
    name: TestExecutionOptions
    nameWithType: TestExecutionOptions
    fullName: DMLibTest.TestExecutionOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.TestResult{DMLibTest.DMLibDataInfo}
  commentId: T:DMLibTest.TestResult{DMLibTest.DMLibDataInfo}
  parent: DMLibTest
  definition: DMLibTest.TestResult`1
  name: TestResult<DMLibDataInfo>
  nameWithType: TestResult<DMLibDataInfo>
  fullName: DMLibTest.TestResult<DMLibTest.DMLibDataInfo>
  nameWithType.vb: TestResult(Of DMLibDataInfo)
  fullname.vb: DMLibTest.TestResult(Of DMLibTest.DMLibDataInfo)
  name.vb: TestResult(Of DMLibDataInfo)
  spec.csharp:
  - uid: DMLibTest.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: DMLibTest.TestResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: DMLibTest.TestResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.DMLibDataInfo
    name: DMLibDataInfo
    nameWithType: DMLibDataInfo
    fullName: DMLibTest.DMLibDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.TestExecutionOptions`1
  commentId: T:DMLibTest.TestExecutionOptions`1
  isExternal: false
  name: TestExecutionOptions<TDataInfo>
  nameWithType: TestExecutionOptions<TDataInfo>
  fullName: DMLibTest.TestExecutionOptions<TDataInfo>
  nameWithType.vb: TestExecutionOptions(Of TDataInfo)
  fullname.vb: DMLibTest.TestExecutionOptions(Of TDataInfo)
  name.vb: TestExecutionOptions(Of TDataInfo)
  spec.csharp:
  - uid: DMLibTest.TestExecutionOptions`1
    name: TestExecutionOptions
    nameWithType: TestExecutionOptions
    fullName: DMLibTest.TestExecutionOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.TestExecutionOptions`1
    name: TestExecutionOptions
    nameWithType: TestExecutionOptions
    fullName: DMLibTest.TestExecutionOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.TestResult`1
  commentId: T:DMLibTest.TestResult`1
  isExternal: false
  name: TestResult<TDataInfo>
  nameWithType: TestResult<TDataInfo>
  fullName: DMLibTest.TestResult<TDataInfo>
  nameWithType.vb: TestResult(Of TDataInfo)
  fullname.vb: DMLibTest.TestResult(Of TDataInfo)
  name.vb: TestResult(Of TDataInfo)
  spec.csharp:
  - uid: DMLibTest.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: DMLibTest.TestResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: DMLibTest.TestResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DMLibTestBase.RunTransferItems*
  commentId: Overload:DMLibTest.DMLibTestBase.RunTransferItems
  isExternal: false
  name: RunTransferItems
  nameWithType: DMLibTestBase.RunTransferItems
  fullName: DMLibTest.DMLibTestBase.RunTransferItems
- uid: List{DMLibTest.TransferItem}
  commentId: '!:List{DMLibTest.TransferItem}'
  definition: List`1
  name: List<TransferItem>
  nameWithType: List<TransferItem>
  fullName: List<DMLibTest.TransferItem>
  nameWithType.vb: List(Of TransferItem)
  fullname.vb: List(Of DMLibTest.TransferItem)
  name.vb: List(Of TransferItem)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DMLibTest.TransferItem
    name: TransferItem
    nameWithType: TransferItem
    fullName: DMLibTest.TransferItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DMLibTest.TransferItem
    name: TransferItem
    nameWithType: TransferItem
    fullName: DMLibTest.TransferItem
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading*
  commentId: Overload:DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading
  isExternal: false
  name: ValidateDestinationMD5ByDownloading
  nameWithType: DMLibTestBase.ValidateDestinationMD5ByDownloading
  fullName: DMLibTest.DMLibTestBase.ValidateDestinationMD5ByDownloading
- uid: DMLibTest.DMLibTestBase.GetDMLibWrapper*
  commentId: Overload:DMLibTest.DMLibTestBase.GetDMLibWrapper
  isExternal: false
  name: GetDMLibWrapper
  nameWithType: DMLibTestBase.GetDMLibWrapper
  fullName: DMLibTest.DMLibTestBase.GetDMLibWrapper
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DMLibTest.DMLibWrapper
  commentId: T:DMLibTest.DMLibWrapper
  parent: DMLibTest
  isExternal: false
  name: DMLibWrapper
  nameWithType: DMLibWrapper
  fullName: DMLibTest.DMLibWrapper
- uid: DMLibTest.DMLibTestBase.DefaultTransferOptions*
  commentId: Overload:DMLibTest.DMLibTestBase.DefaultTransferOptions
  isExternal: false
  name: DefaultTransferOptions
  nameWithType: DMLibTestBase.DefaultTransferOptions
  fullName: DMLibTest.DMLibTestBase.DefaultTransferOptions
- uid: DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions*
  commentId: Overload:DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions
  isExternal: false
  name: DefaultTransferDirectoryOptions
  nameWithType: DMLibTestBase.DefaultTransferDirectoryOptions
  fullName: DMLibTest.DMLibTestBase.DefaultTransferDirectoryOptions
- uid: DMLibTest.DMLibTestBase.GetDefaultTransferOptions*
  commentId: Overload:DMLibTest.DMLibTestBase.GetDefaultTransferOptions
  isExternal: false
  name: GetDefaultTransferOptions
  nameWithType: DMLibTestBase.GetDefaultTransferOptions
  fullName: DMLibTest.DMLibTestBase.GetDefaultTransferOptions
- uid: DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions*
  commentId: Overload:DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions
  isExternal: false
  name: GetDefaultTransferDirectoryOptions
  nameWithType: DMLibTestBase.GetDefaultTransferDirectoryOptions
  fullName: DMLibTest.DMLibTestBase.GetDefaultTransferDirectoryOptions
- uid: DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType*
  commentId: Overload:DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType
  isExternal: false
  name: MapBlobDataTypeToBlobType
  nameWithType: DMLibTestBase.MapBlobDataTypeToBlobType
  fullName: DMLibTest.DMLibTestBase.MapBlobDataTypeToBlobType
- uid: DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType*
  commentId: Overload:DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType
  isExternal: false
  name: MapBlobDataTypeToXSCLBlobType
  nameWithType: DMLibTestBase.MapBlobDataTypeToXSCLBlobType
  fullName: DMLibTest.DMLibTestBase.MapBlobDataTypeToXSCLBlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  isExternal: true
  name: WindowsAzure.Storage.Blob.BlobType
  nameWithType: WindowsAzure.Storage.Blob.BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
- uid: DMLibTest.DMLibTestBase.GenerateSourceDataInfo*
  commentId: Overload:DMLibTest.DMLibTestBase.GenerateSourceDataInfo
  isExternal: false
  name: GenerateSourceDataInfo
  nameWithType: DMLibTestBase.GenerateSourceDataInfo
  fullName: DMLibTest.DMLibTestBase.GenerateSourceDataInfo
- uid: DMLibTest.DMLibTestBase.FileNumOption
  commentId: T:DMLibTest.DMLibTestBase.FileNumOption
  parent: DMLibTest
  isExternal: false
  name: DMLibTestBase.FileNumOption
  nameWithType: DMLibTestBase.FileNumOption
  fullName: DMLibTest.DMLibTestBase.FileNumOption
- uid: DMLibTest.DMLibTestBase.IsCloudService*
  commentId: Overload:DMLibTest.DMLibTestBase.IsCloudService
  isExternal: false
  name: IsCloudService
  nameWithType: DMLibTestBase.IsCloudService
  fullName: DMLibTest.DMLibTestBase.IsCloudService
- uid: DMLibTest.DMLibTestBase.IsLocal*
  commentId: Overload:DMLibTest.DMLibTestBase.IsLocal
  isExternal: false
  name: IsLocal
  nameWithType: DMLibTestBase.IsLocal
  fullName: DMLibTest.DMLibTestBase.IsLocal
- uid: DMLibTest.DMLibTestBase.IsCloudBlob*
  commentId: Overload:DMLibTest.DMLibTestBase.IsCloudBlob
  isExternal: false
  name: IsCloudBlob
  nameWithType: DMLibTestBase.IsCloudBlob
  fullName: DMLibTest.DMLibTestBase.IsCloudBlob
