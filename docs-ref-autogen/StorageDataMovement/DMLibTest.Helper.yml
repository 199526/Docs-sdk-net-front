### YamlMime:ManagedReference
items:
- uid: DMLibTest.Helper
  commentId: T:DMLibTest.Helper
  id: Helper
  parent: DMLibTest
  children:
  - DMLibTest.Helper.AggregateFile(System.String,System.Int32)
  - DMLibTest.Helper.AppendSlash(System.String)
  - DMLibTest.Helper.CalculateFolderSizeInByte(System.String)
  - DMLibTest.Helper.CleanupFolder(System.String)
  - DMLibTest.Helper.CompareBlobAndFile(System.String,CloudBlob)
  - DMLibTest.Helper.CompareFolderWithBlob(System.String,System.String)
  - DMLibTest.Helper.CompareTwoBlobs(System.String,System.String)
  - DMLibTest.Helper.CompareTwoFiles(FileInfo,FileInfo)
  - DMLibTest.Helper.CompareTwoFiles(System.String,System.String)
  - DMLibTest.Helper.CompareTwoFolders(System.String,System.String,System.Boolean)
  - DMLibTest.Helper.CompressFile(System.String,System.Int32)
  - DMLibTest.Helper.CopyLocalDirectory(System.String,System.String,System.Boolean)
  - DMLibTest.Helper.CreateNewFolder(System.String)
  - DMLibTest.Helper.DeleteFile(System.String)
  - DMLibTest.Helper.DeleteFolder(System.String)
  - DMLibTest.Helper.DeletePattern(System.String)
  - DMLibTest.Helper.GenerateEmptyFile(System.String)
  - DMLibTest.Helper.GenerateFileInBytes(System.String,System.Int64)
  - DMLibTest.Helper.GenerateFileInGB(System.String,System.Int64)
  - DMLibTest.Helper.GenerateFileInKB(System.String,System.Int64)
  - DMLibTest.Helper.GenerateFileInMB(System.String,System.Int64)
  - DMLibTest.Helper.GenerateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)
  - DMLibTest.Helper.GenerateFlatTestFolder(System.String,System.String,System.Int32,System.Boolean)
  - DMLibTest.Helper.GenerateLargeFileinKB(System.String,System.Int64)
  - DMLibTest.Helper.GenerateRandomDelimiter
  - DMLibTest.Helper.GenerateRandomTestFile(System.String,System.Int64,System.Boolean)
  - DMLibTest.Helper.GenerateRecursiveTestFolder(System.String,System.String,System.String,System.Int32,System.Boolean)
  - DMLibTest.Helper.GenerateSparseCloudObject(List{System.Int32},List{System.Int32},Action{System.Int32},Action{System.Int32,Stream})
  - DMLibTest.Helper.GetAccountNameFromConnectString(System.String)
  - DMLibTest.Helper.GetBlobDirectoryUri(System.String,System.String,System.String)
  - DMLibTest.Helper.GetFileContentMD5(System.String)
  - DMLibTest.Helper.GetFileCount(System.String,System.Boolean)
  - DMLibTest.Helper.GetFileMD5Hash(System.String)
  - DMLibTest.Helper.GetMD5(System.Byte[])
  - DMLibTest.Helper.GetRandomData(System.Int32)
  - DMLibTest.Helper.GetXsmbDirectoryUri(System.String,System.String,System.String)
  - DMLibTest.Helper.IsConflictStorageException(Exception)
  - DMLibTest.Helper.IsNotFoundStorageException(Exception)
  - DMLibTest.Helper.ListBlobs(System.String,System.String,List{System.String}@,List{System.String}@)
  - DMLibTest.Helper.ListToGetRelativePaths(System.String)
  - DMLibTest.Helper.ParseSetting(System.String,System.Object)
  - DMLibTest.Helper.PrintAllElements``1(List{``0})
  - DMLibTest.Helper.PrintBlockBlobBlocks(CloudBlockBlob,System.Boolean)
  - DMLibTest.Helper.PrintCloudFileRanges(CloudFile,System.Boolean)
  - DMLibTest.Helper.PrintPageBlobRanges(CloudPageBlob,System.Boolean)
  - DMLibTest.Helper.RandomBlobType
  - DMLibTest.Helper.RandomBoolean
  - DMLibTest.Helper.SetConsoleCtrlHandler(DMLibTest.Helper.HandlerRoutine,System.Boolean)
  - DMLibTest.Helper.Shuffle``1(List{``0})
  - DMLibTest.Helper.StartProcess(System.String,System.String)
  - DMLibTest.Helper.StartProcess(System.String,System.String,StreamReader@,StreamReader@,StreamWriter@)
  - DMLibTest.Helper.StartProcess(System.String,System.String,StringBuilder@,StringBuilder@,StreamWriter@,Dictionary{System.String,System.String})
  - DMLibTest.Helper.TraversalFolderInDepth(System.String)
  - DMLibTest.Helper.verifyFilesExistinBlobDirectory(System.Int32,CloudBlobDirectory,System.String,String)
  - DMLibTest.Helper.VerifyFilesExistInFileDirectory(System.Int32,CloudFileDirectory,System.String)
  - DMLibTest.Helper.WaitForTakingEffect(System.Object)
  - DMLibTest.Helper.WaitUntilFileCreated(System.String,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: Helper
  nameWithType: Helper
  fullName: DMLibTest.Helper
  type: Class
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Helper
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 33
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nthis is a static helper class\n"
  example: []
  syntax:
    content: 'public static class Helper : object'
    content.vb: >-
      Public Module Helper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DMLibTest.Helper.CopyLocalDirectory(System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.Helper.CopyLocalDirectory(System.String,System.String,System.Boolean)
  id: CopyLocalDirectory(System.String,System.String,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CopyLocalDirectory(String, String, Boolean)
  nameWithType: Helper.CopyLocalDirectory(String, String, Boolean)
  fullName: DMLibTest.Helper.CopyLocalDirectory(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CopyLocalDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 37
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void CopyLocalDirectory(string sourceDir, string destDir, bool recursive)
    content.vb: Public Shared Sub CopyLocalDirectory(sourceDir As String, destDir As String, recursive As Boolean)
    parameters:
    - id: sourceDir
      type: System.String
    - id: destDir
      type: System.String
    - id: recursive
      type: System.Boolean
  overload: DMLibTest.Helper.CopyLocalDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.ListBlobs(System.String,System.String,List{System.String}@,List{System.String}@)
  commentId: M:DMLibTest.Helper.ListBlobs(System.String,System.String,List{System.String}@,List{System.String}@)
  id: ListBlobs(System.String,System.String,List{System.String}@,List{System.String}@)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: ListBlobs(String, String, out List<String>, out List<String>)
  nameWithType: Helper.ListBlobs(String, String, out List<String>, out List<String>)
  fullName: DMLibTest.Helper.ListBlobs(System.String, System.String, out List<System.String>, out List<System.String>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ListBlobs
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 74
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nlist blobs in a container, return blob name list and content MD5 list\n"
  example: []
  syntax:
    content: public static bool ListBlobs(string connectionString, string containerName, out List<string> blobNames, out List<string> blobMD5s)
    content.vb: Public Shared Function ListBlobs(connectionString As String, containerName As String, ByRef blobNames As List(Of String), ByRef blobMD5s As List(Of String)) As Boolean
    parameters:
    - id: connectionString
      type: System.String
    - id: containerName
      type: System.String
      description: ''
    - id: blobNames
      type: List{System.String}
    - id: blobMD5s
      type: List{System.String}
    return:
      type: System.Boolean
      description: ''
  overload: DMLibTest.Helper.ListBlobs*
  nameWithType.vb: Helper.ListBlobs(String, String, ByRef List(Of String), ByRef List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.ListBlobs(System.String, System.String, ByRef List(Of System.String), ByRef List(Of System.String))
  name.vb: ListBlobs(String, String, ByRef List(Of String), ByRef List(Of String))
- uid: DMLibTest.Helper.WaitForTakingEffect(System.Object)
  commentId: M:DMLibTest.Helper.WaitForTakingEffect(System.Object)
  id: WaitForTakingEffect(System.Object)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: WaitForTakingEffect(Object)
  nameWithType: Helper.WaitForTakingEffect(Object)
  fullName: DMLibTest.Helper.WaitForTakingEffect(System.Object)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: WaitForTakingEffect
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 103
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void WaitForTakingEffect(dynamic cloudStorageClient)
    content.vb: Public Shared Sub WaitForTakingEffect(cloudStorageClient As Object)
    parameters:
    - id: cloudStorageClient
      type: System.Object
  overload: DMLibTest.Helper.WaitForTakingEffect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.RandomBoolean
  commentId: M:DMLibTest.Helper.RandomBoolean
  id: RandomBoolean
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: RandomBoolean()
  nameWithType: Helper.RandomBoolean()
  fullName: DMLibTest.Helper.RandomBoolean()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomBoolean
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 135
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool RandomBoolean()
    content.vb: Public Shared Function RandomBoolean As Boolean
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.RandomBoolean*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.RandomBlobType
  commentId: M:DMLibTest.Helper.RandomBlobType
  id: RandomBlobType
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: RandomBlobType()
  nameWithType: Helper.RandomBlobType()
  fullName: DMLibTest.Helper.RandomBlobType()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomBlobType
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 140
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string RandomBlobType()
    content.vb: Public Shared Function RandomBlobType As String
    return:
      type: System.String
  overload: DMLibTest.Helper.RandomBlobType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateFileInBytes(System.String,System.Int64)
  commentId: M:DMLibTest.Helper.GenerateFileInBytes(System.String,System.Int64)
  id: GenerateFileInBytes(System.String,System.Int64)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateFileInBytes(String, Int64)
  nameWithType: Helper.GenerateFileInBytes(String, Int64)
  fullName: DMLibTest.Helper.GenerateFileInBytes(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFileInBytes
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 157
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateFileInBytes(string filename, long sizeB)
    content.vb: Public Shared Sub GenerateFileInBytes(filename As String, sizeB As Long)
    parameters:
    - id: filename
      type: System.String
    - id: sizeB
      type: System.Int64
  overload: DMLibTest.Helper.GenerateFileInBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateFileInKB(System.String,System.Int64)
  commentId: M:DMLibTest.Helper.GenerateFileInKB(System.String,System.Int64)
  id: GenerateFileInKB(System.String,System.Int64)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateFileInKB(String, Int64)
  nameWithType: Helper.GenerateFileInKB(String, Int64)
  fullName: DMLibTest.Helper.GenerateFileInKB(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFileInKB
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 179
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateFileInKB(string filename, long sizeKB)
    content.vb: Public Shared Sub GenerateFileInKB(filename As String, sizeKB As Long)
    parameters:
    - id: filename
      type: System.String
    - id: sizeKB
      type: System.Int64
  overload: DMLibTest.Helper.GenerateFileInKB*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateFileInMB(System.String,System.Int64)
  commentId: M:DMLibTest.Helper.GenerateFileInMB(System.String,System.Int64)
  id: GenerateFileInMB(System.String,System.Int64)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateFileInMB(String, Int64)
  nameWithType: Helper.GenerateFileInMB(String, Int64)
  fullName: DMLibTest.Helper.GenerateFileInMB(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFileInMB
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 189
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateFileInMB(string filename, long sizeMB)
    content.vb: Public Shared Sub GenerateFileInMB(filename As String, sizeMB As Long)
    parameters:
    - id: filename
      type: System.String
    - id: sizeMB
      type: System.Int64
  overload: DMLibTest.Helper.GenerateFileInMB*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateFileInGB(System.String,System.Int64)
  commentId: M:DMLibTest.Helper.GenerateFileInGB(System.String,System.Int64)
  id: GenerateFileInGB(System.String,System.Int64)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateFileInGB(String, Int64)
  nameWithType: Helper.GenerateFileInGB(String, Int64)
  fullName: DMLibTest.Helper.GenerateFileInGB(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFileInGB
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 206
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateFileInGB(string filename, long sizeGB)
    content.vb: Public Shared Sub GenerateFileInGB(filename As String, sizeGB As Long)
    parameters:
    - id: filename
      type: System.String
    - id: sizeGB
      type: System.Int64
  overload: DMLibTest.Helper.GenerateFileInGB*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateEmptyFile(System.String)
  commentId: M:DMLibTest.Helper.GenerateEmptyFile(System.String)
  id: GenerateEmptyFile(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateEmptyFile(String)
  nameWithType: Helper.GenerateEmptyFile(String)
  fullName: DMLibTest.Helper.GenerateEmptyFile(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateEmptyFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 223
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateEmptyFile(string filename)
    content.vb: Public Shared Sub GenerateEmptyFile(filename As String)
    parameters:
    - id: filename
      type: System.String
  overload: DMLibTest.Helper.GenerateEmptyFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.AggregateFile(System.String,System.Int32)
  commentId: M:DMLibTest.Helper.AggregateFile(System.String,System.Int32)
  id: AggregateFile(System.String,System.Int32)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: AggregateFile(String, Int32)
  nameWithType: Helper.AggregateFile(String, Int32)
  fullName: DMLibTest.Helper.AggregateFile(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AggregateFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 236
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void AggregateFile(string filename, int times)
    content.vb: Public Shared Sub AggregateFile(filename As String, times As Integer)
    parameters:
    - id: filename
      type: System.String
    - id: times
      type: System.Int32
  overload: DMLibTest.Helper.AggregateFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompressFile(System.String,System.Int32)
  commentId: M:DMLibTest.Helper.CompressFile(System.String,System.Int32)
  id: CompressFile(System.String,System.Int32)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompressFile(String, Int32)
  nameWithType: Helper.CompressFile(String, Int32)
  fullName: DMLibTest.Helper.CompressFile(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompressFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 251
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void CompressFile(string filename, int times)
    content.vb: Public Shared Sub CompressFile(filename As String, times As Integer)
    parameters:
    - id: filename
      type: System.String
    - id: times
      type: System.Int32
  overload: DMLibTest.Helper.CompressFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateLargeFileinKB(System.String,System.Int64)
  commentId: M:DMLibTest.Helper.GenerateLargeFileinKB(System.String,System.Int64)
  id: GenerateLargeFileinKB(System.String,System.Int64)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateLargeFileinKB(String, Int64)
  nameWithType: Helper.GenerateLargeFileinKB(String, Int64)
  fullName: DMLibTest.Helper.GenerateLargeFileinKB(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateLargeFileinKB
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 270
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateLargeFileinKB(string filename, long sizeinKB)
    content.vb: Public Shared Sub GenerateLargeFileinKB(filename As String, sizeinKB As Long)
    parameters:
    - id: filename
      type: System.String
    - id: sizeinKB
      type: System.Int64
  overload: DMLibTest.Helper.GenerateLargeFileinKB*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetMD5(System.Byte[])
  commentId: M:DMLibTest.Helper.GetMD5(System.Byte[])
  id: GetMD5(System.Byte[])
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetMD5(Byte[])
  nameWithType: Helper.GetMD5(Byte[])
  fullName: DMLibTest.Helper.GetMD5(System.Byte[])
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetMD5
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 302
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static byte[] GetMD5(byte[] data)
    content.vb: Public Shared Function GetMD5(data As Byte()) As Byte()
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.Byte[]
  overload: DMLibTest.Helper.GetMD5*
  nameWithType.vb: Helper.GetMD5(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.GetMD5(System.Byte())
  name.vb: GetMD5(Byte())
- uid: DMLibTest.Helper.GenerateRandomTestFile(System.String,System.Int64,System.Boolean)
  commentId: M:DMLibTest.Helper.GenerateRandomTestFile(System.String,System.Int64,System.Boolean)
  id: GenerateRandomTestFile(System.String,System.Int64,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateRandomTestFile(String, Int64, Boolean)
  nameWithType: Helper.GenerateRandomTestFile(String, Int64, Boolean)
  fullName: DMLibTest.Helper.GenerateRandomTestFile(System.String, System.Int64, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateRandomTestFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 308
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateRandomTestFile(string filename, long sizeKB, bool createDirIfNotExist = false)
    content.vb: Public Shared Sub GenerateRandomTestFile(filename As String, sizeKB As Long, createDirIfNotExist As Boolean = False)
    parameters:
    - id: filename
      type: System.String
    - id: sizeKB
      type: System.Int64
    - id: createDirIfNotExist
      type: System.Boolean
  overload: DMLibTest.Helper.GenerateRandomTestFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.DeleteFile(System.String)
  commentId: M:DMLibTest.Helper.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  nameWithType: Helper.DeleteFile(String)
  fullName: DMLibTest.Helper.DeleteFile(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 325
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void DeleteFile(string filename)
    content.vb: Public Shared Sub DeleteFile(filename As String)
    parameters:
    - id: filename
      type: System.String
  overload: DMLibTest.Helper.DeleteFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CleanupFolder(System.String)
  commentId: M:DMLibTest.Helper.CleanupFolder(System.String)
  id: CleanupFolder(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CleanupFolder(String)
  nameWithType: Helper.CleanupFolder(String)
  fullName: DMLibTest.Helper.CleanupFolder(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupFolder
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 333
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void CleanupFolder(string foldername)
    content.vb: Public Shared Sub CleanupFolder(foldername As String)
    parameters:
    - id: foldername
      type: System.String
  overload: DMLibTest.Helper.CleanupFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.DeleteFolder(System.String)
  commentId: M:DMLibTest.Helper.DeleteFolder(System.String)
  id: DeleteFolder(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: DeleteFolder(String)
  nameWithType: Helper.DeleteFolder(String)
  fullName: DMLibTest.Helper.DeleteFolder(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteFolder
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 353
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void DeleteFolder(string foldername)
    content.vb: Public Shared Sub DeleteFolder(foldername As String)
    parameters:
    - id: foldername
      type: System.String
  overload: DMLibTest.Helper.DeleteFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.DeletePattern(System.String)
  commentId: M:DMLibTest.Helper.DeletePattern(System.String)
  id: DeletePattern(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: DeletePattern(String)
  nameWithType: Helper.DeletePattern(String)
  fullName: DMLibTest.Helper.DeletePattern(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeletePattern
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 400
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void DeletePattern(string pathPattern)
    content.vb: Public Shared Sub DeletePattern(pathPattern As String)
    parameters:
    - id: pathPattern
      type: System.String
  overload: DMLibTest.Helper.DeletePattern*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CreateNewFolder(System.String)
  commentId: M:DMLibTest.Helper.CreateNewFolder(System.String)
  id: CreateNewFolder(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CreateNewFolder(String)
  nameWithType: Helper.CreateNewFolder(String)
  fullName: DMLibTest.Helper.CreateNewFolder(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateNewFolder
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 413
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void CreateNewFolder(string foldername)
    content.vb: Public Shared Sub CreateNewFolder(foldername As String)
    parameters:
    - id: foldername
      type: System.String
  overload: DMLibTest.Helper.CreateNewFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetFileMD5Hash(System.String)
  commentId: M:DMLibTest.Helper.GetFileMD5Hash(System.String)
  id: GetFileMD5Hash(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetFileMD5Hash(String)
  nameWithType: Helper.GetFileMD5Hash(String)
  fullName: DMLibTest.Helper.GetFileMD5Hash(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetFileMD5Hash
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 428
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetFileMD5Hash(string filename)
    content.vb: Public Shared Function GetFileMD5Hash(filename As String) As String
    parameters:
    - id: filename
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.Helper.GetFileMD5Hash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetFileContentMD5(System.String)
  commentId: M:DMLibTest.Helper.GetFileContentMD5(System.String)
  id: GetFileContentMD5(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetFileContentMD5(String)
  nameWithType: Helper.GetFileContentMD5(String)
  fullName: DMLibTest.Helper.GetFileContentMD5(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetFileContentMD5
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 446
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetFileContentMD5(string filename)
    content.vb: Public Shared Function GetFileContentMD5(filename As String) As String
    parameters:
    - id: filename
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.Helper.GetFileContentMD5*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateFlatTestFolder(System.String,System.String,System.Int32,System.Boolean)
  commentId: M:DMLibTest.Helper.GenerateFlatTestFolder(System.String,System.String,System.Int32,System.Boolean)
  id: GenerateFlatTestFolder(System.String,System.String,System.Int32,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateFlatTestFolder(String, String, Int32, Boolean)
  nameWithType: Helper.GenerateFlatTestFolder(String, String, Int32, Boolean)
  fullName: DMLibTest.Helper.GenerateFlatTestFolder(System.String, System.String, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFlatTestFolder
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 457
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static List<string> GenerateFlatTestFolder(string fileNamePrefix, string parentDir, int fileSizeInKB = null, bool doNotGenerateFile = false)
    content.vb: Public Shared Function GenerateFlatTestFolder(fileNamePrefix As String, parentDir As String, fileSizeInKB As Integer = Nothing, doNotGenerateFile As Boolean = False) As List(Of String)
    parameters:
    - id: fileNamePrefix
      type: System.String
    - id: parentDir
      type: System.String
    - id: fileSizeInKB
      type: System.Int32
    - id: doNotGenerateFile
      type: System.Boolean
    return:
      type: List{System.String}
  overload: DMLibTest.Helper.GenerateFlatTestFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateRecursiveTestFolder(System.String,System.String,System.String,System.Int32,System.Boolean)
  commentId: M:DMLibTest.Helper.GenerateRecursiveTestFolder(System.String,System.String,System.String,System.Int32,System.Boolean)
  id: GenerateRecursiveTestFolder(System.String,System.String,System.String,System.Int32,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateRecursiveTestFolder(String, String, String, Int32, Boolean)
  nameWithType: Helper.GenerateRecursiveTestFolder(String, String, String, Int32, Boolean)
  fullName: DMLibTest.Helper.GenerateRecursiveTestFolder(System.String, System.String, System.String, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateRecursiveTestFolder
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 462
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static List<string> GenerateRecursiveTestFolder(string fileNamePrefix, string dirNamePrefix, string parentDir, int fileSizeInKB = null, bool doNotGenerateFile = false)
    content.vb: Public Shared Function GenerateRecursiveTestFolder(fileNamePrefix As String, dirNamePrefix As String, parentDir As String, fileSizeInKB As Integer = Nothing, doNotGenerateFile As Boolean = False) As List(Of String)
    parameters:
    - id: fileNamePrefix
      type: System.String
    - id: dirNamePrefix
      type: System.String
    - id: parentDir
      type: System.String
    - id: fileSizeInKB
      type: System.Int32
    - id: doNotGenerateFile
      type: System.Boolean
    return:
      type: List{System.String}
  overload: DMLibTest.Helper.GenerateRecursiveTestFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:DMLibTest.Helper.GenerateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: GenerateFixedTestTree(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateFixedTestTree(String, String, String, Int32, Int32, Int32, Boolean)
  nameWithType: Helper.GenerateFixedTestTree(String, String, String, Int32, Int32, Int32, Boolean)
  fullName: DMLibTest.Helper.GenerateFixedTestTree(System.String, System.String, System.String, System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFixedTestTree
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 467
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static List<string> GenerateFixedTestTree(string fileNamePrefix, string dirNamePrefix, string parentDir, int width, int depth, int fileSizeInKB = null, bool doNotGenerateFile = false)
    content.vb: Public Shared Function GenerateFixedTestTree(fileNamePrefix As String, dirNamePrefix As String, parentDir As String, width As Integer, depth As Integer, fileSizeInKB As Integer = Nothing, doNotGenerateFile As Boolean = False) As List(Of String)
    parameters:
    - id: fileNamePrefix
      type: System.String
    - id: dirNamePrefix
      type: System.String
    - id: parentDir
      type: System.String
    - id: width
      type: System.Int32
    - id: depth
      type: System.Int32
    - id: fileSizeInKB
      type: System.Int32
    - id: doNotGenerateFile
      type: System.Boolean
    return:
      type: List{System.String}
  overload: DMLibTest.Helper.GenerateFixedTestTree*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.TraversalFolderInDepth(System.String)
  commentId: M:DMLibTest.Helper.TraversalFolderInDepth(System.String)
  id: TraversalFolderInDepth(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: TraversalFolderInDepth(String)
  nameWithType: Helper.TraversalFolderInDepth(String)
  fullName: DMLibTest.Helper.TraversalFolderInDepth(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TraversalFolderInDepth
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 498
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static List<string> TraversalFolderInDepth(string folderName)
    content.vb: Public Shared Function TraversalFolderInDepth(folderName As String) As List(Of String)
    parameters:
    - id: folderName
      type: System.String
    return:
      type: List{System.String}
  overload: DMLibTest.Helper.TraversalFolderInDepth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompareBlobAndFile(System.String,CloudBlob)
  commentId: M:DMLibTest.Helper.CompareBlobAndFile(System.String,CloudBlob)
  id: CompareBlobAndFile(System.String,CloudBlob)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompareBlobAndFile(String, CloudBlob)
  nameWithType: Helper.CompareBlobAndFile(String, CloudBlob)
  fullName: DMLibTest.Helper.CompareBlobAndFile(System.String, CloudBlob)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareBlobAndFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 529
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void CompareBlobAndFile(string filename, CloudBlob blob)
    content.vb: Public Shared Sub CompareBlobAndFile(filename As String, blob As CloudBlob)
    parameters:
    - id: filename
      type: System.String
    - id: blob
      type: CloudBlob
  overload: DMLibTest.Helper.CompareBlobAndFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompareTwoFiles(System.String,System.String)
  commentId: M:DMLibTest.Helper.CompareTwoFiles(System.String,System.String)
  id: CompareTwoFiles(System.String,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompareTwoFiles(String, String)
  nameWithType: Helper.CompareTwoFiles(String, String)
  fullName: DMLibTest.Helper.CompareTwoFiles(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareTwoFiles
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 567
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareTwoFiles(string filename, string filename2)
    content.vb: Public Shared Function CompareTwoFiles(filename As String, filename2 As String) As Boolean
    parameters:
    - id: filename
      type: System.String
    - id: filename2
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.CompareTwoFiles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompareTwoFiles(FileInfo,FileInfo)
  commentId: M:DMLibTest.Helper.CompareTwoFiles(FileInfo,FileInfo)
  id: CompareTwoFiles(FileInfo,FileInfo)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompareTwoFiles(FileInfo, FileInfo)
  nameWithType: Helper.CompareTwoFiles(FileInfo, FileInfo)
  fullName: DMLibTest.Helper.CompareTwoFiles(FileInfo, FileInfo)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareTwoFiles
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 574
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareTwoFiles(FileInfo fi, FileInfo fi2)
    content.vb: Public Shared Function CompareTwoFiles(fi As FileInfo, fi2 As FileInfo) As Boolean
    parameters:
    - id: fi
      type: FileInfo
    - id: fi2
      type: FileInfo
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.CompareTwoFiles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompareTwoFolders(System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.Helper.CompareTwoFolders(System.String,System.String,System.Boolean)
  id: CompareTwoFolders(System.String,System.String,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompareTwoFolders(String, String, Boolean)
  nameWithType: Helper.CompareTwoFolders(String, String, Boolean)
  fullName: DMLibTest.Helper.CompareTwoFolders(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareTwoFolders
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 618
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareTwoFolders(string foldername, string foldername2, bool recursive = true)
    content.vb: Public Shared Function CompareTwoFolders(foldername As String, foldername2 As String, recursive As Boolean = True) As Boolean
    parameters:
    - id: foldername
      type: System.String
    - id: foldername2
      type: System.String
    - id: recursive
      type: System.Boolean
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.CompareTwoFolders*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompareFolderWithBlob(System.String,System.String)
  commentId: M:DMLibTest.Helper.CompareFolderWithBlob(System.String,System.String)
  id: CompareFolderWithBlob(System.String,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompareFolderWithBlob(String, String)
  nameWithType: Helper.CompareFolderWithBlob(String, String)
  fullName: DMLibTest.Helper.CompareFolderWithBlob(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareFolderWithBlob
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 631
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareFolderWithBlob(string foldername, string containerName)
    content.vb: Public Shared Function CompareFolderWithBlob(foldername As String, containerName As String) As Boolean
    parameters:
    - id: foldername
      type: System.String
    - id: containerName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.CompareFolderWithBlob*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CompareTwoBlobs(System.String,System.String)
  commentId: M:DMLibTest.Helper.CompareTwoBlobs(System.String,System.String)
  id: CompareTwoBlobs(System.String,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CompareTwoBlobs(String, String)
  nameWithType: Helper.CompareTwoBlobs(String, String)
  fullName: DMLibTest.Helper.CompareTwoBlobs(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareTwoBlobs
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 636
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareTwoBlobs(string containerName, string containerName2)
    content.vb: Public Shared Function CompareTwoBlobs(containerName As String, containerName2 As String) As Boolean
    parameters:
    - id: containerName
      type: System.String
    - id: containerName2
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.CompareTwoBlobs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.ListToGetRelativePaths(System.String)
  commentId: M:DMLibTest.Helper.ListToGetRelativePaths(System.String)
  id: ListToGetRelativePaths(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: ListToGetRelativePaths(String)
  nameWithType: Helper.ListToGetRelativePaths(String)
  fullName: DMLibTest.Helper.ListToGetRelativePaths(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ListToGetRelativePaths
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 641
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string[] ListToGetRelativePaths(string folderName)
    content.vb: Public Shared Function ListToGetRelativePaths(folderName As String) As String()
    parameters:
    - id: folderName
      type: System.String
    return:
      type: System.String[]
  overload: DMLibTest.Helper.ListToGetRelativePaths*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.verifyFilesExistinBlobDirectory(System.Int32,CloudBlobDirectory,System.String,String)
  commentId: M:DMLibTest.Helper.verifyFilesExistinBlobDirectory(System.Int32,CloudBlobDirectory,System.String,String)
  id: verifyFilesExistinBlobDirectory(System.Int32,CloudBlobDirectory,System.String,String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: verifyFilesExistinBlobDirectory(Int32, CloudBlobDirectory, String, String)
  nameWithType: Helper.verifyFilesExistinBlobDirectory(Int32, CloudBlobDirectory, String, String)
  fullName: DMLibTest.Helper.verifyFilesExistinBlobDirectory(System.Int32, CloudBlobDirectory, System.String, String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: verifyFilesExistinBlobDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 657
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void verifyFilesExistinBlobDirectory(int fileNumber, CloudBlobDirectory blobDirectory, string FileName, String blobType)
    content.vb: Public Shared Sub verifyFilesExistinBlobDirectory(fileNumber As Integer, blobDirectory As CloudBlobDirectory, FileName As String, blobType As String)
    parameters:
    - id: fileNumber
      type: System.Int32
    - id: blobDirectory
      type: CloudBlobDirectory
    - id: FileName
      type: System.String
    - id: blobType
      type: String
  overload: DMLibTest.Helper.verifyFilesExistinBlobDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.VerifyFilesExistInFileDirectory(System.Int32,CloudFileDirectory,System.String)
  commentId: M:DMLibTest.Helper.VerifyFilesExistInFileDirectory(System.Int32,CloudFileDirectory,System.String)
  id: VerifyFilesExistInFileDirectory(System.Int32,CloudFileDirectory,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: VerifyFilesExistInFileDirectory(Int32, CloudFileDirectory, String)
  nameWithType: Helper.VerifyFilesExistInFileDirectory(Int32, CloudFileDirectory, String)
  fullName: DMLibTest.Helper.VerifyFilesExistInFileDirectory(System.Int32, CloudFileDirectory, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: VerifyFilesExistInFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 670
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void VerifyFilesExistInFileDirectory(int fileNumber, CloudFileDirectory fileDirectory, string fileName)
    content.vb: Public Shared Sub VerifyFilesExistInFileDirectory(fileNumber As Integer, fileDirectory As CloudFileDirectory, fileName As String)
    parameters:
    - id: fileNumber
      type: System.Int32
    - id: fileDirectory
      type: CloudFileDirectory
    - id: fileName
      type: System.String
  overload: DMLibTest.Helper.VerifyFilesExistInFileDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.CalculateFolderSizeInByte(System.String)
  commentId: M:DMLibTest.Helper.CalculateFolderSizeInByte(System.String)
  id: CalculateFolderSizeInByte(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: CalculateFolderSizeInByte(String)
  nameWithType: Helper.CalculateFolderSizeInByte(String)
  fullName: DMLibTest.Helper.CalculateFolderSizeInByte(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CalculateFolderSizeInByte
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 685
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\ncalculate folder size in Byte\n"
  example: []
  syntax:
    content: public static long CalculateFolderSizeInByte(string folder)
    content.vb: Public Shared Function CalculateFolderSizeInByte(folder As String) As Long
    parameters:
    - id: folder
      type: System.String
      description: the folder path
    return:
      type: System.Int64
      description: the folder size in Byte
  overload: DMLibTest.Helper.CalculateFolderSizeInByte*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetFileCount(System.String,System.Boolean)
  commentId: M:DMLibTest.Helper.GetFileCount(System.String,System.Boolean)
  id: GetFileCount(System.String,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetFileCount(String, Boolean)
  nameWithType: Helper.GetFileCount(String, Boolean)
  fullName: DMLibTest.Helper.GetFileCount(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetFileCount
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 731
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nCount number of files in the folder\n"
  example: []
  syntax:
    content: public static int GetFileCount(string folder, bool recursive)
    content.vb: Public Shared Function GetFileCount(folder As String, recursive As Boolean) As Integer
    parameters:
    - id: folder
      type: System.String
      description: the folder path
    - id: recursive
      type: System.Boolean
      description: whether including subfolders recursively or not
    return:
      type: System.Int32
      description: number of files under the folder (and subfolders)
  overload: DMLibTest.Helper.GetFileCount*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.StartProcess(System.String,System.String)
  commentId: M:DMLibTest.Helper.StartProcess(System.String,System.String)
  id: StartProcess(System.String,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: StartProcess(String, String)
  nameWithType: Helper.StartProcess(String, String)
  fullName: DMLibTest.Helper.StartProcess(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: StartProcess
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 762
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static Process StartProcess(string cmd, string args)
    content.vb: Public Shared Function StartProcess(cmd As String, args As String) As Process
    parameters:
    - id: cmd
      type: System.String
    - id: args
      type: System.String
    return:
      type: Process
  overload: DMLibTest.Helper.StartProcess*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.WaitUntilFileCreated(System.String,System.Int32,System.Boolean)
  commentId: M:DMLibTest.Helper.WaitUntilFileCreated(System.String,System.Int32,System.Boolean)
  id: WaitUntilFileCreated(System.String,System.Int32,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: WaitUntilFileCreated(String, Int32, Boolean)
  nameWithType: Helper.WaitUntilFileCreated(String, Int32, Boolean)
  fullName: DMLibTest.Helper.WaitUntilFileCreated(System.String, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: WaitUntilFileCreated
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 772
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool WaitUntilFileCreated(string fileName, int timeoutInSeconds, bool checkContent = true)
    content.vb: Public Shared Function WaitUntilFileCreated(fileName As String, timeoutInSeconds As Integer, checkContent As Boolean = True) As Boolean
    parameters:
    - id: fileName
      type: System.String
    - id: timeoutInSeconds
      type: System.Int32
    - id: checkContent
      type: System.Boolean
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.WaitUntilFileCreated*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.SetConsoleCtrlHandler(DMLibTest.Helper.HandlerRoutine,System.Boolean)
  commentId: M:DMLibTest.Helper.SetConsoleCtrlHandler(DMLibTest.Helper.HandlerRoutine,System.Boolean)
  id: SetConsoleCtrlHandler(DMLibTest.Helper.HandlerRoutine,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: SetConsoleCtrlHandler(Helper.HandlerRoutine, Boolean)
  nameWithType: Helper.SetConsoleCtrlHandler(Helper.HandlerRoutine, Boolean)
  fullName: DMLibTest.Helper.SetConsoleCtrlHandler(DMLibTest.Helper.HandlerRoutine, System.Boolean)
  type: Method
  source:
    path: DMLibTest
    isExternal: true
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool SetConsoleCtrlHandler(Helper.HandlerRoutine Handler, bool Add)
    content.vb: Public Shared Function SetConsoleCtrlHandler(Handler As Helper.HandlerRoutine, Add As Boolean) As Boolean
    parameters:
    - id: Handler
      type: DMLibTest.Helper.HandlerRoutine
    - id: Add
      type: System.Boolean
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.SetConsoleCtrlHandler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.StartProcess(System.String,System.String,StreamReader@,StreamReader@,StreamWriter@)
  commentId: M:DMLibTest.Helper.StartProcess(System.String,System.String,StreamReader@,StreamReader@,StreamWriter@)
  id: StartProcess(System.String,System.String,StreamReader@,StreamReader@,StreamWriter@)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: StartProcess(String, String, out StreamReader, out StreamReader, out StreamWriter)
  nameWithType: Helper.StartProcess(String, String, out StreamReader, out StreamReader, out StreamWriter)
  fullName: DMLibTest.Helper.StartProcess(System.String, System.String, out StreamReader, out StreamReader, out StreamWriter)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: StartProcess
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 818
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static Process StartProcess(string cmd, string args, out StreamReader stdout, out StreamReader stderr, out StreamWriter stdin)
    content.vb: Public Shared Function StartProcess(cmd As String, args As String, ByRef stdout As StreamReader, ByRef stderr As StreamReader, ByRef stdin As StreamWriter) As Process
    parameters:
    - id: cmd
      type: System.String
    - id: args
      type: System.String
    - id: stdout
      type: StreamReader
    - id: stderr
      type: StreamReader
    - id: stdin
      type: StreamWriter
    return:
      type: Process
  overload: DMLibTest.Helper.StartProcess*
  nameWithType.vb: Helper.StartProcess(String, String, ByRef StreamReader, ByRef StreamReader, ByRef StreamWriter)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.StartProcess(System.String, System.String, ByRef StreamReader, ByRef StreamReader, ByRef StreamWriter)
  name.vb: StartProcess(String, String, ByRef StreamReader, ByRef StreamReader, ByRef StreamWriter)
- uid: DMLibTest.Helper.StartProcess(System.String,System.String,StringBuilder@,StringBuilder@,StreamWriter@,Dictionary{System.String,System.String})
  commentId: M:DMLibTest.Helper.StartProcess(System.String,System.String,StringBuilder@,StringBuilder@,StreamWriter@,Dictionary{System.String,System.String})
  id: StartProcess(System.String,System.String,StringBuilder@,StringBuilder@,StreamWriter@,Dictionary{System.String,System.String})
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: StartProcess(String, String, out StringBuilder, out StringBuilder, out StreamWriter, Dictionary<String, String>)
  nameWithType: Helper.StartProcess(String, String, out StringBuilder, out StringBuilder, out StreamWriter, Dictionary<String, String>)
  fullName: DMLibTest.Helper.StartProcess(System.String, System.String, out StringBuilder, out StringBuilder, out StreamWriter, Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: StartProcess
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 837
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static Process StartProcess(string cmd, string args, out StringBuilder stdout, out StringBuilder stderr, out StreamWriter stdin, Dictionary<string, string> faultInjectionPoints = null)
    content.vb: Public Shared Function StartProcess(cmd As String, args As String, ByRef stdout As StringBuilder, ByRef stderr As StringBuilder, ByRef stdin As StreamWriter, faultInjectionPoints As Dictionary(Of String, String) = Nothing) As Process
    parameters:
    - id: cmd
      type: System.String
    - id: args
      type: System.String
    - id: stdout
      type: StringBuilder
    - id: stderr
      type: StringBuilder
    - id: stdin
      type: StreamWriter
    - id: faultInjectionPoints
      type: Dictionary{System.String,System.String}
    return:
      type: Process
  overload: DMLibTest.Helper.StartProcess*
  nameWithType.vb: Helper.StartProcess(String, String, ByRef StringBuilder, ByRef StringBuilder, ByRef StreamWriter, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.StartProcess(System.String, System.String, ByRef StringBuilder, ByRef StringBuilder, ByRef StreamWriter, Dictionary(Of System.String, System.String))
  name.vb: StartProcess(String, String, ByRef StringBuilder, ByRef StringBuilder, ByRef StreamWriter, Dictionary(Of String, String))
- uid: DMLibTest.Helper.PrintBlockBlobBlocks(CloudBlockBlob,System.Boolean)
  commentId: M:DMLibTest.Helper.PrintBlockBlobBlocks(CloudBlockBlob,System.Boolean)
  id: PrintBlockBlobBlocks(CloudBlockBlob,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: PrintBlockBlobBlocks(CloudBlockBlob, Boolean)
  nameWithType: Helper.PrintBlockBlobBlocks(CloudBlockBlob, Boolean)
  fullName: DMLibTest.Helper.PrintBlockBlobBlocks(CloudBlockBlob, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PrintBlockBlobBlocks
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 889
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void PrintBlockBlobBlocks(CloudBlockBlob cloudBlob, bool printDetailBlock = true)
    content.vb: Public Shared Sub PrintBlockBlobBlocks(cloudBlob As CloudBlockBlob, printDetailBlock As Boolean = True)
    parameters:
    - id: cloudBlob
      type: CloudBlockBlob
    - id: printDetailBlock
      type: System.Boolean
  overload: DMLibTest.Helper.PrintBlockBlobBlocks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.PrintPageBlobRanges(CloudPageBlob,System.Boolean)
  commentId: M:DMLibTest.Helper.PrintPageBlobRanges(CloudPageBlob,System.Boolean)
  id: PrintPageBlobRanges(CloudPageBlob,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: PrintPageBlobRanges(CloudPageBlob, Boolean)
  nameWithType: Helper.PrintPageBlobRanges(CloudPageBlob, Boolean)
  fullName: DMLibTest.Helper.PrintPageBlobRanges(CloudPageBlob, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PrintPageBlobRanges
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 904
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void PrintPageBlobRanges(CloudPageBlob cloudBlob, bool printDetailPage = true)
    content.vb: Public Shared Sub PrintPageBlobRanges(cloudBlob As CloudPageBlob, printDetailPage As Boolean = True)
    parameters:
    - id: cloudBlob
      type: CloudPageBlob
    - id: printDetailPage
      type: System.Boolean
  overload: DMLibTest.Helper.PrintPageBlobRanges*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.PrintCloudFileRanges(CloudFile,System.Boolean)
  commentId: M:DMLibTest.Helper.PrintCloudFileRanges(CloudFile,System.Boolean)
  id: PrintCloudFileRanges(CloudFile,System.Boolean)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: PrintCloudFileRanges(CloudFile, Boolean)
  nameWithType: Helper.PrintCloudFileRanges(CloudFile, Boolean)
  fullName: DMLibTest.Helper.PrintCloudFileRanges(CloudFile, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PrintCloudFileRanges
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 916
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void PrintCloudFileRanges(CloudFile cloudFile, bool printDetailRange = true)
    content.vb: Public Shared Sub PrintCloudFileRanges(cloudFile As CloudFile, printDetailRange As Boolean = True)
    parameters:
    - id: cloudFile
      type: CloudFile
    - id: printDetailRange
      type: System.Boolean
  overload: DMLibTest.Helper.PrintCloudFileRanges*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateRandomDelimiter
  commentId: M:DMLibTest.Helper.GenerateRandomDelimiter
  id: GenerateRandomDelimiter
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateRandomDelimiter()
  nameWithType: Helper.GenerateRandomDelimiter()
  fullName: DMLibTest.Helper.GenerateRandomDelimiter()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateRandomDelimiter
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 935
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static char GenerateRandomDelimiter()
    content.vb: Public Shared Function GenerateRandomDelimiter As Char
    return:
      type: System.Char
  overload: DMLibTest.Helper.GenerateRandomDelimiter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetAccountNameFromConnectString(System.String)
  commentId: M:DMLibTest.Helper.GetAccountNameFromConnectString(System.String)
  id: GetAccountNameFromConnectString(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetAccountNameFromConnectString(String)
  nameWithType: Helper.GetAccountNameFromConnectString(String)
  fullName: DMLibTest.Helper.GetAccountNameFromConnectString(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetAccountNameFromConnectString
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 953
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetAccountNameFromConnectString(string connectString)
    content.vb: Public Shared Function GetAccountNameFromConnectString(connectString As String) As String
    parameters:
    - id: connectString
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.Helper.GetAccountNameFromConnectString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetBlobDirectoryUri(System.String,System.String,System.String)
  commentId: M:DMLibTest.Helper.GetBlobDirectoryUri(System.String,System.String,System.String)
  id: GetBlobDirectoryUri(System.String,System.String,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetBlobDirectoryUri(String, String, String)
  nameWithType: Helper.GetBlobDirectoryUri(String, String, String)
  fullName: DMLibTest.Helper.GetBlobDirectoryUri(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetBlobDirectoryUri
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 962
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetBlobDirectoryUri(string blobEndpoint, string containerName, string dirName)
    content.vb: Public Shared Function GetBlobDirectoryUri(blobEndpoint As String, containerName As String, dirName As String) As String
    parameters:
    - id: blobEndpoint
      type: System.String
    - id: containerName
      type: System.String
    - id: dirName
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.Helper.GetBlobDirectoryUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GetXsmbDirectoryUri(System.String,System.String,System.String)
  commentId: M:DMLibTest.Helper.GetXsmbDirectoryUri(System.String,System.String,System.String)
  id: GetXsmbDirectoryUri(System.String,System.String,System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetXsmbDirectoryUri(String, String, String)
  nameWithType: Helper.GetXsmbDirectoryUri(String, String, String)
  fullName: DMLibTest.Helper.GetXsmbDirectoryUri(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetXsmbDirectoryUri
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 969
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetXsmbDirectoryUri(string fileEndpoint, string shareName, string dirName)
    content.vb: Public Shared Function GetXsmbDirectoryUri(fileEndpoint As String, shareName As String, dirName As String) As String
    parameters:
    - id: fileEndpoint
      type: System.String
    - id: shareName
      type: System.String
    - id: dirName
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.Helper.GetXsmbDirectoryUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.AppendSlash(System.String)
  commentId: M:DMLibTest.Helper.AppendSlash(System.String)
  id: AppendSlash(System.String)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: AppendSlash(String)
  nameWithType: Helper.AppendSlash(String)
  fullName: DMLibTest.Helper.AppendSlash(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AppendSlash
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 976
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string AppendSlash(string input)
    content.vb: Public Shared Function AppendSlash(input As String) As String
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.Helper.AppendSlash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.IsNotFoundStorageException(Exception)
  commentId: M:DMLibTest.Helper.IsNotFoundStorageException(Exception)
  id: IsNotFoundStorageException(Exception)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: IsNotFoundStorageException(Exception)
  nameWithType: Helper.IsNotFoundStorageException(Exception)
  fullName: DMLibTest.Helper.IsNotFoundStorageException(Exception)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotFoundStorageException
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 988
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool IsNotFoundStorageException(Exception e)
    content.vb: Public Shared Function IsNotFoundStorageException(e As Exception) As Boolean
    parameters:
    - id: e
      type: Exception
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.IsNotFoundStorageException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.IsConflictStorageException(Exception)
  commentId: M:DMLibTest.Helper.IsConflictStorageException(Exception)
  id: IsConflictStorageException(Exception)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: IsConflictStorageException(Exception)
  nameWithType: Helper.IsConflictStorageException(Exception)
  fullName: DMLibTest.Helper.IsConflictStorageException(Exception)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsConflictStorageException
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 993
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool IsConflictStorageException(Exception e)
    content.vb: Public Shared Function IsConflictStorageException(e As Exception) As Boolean
    parameters:
    - id: e
      type: Exception
    return:
      type: System.Boolean
  overload: DMLibTest.Helper.IsConflictStorageException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.GenerateSparseCloudObject(List{System.Int32},List{System.Int32},Action{System.Int32},Action{System.Int32,Stream})
  commentId: M:DMLibTest.Helper.GenerateSparseCloudObject(List{System.Int32},List{System.Int32},Action{System.Int32},Action{System.Int32,Stream})
  id: GenerateSparseCloudObject(List{System.Int32},List{System.Int32},Action{System.Int32},Action{System.Int32,Stream})
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GenerateSparseCloudObject(List<Int32>, List<Int32>, Action<Int32>, Action<Int32, Stream>)
  nameWithType: Helper.GenerateSparseCloudObject(List<Int32>, List<Int32>, Action<Int32>, Action<Int32, Stream>)
  fullName: DMLibTest.Helper.GenerateSparseCloudObject(List<System.Int32>, List<System.Int32>, Action<System.Int32>, Action<System.Int32, Stream>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateSparseCloudObject
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1005
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateSparseCloudObject(List<int> ranges, List<int> gaps, Action<int> createObject, Action<int, Stream> writeUnit)
    content.vb: Public Shared Sub GenerateSparseCloudObject(ranges As List(Of Integer), gaps As List(Of Integer), createObject As Action(Of Integer), writeUnit As Action(Of Integer, Stream))
    parameters:
    - id: ranges
      type: List{System.Int32}
    - id: gaps
      type: List{System.Int32}
    - id: createObject
      type: Action{System.Int32}
    - id: writeUnit
      type: Action{System.Int32,Stream}
  overload: DMLibTest.Helper.GenerateSparseCloudObject*
  nameWithType.vb: Helper.GenerateSparseCloudObject(List(Of Int32), List(Of Int32), Action(Of Int32), Action(Of Int32, Stream))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.GenerateSparseCloudObject(List(Of System.Int32), List(Of System.Int32), Action(Of System.Int32), Action(Of System.Int32, Stream))
  name.vb: GenerateSparseCloudObject(List(Of Int32), List(Of Int32), Action(Of Int32), Action(Of Int32, Stream))
- uid: DMLibTest.Helper.GetRandomData(System.Int32)
  commentId: M:DMLibTest.Helper.GetRandomData(System.Int32)
  id: GetRandomData(System.Int32)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: GetRandomData(Int32)
  nameWithType: Helper.GetRandomData(Int32)
  fullName: DMLibTest.Helper.GetRandomData(System.Int32)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetRandomData
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1060
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static MemoryStream GetRandomData(int size)
    content.vb: Public Shared Function GetRandomData(size As Integer) As MemoryStream
    parameters:
    - id: size
      type: System.Int32
    return:
      type: MemoryStream
  overload: DMLibTest.Helper.GetRandomData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.Helper.Shuffle``1(List{``0})
  commentId: M:DMLibTest.Helper.Shuffle``1(List{``0})
  id: Shuffle``1(List{``0})
  isExtensionMethod: true
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: Shuffle<T>(List<T>)
  nameWithType: Helper.Shuffle<T>(List<T>)
  fullName: DMLibTest.Helper.Shuffle<T>(List<T>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Shuffle
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1068
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void Shuffle<T>(this List<T> list)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Shuffle(Of T)(list As List(Of T))
    parameters:
    - id: list
      type: List{{T}}
    typeParameters:
    - id: T
  overload: DMLibTest.Helper.Shuffle*
  nameWithType.vb: Helper.Shuffle(Of T)(List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.Shuffle(Of T)(List(Of T))
  name.vb: Shuffle(Of T)(List(Of T))
- uid: DMLibTest.Helper.PrintAllElements``1(List{``0})
  commentId: M:DMLibTest.Helper.PrintAllElements``1(List{``0})
  id: PrintAllElements``1(List{``0})
  isExtensionMethod: true
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: PrintAllElements<T>(List<T>)
  nameWithType: Helper.PrintAllElements<T>(List<T>)
  fullName: DMLibTest.Helper.PrintAllElements<T>(List<T>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PrintAllElements
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1082
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void PrintAllElements<T>(this List<T> list)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub PrintAllElements(Of T)(list As List(Of T))
    parameters:
    - id: list
      type: List{{T}}
    typeParameters:
    - id: T
  overload: DMLibTest.Helper.PrintAllElements*
  nameWithType.vb: Helper.PrintAllElements(Of T)(List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.Helper.PrintAllElements(Of T)(List(Of T))
  name.vb: PrintAllElements(Of T)(List(Of T))
- uid: DMLibTest.Helper.ParseSetting(System.String,System.Object)
  commentId: M:DMLibTest.Helper.ParseSetting(System.String,System.Object)
  id: ParseSetting(System.String,System.Object)
  parent: DMLibTest.Helper
  langs:
  - csharp
  - vb
  name: ParseSetting(String, Object)
  nameWithType: Helper.ParseSetting(String, Object)
  fullName: DMLibTest.Helper.ParseSetting(System.String, System.Object)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ParseSetting
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1093
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nreturn setting from testData.xml if exist, else return default value\n"
  example: []
  syntax:
    content: public static string ParseSetting(string settingName, object defaultValue)
    content.vb: Public Shared Function ParseSetting(settingName As String, defaultValue As Object) As String
    parameters:
    - id: settingName
      type: System.String
      description: the name of the setting
    - id: defaultValue
      type: System.Object
      description: the default Value of the setting
    return:
      type: System.String
      description: the setting value
  overload: DMLibTest.Helper.ParseSetting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.Helper.CopyLocalDirectory*
  commentId: Overload:DMLibTest.Helper.CopyLocalDirectory
  isExternal: false
  name: CopyLocalDirectory
  nameWithType: Helper.CopyLocalDirectory
  fullName: DMLibTest.Helper.CopyLocalDirectory
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DMLibTest.Helper.ListBlobs*
  commentId: Overload:DMLibTest.Helper.ListBlobs
  isExternal: false
  name: ListBlobs
  nameWithType: Helper.ListBlobs
  fullName: DMLibTest.Helper.ListBlobs
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.Helper.WaitForTakingEffect*
  commentId: Overload:DMLibTest.Helper.WaitForTakingEffect
  isExternal: false
  name: WaitForTakingEffect
  nameWithType: Helper.WaitForTakingEffect
  fullName: DMLibTest.Helper.WaitForTakingEffect
- uid: DMLibTest.Helper.RandomBoolean*
  commentId: Overload:DMLibTest.Helper.RandomBoolean
  isExternal: false
  name: RandomBoolean
  nameWithType: Helper.RandomBoolean
  fullName: DMLibTest.Helper.RandomBoolean
- uid: DMLibTest.Helper.RandomBlobType*
  commentId: Overload:DMLibTest.Helper.RandomBlobType
  isExternal: false
  name: RandomBlobType
  nameWithType: Helper.RandomBlobType
  fullName: DMLibTest.Helper.RandomBlobType
- uid: DMLibTest.Helper.GenerateFileInBytes*
  commentId: Overload:DMLibTest.Helper.GenerateFileInBytes
  isExternal: false
  name: GenerateFileInBytes
  nameWithType: Helper.GenerateFileInBytes
  fullName: DMLibTest.Helper.GenerateFileInBytes
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: DMLibTest.Helper.GenerateFileInKB*
  commentId: Overload:DMLibTest.Helper.GenerateFileInKB
  isExternal: false
  name: GenerateFileInKB
  nameWithType: Helper.GenerateFileInKB
  fullName: DMLibTest.Helper.GenerateFileInKB
- uid: DMLibTest.Helper.GenerateFileInMB*
  commentId: Overload:DMLibTest.Helper.GenerateFileInMB
  isExternal: false
  name: GenerateFileInMB
  nameWithType: Helper.GenerateFileInMB
  fullName: DMLibTest.Helper.GenerateFileInMB
- uid: DMLibTest.Helper.GenerateFileInGB*
  commentId: Overload:DMLibTest.Helper.GenerateFileInGB
  isExternal: false
  name: GenerateFileInGB
  nameWithType: Helper.GenerateFileInGB
  fullName: DMLibTest.Helper.GenerateFileInGB
- uid: DMLibTest.Helper.GenerateEmptyFile*
  commentId: Overload:DMLibTest.Helper.GenerateEmptyFile
  isExternal: false
  name: GenerateEmptyFile
  nameWithType: Helper.GenerateEmptyFile
  fullName: DMLibTest.Helper.GenerateEmptyFile
- uid: DMLibTest.Helper.AggregateFile*
  commentId: Overload:DMLibTest.Helper.AggregateFile
  isExternal: false
  name: AggregateFile
  nameWithType: Helper.AggregateFile
  fullName: DMLibTest.Helper.AggregateFile
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DMLibTest.Helper.CompressFile*
  commentId: Overload:DMLibTest.Helper.CompressFile
  isExternal: false
  name: CompressFile
  nameWithType: Helper.CompressFile
  fullName: DMLibTest.Helper.CompressFile
- uid: DMLibTest.Helper.GenerateLargeFileinKB*
  commentId: Overload:DMLibTest.Helper.GenerateLargeFileinKB
  isExternal: false
  name: GenerateLargeFileinKB
  nameWithType: Helper.GenerateLargeFileinKB
  fullName: DMLibTest.Helper.GenerateLargeFileinKB
- uid: DMLibTest.Helper.GetMD5*
  commentId: Overload:DMLibTest.Helper.GetMD5
  isExternal: false
  name: GetMD5
  nameWithType: Helper.GetMD5
  fullName: DMLibTest.Helper.GetMD5
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DMLibTest.Helper.GenerateRandomTestFile*
  commentId: Overload:DMLibTest.Helper.GenerateRandomTestFile
  isExternal: false
  name: GenerateRandomTestFile
  nameWithType: Helper.GenerateRandomTestFile
  fullName: DMLibTest.Helper.GenerateRandomTestFile
- uid: DMLibTest.Helper.DeleteFile*
  commentId: Overload:DMLibTest.Helper.DeleteFile
  isExternal: false
  name: DeleteFile
  nameWithType: Helper.DeleteFile
  fullName: DMLibTest.Helper.DeleteFile
- uid: DMLibTest.Helper.CleanupFolder*
  commentId: Overload:DMLibTest.Helper.CleanupFolder
  isExternal: false
  name: CleanupFolder
  nameWithType: Helper.CleanupFolder
  fullName: DMLibTest.Helper.CleanupFolder
- uid: DMLibTest.Helper.DeleteFolder*
  commentId: Overload:DMLibTest.Helper.DeleteFolder
  isExternal: false
  name: DeleteFolder
  nameWithType: Helper.DeleteFolder
  fullName: DMLibTest.Helper.DeleteFolder
- uid: DMLibTest.Helper.DeletePattern*
  commentId: Overload:DMLibTest.Helper.DeletePattern
  isExternal: false
  name: DeletePattern
  nameWithType: Helper.DeletePattern
  fullName: DMLibTest.Helper.DeletePattern
- uid: DMLibTest.Helper.CreateNewFolder*
  commentId: Overload:DMLibTest.Helper.CreateNewFolder
  isExternal: false
  name: CreateNewFolder
  nameWithType: Helper.CreateNewFolder
  fullName: DMLibTest.Helper.CreateNewFolder
- uid: DMLibTest.Helper.GetFileMD5Hash*
  commentId: Overload:DMLibTest.Helper.GetFileMD5Hash
  isExternal: false
  name: GetFileMD5Hash
  nameWithType: Helper.GetFileMD5Hash
  fullName: DMLibTest.Helper.GetFileMD5Hash
- uid: DMLibTest.Helper.GetFileContentMD5*
  commentId: Overload:DMLibTest.Helper.GetFileContentMD5
  isExternal: false
  name: GetFileContentMD5
  nameWithType: Helper.GetFileContentMD5
  fullName: DMLibTest.Helper.GetFileContentMD5
- uid: DMLibTest.Helper.GenerateFlatTestFolder*
  commentId: Overload:DMLibTest.Helper.GenerateFlatTestFolder
  isExternal: false
  name: GenerateFlatTestFolder
  nameWithType: Helper.GenerateFlatTestFolder
  fullName: DMLibTest.Helper.GenerateFlatTestFolder
- uid: DMLibTest.Helper.GenerateRecursiveTestFolder*
  commentId: Overload:DMLibTest.Helper.GenerateRecursiveTestFolder
  isExternal: false
  name: GenerateRecursiveTestFolder
  nameWithType: Helper.GenerateRecursiveTestFolder
  fullName: DMLibTest.Helper.GenerateRecursiveTestFolder
- uid: DMLibTest.Helper.GenerateFixedTestTree*
  commentId: Overload:DMLibTest.Helper.GenerateFixedTestTree
  isExternal: false
  name: GenerateFixedTestTree
  nameWithType: Helper.GenerateFixedTestTree
  fullName: DMLibTest.Helper.GenerateFixedTestTree
- uid: DMLibTest.Helper.TraversalFolderInDepth*
  commentId: Overload:DMLibTest.Helper.TraversalFolderInDepth
  isExternal: false
  name: TraversalFolderInDepth
  nameWithType: Helper.TraversalFolderInDepth
  fullName: DMLibTest.Helper.TraversalFolderInDepth
- uid: DMLibTest.Helper.CompareBlobAndFile*
  commentId: Overload:DMLibTest.Helper.CompareBlobAndFile
  isExternal: false
  name: CompareBlobAndFile
  nameWithType: Helper.CompareBlobAndFile
  fullName: DMLibTest.Helper.CompareBlobAndFile
- uid: CloudBlob
  isExternal: true
  name: CloudBlob
  nameWithType: CloudBlob
  fullName: CloudBlob
- uid: DMLibTest.Helper.CompareTwoFiles*
  commentId: Overload:DMLibTest.Helper.CompareTwoFiles
  isExternal: false
  name: CompareTwoFiles
  nameWithType: Helper.CompareTwoFiles
  fullName: DMLibTest.Helper.CompareTwoFiles
- uid: FileInfo
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: FileInfo
- uid: DMLibTest.Helper.CompareTwoFolders*
  commentId: Overload:DMLibTest.Helper.CompareTwoFolders
  isExternal: false
  name: CompareTwoFolders
  nameWithType: Helper.CompareTwoFolders
  fullName: DMLibTest.Helper.CompareTwoFolders
- uid: DMLibTest.Helper.CompareFolderWithBlob*
  commentId: Overload:DMLibTest.Helper.CompareFolderWithBlob
  isExternal: false
  name: CompareFolderWithBlob
  nameWithType: Helper.CompareFolderWithBlob
  fullName: DMLibTest.Helper.CompareFolderWithBlob
- uid: DMLibTest.Helper.CompareTwoBlobs*
  commentId: Overload:DMLibTest.Helper.CompareTwoBlobs
  isExternal: false
  name: CompareTwoBlobs
  nameWithType: Helper.CompareTwoBlobs
  fullName: DMLibTest.Helper.CompareTwoBlobs
- uid: DMLibTest.Helper.ListToGetRelativePaths*
  commentId: Overload:DMLibTest.Helper.ListToGetRelativePaths
  isExternal: false
  name: ListToGetRelativePaths
  nameWithType: Helper.ListToGetRelativePaths
  fullName: DMLibTest.Helper.ListToGetRelativePaths
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DMLibTest.Helper.verifyFilesExistinBlobDirectory*
  commentId: Overload:DMLibTest.Helper.verifyFilesExistinBlobDirectory
  isExternal: false
  name: verifyFilesExistinBlobDirectory
  nameWithType: Helper.verifyFilesExistinBlobDirectory
  fullName: DMLibTest.Helper.verifyFilesExistinBlobDirectory
- uid: CloudBlobDirectory
  isExternal: true
  name: CloudBlobDirectory
  nameWithType: CloudBlobDirectory
  fullName: CloudBlobDirectory
- uid: String
  commentId: '!:String'
  isExternal: true
  name: String
  nameWithType: String
  fullName: String
- uid: DMLibTest.Helper.VerifyFilesExistInFileDirectory*
  commentId: Overload:DMLibTest.Helper.VerifyFilesExistInFileDirectory
  isExternal: false
  name: VerifyFilesExistInFileDirectory
  nameWithType: Helper.VerifyFilesExistInFileDirectory
  fullName: DMLibTest.Helper.VerifyFilesExistInFileDirectory
- uid: CloudFileDirectory
  isExternal: true
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: CloudFileDirectory
- uid: DMLibTest.Helper.CalculateFolderSizeInByte*
  commentId: Overload:DMLibTest.Helper.CalculateFolderSizeInByte
  isExternal: false
  name: CalculateFolderSizeInByte
  nameWithType: Helper.CalculateFolderSizeInByte
  fullName: DMLibTest.Helper.CalculateFolderSizeInByte
- uid: DMLibTest.Helper.GetFileCount*
  commentId: Overload:DMLibTest.Helper.GetFileCount
  isExternal: false
  name: GetFileCount
  nameWithType: Helper.GetFileCount
  fullName: DMLibTest.Helper.GetFileCount
- uid: DMLibTest.Helper.StartProcess*
  commentId: Overload:DMLibTest.Helper.StartProcess
  isExternal: false
  name: StartProcess
  nameWithType: Helper.StartProcess
  fullName: DMLibTest.Helper.StartProcess
- uid: Process
  isExternal: true
  name: Process
  nameWithType: Process
  fullName: Process
- uid: DMLibTest.Helper.WaitUntilFileCreated*
  commentId: Overload:DMLibTest.Helper.WaitUntilFileCreated
  isExternal: false
  name: WaitUntilFileCreated
  nameWithType: Helper.WaitUntilFileCreated
  fullName: DMLibTest.Helper.WaitUntilFileCreated
- uid: DMLibTest.Helper.SetConsoleCtrlHandler*
  commentId: Overload:DMLibTest.Helper.SetConsoleCtrlHandler
  isExternal: true
  name: SetConsoleCtrlHandler
  nameWithType: Helper.SetConsoleCtrlHandler
  fullName: DMLibTest.Helper.SetConsoleCtrlHandler
- uid: DMLibTest.Helper.HandlerRoutine
  commentId: T:DMLibTest.Helper.HandlerRoutine
  parent: DMLibTest
  isExternal: false
  name: Helper.HandlerRoutine
  nameWithType: Helper.HandlerRoutine
  fullName: DMLibTest.Helper.HandlerRoutine
- uid: StreamReader
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: StreamReader
- uid: StreamWriter
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: StreamWriter
- uid: StringBuilder
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: StringBuilder
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullname.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullname.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.Helper.PrintBlockBlobBlocks*
  commentId: Overload:DMLibTest.Helper.PrintBlockBlobBlocks
  isExternal: false
  name: PrintBlockBlobBlocks
  nameWithType: Helper.PrintBlockBlobBlocks
  fullName: DMLibTest.Helper.PrintBlockBlobBlocks
- uid: CloudBlockBlob
  isExternal: true
  name: CloudBlockBlob
  nameWithType: CloudBlockBlob
  fullName: CloudBlockBlob
- uid: DMLibTest.Helper.PrintPageBlobRanges*
  commentId: Overload:DMLibTest.Helper.PrintPageBlobRanges
  isExternal: false
  name: PrintPageBlobRanges
  nameWithType: Helper.PrintPageBlobRanges
  fullName: DMLibTest.Helper.PrintPageBlobRanges
- uid: CloudPageBlob
  isExternal: true
  name: CloudPageBlob
  nameWithType: CloudPageBlob
  fullName: CloudPageBlob
- uid: DMLibTest.Helper.PrintCloudFileRanges*
  commentId: Overload:DMLibTest.Helper.PrintCloudFileRanges
  isExternal: false
  name: PrintCloudFileRanges
  nameWithType: Helper.PrintCloudFileRanges
  fullName: DMLibTest.Helper.PrintCloudFileRanges
- uid: CloudFile
  isExternal: true
  name: CloudFile
  nameWithType: CloudFile
  fullName: CloudFile
- uid: DMLibTest.Helper.GenerateRandomDelimiter*
  commentId: Overload:DMLibTest.Helper.GenerateRandomDelimiter
  isExternal: false
  name: GenerateRandomDelimiter
  nameWithType: Helper.GenerateRandomDelimiter
  fullName: DMLibTest.Helper.GenerateRandomDelimiter
- uid: System.Char
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: DMLibTest.Helper.GetAccountNameFromConnectString*
  commentId: Overload:DMLibTest.Helper.GetAccountNameFromConnectString
  isExternal: false
  name: GetAccountNameFromConnectString
  nameWithType: Helper.GetAccountNameFromConnectString
  fullName: DMLibTest.Helper.GetAccountNameFromConnectString
- uid: DMLibTest.Helper.GetBlobDirectoryUri*
  commentId: Overload:DMLibTest.Helper.GetBlobDirectoryUri
  isExternal: false
  name: GetBlobDirectoryUri
  nameWithType: Helper.GetBlobDirectoryUri
  fullName: DMLibTest.Helper.GetBlobDirectoryUri
- uid: DMLibTest.Helper.GetXsmbDirectoryUri*
  commentId: Overload:DMLibTest.Helper.GetXsmbDirectoryUri
  isExternal: false
  name: GetXsmbDirectoryUri
  nameWithType: Helper.GetXsmbDirectoryUri
  fullName: DMLibTest.Helper.GetXsmbDirectoryUri
- uid: DMLibTest.Helper.AppendSlash*
  commentId: Overload:DMLibTest.Helper.AppendSlash
  isExternal: false
  name: AppendSlash
  nameWithType: Helper.AppendSlash
  fullName: DMLibTest.Helper.AppendSlash
- uid: DMLibTest.Helper.IsNotFoundStorageException*
  commentId: Overload:DMLibTest.Helper.IsNotFoundStorageException
  isExternal: false
  name: IsNotFoundStorageException
  nameWithType: Helper.IsNotFoundStorageException
  fullName: DMLibTest.Helper.IsNotFoundStorageException
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: DMLibTest.Helper.IsConflictStorageException*
  commentId: Overload:DMLibTest.Helper.IsConflictStorageException
  isExternal: false
  name: IsConflictStorageException
  nameWithType: Helper.IsConflictStorageException
  fullName: DMLibTest.Helper.IsConflictStorageException
- uid: DMLibTest.Helper.GenerateSparseCloudObject*
  commentId: Overload:DMLibTest.Helper.GenerateSparseCloudObject
  isExternal: false
  name: GenerateSparseCloudObject
  nameWithType: Helper.GenerateSparseCloudObject
  fullName: DMLibTest.Helper.GenerateSparseCloudObject
- uid: List{System.Int32}
  commentId: '!:List{System.Int32}'
  definition: List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullname.vb: List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{System.Int32}
  commentId: '!:Action{System.Int32}'
  definition: Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullname.vb: Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{System.Int32,Stream}
  commentId: '!:Action{System.Int32,Stream}'
  definition: Action`2
  name: Action<Int32, Stream>
  nameWithType: Action<Int32, Stream>
  fullName: Action<System.Int32, Stream>
  nameWithType.vb: Action(Of Int32, Stream)
  fullname.vb: Action(Of System.Int32, Stream)
  name.vb: Action(Of Int32, Stream)
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  commentId: '!:Action`1'
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullname.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullname.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.Helper.GetRandomData*
  commentId: Overload:DMLibTest.Helper.GetRandomData
  isExternal: false
  name: GetRandomData
  nameWithType: Helper.GetRandomData
  fullName: DMLibTest.Helper.GetRandomData
- uid: MemoryStream
  commentId: '!:MemoryStream'
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: MemoryStream
- uid: DMLibTest.Helper.Shuffle*
  commentId: Overload:DMLibTest.Helper.Shuffle
  isExternal: false
  name: Shuffle
  nameWithType: Helper.Shuffle
  fullName: DMLibTest.Helper.Shuffle
- uid: List{{T}}
  commentId: '!:List{``0}'
  definition: List`1
  name: List<T>
  nameWithType: List<T>
  fullName: List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.Helper.PrintAllElements*
  commentId: Overload:DMLibTest.Helper.PrintAllElements
  isExternal: false
  name: PrintAllElements
  nameWithType: Helper.PrintAllElements
  fullName: DMLibTest.Helper.PrintAllElements
- uid: DMLibTest.Helper.ParseSetting*
  commentId: Overload:DMLibTest.Helper.ParseSetting
  isExternal: false
  name: ParseSetting
  nameWithType: Helper.ParseSetting
  fullName: DMLibTest.Helper.ParseSetting
