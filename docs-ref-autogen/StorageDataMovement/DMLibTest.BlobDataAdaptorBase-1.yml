### YamlMime:ManagedReference
items:
- uid: DMLibTest.BlobDataAdaptorBase`1
  commentId: T:DMLibTest.BlobDataAdaptorBase`1
  id: BlobDataAdaptorBase`1
  parent: DMLibTest
  children:
  - DMLibTest.BlobDataAdaptorBase`1.#ctor(DMLibTest.TestAccount,System.String,System.String,DMLibTest.SourceOrDest,System.String)
  - DMLibTest.BlobDataAdaptorBase`1.BlobHelper
  - DMLibTest.BlobDataAdaptorBase`1.BlobType
  - DMLibTest.BlobDataAdaptorBase`1.Cleanup
  - DMLibTest.BlobDataAdaptorBase`1.ContainerName
  - DMLibTest.BlobDataAdaptorBase`1.CreateIfNotExists
  - DMLibTest.BlobDataAdaptorBase`1.DeleteLocation
  - DMLibTest.BlobDataAdaptorBase`1.Exists
  - DMLibTest.BlobDataAdaptorBase`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  - DMLibTest.BlobDataAdaptorBase`1.GetAddress(System.String[])
  - DMLibTest.BlobDataAdaptorBase`1.GetSecondaryAddress(System.String[])
  - DMLibTest.BlobDataAdaptorBase`1.MakePublic
  - DMLibTest.BlobDataAdaptorBase`1.Reset
  - DMLibTest.BlobDataAdaptorBase`1.RevokeSAS
  - DMLibTest.BlobDataAdaptorBase`1.StorageKey
  - DMLibTest.BlobDataAdaptorBase`1.TempFolder
  - DMLibTest.BlobDataAdaptorBase`1.TestAccount
  - DMLibTest.BlobDataAdaptorBase`1.WaitForGEO
  langs:
  - csharp
  - vb
  name: BlobDataAdaptorBase<TDataInfo>
  nameWithType: BlobDataAdaptorBase<TDataInfo>
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BlobDataAdaptorBase
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 12
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public abstract class BlobDataAdaptorBase<TDataInfo> : DataAdaptor<TDataInfo> where TDataInfo : IDataInfo'
    content.vb: >-
      Public MustInherit Class BlobDataAdaptorBase(Of TDataInfo As IDataInfo)
          Inherits DataAdaptor(Of TDataInfo)
    typeParameters:
    - id: TDataInfo
  inheritance:
  - System.Object
  - DMLibTest.DataAdaptor{{TDataInfo}}
  inheritedMembers:
  - DMLibTest.DataAdaptor{{TDataInfo}}.SourceOrDest
  - DMLibTest.DataAdaptor{{TDataInfo}}.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
  - DMLibTest.DataAdaptor{{TDataInfo}}.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
  - DMLibTest.DataAdaptor{{TDataInfo}}.ValidateMD5ByDownloading(System.Object)
  - DMLibTest.DataAdaptor{{TDataInfo}}.GenerateData({TDataInfo})
  - DMLibTest.DataAdaptor{{TDataInfo}}.GetTransferDataInfo(System.String)
  - DMLibTest.DataAdaptor{{TDataInfo}}.GenerateDataImp({TDataInfo})
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo)
  name.vb: BlobDataAdaptorBase(Of TDataInfo)
- uid: DMLibTest.BlobDataAdaptorBase`1.StorageKey
  commentId: P:DMLibTest.BlobDataAdaptorBase`1.StorageKey
  id: StorageKey
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: StorageKey
  nameWithType: BlobDataAdaptorBase<TDataInfo>.StorageKey
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.StorageKey
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: StorageKey
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 18
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override string StorageKey { get; }
    content.vb: Public Overrides ReadOnly Property StorageKey As String
    parameters: []
    return:
      type: System.String
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.StorageKey
  overload: DMLibTest.BlobDataAdaptorBase`1.StorageKey*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).StorageKey
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).StorageKey
- uid: DMLibTest.BlobDataAdaptorBase`1.ContainerName
  commentId: P:DMLibTest.BlobDataAdaptorBase`1.ContainerName
  id: ContainerName
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: ContainerName
  nameWithType: BlobDataAdaptorBase<TDataInfo>.ContainerName
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.ContainerName
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ContainerName
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 26
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string ContainerName { get; set; }
    content.vb: Public Property ContainerName As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.BlobDataAdaptorBase`1.ContainerName*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).ContainerName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).ContainerName
- uid: DMLibTest.BlobDataAdaptorBase`1.BlobHelper
  commentId: P:DMLibTest.BlobDataAdaptorBase`1.BlobHelper
  id: BlobHelper
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: BlobHelper
  nameWithType: BlobDataAdaptorBase<TDataInfo>.BlobHelper
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.BlobHelper
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BlobHelper
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 39
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudBlobHelper BlobHelper { get; }
    content.vb: Public ReadOnly Property BlobHelper As CloudBlobHelper
    parameters: []
    return:
      type: DMLibTest.CloudBlobHelper
  overload: DMLibTest.BlobDataAdaptorBase`1.BlobHelper*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).BlobHelper
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).BlobHelper
- uid: DMLibTest.BlobDataAdaptorBase`1.TestAccount
  commentId: P:DMLibTest.BlobDataAdaptorBase`1.TestAccount
  id: TestAccount
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: TestAccount
  nameWithType: BlobDataAdaptorBase<TDataInfo>.TestAccount
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.TestAccount
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TestAccount
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 45
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected TestAccount TestAccount { get; }
    content.vb: Protected ReadOnly Property TestAccount As TestAccount
    parameters: []
    return:
      type: DMLibTest.TestAccount
  overload: DMLibTest.BlobDataAdaptorBase`1.TestAccount*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).TestAccount
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).TestAccount
- uid: DMLibTest.BlobDataAdaptorBase`1.TempFolder
  commentId: P:DMLibTest.BlobDataAdaptorBase`1.TempFolder
  id: TempFolder
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: TempFolder
  nameWithType: BlobDataAdaptorBase<TDataInfo>.TempFolder
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.TempFolder
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TempFolder
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 51
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected string TempFolder { get; }
    content.vb: Protected ReadOnly Property TempFolder As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.BlobDataAdaptorBase`1.TempFolder*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).TempFolder
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).TempFolder
- uid: DMLibTest.BlobDataAdaptorBase`1.BlobType
  commentId: P:DMLibTest.BlobDataAdaptorBase`1.BlobType
  id: BlobType
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: BlobType
  nameWithType: BlobDataAdaptorBase<TDataInfo>.BlobType
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.BlobType
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BlobType
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 57
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected virtual string BlobType { get; }
    content.vb: Protected Overridable ReadOnly Property BlobType As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.BlobDataAdaptorBase`1.BlobType*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).BlobType
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).BlobType
- uid: DMLibTest.BlobDataAdaptorBase`1.#ctor(DMLibTest.TestAccount,System.String,System.String,DMLibTest.SourceOrDest,System.String)
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.#ctor(DMLibTest.TestAccount,System.String,System.String,DMLibTest.SourceOrDest,System.String)
  id: '#ctor(DMLibTest.TestAccount,System.String,System.String,DMLibTest.SourceOrDest,System.String)'
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: BlobDataAdaptorBase(TestAccount, String, String, SourceOrDest, String)
  nameWithType: BlobDataAdaptorBase<TDataInfo>.BlobDataAdaptorBase(TestAccount, String, String, SourceOrDest, String)
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.BlobDataAdaptorBase(DMLibTest.TestAccount, System.String, System.String, DMLibTest.SourceOrDest, System.String)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 63
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public BlobDataAdaptorBase(TestAccount testAccount, string containerName, string blobType, SourceOrDest sourceOrDest, string delimiter = "/")
    content.vb: Public Sub New(testAccount As TestAccount, containerName As String, blobType As String, sourceOrDest As SourceOrDest, delimiter As String = "/")
    parameters:
    - id: testAccount
      type: DMLibTest.TestAccount
    - id: containerName
      type: System.String
    - id: blobType
      type: System.String
    - id: sourceOrDest
      type: DMLibTest.SourceOrDest
    - id: delimiter
      type: System.String
  overload: DMLibTest.BlobDataAdaptorBase`1.#ctor*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).BlobDataAdaptorBase(TestAccount, String, String, SourceOrDest, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).BlobDataAdaptorBase(DMLibTest.TestAccount, System.String, System.String, DMLibTest.SourceOrDest, System.String)
- uid: DMLibTest.BlobDataAdaptorBase`1.GetAddress(System.String[])
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.GetAddress(System.String[])
  id: GetAddress(System.String[])
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: GetAddress(String[])
  nameWithType: BlobDataAdaptorBase<TDataInfo>.GetAddress(String[])
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.GetAddress(System.String[])
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetAddress
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 80
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override string GetAddress(params string[] list)
    content.vb: Public Overrides Function GetAddress(ParamArray list As String()) As String
    parameters:
    - id: list
      type: System.String[]
    return:
      type: System.String
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.GetAddress(System.String[])
  overload: DMLibTest.BlobDataAdaptorBase`1.GetAddress*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).GetAddress(String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).GetAddress(System.String())
  name.vb: GetAddress(String())
- uid: DMLibTest.BlobDataAdaptorBase`1.GetSecondaryAddress(System.String[])
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.GetSecondaryAddress(System.String[])
  id: GetSecondaryAddress(System.String[])
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: GetSecondaryAddress(String[])
  nameWithType: BlobDataAdaptorBase<TDataInfo>.GetSecondaryAddress(String[])
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.GetSecondaryAddress(System.String[])
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetSecondaryAddress
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 85
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override string GetSecondaryAddress(params string[] list)
    content.vb: Public Overrides Function GetSecondaryAddress(ParamArray list As String()) As String
    parameters:
    - id: list
      type: System.String[]
    return:
      type: System.String
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.GetSecondaryAddress(System.String[])
  overload: DMLibTest.BlobDataAdaptorBase`1.GetSecondaryAddress*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).GetSecondaryAddress(String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).GetSecondaryAddress(System.String())
  name.vb: GetSecondaryAddress(String())
- uid: DMLibTest.BlobDataAdaptorBase`1.CreateIfNotExists
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.CreateIfNotExists
  id: CreateIfNotExists
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: CreateIfNotExists()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.CreateIfNotExists()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.CreateIfNotExists()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateIfNotExists
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 90
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void CreateIfNotExists()
    content.vb: Public Overrides Sub CreateIfNotExists
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.CreateIfNotExists
  overload: DMLibTest.BlobDataAdaptorBase`1.CreateIfNotExists*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).CreateIfNotExists()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).CreateIfNotExists()
- uid: DMLibTest.BlobDataAdaptorBase`1.Exists
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.Exists
  id: Exists
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.Exists()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.Exists()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Exists
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 95
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override bool Exists()
    content.vb: Public Overrides Function Exists As Boolean
    return:
      type: System.Boolean
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.Exists
  overload: DMLibTest.BlobDataAdaptorBase`1.Exists*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).Exists()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).Exists()
- uid: DMLibTest.BlobDataAdaptorBase`1.WaitForGEO
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.WaitForGEO
  id: WaitForGEO
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: WaitForGEO()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.WaitForGEO()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.WaitForGEO()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: WaitForGEO
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 117
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void WaitForGEO()
    content.vb: Public Overrides Sub WaitForGEO
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.WaitForGEO
  overload: DMLibTest.BlobDataAdaptorBase`1.WaitForGEO*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).WaitForGEO()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).WaitForGEO()
- uid: DMLibTest.BlobDataAdaptorBase`1.Cleanup
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.Cleanup
  id: Cleanup
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: Cleanup()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.Cleanup()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.Cleanup()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Cleanup
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 123
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void Cleanup()
    content.vb: Public Overrides Sub Cleanup
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.Cleanup
  overload: DMLibTest.BlobDataAdaptorBase`1.Cleanup*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).Cleanup()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).Cleanup()
- uid: DMLibTest.BlobDataAdaptorBase`1.DeleteLocation
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.DeleteLocation
  id: DeleteLocation
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: DeleteLocation()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.DeleteLocation()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.DeleteLocation()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteLocation
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 128
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void DeleteLocation()
    content.vb: Public Overrides Sub DeleteLocation
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.DeleteLocation
  overload: DMLibTest.BlobDataAdaptorBase`1.DeleteLocation*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).DeleteLocation()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).DeleteLocation()
- uid: DMLibTest.BlobDataAdaptorBase`1.Reset
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.Reset
  id: Reset
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.Reset()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.Reset()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Reset
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 133
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.Reset
  overload: DMLibTest.BlobDataAdaptorBase`1.Reset*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).Reset()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).Reset()
- uid: DMLibTest.BlobDataAdaptorBase`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  id: GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: GenerateSAS(SharedAccessPermissions, Int32, String)
  nameWithType: BlobDataAdaptorBase<TDataInfo>.GenerateSAS(SharedAccessPermissions, Int32, String)
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.GenerateSAS(DMLibTest.SharedAccessPermissions, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateSAS
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 143
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override string GenerateSAS(SharedAccessPermissions sap, int validatePeriod, string policySignedIdentifier = null)
    content.vb: Public Overrides Function GenerateSAS(sap As SharedAccessPermissions, validatePeriod As Integer, policySignedIdentifier As String = Nothing) As String
    parameters:
    - id: sap
      type: DMLibTest.SharedAccessPermissions
    - id: validatePeriod
      type: System.Int32
    - id: policySignedIdentifier
      type: System.String
    return:
      type: System.String
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  overload: DMLibTest.BlobDataAdaptorBase`1.GenerateSAS*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).GenerateSAS(SharedAccessPermissions, Int32, String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).GenerateSAS(DMLibTest.SharedAccessPermissions, System.Int32, System.String)
- uid: DMLibTest.BlobDataAdaptorBase`1.RevokeSAS
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.RevokeSAS
  id: RevokeSAS
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: RevokeSAS()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.RevokeSAS()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.RevokeSAS()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RevokeSAS
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 161
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void RevokeSAS()
    content.vb: Public Overrides Sub RevokeSAS
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.RevokeSAS
  overload: DMLibTest.BlobDataAdaptorBase`1.RevokeSAS*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).RevokeSAS()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).RevokeSAS()
- uid: DMLibTest.BlobDataAdaptorBase`1.MakePublic
  commentId: M:DMLibTest.BlobDataAdaptorBase`1.MakePublic
  id: MakePublic
  parent: DMLibTest.BlobDataAdaptorBase`1
  langs:
  - csharp
  - vb
  name: MakePublic()
  nameWithType: BlobDataAdaptorBase<TDataInfo>.MakePublic()
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.MakePublic()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/BlobDataAdaptorBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MakePublic
    path: src/storage-data-movement/test/DMLibTest/Framework/BlobDataAdaptorBase.cs
    startLine: 166
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public override void MakePublic()
    content.vb: Public Overrides Sub MakePublic
  overridden: DMLibTest.DataAdaptor{{TDataInfo}}.MakePublic
  overload: DMLibTest.BlobDataAdaptorBase`1.MakePublic*
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).MakePublic()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).MakePublic()
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.DataAdaptor{{TDataInfo}}
  commentId: T:DMLibTest.DataAdaptor{`0}
  parent: DMLibTest
  definition: DMLibTest.DataAdaptor`1
  name: DataAdaptor<TDataInfo>
  nameWithType: DataAdaptor<TDataInfo>
  fullName: DMLibTest.DataAdaptor<TDataInfo>
  nameWithType.vb: DataAdaptor(Of TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo)
  name.vb: DataAdaptor(Of TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.SourceOrDest
  commentId: P:DMLibTest.DataAdaptor{`0}.SourceOrDest
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.SourceOrDest
  name: SourceOrDest
  nameWithType: DataAdaptor<TDataInfo>.SourceOrDest
  fullName: DMLibTest.DataAdaptor<TDataInfo>.SourceOrDest
  nameWithType.vb: DataAdaptor(Of TDataInfo).SourceOrDest
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).SourceOrDest
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
  commentId: M:DMLibTest.DataAdaptor{`0}.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
  name: GetTransferObject(String, FileNode, StorageCredentials)
  nameWithType: DataAdaptor<TDataInfo>.GetTransferObject(String, FileNode, StorageCredentials)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject(System.String, DMLibTest.FileNode, StorageCredentials)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetTransferObject(String, FileNode, StorageCredentials)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject(System.String, DMLibTest.FileNode, StorageCredentials)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor<TDataInfo>.GetTransferObject
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.FileNode
    name: FileNode
    nameWithType: FileNode
    fullName: DMLibTest.FileNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor(Of TDataInfo).GetTransferObject
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.FileNode
    name: FileNode
    nameWithType: FileNode
    fullName: DMLibTest.FileNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
  commentId: M:DMLibTest.DataAdaptor{`0}.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
  name: GetTransferObject(String, DirNode, StorageCredentials)
  nameWithType: DataAdaptor<TDataInfo>.GetTransferObject(String, DirNode, StorageCredentials)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject(System.String, DMLibTest.DirNode, StorageCredentials)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetTransferObject(String, DirNode, StorageCredentials)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject(System.String, DMLibTest.DirNode, StorageCredentials)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor<TDataInfo>.GetTransferObject
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DirNode
    name: DirNode
    nameWithType: DirNode
    fullName: DMLibTest.DirNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor(Of TDataInfo).GetTransferObject
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DirNode
    name: DirNode
    nameWithType: DirNode
    fullName: DMLibTest.DirNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.ValidateMD5ByDownloading(System.Object)
  commentId: M:DMLibTest.DataAdaptor{`0}.ValidateMD5ByDownloading(System.Object)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
  name: ValidateMD5ByDownloading(Object)
  nameWithType: DataAdaptor<TDataInfo>.ValidateMD5ByDownloading(Object)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.ValidateMD5ByDownloading(System.Object)
  nameWithType.vb: DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading(Object)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading(System.Object)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
    name: ValidateMD5ByDownloading
    nameWithType: DataAdaptor<TDataInfo>.ValidateMD5ByDownloading
    fullName: DMLibTest.DataAdaptor<TDataInfo>.ValidateMD5ByDownloading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
    name: ValidateMD5ByDownloading
    nameWithType: DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GenerateData({TDataInfo})
  commentId: M:DMLibTest.DataAdaptor{`0}.GenerateData(`0)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GenerateData(`0)
  name: GenerateData(TDataInfo)
  nameWithType: DataAdaptor<TDataInfo>.GenerateData(TDataInfo)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateData(TDataInfo)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GenerateData(TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GenerateData(TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GenerateData(`0)
    name: GenerateData
    nameWithType: DataAdaptor<TDataInfo>.GenerateData
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GenerateData(`0)
    name: GenerateData
    nameWithType: DataAdaptor(Of TDataInfo).GenerateData
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GetTransferDataInfo(System.String)
  commentId: M:DMLibTest.DataAdaptor{`0}.GetTransferDataInfo(System.String)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
  name: GetTransferDataInfo(String)
  nameWithType: DataAdaptor<TDataInfo>.GetTransferDataInfo(String)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferDataInfo(System.String)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetTransferDataInfo(String)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferDataInfo(System.String)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
    name: GetTransferDataInfo
    nameWithType: DataAdaptor<TDataInfo>.GetTransferDataInfo
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferDataInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
    name: GetTransferDataInfo
    nameWithType: DataAdaptor(Of TDataInfo).GetTransferDataInfo
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferDataInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GenerateDataImp({TDataInfo})
  commentId: M:DMLibTest.DataAdaptor{`0}.GenerateDataImp(`0)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
  name: GenerateDataImp(TDataInfo)
  nameWithType: DataAdaptor<TDataInfo>.GenerateDataImp(TDataInfo)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateDataImp(TDataInfo)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GenerateDataImp(TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GenerateDataImp(TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
    name: GenerateDataImp
    nameWithType: DataAdaptor<TDataInfo>.GenerateDataImp
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateDataImp
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
    name: GenerateDataImp
    nameWithType: DataAdaptor(Of TDataInfo).GenerateDataImp
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GenerateDataImp
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1
  commentId: T:DMLibTest.DataAdaptor`1
  isExternal: false
  name: DataAdaptor<TDataInfo>
  nameWithType: DataAdaptor<TDataInfo>
  fullName: DMLibTest.DataAdaptor<TDataInfo>
  nameWithType.vb: DataAdaptor(Of TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo)
  name.vb: DataAdaptor(Of TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1.SourceOrDest
  commentId: P:DMLibTest.DataAdaptor`1.SourceOrDest
  isExternal: false
  name: SourceOrDest
  nameWithType: DataAdaptor<TDataInfo>.SourceOrDest
  fullName: DMLibTest.DataAdaptor<TDataInfo>.SourceOrDest
  nameWithType.vb: DataAdaptor(Of TDataInfo).SourceOrDest
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).SourceOrDest
- uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
  commentId: M:DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
  isExternal: true
  name: GetTransferObject(String, FileNode, StorageCredentials)
  nameWithType: DataAdaptor<TDataInfo>.GetTransferObject(String, FileNode, StorageCredentials)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject(System.String, DMLibTest.FileNode, StorageCredentials)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetTransferObject(String, FileNode, StorageCredentials)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject(System.String, DMLibTest.FileNode, StorageCredentials)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor<TDataInfo>.GetTransferObject
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.FileNode
    name: FileNode
    nameWithType: FileNode
    fullName: DMLibTest.FileNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.FileNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor(Of TDataInfo).GetTransferObject
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.FileNode
    name: FileNode
    nameWithType: FileNode
    fullName: DMLibTest.FileNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
  commentId: M:DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
  isExternal: true
  name: GetTransferObject(String, DirNode, StorageCredentials)
  nameWithType: DataAdaptor<TDataInfo>.GetTransferObject(String, DirNode, StorageCredentials)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject(System.String, DMLibTest.DirNode, StorageCredentials)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetTransferObject(String, DirNode, StorageCredentials)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject(System.String, DMLibTest.DirNode, StorageCredentials)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor<TDataInfo>.GetTransferObject
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DirNode
    name: DirNode
    nameWithType: DirNode
    fullName: DMLibTest.DirNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetTransferObject(System.String,DMLibTest.DirNode,StorageCredentials)
    name: GetTransferObject
    nameWithType: DataAdaptor(Of TDataInfo).GetTransferObject
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DMLibTest.DirNode
    name: DirNode
    nameWithType: DirNode
    fullName: DMLibTest.DirNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StorageCredentials
    name: StorageCredentials
    nameWithType: StorageCredentials
    fullName: StorageCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
  commentId: M:DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
  isExternal: true
  name: ValidateMD5ByDownloading(Object)
  nameWithType: DataAdaptor<TDataInfo>.ValidateMD5ByDownloading(Object)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.ValidateMD5ByDownloading(System.Object)
  nameWithType.vb: DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading(Object)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading(System.Object)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
    name: ValidateMD5ByDownloading
    nameWithType: DataAdaptor<TDataInfo>.ValidateMD5ByDownloading
    fullName: DMLibTest.DataAdaptor<TDataInfo>.ValidateMD5ByDownloading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.ValidateMD5ByDownloading(System.Object)
    name: ValidateMD5ByDownloading
    nameWithType: DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).ValidateMD5ByDownloading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1.GenerateData(`0)
  commentId: M:DMLibTest.DataAdaptor`1.GenerateData(`0)
  isExternal: false
  name: GenerateData(TDataInfo)
  nameWithType: DataAdaptor<TDataInfo>.GenerateData(TDataInfo)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateData(TDataInfo)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GenerateData(TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GenerateData(TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GenerateData(`0)
    name: GenerateData
    nameWithType: DataAdaptor<TDataInfo>.GenerateData
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GenerateData(`0)
    name: GenerateData
    nameWithType: DataAdaptor(Of TDataInfo).GenerateData
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
  commentId: M:DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
  isExternal: true
  name: GetTransferDataInfo(String)
  nameWithType: DataAdaptor<TDataInfo>.GetTransferDataInfo(String)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferDataInfo(System.String)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetTransferDataInfo(String)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferDataInfo(System.String)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
    name: GetTransferDataInfo
    nameWithType: DataAdaptor<TDataInfo>.GetTransferDataInfo
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetTransferDataInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetTransferDataInfo(System.String)
    name: GetTransferDataInfo
    nameWithType: DataAdaptor(Of TDataInfo).GetTransferDataInfo
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetTransferDataInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
  commentId: M:DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
  isExternal: false
  name: GenerateDataImp(TDataInfo)
  nameWithType: DataAdaptor<TDataInfo>.GenerateDataImp(TDataInfo)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateDataImp(TDataInfo)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GenerateDataImp(TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GenerateDataImp(TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
    name: GenerateDataImp
    nameWithType: DataAdaptor<TDataInfo>.GenerateDataImp
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateDataImp
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GenerateDataImp(`0)
    name: GenerateDataImp
    nameWithType: DataAdaptor(Of TDataInfo).GenerateDataImp
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GenerateDataImp
  - name: (
    nameWithType: (
    fullName: (
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.StorageKey
  commentId: P:DMLibTest.DataAdaptor{`0}.StorageKey
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.StorageKey
  name: StorageKey
  nameWithType: DataAdaptor<TDataInfo>.StorageKey
  fullName: DMLibTest.DataAdaptor<TDataInfo>.StorageKey
  nameWithType.vb: DataAdaptor(Of TDataInfo).StorageKey
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).StorageKey
- uid: DMLibTest.BlobDataAdaptorBase`1.StorageKey*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.StorageKey
  isExternal: false
  name: StorageKey
  nameWithType: BlobDataAdaptorBase<TDataInfo>.StorageKey
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.StorageKey
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).StorageKey
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).StorageKey
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DMLibTest.DataAdaptor`1.StorageKey
  commentId: P:DMLibTest.DataAdaptor`1.StorageKey
  isExternal: false
  name: StorageKey
  nameWithType: DataAdaptor<TDataInfo>.StorageKey
  fullName: DMLibTest.DataAdaptor<TDataInfo>.StorageKey
  nameWithType.vb: DataAdaptor(Of TDataInfo).StorageKey
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).StorageKey
- uid: DMLibTest.BlobDataAdaptorBase`1.ContainerName*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.ContainerName
  isExternal: false
  name: ContainerName
  nameWithType: BlobDataAdaptorBase<TDataInfo>.ContainerName
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.ContainerName
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).ContainerName
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).ContainerName
- uid: DMLibTest.BlobDataAdaptorBase`1.BlobHelper*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.BlobHelper
  isExternal: false
  name: BlobHelper
  nameWithType: BlobDataAdaptorBase<TDataInfo>.BlobHelper
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.BlobHelper
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).BlobHelper
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).BlobHelper
- uid: DMLibTest.CloudBlobHelper
  commentId: T:DMLibTest.CloudBlobHelper
  parent: DMLibTest
  isExternal: false
  name: CloudBlobHelper
  nameWithType: CloudBlobHelper
  fullName: DMLibTest.CloudBlobHelper
- uid: DMLibTest.BlobDataAdaptorBase`1.TestAccount*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.TestAccount
  isExternal: false
  name: TestAccount
  nameWithType: BlobDataAdaptorBase<TDataInfo>.TestAccount
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.TestAccount
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).TestAccount
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).TestAccount
- uid: DMLibTest.TestAccount
  commentId: T:DMLibTest.TestAccount
  parent: DMLibTest
  isExternal: false
  name: TestAccount
  nameWithType: TestAccount
  fullName: DMLibTest.TestAccount
- uid: DMLibTest.BlobDataAdaptorBase`1.TempFolder*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.TempFolder
  isExternal: false
  name: TempFolder
  nameWithType: BlobDataAdaptorBase<TDataInfo>.TempFolder
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.TempFolder
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).TempFolder
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).TempFolder
- uid: DMLibTest.BlobDataAdaptorBase`1.BlobType*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.BlobType
  isExternal: false
  name: BlobType
  nameWithType: BlobDataAdaptorBase<TDataInfo>.BlobType
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.BlobType
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).BlobType
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).BlobType
- uid: DMLibTest.BlobDataAdaptorBase`1.#ctor*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.#ctor
  isExternal: false
  name: BlobDataAdaptorBase
  nameWithType: BlobDataAdaptorBase<TDataInfo>.BlobDataAdaptorBase
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.BlobDataAdaptorBase
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).BlobDataAdaptorBase
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).BlobDataAdaptorBase
- uid: DMLibTest.SourceOrDest
  commentId: T:DMLibTest.SourceOrDest
  parent: DMLibTest
  isExternal: false
  name: SourceOrDest
  nameWithType: SourceOrDest
  fullName: DMLibTest.SourceOrDest
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GetAddress(System.String[])
  commentId: M:DMLibTest.DataAdaptor{`0}.GetAddress(System.String[])
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GetAddress(System.String[])
  name: GetAddress(String[])
  nameWithType: DataAdaptor<TDataInfo>.GetAddress(String[])
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetAddress(System.String[])
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetAddress(String())
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetAddress(System.String())
  name.vb: GetAddress(String())
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetAddress(System.String[])
    name: GetAddress
    nameWithType: DataAdaptor<TDataInfo>.GetAddress
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetAddress(System.String[])
    name: GetAddress
    nameWithType: DataAdaptor(Of TDataInfo).GetAddress
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.GetAddress*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.GetAddress
  isExternal: false
  name: GetAddress
  nameWithType: BlobDataAdaptorBase<TDataInfo>.GetAddress
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.GetAddress
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).GetAddress
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).GetAddress
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DMLibTest.DataAdaptor`1.GetAddress(System.String[])
  commentId: M:DMLibTest.DataAdaptor`1.GetAddress(System.String[])
  isExternal: true
  name: GetAddress(String[])
  nameWithType: DataAdaptor<TDataInfo>.GetAddress(String[])
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetAddress(System.String[])
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetAddress(String())
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetAddress(System.String())
  name.vb: GetAddress(String())
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetAddress(System.String[])
    name: GetAddress
    nameWithType: DataAdaptor<TDataInfo>.GetAddress
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetAddress(System.String[])
    name: GetAddress
    nameWithType: DataAdaptor(Of TDataInfo).GetAddress
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GetSecondaryAddress(System.String[])
  commentId: M:DMLibTest.DataAdaptor{`0}.GetSecondaryAddress(System.String[])
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
  name: GetSecondaryAddress(String[])
  nameWithType: DataAdaptor<TDataInfo>.GetSecondaryAddress(String[])
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetSecondaryAddress(System.String[])
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetSecondaryAddress(String())
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetSecondaryAddress(System.String())
  name.vb: GetSecondaryAddress(String())
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
    name: GetSecondaryAddress
    nameWithType: DataAdaptor<TDataInfo>.GetSecondaryAddress
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetSecondaryAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
    name: GetSecondaryAddress
    nameWithType: DataAdaptor(Of TDataInfo).GetSecondaryAddress
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetSecondaryAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.GetSecondaryAddress*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.GetSecondaryAddress
  isExternal: false
  name: GetSecondaryAddress
  nameWithType: BlobDataAdaptorBase<TDataInfo>.GetSecondaryAddress
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.GetSecondaryAddress
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).GetSecondaryAddress
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).GetSecondaryAddress
- uid: DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
  commentId: M:DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
  isExternal: true
  name: GetSecondaryAddress(String[])
  nameWithType: DataAdaptor<TDataInfo>.GetSecondaryAddress(String[])
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GetSecondaryAddress(System.String[])
  nameWithType.vb: DataAdaptor(Of TDataInfo).GetSecondaryAddress(String())
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GetSecondaryAddress(System.String())
  name.vb: GetSecondaryAddress(String())
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
    name: GetSecondaryAddress
    nameWithType: DataAdaptor<TDataInfo>.GetSecondaryAddress
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GetSecondaryAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GetSecondaryAddress(System.String[])
    name: GetSecondaryAddress
    nameWithType: DataAdaptor(Of TDataInfo).GetSecondaryAddress
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GetSecondaryAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.CreateIfNotExists
  commentId: M:DMLibTest.DataAdaptor{`0}.CreateIfNotExists
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.CreateIfNotExists
  name: CreateIfNotExists()
  nameWithType: DataAdaptor<TDataInfo>.CreateIfNotExists()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.CreateIfNotExists()
  nameWithType.vb: DataAdaptor(Of TDataInfo).CreateIfNotExists()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).CreateIfNotExists()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.CreateIfNotExists
    name: CreateIfNotExists
    nameWithType: DataAdaptor<TDataInfo>.CreateIfNotExists
    fullName: DMLibTest.DataAdaptor<TDataInfo>.CreateIfNotExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.CreateIfNotExists
    name: CreateIfNotExists
    nameWithType: DataAdaptor(Of TDataInfo).CreateIfNotExists
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).CreateIfNotExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.CreateIfNotExists*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.CreateIfNotExists
  isExternal: false
  name: CreateIfNotExists
  nameWithType: BlobDataAdaptorBase<TDataInfo>.CreateIfNotExists
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.CreateIfNotExists
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).CreateIfNotExists
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).CreateIfNotExists
- uid: DMLibTest.DataAdaptor`1.CreateIfNotExists
  commentId: M:DMLibTest.DataAdaptor`1.CreateIfNotExists
  isExternal: false
  name: CreateIfNotExists()
  nameWithType: DataAdaptor<TDataInfo>.CreateIfNotExists()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.CreateIfNotExists()
  nameWithType.vb: DataAdaptor(Of TDataInfo).CreateIfNotExists()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).CreateIfNotExists()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.CreateIfNotExists
    name: CreateIfNotExists
    nameWithType: DataAdaptor<TDataInfo>.CreateIfNotExists
    fullName: DMLibTest.DataAdaptor<TDataInfo>.CreateIfNotExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.CreateIfNotExists
    name: CreateIfNotExists
    nameWithType: DataAdaptor(Of TDataInfo).CreateIfNotExists
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).CreateIfNotExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.Exists
  commentId: M:DMLibTest.DataAdaptor{`0}.Exists
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.Exists
  name: Exists()
  nameWithType: DataAdaptor<TDataInfo>.Exists()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.Exists()
  nameWithType.vb: DataAdaptor(Of TDataInfo).Exists()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).Exists()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.Exists
    name: Exists
    nameWithType: DataAdaptor<TDataInfo>.Exists
    fullName: DMLibTest.DataAdaptor<TDataInfo>.Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.Exists
    name: Exists
    nameWithType: DataAdaptor(Of TDataInfo).Exists
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.Exists*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.Exists
  isExternal: false
  name: Exists
  nameWithType: BlobDataAdaptorBase<TDataInfo>.Exists
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.Exists
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).Exists
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).Exists
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DMLibTest.DataAdaptor`1.Exists
  commentId: M:DMLibTest.DataAdaptor`1.Exists
  isExternal: false
  name: Exists()
  nameWithType: DataAdaptor<TDataInfo>.Exists()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.Exists()
  nameWithType.vb: DataAdaptor(Of TDataInfo).Exists()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).Exists()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.Exists
    name: Exists
    nameWithType: DataAdaptor<TDataInfo>.Exists
    fullName: DMLibTest.DataAdaptor<TDataInfo>.Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.Exists
    name: Exists
    nameWithType: DataAdaptor(Of TDataInfo).Exists
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).Exists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.WaitForGEO
  commentId: M:DMLibTest.DataAdaptor{`0}.WaitForGEO
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.WaitForGEO
  name: WaitForGEO()
  nameWithType: DataAdaptor<TDataInfo>.WaitForGEO()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.WaitForGEO()
  nameWithType.vb: DataAdaptor(Of TDataInfo).WaitForGEO()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).WaitForGEO()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.WaitForGEO
    name: WaitForGEO
    nameWithType: DataAdaptor<TDataInfo>.WaitForGEO
    fullName: DMLibTest.DataAdaptor<TDataInfo>.WaitForGEO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.WaitForGEO
    name: WaitForGEO
    nameWithType: DataAdaptor(Of TDataInfo).WaitForGEO
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).WaitForGEO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.WaitForGEO*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.WaitForGEO
  isExternal: false
  name: WaitForGEO
  nameWithType: BlobDataAdaptorBase<TDataInfo>.WaitForGEO
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.WaitForGEO
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).WaitForGEO
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).WaitForGEO
- uid: DMLibTest.DataAdaptor`1.WaitForGEO
  commentId: M:DMLibTest.DataAdaptor`1.WaitForGEO
  isExternal: false
  name: WaitForGEO()
  nameWithType: DataAdaptor<TDataInfo>.WaitForGEO()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.WaitForGEO()
  nameWithType.vb: DataAdaptor(Of TDataInfo).WaitForGEO()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).WaitForGEO()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.WaitForGEO
    name: WaitForGEO
    nameWithType: DataAdaptor<TDataInfo>.WaitForGEO
    fullName: DMLibTest.DataAdaptor<TDataInfo>.WaitForGEO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.WaitForGEO
    name: WaitForGEO
    nameWithType: DataAdaptor(Of TDataInfo).WaitForGEO
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).WaitForGEO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.Cleanup
  commentId: M:DMLibTest.DataAdaptor{`0}.Cleanup
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.Cleanup
  name: Cleanup()
  nameWithType: DataAdaptor<TDataInfo>.Cleanup()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.Cleanup()
  nameWithType.vb: DataAdaptor(Of TDataInfo).Cleanup()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).Cleanup()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.Cleanup
    name: Cleanup
    nameWithType: DataAdaptor<TDataInfo>.Cleanup
    fullName: DMLibTest.DataAdaptor<TDataInfo>.Cleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.Cleanup
    name: Cleanup
    nameWithType: DataAdaptor(Of TDataInfo).Cleanup
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).Cleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.Cleanup*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.Cleanup
  isExternal: false
  name: Cleanup
  nameWithType: BlobDataAdaptorBase<TDataInfo>.Cleanup
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.Cleanup
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).Cleanup
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).Cleanup
- uid: DMLibTest.DataAdaptor`1.Cleanup
  commentId: M:DMLibTest.DataAdaptor`1.Cleanup
  isExternal: false
  name: Cleanup()
  nameWithType: DataAdaptor<TDataInfo>.Cleanup()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.Cleanup()
  nameWithType.vb: DataAdaptor(Of TDataInfo).Cleanup()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).Cleanup()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.Cleanup
    name: Cleanup
    nameWithType: DataAdaptor<TDataInfo>.Cleanup
    fullName: DMLibTest.DataAdaptor<TDataInfo>.Cleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.Cleanup
    name: Cleanup
    nameWithType: DataAdaptor(Of TDataInfo).Cleanup
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).Cleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.DeleteLocation
  commentId: M:DMLibTest.DataAdaptor{`0}.DeleteLocation
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.DeleteLocation
  name: DeleteLocation()
  nameWithType: DataAdaptor<TDataInfo>.DeleteLocation()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.DeleteLocation()
  nameWithType.vb: DataAdaptor(Of TDataInfo).DeleteLocation()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).DeleteLocation()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.DeleteLocation
    name: DeleteLocation
    nameWithType: DataAdaptor<TDataInfo>.DeleteLocation
    fullName: DMLibTest.DataAdaptor<TDataInfo>.DeleteLocation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.DeleteLocation
    name: DeleteLocation
    nameWithType: DataAdaptor(Of TDataInfo).DeleteLocation
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).DeleteLocation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.DeleteLocation*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.DeleteLocation
  isExternal: false
  name: DeleteLocation
  nameWithType: BlobDataAdaptorBase<TDataInfo>.DeleteLocation
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.DeleteLocation
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).DeleteLocation
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).DeleteLocation
- uid: DMLibTest.DataAdaptor`1.DeleteLocation
  commentId: M:DMLibTest.DataAdaptor`1.DeleteLocation
  isExternal: false
  name: DeleteLocation()
  nameWithType: DataAdaptor<TDataInfo>.DeleteLocation()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.DeleteLocation()
  nameWithType.vb: DataAdaptor(Of TDataInfo).DeleteLocation()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).DeleteLocation()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.DeleteLocation
    name: DeleteLocation
    nameWithType: DataAdaptor<TDataInfo>.DeleteLocation
    fullName: DMLibTest.DataAdaptor<TDataInfo>.DeleteLocation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.DeleteLocation
    name: DeleteLocation
    nameWithType: DataAdaptor(Of TDataInfo).DeleteLocation
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).DeleteLocation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.Reset
  commentId: M:DMLibTest.DataAdaptor{`0}.Reset
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.Reset
  name: Reset()
  nameWithType: DataAdaptor<TDataInfo>.Reset()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.Reset()
  nameWithType.vb: DataAdaptor(Of TDataInfo).Reset()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).Reset()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.Reset
    name: Reset
    nameWithType: DataAdaptor<TDataInfo>.Reset
    fullName: DMLibTest.DataAdaptor<TDataInfo>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.Reset
    name: Reset
    nameWithType: DataAdaptor(Of TDataInfo).Reset
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.Reset*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.Reset
  isExternal: false
  name: Reset
  nameWithType: BlobDataAdaptorBase<TDataInfo>.Reset
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.Reset
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).Reset
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).Reset
- uid: DMLibTest.DataAdaptor`1.Reset
  commentId: M:DMLibTest.DataAdaptor`1.Reset
  isExternal: false
  name: Reset()
  nameWithType: DataAdaptor<TDataInfo>.Reset()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.Reset()
  nameWithType.vb: DataAdaptor(Of TDataInfo).Reset()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).Reset()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.Reset
    name: Reset
    nameWithType: DataAdaptor<TDataInfo>.Reset
    fullName: DMLibTest.DataAdaptor<TDataInfo>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.Reset
    name: Reset
    nameWithType: DataAdaptor(Of TDataInfo).Reset
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  commentId: M:DMLibTest.DataAdaptor{`0}.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  name: GenerateSAS(SharedAccessPermissions, Int32, String)
  nameWithType: DataAdaptor<TDataInfo>.GenerateSAS(SharedAccessPermissions, Int32, String)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateSAS(DMLibTest.SharedAccessPermissions, System.Int32, System.String)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GenerateSAS(SharedAccessPermissions, Int32, String)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GenerateSAS(DMLibTest.SharedAccessPermissions, System.Int32, System.String)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
    name: GenerateSAS
    nameWithType: DataAdaptor<TDataInfo>.GenerateSAS
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateSAS
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibTest.SharedAccessPermissions
    name: SharedAccessPermissions
    nameWithType: SharedAccessPermissions
    fullName: DMLibTest.SharedAccessPermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
    name: GenerateSAS
    nameWithType: DataAdaptor(Of TDataInfo).GenerateSAS
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GenerateSAS
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibTest.SharedAccessPermissions
    name: SharedAccessPermissions
    nameWithType: SharedAccessPermissions
    fullName: DMLibTest.SharedAccessPermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.GenerateSAS*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.GenerateSAS
  isExternal: false
  name: GenerateSAS
  nameWithType: BlobDataAdaptorBase<TDataInfo>.GenerateSAS
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.GenerateSAS
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).GenerateSAS
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).GenerateSAS
- uid: DMLibTest.SharedAccessPermissions
  commentId: T:DMLibTest.SharedAccessPermissions
  parent: DMLibTest
  isExternal: false
  name: SharedAccessPermissions
  nameWithType: SharedAccessPermissions
  fullName: DMLibTest.SharedAccessPermissions
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  commentId: M:DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
  isExternal: true
  name: GenerateSAS(SharedAccessPermissions, Int32, String)
  nameWithType: DataAdaptor<TDataInfo>.GenerateSAS(SharedAccessPermissions, Int32, String)
  fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateSAS(DMLibTest.SharedAccessPermissions, System.Int32, System.String)
  nameWithType.vb: DataAdaptor(Of TDataInfo).GenerateSAS(SharedAccessPermissions, Int32, String)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).GenerateSAS(DMLibTest.SharedAccessPermissions, System.Int32, System.String)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
    name: GenerateSAS
    nameWithType: DataAdaptor<TDataInfo>.GenerateSAS
    fullName: DMLibTest.DataAdaptor<TDataInfo>.GenerateSAS
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibTest.SharedAccessPermissions
    name: SharedAccessPermissions
    nameWithType: SharedAccessPermissions
    fullName: DMLibTest.SharedAccessPermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.GenerateSAS(DMLibTest.SharedAccessPermissions,System.Int32,System.String)
    name: GenerateSAS
    nameWithType: DataAdaptor(Of TDataInfo).GenerateSAS
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).GenerateSAS
  - name: (
    nameWithType: (
    fullName: (
  - uid: DMLibTest.SharedAccessPermissions
    name: SharedAccessPermissions
    nameWithType: SharedAccessPermissions
    fullName: DMLibTest.SharedAccessPermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.RevokeSAS
  commentId: M:DMLibTest.DataAdaptor{`0}.RevokeSAS
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.RevokeSAS
  name: RevokeSAS()
  nameWithType: DataAdaptor<TDataInfo>.RevokeSAS()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.RevokeSAS()
  nameWithType.vb: DataAdaptor(Of TDataInfo).RevokeSAS()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).RevokeSAS()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.RevokeSAS
    name: RevokeSAS
    nameWithType: DataAdaptor<TDataInfo>.RevokeSAS
    fullName: DMLibTest.DataAdaptor<TDataInfo>.RevokeSAS
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.RevokeSAS
    name: RevokeSAS
    nameWithType: DataAdaptor(Of TDataInfo).RevokeSAS
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).RevokeSAS
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.RevokeSAS*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.RevokeSAS
  isExternal: false
  name: RevokeSAS
  nameWithType: BlobDataAdaptorBase<TDataInfo>.RevokeSAS
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.RevokeSAS
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).RevokeSAS
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).RevokeSAS
- uid: DMLibTest.DataAdaptor`1.RevokeSAS
  commentId: M:DMLibTest.DataAdaptor`1.RevokeSAS
  isExternal: false
  name: RevokeSAS()
  nameWithType: DataAdaptor<TDataInfo>.RevokeSAS()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.RevokeSAS()
  nameWithType.vb: DataAdaptor(Of TDataInfo).RevokeSAS()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).RevokeSAS()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.RevokeSAS
    name: RevokeSAS
    nameWithType: DataAdaptor<TDataInfo>.RevokeSAS
    fullName: DMLibTest.DataAdaptor<TDataInfo>.RevokeSAS
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.RevokeSAS
    name: RevokeSAS
    nameWithType: DataAdaptor(Of TDataInfo).RevokeSAS
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).RevokeSAS
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor{{TDataInfo}}.MakePublic
  commentId: M:DMLibTest.DataAdaptor{`0}.MakePublic
  parent: DMLibTest.DataAdaptor{{TDataInfo}}
  definition: DMLibTest.DataAdaptor`1.MakePublic
  name: MakePublic()
  nameWithType: DataAdaptor<TDataInfo>.MakePublic()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.MakePublic()
  nameWithType.vb: DataAdaptor(Of TDataInfo).MakePublic()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).MakePublic()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.MakePublic
    name: MakePublic
    nameWithType: DataAdaptor<TDataInfo>.MakePublic
    fullName: DMLibTest.DataAdaptor<TDataInfo>.MakePublic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.MakePublic
    name: MakePublic
    nameWithType: DataAdaptor(Of TDataInfo).MakePublic
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).MakePublic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.BlobDataAdaptorBase`1.MakePublic*
  commentId: Overload:DMLibTest.BlobDataAdaptorBase`1.MakePublic
  isExternal: false
  name: MakePublic
  nameWithType: BlobDataAdaptorBase<TDataInfo>.MakePublic
  fullName: DMLibTest.BlobDataAdaptorBase<TDataInfo>.MakePublic
  nameWithType.vb: BlobDataAdaptorBase(Of TDataInfo).MakePublic
  fullname.vb: DMLibTest.BlobDataAdaptorBase(Of TDataInfo).MakePublic
- uid: DMLibTest.DataAdaptor`1.MakePublic
  commentId: M:DMLibTest.DataAdaptor`1.MakePublic
  isExternal: false
  name: MakePublic()
  nameWithType: DataAdaptor<TDataInfo>.MakePublic()
  fullName: DMLibTest.DataAdaptor<TDataInfo>.MakePublic()
  nameWithType.vb: DataAdaptor(Of TDataInfo).MakePublic()
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo).MakePublic()
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1.MakePublic
    name: MakePublic
    nameWithType: DataAdaptor<TDataInfo>.MakePublic
    fullName: DMLibTest.DataAdaptor<TDataInfo>.MakePublic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1.MakePublic
    name: MakePublic
    nameWithType: DataAdaptor(Of TDataInfo).MakePublic
    fullName: DMLibTest.DataAdaptor(Of TDataInfo).MakePublic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
