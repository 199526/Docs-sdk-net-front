### YamlMime:ManagedReference
items:
- uid: DMLibTest.FileNode
  commentId: T:DMLibTest.FileNode
  id: FileNode
  parent: DMLibTest
  children:
  - DMLibTest.FileNode.#ctor(System.String)
  - DMLibTest.FileNode.AbsolutePath
  - DMLibTest.FileNode.BlockSize
  - DMLibTest.FileNode.CacheControl
  - DMLibTest.FileNode.Clone(System.String)
  - DMLibTest.FileNode.CompareTo(DMLibTest.FileNode)
  - DMLibTest.FileNode.ContentDisposition
  - DMLibTest.FileNode.ContentEncoding
  - DMLibTest.FileNode.ContentLanguage
  - DMLibTest.FileNode.ContentType
  - DMLibTest.FileNode.FileAttr
  - DMLibTest.FileNode.LastModifiedTime
  - DMLibTest.FileNode.MD5
  - DMLibTest.FileNode.Metadata
  - DMLibTest.FileNode.SizeInByte
  - DMLibTest.FileNode.SnapshotsCount
  langs:
  - csharp
  - vb
  name: FileNode
  nameWithType: FileNode
  fullName: DMLibTest.FileNode
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileNode
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 95
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public class FileNode : DataInfoNode, IComparable<FileNode>'
    content.vb: >-
      Public Class FileNode
          Inherits DataInfoNode
          Implements IComparable(Of FileNode)
  inheritance:
  - System.Object
  - DMLibTest.DataInfoNode
  inheritedMembers:
  - DMLibTest.DataInfoNode.Name
  - DMLibTest.DataInfoNode.Parent
  - DMLibTest.DataInfoNode.PathComponents
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.FileNode.#ctor(System.String)
  commentId: M:DMLibTest.FileNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: FileNode(String)
  nameWithType: FileNode.FileNode(String)
  fullName: DMLibTest.FileNode.FileNode(System.String)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 97
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public FileNode(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  overload: DMLibTest.FileNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.SnapshotsCount
  commentId: P:DMLibTest.FileNode.SnapshotsCount
  id: SnapshotsCount
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: SnapshotsCount
  nameWithType: FileNode.SnapshotsCount
  fullName: DMLibTest.FileNode.SnapshotsCount
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SnapshotsCount
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 102
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public int SnapshotsCount { get; set; }
    content.vb: Public Property SnapshotsCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: DMLibTest.FileNode.SnapshotsCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.MD5
  commentId: P:DMLibTest.FileNode.MD5
  id: MD5
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: MD5
  nameWithType: FileNode.MD5
  fullName: DMLibTest.FileNode.MD5
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MD5
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 108
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string MD5 { get; set; }
    content.vb: Public Property MD5 As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.MD5*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.CacheControl
  commentId: P:DMLibTest.FileNode.CacheControl
  id: CacheControl
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: CacheControl
  nameWithType: FileNode.CacheControl
  fullName: DMLibTest.FileNode.CacheControl
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CacheControl
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 114
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string CacheControl { get; set; }
    content.vb: Public Property CacheControl As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.CacheControl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.ContentDisposition
  commentId: P:DMLibTest.FileNode.ContentDisposition
  id: ContentDisposition
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: ContentDisposition
  nameWithType: FileNode.ContentDisposition
  fullName: DMLibTest.FileNode.ContentDisposition
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ContentDisposition
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 120
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string ContentDisposition { get; set; }
    content.vb: Public Property ContentDisposition As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.ContentDisposition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.ContentEncoding
  commentId: P:DMLibTest.FileNode.ContentEncoding
  id: ContentEncoding
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: FileNode.ContentEncoding
  fullName: DMLibTest.FileNode.ContentEncoding
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ContentEncoding
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 126
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string ContentEncoding { get; set; }
    content.vb: Public Property ContentEncoding As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.ContentEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.ContentLanguage
  commentId: P:DMLibTest.FileNode.ContentLanguage
  id: ContentLanguage
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: ContentLanguage
  nameWithType: FileNode.ContentLanguage
  fullName: DMLibTest.FileNode.ContentLanguage
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ContentLanguage
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 132
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string ContentLanguage { get; set; }
    content.vb: Public Property ContentLanguage As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.ContentLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.Metadata
  commentId: P:DMLibTest.FileNode.Metadata
  id: Metadata
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: FileNode.Metadata
  fullName: DMLibTest.FileNode.Metadata
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Metadata
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 138
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public IDictionary<string, string> Metadata { get; set; }
    content.vb: Public Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
  overload: DMLibTest.FileNode.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.ContentType
  commentId: P:DMLibTest.FileNode.ContentType
  id: ContentType
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: FileNode.ContentType
  fullName: DMLibTest.FileNode.ContentType
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ContentType
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 144
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string ContentType { get; set; }
    content.vb: Public Property ContentType As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.ContentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.LastModifiedTime
  commentId: P:DMLibTest.FileNode.LastModifiedTime
  id: LastModifiedTime
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: LastModifiedTime
  nameWithType: FileNode.LastModifiedTime
  fullName: DMLibTest.FileNode.LastModifiedTime
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: LastModifiedTime
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 150
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public DateTime? LastModifiedTime { get; set; }
    content.vb: Public Property LastModifiedTime As DateTime?
    parameters: []
    return:
      type: System.Nullable{DateTime}
  overload: DMLibTest.FileNode.LastModifiedTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.SizeInByte
  commentId: P:DMLibTest.FileNode.SizeInByte
  id: SizeInByte
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: SizeInByte
  nameWithType: FileNode.SizeInByte
  fullName: DMLibTest.FileNode.SizeInByte
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SizeInByte
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 156
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public long SizeInByte { get; set; }
    content.vb: Public Property SizeInByte As Long
    parameters: []
    return:
      type: System.Int64
  overload: DMLibTest.FileNode.SizeInByte*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.BlockSize
  commentId: P:DMLibTest.FileNode.BlockSize
  id: BlockSize
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: BlockSize
  nameWithType: FileNode.BlockSize
  fullName: DMLibTest.FileNode.BlockSize
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BlockSize
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 165
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nFor block blob to specify the block size. Optional.\n"
  example: []
  syntax:
    content: public int ? BlockSize { get; set; }
    content.vb: Public Property BlockSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: DMLibTest.FileNode.BlockSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.FileAttr
  commentId: P:DMLibTest.FileNode.FileAttr
  id: FileAttr
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: FileAttr
  nameWithType: FileNode.FileAttr
  fullName: DMLibTest.FileNode.FileAttr
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileAttr
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 167
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public FileAttributes? FileAttr { get; set; }
    content.vb: Public Property FileAttr As FileAttributes?
    parameters: []
    return:
      type: System.Nullable{FileAttributes}
  overload: DMLibTest.FileNode.FileAttr*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.AbsolutePath
  commentId: P:DMLibTest.FileNode.AbsolutePath
  id: AbsolutePath
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: AbsolutePath
  nameWithType: FileNode.AbsolutePath
  fullName: DMLibTest.FileNode.AbsolutePath
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AbsolutePath
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 173
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public string AbsolutePath { get; set; }
    content.vb: Public Property AbsolutePath As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.FileNode.AbsolutePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.CompareTo(DMLibTest.FileNode)
  commentId: M:DMLibTest.FileNode.CompareTo(DMLibTest.FileNode)
  id: CompareTo(DMLibTest.FileNode)
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: CompareTo(FileNode)
  nameWithType: FileNode.CompareTo(FileNode)
  fullName: DMLibTest.FileNode.CompareTo(DMLibTest.FileNode)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareTo
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 179
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public int CompareTo(FileNode other)
    content.vb: Public Function CompareTo(other As FileNode) As Integer
    parameters:
    - id: other
      type: DMLibTest.FileNode
    return:
      type: System.Int32
  overload: DMLibTest.FileNode.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.FileNode.Clone(System.String)
  commentId: M:DMLibTest.FileNode.Clone(System.String)
  id: Clone(System.String)
  parent: DMLibTest.FileNode
  langs:
  - csharp
  - vb
  name: Clone(String)
  nameWithType: FileNode.Clone(String)
  fullName: DMLibTest.FileNode.Clone(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/DMLibDataInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Clone
    path: src/storage-data-movement/test/DMLibTest/Framework/DMLibDataInfo.cs
    startLine: 184
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public FileNode Clone(string name = null)
    content.vb: Public Function Clone(name As String = Nothing) As FileNode
    parameters:
    - id: name
      type: System.String
    return:
      type: DMLibTest.FileNode
  overload: DMLibTest.FileNode.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.DataInfoNode
  commentId: T:DMLibTest.DataInfoNode
  parent: DMLibTest
  isExternal: false
  name: DataInfoNode
  nameWithType: DataInfoNode
  fullName: DMLibTest.DataInfoNode
- uid: DMLibTest.DataInfoNode.Name
  commentId: P:DMLibTest.DataInfoNode.Name
  parent: DMLibTest.DataInfoNode
  isExternal: false
  name: Name
  nameWithType: DataInfoNode.Name
  fullName: DMLibTest.DataInfoNode.Name
- uid: DMLibTest.DataInfoNode.Parent
  commentId: P:DMLibTest.DataInfoNode.Parent
  parent: DMLibTest.DataInfoNode
  isExternal: false
  name: Parent
  nameWithType: DataInfoNode.Parent
  fullName: DMLibTest.DataInfoNode.Parent
- uid: DMLibTest.DataInfoNode.PathComponents
  commentId: P:DMLibTest.DataInfoNode.PathComponents
  parent: DMLibTest.DataInfoNode
  isExternal: false
  name: PathComponents
  nameWithType: DataInfoNode.PathComponents
  fullName: DMLibTest.DataInfoNode.PathComponents
- uid: DMLibTest.FileNode.#ctor*
  commentId: Overload:DMLibTest.FileNode.#ctor
  isExternal: false
  name: FileNode
  nameWithType: FileNode.FileNode
  fullName: DMLibTest.FileNode.FileNode
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DMLibTest.FileNode.SnapshotsCount*
  commentId: Overload:DMLibTest.FileNode.SnapshotsCount
  isExternal: false
  name: SnapshotsCount
  nameWithType: FileNode.SnapshotsCount
  fullName: DMLibTest.FileNode.SnapshotsCount
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DMLibTest.FileNode.MD5*
  commentId: Overload:DMLibTest.FileNode.MD5
  isExternal: false
  name: MD5
  nameWithType: FileNode.MD5
  fullName: DMLibTest.FileNode.MD5
- uid: DMLibTest.FileNode.CacheControl*
  commentId: Overload:DMLibTest.FileNode.CacheControl
  isExternal: false
  name: CacheControl
  nameWithType: FileNode.CacheControl
  fullName: DMLibTest.FileNode.CacheControl
- uid: DMLibTest.FileNode.ContentDisposition*
  commentId: Overload:DMLibTest.FileNode.ContentDisposition
  isExternal: false
  name: ContentDisposition
  nameWithType: FileNode.ContentDisposition
  fullName: DMLibTest.FileNode.ContentDisposition
- uid: DMLibTest.FileNode.ContentEncoding*
  commentId: Overload:DMLibTest.FileNode.ContentEncoding
  isExternal: false
  name: ContentEncoding
  nameWithType: FileNode.ContentEncoding
  fullName: DMLibTest.FileNode.ContentEncoding
- uid: DMLibTest.FileNode.ContentLanguage*
  commentId: Overload:DMLibTest.FileNode.ContentLanguage
  isExternal: false
  name: ContentLanguage
  nameWithType: FileNode.ContentLanguage
  fullName: DMLibTest.FileNode.ContentLanguage
- uid: DMLibTest.FileNode.Metadata*
  commentId: Overload:DMLibTest.FileNode.Metadata
  isExternal: false
  name: Metadata
  nameWithType: FileNode.Metadata
  fullName: DMLibTest.FileNode.Metadata
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.FileNode.ContentType*
  commentId: Overload:DMLibTest.FileNode.ContentType
  isExternal: false
  name: ContentType
  nameWithType: FileNode.ContentType
  fullName: DMLibTest.FileNode.ContentType
- uid: DMLibTest.FileNode.LastModifiedTime*
  commentId: Overload:DMLibTest.FileNode.LastModifiedTime
  isExternal: false
  name: LastModifiedTime
  nameWithType: FileNode.LastModifiedTime
  fullName: DMLibTest.FileNode.LastModifiedTime
- uid: System.Nullable{DateTime}
  commentId: '!:System.Nullable{DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.FileNode.SizeInByte*
  commentId: Overload:DMLibTest.FileNode.SizeInByte
  isExternal: false
  name: SizeInByte
  nameWithType: FileNode.SizeInByte
  fullName: DMLibTest.FileNode.SizeInByte
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: DMLibTest.FileNode.BlockSize*
  commentId: Overload:DMLibTest.FileNode.BlockSize
  isExternal: false
  name: BlockSize
  nameWithType: FileNode.BlockSize
  fullName: DMLibTest.FileNode.BlockSize
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.FileNode.FileAttr*
  commentId: Overload:DMLibTest.FileNode.FileAttr
  isExternal: false
  name: FileAttr
  nameWithType: FileNode.FileAttr
  fullName: DMLibTest.FileNode.FileAttr
- uid: System.Nullable{FileAttributes}
  commentId: '!:System.Nullable{FileAttributes}'
  definition: System.Nullable`1
  name: Nullable<FileAttributes>
  nameWithType: Nullable<FileAttributes>
  fullName: System.Nullable<FileAttributes>
  nameWithType.vb: Nullable(Of FileAttributes)
  fullname.vb: System.Nullable(Of FileAttributes)
  name.vb: Nullable(Of FileAttributes)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FileAttributes
    name: FileAttributes
    nameWithType: FileAttributes
    fullName: FileAttributes
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FileAttributes
    name: FileAttributes
    nameWithType: FileAttributes
    fullName: FileAttributes
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.FileNode.AbsolutePath*
  commentId: Overload:DMLibTest.FileNode.AbsolutePath
  isExternal: false
  name: AbsolutePath
  nameWithType: FileNode.AbsolutePath
  fullName: DMLibTest.FileNode.AbsolutePath
- uid: DMLibTest.FileNode.CompareTo*
  commentId: Overload:DMLibTest.FileNode.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: FileNode.CompareTo
  fullName: DMLibTest.FileNode.CompareTo
- uid: DMLibTest.FileNode
  commentId: T:DMLibTest.FileNode
  parent: DMLibTest
  isExternal: false
  name: FileNode
  nameWithType: FileNode
  fullName: DMLibTest.FileNode
- uid: DMLibTest.FileNode.Clone*
  commentId: Overload:DMLibTest.FileNode.Clone
  isExternal: false
  name: Clone
  nameWithType: FileNode.Clone
  fullName: DMLibTest.FileNode.Clone
