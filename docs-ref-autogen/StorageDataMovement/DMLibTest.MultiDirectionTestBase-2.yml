### YamlMime:ManagedReference
items:
- uid: DMLibTest.MultiDirectionTestBase`2
  commentId: T:DMLibTest.MultiDirectionTestBase`2
  id: MultiDirectionTestBase`2
  parent: DMLibTest
  children:
  - DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  - DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  - DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  - DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  - DMLibTest.MultiDirectionTestBase`2.CleanupData
  - DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
  - DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  - DMLibTest.MultiDirectionTestBase`2.CleanupSource
  - DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  - DMLibTest.MultiDirectionTestBase`2.DestFolder
  - DMLibTest.MultiDirectionTestBase`2.DestRoot
  - DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
  - DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
  - DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  - DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
  - DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
  - DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
  - DMLibTest.MultiDirectionTestBase`2.NetworkShare
  - DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
  - DMLibTest.MultiDirectionTestBase`2.random
  - DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  - DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  - DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  - DMLibTest.MultiDirectionTestBase`2.SourceFolder
  - DMLibTest.MultiDirectionTestBase`2.SourceRoot
  - DMLibTest.MultiDirectionTestBase`2.TestContext
  langs:
  - csharp
  - vb
  name: MultiDirectionTestBase<TDataInfo, TDataType>
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>
  type: Class
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MultiDirectionTestBase
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 30
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public abstract class MultiDirectionTestBase<TDataInfo, TDataType> : object where TDataInfo : IDataInfo where TDataType : struct'
    content.vb: >-
      Public MustInherit Class MultiDirectionTestBase(Of TDataInfo As IDataInfo, TDataType As Structure)
          Inherits Object
    typeParameters:
    - id: TDataInfo
    - id: TDataType
  inheritance:
  - System.Object
  derivedClasses:
  - DMLibTest.DMLibTestBase
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType)
  name.vb: MultiDirectionTestBase(Of TDataInfo, TDataType)
- uid: DMLibTest.MultiDirectionTestBase`2.SourceRoot
  commentId: F:DMLibTest.MultiDirectionTestBase`2.SourceRoot
  id: SourceRoot
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: SourceRoot
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceRoot
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceRoot
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SourceRoot
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 34
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string SourceRoot = null
    content.vb: Public Const SourceRoot As String = Nothing
    return:
      type: System.String
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceRoot
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceRoot
- uid: DMLibTest.MultiDirectionTestBase`2.DestRoot
  commentId: F:DMLibTest.MultiDirectionTestBase`2.DestRoot
  id: DestRoot
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: DestRoot
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestRoot
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestRoot
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DestRoot
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 35
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string DestRoot = null
    content.vb: Public Const DestRoot As String = Nothing
    return:
      type: System.String
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestRoot
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestRoot
- uid: DMLibTest.MultiDirectionTestBase`2.SourceFolder
  commentId: F:DMLibTest.MultiDirectionTestBase`2.SourceFolder
  id: SourceFolder
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: SourceFolder
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceFolder
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceFolder
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SourceFolder
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 36
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string SourceFolder = null
    content.vb: Public Const SourceFolder As String = Nothing
    return:
      type: System.String
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceFolder
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceFolder
- uid: DMLibTest.MultiDirectionTestBase`2.DestFolder
  commentId: F:DMLibTest.MultiDirectionTestBase`2.DestFolder
  id: DestFolder
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: DestFolder
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestFolder
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestFolder
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DestFolder
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 37
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string DestFolder = null
    content.vb: Public Const DestFolder As String = Nothing
    return:
      type: System.String
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestFolder
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestFolder
- uid: DMLibTest.MultiDirectionTestBase`2.random
  commentId: F:DMLibTest.MultiDirectionTestBase`2.random
  id: random
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: random
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.random
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.random
  type: Field
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: random
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 39
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected static Random random
    content.vb: Protected Shared random As Random
    return:
      type: Random
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).random
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).random
- uid: DMLibTest.MultiDirectionTestBase`2.TestContext
  commentId: P:DMLibTest.MultiDirectionTestBase`2.TestContext
  id: TestContext
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: TestContext
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.TestContext
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.TestContext
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TestContext
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 50
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nGets or sets the test context which provides\ninformation about and functionality for the current test run.\n"
  example: []
  syntax:
    content: public TestContext TestContext { get; set; }
    content.vb: Public Property TestContext As TestContext
    parameters: []
    return:
      type: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  overload: DMLibTest.MultiDirectionTestBase`2.TestContext*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).TestContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).TestContext
- uid: DMLibTest.MultiDirectionTestBase`2.NetworkShare
  commentId: P:DMLibTest.MultiDirectionTestBase`2.NetworkShare
  id: NetworkShare
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: NetworkShare
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NetworkShare
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NetworkShare
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: NetworkShare
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 62
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string NetworkShare { get; set; }
    content.vb: Public Shared Property NetworkShare As String
    parameters: []
    return:
      type: System.String
  overload: DMLibTest.MultiDirectionTestBase`2.NetworkShare*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).NetworkShare
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NetworkShare
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupSource
  commentId: P:DMLibTest.MultiDirectionTestBase`2.CleanupSource
  id: CleanupSource
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: CleanupSource
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupSource
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupSource
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupSource
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 68
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CleanupSource { get; set; }
    content.vb: Public Shared Property CleanupSource As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: DMLibTest.MultiDirectionTestBase`2.CleanupSource*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupSource
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupSource
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  commentId: P:DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  id: CleanupDestination
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: CleanupDestination
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupDestination
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupDestination
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupDestination
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 74
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CleanupDestination { get; set; }
    content.vb: Public Shared Property CleanupDestination As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: DMLibTest.MultiDirectionTestBase`2.CleanupDestination*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupDestination
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupDestination
- uid: DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  commentId: P:DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  id: SourceAdaptor
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: SourceAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceAdaptor
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SourceAdaptor
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 80
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static DataAdaptor<TDataInfo> SourceAdaptor { get; }
    content.vb: Public Shared ReadOnly Property SourceAdaptor As DataAdaptor(Of TDataInfo)
    parameters: []
    return:
      type: DMLibTest.DataAdaptor{{TDataInfo}}
  overload: DMLibTest.MultiDirectionTestBase`2.SourceAdaptor*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceAdaptor
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  commentId: P:DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  id: DestAdaptor
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: DestAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestAdaptor
  type: Property
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DestAdaptor
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 88
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static DataAdaptor<TDataInfo> DestAdaptor { get; }
    content.vb: Public Shared ReadOnly Property DestAdaptor As DataAdaptor(Of TDataInfo)
    parameters: []
    return:
      type: DMLibTest.DataAdaptor{{TDataInfo}}
  overload: DMLibTest.MultiDirectionTestBase`2.DestAdaptor*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestAdaptor
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  id: BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: BaseClassInitialize(TestContext)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize(TestContext)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BaseClassInitialize
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 96
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void BaseClassInitialize(TestContext testContext)
    content.vb: Public Shared Sub BaseClassInitialize(testContext As TestContext)
    parameters:
    - id: testContext
      type: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  overload: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize(TestContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
- uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  id: BaseClassCleanup
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: BaseClassCleanup()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BaseClassCleanup
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 109
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void BaseClassCleanup()
    content.vb: Public Shared Sub BaseClassCleanup
  overload: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup()
- uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  id: BaseTestInitialize
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: BaseTestInitialize()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BaseTestInitialize
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 132
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public virtual void BaseTestInitialize()
    content.vb: Public Overridable Sub BaseTestInitialize
  overload: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize()
- uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  commentId: M:DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  id: BaseTestCleanup
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: BaseTestCleanup()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BaseTestCleanup
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 142
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public virtual void BaseTestCleanup()
    content.vb: Public Overridable Sub BaseTestCleanup
  overload: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup()
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupData
  commentId: M:DMLibTest.MultiDirectionTestBase`2.CleanupData
  id: CleanupData
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: CleanupData()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupData
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 166
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public virtual void CleanupData()
    content.vb: Public Overridable Sub CleanupData
  overload: DMLibTest.MultiDirectionTestBase`2.CleanupData*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData()
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.CleanupData(System.Boolean,System.Boolean)
  id: CleanupData(System.Boolean,System.Boolean)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: CleanupData(Boolean, Boolean)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData(Boolean, Boolean)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupData
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 173
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected void CleanupData(bool cleanupSource, bool cleanupDestination)
    content.vb: Protected Sub CleanupData(cleanupSource As Boolean, cleanupDestination As Boolean)
    parameters:
    - id: cleanupSource
      type: System.Boolean
    - id: cleanupDestination
      type: System.Boolean
  overload: DMLibTest.MultiDirectionTestBase`2.CleanupData*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData(Boolean, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData(System.Boolean, System.Boolean)
- uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetLocationKey(`1)
  id: GetLocationKey(`1)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: GetLocationKey(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey(TDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetLocationKey
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 186
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected static string GetLocationKey(TDataType dataType)
    content.vb: Protected Shared Function GetLocationKey(dataType As TDataType) As String
    parameters:
    - id: dataType
      type: '{TDataType}'
    return:
      type: System.String
  overload: DMLibTest.MultiDirectionTestBase`2.GetLocationKey*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey(TDataType)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey(TDataType)
- uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor(`1)
  id: GetSourceAdaptor(`1)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: GetSourceAdaptor(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor(TDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetSourceAdaptor
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 191
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static DataAdaptor<TDataInfo> GetSourceAdaptor(TDataType dataType)
    content.vb: Public Shared Function GetSourceAdaptor(dataType As TDataType) As DataAdaptor(Of TDataInfo)
    parameters:
    - id: dataType
      type: '{TDataType}'
    return:
      type: DMLibTest.DataAdaptor{{TDataInfo}}
  overload: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor(TDataType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor(TDataType)
- uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor(`1)
  id: GetDestAdaptor(`1)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: GetDestAdaptor(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor(TDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDestAdaptor
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 204
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static DataAdaptor<TDataInfo> GetDestAdaptor(TDataType dataType)
    content.vb: Public Shared Function GetDestAdaptor(dataType As TDataType) As DataAdaptor(Of TDataInfo)
    parameters:
    - id: dataType
      type: '{TDataType}'
    return:
      type: DMLibTest.DataAdaptor{{TDataInfo}}
  overload: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor(TDataType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor(TDataType)
- uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  commentId: M:DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  id: SetSourceAdaptor(`1,DMLibTest.DataAdaptor{`0})
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: SetSourceAdaptor(TDataType, DataAdaptor<TDataInfo>)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor(TDataType, DataAdaptor<TDataInfo>)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor(TDataType, DMLibTest.DataAdaptor<TDataInfo>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetSourceAdaptor
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 217
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected static void SetSourceAdaptor(TDataType dataType, DataAdaptor<TDataInfo> adaptor)
    content.vb: Protected Shared Sub SetSourceAdaptor(dataType As TDataType, adaptor As DataAdaptor(Of TDataInfo))
    parameters:
    - id: dataType
      type: '{TDataType}'
    - id: adaptor
      type: DMLibTest.DataAdaptor{{TDataInfo}}
  overload: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor(TDataType, DataAdaptor(Of TDataInfo))
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor(TDataType, DMLibTest.DataAdaptor(Of TDataInfo))
  name.vb: SetSourceAdaptor(TDataType, DataAdaptor(Of TDataInfo))
- uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  commentId: M:DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  id: SetDestAdaptor(`1,DMLibTest.DataAdaptor{`0})
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: SetDestAdaptor(TDataType, DataAdaptor<TDataInfo>)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor(TDataType, DataAdaptor<TDataInfo>)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor(TDataType, DMLibTest.DataAdaptor<TDataInfo>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SetDestAdaptor
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 223
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected static void SetDestAdaptor(TDataType dataType, DataAdaptor<TDataInfo> adaptor)
    content.vb: Protected Shared Sub SetDestAdaptor(dataType As TDataType, adaptor As DataAdaptor(Of TDataInfo))
    parameters:
    - id: dataType
      type: '{TDataType}'
    - id: adaptor
      type: DMLibTest.DataAdaptor{{TDataInfo}}
  overload: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor(TDataType, DataAdaptor(Of TDataInfo))
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor(TDataType, DMLibTest.DataAdaptor(Of TDataInfo))
  name.vb: SetDestAdaptor(TDataType, DataAdaptor(Of TDataInfo))
- uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.IsCloudService(`1)
  id: IsCloudService(`1)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: IsCloudService(TDataType)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService(TDataType)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService(TDataType)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsCloudService
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 229
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public abstract bool IsCloudService(TDataType dataType)
    content.vb: Public MustOverride Function IsCloudService(dataType As TDataType) As Boolean
    parameters:
    - id: dataType
      type: '{TDataType}'
    return:
      type: System.Boolean
  overload: DMLibTest.MultiDirectionTestBase`2.IsCloudService*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService(TDataType)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService(TDataType)
- uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  id: GetRandomCredentialType
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: GetRandomCredentialType()
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType()
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetRandomCredentialType
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 231
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static CredentialType GetRandomCredentialType()
    content.vb: Public Shared Function GetRandomCredentialType As CredentialType
    return:
      type: DMLibTest.CredentialType
  overload: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType()
- uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.GetRelativePath(System.String,System.String)
  id: GetRelativePath(System.String,System.String)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: GetRelativePath(String, String)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath(String, String)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetRelativePath
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 260
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected static string GetRelativePath(string basePath, string fullPath)
    content.vb: Protected Shared Function GetRelativePath(basePath As String, fullPath As String) As String
    parameters:
    - id: basePath
      type: System.String
    - id: fullPath
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.MultiDirectionTestBase`2.GetRelativePath*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath(String, String)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath(System.String, System.String)
- uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
  commentId: M:DMLibTest.MultiDirectionTestBase`2.NormalizePath(System.String)
  id: NormalizePath(System.String)
  parent: DMLibTest.MultiDirectionTestBase`2
  langs:
  - csharp
  - vb
  name: NormalizePath(String)
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath(String)
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Framework/MultiDirectionTestBase.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: NormalizePath
    path: src/storage-data-movement/test/DMLibTest/Framework/MultiDirectionTestBase.cs
    startLine: 275
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: protected static string NormalizePath(string path)
    content.vb: Protected Shared Function NormalizePath(path As String) As String
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.MultiDirectionTestBase`2.NormalizePath*
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath(String)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath(System.String)
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Random
  isExternal: true
  name: Random
  nameWithType: Random
  fullName: Random
- uid: DMLibTest.MultiDirectionTestBase`2.TestContext*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.TestContext
  isExternal: false
  name: TestContext
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.TestContext
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.TestContext
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).TestContext
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).TestContext
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  commentId: T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
  parent: Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: false
  name: TestContext
  nameWithType: TestContext
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
- uid: Microsoft.VisualStudio.TestTools.UnitTesting
  commentId: N:Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: false
  name: Microsoft.VisualStudio.TestTools.UnitTesting
  nameWithType: Microsoft.VisualStudio.TestTools.UnitTesting
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting
- uid: DMLibTest.MultiDirectionTestBase`2.NetworkShare*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.NetworkShare
  isExternal: false
  name: NetworkShare
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NetworkShare
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NetworkShare
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).NetworkShare
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NetworkShare
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupSource*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.CleanupSource
  isExternal: false
  name: CleanupSource
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupSource
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupSource
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupSource
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupSource
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupDestination*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.CleanupDestination
  isExternal: false
  name: CleanupDestination
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupDestination
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupDestination
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupDestination
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupDestination
- uid: DMLibTest.MultiDirectionTestBase`2.SourceAdaptor*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.SourceAdaptor
  isExternal: false
  name: SourceAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SourceAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SourceAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SourceAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SourceAdaptor
- uid: DMLibTest.DataAdaptor{{TDataInfo}}
  commentId: T:DMLibTest.DataAdaptor{`0}
  parent: DMLibTest
  definition: DMLibTest.DataAdaptor`1
  name: DataAdaptor<TDataInfo>
  nameWithType: DataAdaptor<TDataInfo>
  fullName: DMLibTest.DataAdaptor<TDataInfo>
  nameWithType.vb: DataAdaptor(Of TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo)
  name.vb: DataAdaptor(Of TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DataAdaptor`1
  commentId: T:DMLibTest.DataAdaptor`1
  isExternal: false
  name: DataAdaptor<TDataInfo>
  nameWithType: DataAdaptor<TDataInfo>
  fullName: DMLibTest.DataAdaptor<TDataInfo>
  nameWithType.vb: DataAdaptor(Of TDataInfo)
  fullname.vb: DMLibTest.DataAdaptor(Of TDataInfo)
  name.vb: DataAdaptor(Of TDataInfo)
  spec.csharp:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DMLibTest.DataAdaptor`1
    name: DataAdaptor
    nameWithType: DataAdaptor
    fullName: DMLibTest.DataAdaptor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDataInfo
    nameWithType: TDataInfo
    fullName: TDataInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.MultiDirectionTestBase`2.DestAdaptor*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.DestAdaptor
  isExternal: false
  name: DestAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.DestAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.DestAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).DestAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).DestAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.BaseClassInitialize
  isExternal: false
  name: BaseClassInitialize
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassInitialize
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassInitialize
- uid: DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.BaseClassCleanup
  isExternal: false
  name: BaseClassCleanup
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseClassCleanup
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseClassCleanup
- uid: DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.BaseTestInitialize
  isExternal: false
  name: BaseTestInitialize
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestInitialize
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestInitialize
- uid: DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.BaseTestCleanup
  isExternal: false
  name: BaseTestCleanup
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.BaseTestCleanup
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).BaseTestCleanup
- uid: DMLibTest.MultiDirectionTestBase`2.CleanupData*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.CleanupData
  isExternal: false
  name: CleanupData
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.CleanupData
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).CleanupData
- uid: DMLibTest.MultiDirectionTestBase`2.GetLocationKey*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.GetLocationKey
  isExternal: false
  name: GetLocationKey
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetLocationKey
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetLocationKey
- uid: '{TDataType}'
  commentId: '!:TDataType'
  definition: TDataType
  name: TDataType
  nameWithType: TDataType
  fullName: TDataType
- uid: TDataType
  isExternal: false
  name: TDataType
  nameWithType: TDataType
  fullName: TDataType
- uid: DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.GetSourceAdaptor
  isExternal: false
  name: GetSourceAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetSourceAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetSourceAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.GetDestAdaptor
  isExternal: false
  name: GetDestAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetDestAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetDestAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.SetSourceAdaptor
  isExternal: false
  name: SetSourceAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetSourceAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetSourceAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.SetDestAdaptor
  isExternal: false
  name: SetDestAdaptor
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.SetDestAdaptor
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).SetDestAdaptor
- uid: DMLibTest.MultiDirectionTestBase`2.IsCloudService*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.IsCloudService
  isExternal: false
  name: IsCloudService
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.IsCloudService
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).IsCloudService
- uid: DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.GetRandomCredentialType
  isExternal: false
  name: GetRandomCredentialType
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRandomCredentialType
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRandomCredentialType
- uid: DMLibTest.CredentialType
  commentId: T:DMLibTest.CredentialType
  parent: DMLibTest
  isExternal: false
  name: CredentialType
  nameWithType: CredentialType
  fullName: DMLibTest.CredentialType
- uid: DMLibTest.MultiDirectionTestBase`2.GetRelativePath*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.GetRelativePath
  isExternal: false
  name: GetRelativePath
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.GetRelativePath
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).GetRelativePath
- uid: DMLibTest.MultiDirectionTestBase`2.NormalizePath*
  commentId: Overload:DMLibTest.MultiDirectionTestBase`2.NormalizePath
  isExternal: false
  name: NormalizePath
  nameWithType: MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath
  fullName: DMLibTest.MultiDirectionTestBase<TDataInfo, TDataType>.NormalizePath
  nameWithType.vb: MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath
  fullname.vb: DMLibTest.MultiDirectionTestBase(Of TDataInfo, TDataType).NormalizePath
