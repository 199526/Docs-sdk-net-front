### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  id: HttpAuthenticationType
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Anonymous
  - Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Basic
  - Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.ClientCertificate
  - Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Digest
  - Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Windows
  langs:
  - csharp
  - vb
  name: HttpAuthenticationType
  nameWithType: HttpAuthenticationType
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: HttpAuthenticationType
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nAvailable authentication types for an <xref href=\"Microsoft.Azure.Management.DataFactories.Models.HttpLinkedService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class HttpAuthenticationType
    content.vb: Public Module HttpAuthenticationType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Basic
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Basic
  id: Basic
  parent: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  langs:
  - csharp
  - vb
  name: Basic
  nameWithType: HttpAuthenticationType.Basic
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Basic
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Basic
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nBasic authentication type.\n"
  example: []
  syntax:
    content: public const string Basic = "Basic"
    return:
      type: System.String
    content.vb: Public Const Basic As String = "Basic"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Anonymous
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Anonymous
  id: Anonymous
  parent: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  langs:
  - csharp
  - vb
  name: Anonymous
  nameWithType: HttpAuthenticationType.Anonymous
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Anonymous
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Anonymous
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nAnonymous authentication type.\n"
  example: []
  syntax:
    content: public const string Anonymous = "Anonymous"
    return:
      type: System.String
    content.vb: Public Const Anonymous As String = "Anonymous"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Windows
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Windows
  id: Windows
  parent: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  langs:
  - csharp
  - vb
  name: Windows
  nameWithType: HttpAuthenticationType.Windows
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Windows
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Windows
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nWindows authentication type.\n"
  example: []
  syntax:
    content: public const string Windows = "Windows"
    return:
      type: System.String
    content.vb: Public Const Windows As String = "Windows"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Digest
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Digest
  id: Digest
  parent: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  langs:
  - csharp
  - vb
  name: Digest
  nameWithType: HttpAuthenticationType.Digest
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.Digest
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Digest
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nDigest authentication type.\n"
  example: []
  syntax:
    content: public const string Digest = "Digest"
    return:
      type: System.String
    content.vb: Public Const Digest As String = "Digest"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.ClientCertificate
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.ClientCertificate
  id: ClientCertificate
  parent: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType
  langs:
  - csharp
  - vb
  name: ClientCertificate
  nameWithType: HttpAuthenticationType.ClientCertificate
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpAuthenticationType.ClientCertificate
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ClientCertificate
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/LinkedServices/AuthenticationType/HttpAuthenticationType.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nClientCertificate authentication type.\n"
  example: []
  syntax:
    content: public const string ClientCertificate = "ClientCertificate"
    return:
      type: System.String
    content.vb: Public Const ClientCertificate As String = "ClientCertificate"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.DataFactories.Models.HttpLinkedService
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.HttpLinkedService
  isExternal: false
  name: HttpLinkedService
  nameWithType: HttpLinkedService
  fullName: Microsoft.Azure.Management.DataFactories.Models.HttpLinkedService
- uid: Microsoft.Azure.Management.DataFactories.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
