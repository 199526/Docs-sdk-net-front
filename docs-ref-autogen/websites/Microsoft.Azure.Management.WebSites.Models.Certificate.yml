### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Certificate
  id: Certificate
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor
  - Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus},System.String)
  - Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob
  - Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate
  - Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName
  - Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile
  - Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames
  - Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate
  - Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer
  - Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId
  - Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName
  - Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus
  - Microsoft.Azure.Management.WebSites.Models.Certificate.Password
  - Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob
  - Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash
  - Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink
  - Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId
  - Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName
  - Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName
  - Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint
  - Microsoft.Azure.Management.WebSites.Models.Certificate.Valid
  - Microsoft.Azure.Management.WebSites.Models.Certificate.Validate
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: Certificate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Certificate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSSL certificate for an app.\n"
  example: []
  syntax:
    content: 'public class Certificate : Resource'
    content.vb: >-
      Public Class Certificate
          Inherits Resource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Certificate()
  nameWithType: Certificate.Certificate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Certificate()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Certificate class.\n"
  example: []
  syntax:
    content: public Certificate()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus},System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IList{System.String},System.Byte[],System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus},System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Certificate(String, String, String, String, String, IDictionary<String, String>, String, String, IList<String>, Byte[], String, String, String, Nullable<DateTime>, Nullable<DateTime>, String, String, Nullable<Boolean>, String, String, HostingEnvironmentProfile, String, String, Nullable<KeyVaultSecretStatus>, String)
  nameWithType: Certificate.Certificate(String, String, String, String, String, IDictionary<String, String>, String, String, IList<String>, Byte[], String, String, String, Nullable<DateTime>, Nullable<DateTime>, String, String, Nullable<Boolean>, String, String, HostingEnvironmentProfile, String, String, Nullable<KeyVaultSecretStatus>, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Certificate(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String, System.Collections.Generic.IList<System.String>, System.Byte[], System.String, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.String, System.String, System.Nullable<System.Boolean>, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile, System.String, System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the Certificate class.\n"
  example: []
  syntax:
    content: public Certificate(string location, string id = null, string name = null, string kind = null, string type = null, IDictionary<string, string> tags = null, string friendlyName = null, string subjectName = null, IList<string> hostNames = null, byte[] pfxBlob = null, string siteName = null, string selfLink = null, string issuer = null, DateTime? issueDate = null, DateTime? expirationDate = null, string password = null, string thumbprint = null, bool ? valid = null, string cerBlob = null, string publicKeyHash = null, HostingEnvironmentProfile hostingEnvironmentProfile = null, string keyVaultId = null, string keyVaultSecretName = null, KeyVaultSecretStatus? keyVaultSecretStatus = null, string serverFarmId = null)
    parameters:
    - id: location
      type: System.String
      description: Resource Location.
    - id: id
      type: System.String
      description: Resource Id.
    - id: name
      type: System.String
      description: Resource Name.
    - id: kind
      type: System.String
      description: Kind of resource.
    - id: type
      type: System.String
      description: Resource type.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: friendlyName
      type: System.String
      description: >-
        Friendly name of the

        certificate.
    - id: subjectName
      type: System.String
      description: Subject name of the certificate.
    - id: hostNames
      type: System.Collections.Generic.IList{System.String}
      description: >-
        Host names the certificate applies

        to.
    - id: pfxBlob
      type: System.Byte[]
      description: Pfx blob.
    - id: siteName
      type: System.String
      description: App name.
    - id: selfLink
      type: System.String
      description: Self link.
    - id: issuer
      type: System.String
      description: Certificate issuer.
    - id: issueDate
      type: System.Nullable{System.DateTime}
      description: Certificate issue Date.
    - id: expirationDate
      type: System.Nullable{System.DateTime}
      description: Certificate expriration date.
    - id: password
      type: System.String
      description: Certificate password.
    - id: thumbprint
      type: System.String
      description: Certificate thumbprint.
    - id: valid
      type: System.Nullable{System.Boolean}
      description: Is the certificate valid?.
    - id: cerBlob
      type: System.String
      description: Raw bytes of .cer file
    - id: publicKeyHash
      type: System.String
      description: Public key hash.
    - id: hostingEnvironmentProfile
      type: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
      description: >-
        Specification for the App

        Service Environment to use for the certificate.
    - id: keyVaultId
      type: System.String
      description: Key Vault Csm resource Id.
    - id: keyVaultSecretName
      type: System.String
      description: Key Vault secret name.
    - id: keyVaultSecretStatus
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus}
      description: >-
        Status of the Key Vault secret.

        Possible values include: 'Initialized',

        'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',

        'OperationNotPermittedOnKeyVault',

        'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',

        'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',

        'Unknown'
    - id: serverFarmId
      type: System.String
      description: >-
        Resource ID of the associated App

        Service plan, formatted as:

        "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
    content.vb: Public Sub New(location As String, id As String = Nothing, name As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, friendlyName As String = Nothing, subjectName As String = Nothing, hostNames As IList(Of String) = Nothing, pfxBlob As Byte() = Nothing, siteName As String = Nothing, selfLink As String = Nothing, issuer As String = Nothing, issueDate As Date? = Nothing, expirationDate As Date? = Nothing, password As String = Nothing, thumbprint As String = Nothing, valid As Boolean? = Nothing, cerBlob As String = Nothing, publicKeyHash As String = Nothing, hostingEnvironmentProfile As HostingEnvironmentProfile = Nothing, keyVaultId As String = Nothing, keyVaultSecretName As String = Nothing, keyVaultSecretStatus As KeyVaultSecretStatus? = Nothing, serverFarmId As String = Nothing)
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor*
  nameWithType.vb: Certificate.Certificate(String, String, String, String, String, IDictionary(Of String, String), String, String, IList(Of String), Byte(), String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), String, String, Nullable(Of Boolean), String, String, HostingEnvironmentProfile, String, String, Nullable(Of KeyVaultSecretStatus), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.Certificate.Certificate(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Byte(), System.String, System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.String, System.String, System.Nullable(Of System.Boolean), System.String, System.String, Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile, System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus), System.String)
  name.vb: Certificate(String, String, String, String, String, IDictionary(Of String, String), String, String, IList(Of String), Byte(), String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), String, String, Nullable(Of Boolean), String, String, HostingEnvironmentProfile, String, String, Nullable(Of KeyVaultSecretStatus), String)
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName
  id: FriendlyName
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: Certificate.FriendlyName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FriendlyName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets friendly name of the certificate.\n"
  example: []
  syntax:
    content: public string FriendlyName { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FriendlyName As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName
  id: SubjectName
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: SubjectName
  nameWithType: Certificate.SubjectName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubjectName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets subject name of the certificate.\n"
  example: []
  syntax:
    content: public string SubjectName { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SubjectName As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames
  id: HostNames
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: HostNames
  nameWithType: Certificate.HostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostNames
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets host names the certificate applies to.\n"
  example: []
  syntax:
    content: public IList<string> HostNames { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property HostNames As IList(Of String)
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob
  id: PfxBlob
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: PfxBlob
  nameWithType: Certificate.PfxBlob
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PfxBlob
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets pfx blob.\n"
  example: []
  syntax:
    content: public byte[] PfxBlob { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property PfxBlob As Byte()
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName
  id: SiteName
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: SiteName
  nameWithType: Certificate.SiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SiteName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets app name.\n"
  example: []
  syntax:
    content: public string SiteName { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SiteName As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink
  id: SelfLink
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: SelfLink
  nameWithType: Certificate.SelfLink
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SelfLink
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets self link.\n"
  example: []
  syntax:
    content: public string SelfLink { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SelfLink As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer
  id: Issuer
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: Certificate.Issuer
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Issuer
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets certificate issuer.\n"
  example: []
  syntax:
    content: public string Issuer { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Issuer As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate
  id: IssueDate
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: IssueDate
  nameWithType: Certificate.IssueDate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IssueDate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 139
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets certificate issue Date.\n"
  example: []
  syntax:
    content: public DateTime? IssueDate { get; protected set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property IssueDate As Date?
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate
  id: ExpirationDate
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: Certificate.ExpirationDate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpirationDate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets certificate expriration date.\n"
  example: []
  syntax:
    content: public DateTime? ExpirationDate { get; protected set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ExpirationDate As Date?
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Password
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.Password
  id: Password
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: Certificate.Password
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Password
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets certificate password.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: Certificate.Thumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets certificate thumbprint.\n"
  example: []
  syntax:
    content: public string Thumbprint { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Thumbprint As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Valid
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.Valid
  id: Valid
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: Certificate.Valid
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Valid
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Valid
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets is the certificate valid?.\n"
  example: []
  syntax:
    content: public bool ? Valid { get; protected set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property Valid As Boolean?
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.Valid*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob
  id: CerBlob
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: CerBlob
  nameWithType: Certificate.CerBlob
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CerBlob
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets raw bytes of .cer file\n"
  example: []
  syntax:
    content: public string CerBlob { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CerBlob As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash
  id: PublicKeyHash
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: PublicKeyHash
  nameWithType: Certificate.PublicKeyHash
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PublicKeyHash
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets public key hash.\n"
  example: []
  syntax:
    content: public string PublicKeyHash { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PublicKeyHash As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile
  id: HostingEnvironmentProfile
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: HostingEnvironmentProfile
  nameWithType: Certificate.HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostingEnvironmentProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets specification for the App Service Environment to use for the\ncertificate.\n"
  example: []
  syntax:
    content: public HostingEnvironmentProfile HostingEnvironmentProfile { get; protected set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
    content.vb: Public Property HostingEnvironmentProfile As HostingEnvironmentProfile
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId
  id: KeyVaultId
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: KeyVaultId
  nameWithType: Certificate.KeyVaultId
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 188
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets key Vault Csm resource Id.\n"
  example: []
  syntax:
    content: public string KeyVaultId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property KeyVaultId As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName
  id: KeyVaultSecretName
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: KeyVaultSecretName
  nameWithType: Certificate.KeyVaultSecretName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultSecretName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets key Vault secret name.\n"
  example: []
  syntax:
    content: public string KeyVaultSecretName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property KeyVaultSecretName As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus
  id: KeyVaultSecretStatus
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: KeyVaultSecretStatus
  nameWithType: Certificate.KeyVaultSecretStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultSecretStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets status of the Key Vault secret. Possible values include:\n'Initialized', 'WaitingOnCertificateOrder', 'Succeeded',\n'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault',\n'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',\n'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',\n'Unknown'\n"
  example: []
  syntax:
    content: public KeyVaultSecretStatus? KeyVaultSecretStatus { get; protected set; }
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus}
    content.vb: Public Property KeyVaultSecretStatus As KeyVaultSecretStatus?
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId
  id: ServerFarmId
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: ServerFarmId
  nameWithType: Certificate.ServerFarmId
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerFarmId
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets resource ID of the associated App Service plan,\nformatted as:\n\"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".\n"
  example: []
  syntax:
    content: public string ServerFarmId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServerFarmId As String
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Certificate.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Certificate
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Certificate.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/Certificate.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.Certificate.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.#ctor
  isExternal: false
  name: Certificate
  nameWithType: Certificate.Certificate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Certificate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  commentId: T:Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: HostingEnvironmentProfile
  nameWithType: HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<KeyVaultSecretStatus>
  nameWithType: Nullable<KeyVaultSecretStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus>
  nameWithType.vb: Nullable(Of KeyVaultSecretStatus)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus)
  name.vb: Nullable(Of KeyVaultSecretStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus
    name: KeyVaultSecretStatus
    nameWithType: KeyVaultSecretStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus
    name: KeyVaultSecretStatus
    nameWithType: KeyVaultSecretStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.KeyVaultSecretStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName
  isExternal: false
  name: FriendlyName
  nameWithType: Certificate.FriendlyName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.FriendlyName
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName
  isExternal: false
  name: SubjectName
  nameWithType: Certificate.SubjectName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.SubjectName
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames
  isExternal: false
  name: HostNames
  nameWithType: Certificate.HostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.HostNames
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob
  isExternal: false
  name: PfxBlob
  nameWithType: Certificate.PfxBlob
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.PfxBlob
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName
  isExternal: false
  name: SiteName
  nameWithType: Certificate.SiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.SiteName
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink
  isExternal: false
  name: SelfLink
  nameWithType: Certificate.SelfLink
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.SelfLink
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer
  isExternal: false
  name: Issuer
  nameWithType: Certificate.Issuer
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Issuer
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate
  isExternal: false
  name: IssueDate
  nameWithType: Certificate.IssueDate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.IssueDate
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate
  isExternal: false
  name: ExpirationDate
  nameWithType: Certificate.ExpirationDate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.ExpirationDate
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Password*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.Password
  isExternal: false
  name: Password
  nameWithType: Certificate.Password
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Password
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: Certificate.Thumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Thumbprint
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Valid*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.Valid
  isExternal: false
  name: Valid
  nameWithType: Certificate.Valid
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Valid
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob
  isExternal: false
  name: CerBlob
  nameWithType: Certificate.CerBlob
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.CerBlob
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash
  isExternal: false
  name: PublicKeyHash
  nameWithType: Certificate.PublicKeyHash
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.PublicKeyHash
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile
  isExternal: false
  name: HostingEnvironmentProfile
  nameWithType: Certificate.HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.HostingEnvironmentProfile
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId
  isExternal: false
  name: KeyVaultId
  nameWithType: Certificate.KeyVaultId
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultId
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName
  isExternal: false
  name: KeyVaultSecretName
  nameWithType: Certificate.KeyVaultSecretName
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretName
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus
  isExternal: false
  name: KeyVaultSecretStatus
  nameWithType: Certificate.KeyVaultSecretStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.KeyVaultSecretStatus
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId
  isExternal: false
  name: ServerFarmId
  nameWithType: Certificate.ServerFarmId
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.ServerFarmId
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.Certificate.Validate
  isExternal: false
  name: Validate
  nameWithType: Certificate.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate.Validate
