### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  commentId: T:Microsoft.Azure.Management.WebSites.Models.RampUpRule
  id: RampUpRule
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  langs:
  - csharp
  - vb
  name: RampUpRule
  nameWithType: RampUpRule
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RampUpRule
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRouting rules for ramp up testing. This rule allows to redirect static\ntraffic % to a slot or to gradually change routing % based on\nperformance.\n"
  example: []
  syntax:
    content: public class RampUpRule
    content.vb: Public Class RampUpRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: RampUpRule()
  nameWithType: RampUpRule.RampUpRule()
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the RampUpRule class.\n"
  example: []
  syntax:
    content: public RampUpRule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  id: '#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: RampUpRule(String, Nullable<Double>, Nullable<Double>, Nullable<Int32>, Nullable<Double>, Nullable<Double>, String, String)
  nameWithType: RampUpRule.RampUpRule(String, Nullable<Double>, Nullable<Double>, Nullable<Int32>, Nullable<Double>, Nullable<Double>, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule(System.String, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Int32>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the RampUpRule class.\n"
  example: []
  syntax:
    content: public RampUpRule(string actionHostName = null, double ? reroutePercentage = null, double ? changeStep = null, int ? changeIntervalInMinutes = null, double ? minReroutePercentage = null, double ? maxReroutePercentage = null, string changeDecisionCallbackUrl = null, string name = null)
    parameters:
    - id: actionHostName
      type: System.String
      description: >-
        Hostname of a slot to which the

        traffic will be redirected if decided to. E.g.

        myapp-stage.azurewebsites.net.
    - id: reroutePercentage
      type: System.Nullable{System.Double}
      description: >-
        Percentage of the traffic which

        will be redirected to

        &lt;code&gt;ActionHostName&lt;/code&gt;.
    - id: changeStep
      type: System.Nullable{System.Double}
      description: >-
        In auto ramp up scenario this is the step

        to to add/remove from &lt;code&gt;ReroutePercentage&lt;/code&gt;

        until it reaches

        &lt;code&gt;MinReroutePercentage&lt;/code&gt; or

        &lt;code&gt;MaxReroutePercentage&lt;/code&gt;. Site metrics are

        checked every N minutes specificed in

        &lt;code&gt;ChangeIntervalInMinutes&lt;/code&gt;.

        Custom decision algorithm can be provided in TiPCallback site

        extension which URL can be specified in

        &lt;code&gt;ChangeDecisionCallbackUrl&lt;/code&gt;.
    - id: changeIntervalInMinutes
      type: System.Nullable{System.Int32}
      description: >-
        Specifies interval in

        mimuntes to reevaluate ReroutePercentage.
    - id: minReroutePercentage
      type: System.Nullable{System.Double}
      description: >-
        Specifies lower boundary above

        which ReroutePercentage will stay.
    - id: maxReroutePercentage
      type: System.Nullable{System.Double}
      description: >-
        Specifies upper boundary below

        which ReroutePercentage will stay.
    - id: changeDecisionCallbackUrl
      type: System.String
      description: >-
        Custom decision algorithm

        can be provided in TiPCallback site extension which URL can be

        specified. See TiPCallback site extension for the scaffold and

        contracts.

        https://www.siteextensions.net/packages/TiPCallback/
    - id: name
      type: System.String
      description: >-
        Name of the routing rule. The recommended name

        would be to point to the slot which will receive the traffic in the

        experiment.
    content.vb: Public Sub New(actionHostName As String = Nothing, reroutePercentage As Double? = Nothing, changeStep As Double? = Nothing, changeIntervalInMinutes As Integer? = Nothing, minReroutePercentage As Double? = Nothing, maxReroutePercentage As Double? = Nothing, changeDecisionCallbackUrl As String = Nothing, name As String = Nothing)
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor*
  nameWithType.vb: RampUpRule.RampUpRule(String, Nullable(Of Double), Nullable(Of Double), Nullable(Of Int32), Nullable(Of Double), Nullable(Of Double), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule(System.String, System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Int32), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.String, System.String)
  name.vb: RampUpRule(String, Nullable(Of Double), Nullable(Of Double), Nullable(Of Int32), Nullable(Of Double), Nullable(Of Double), String, String)
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  id: ActionHostName
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ActionHostName
  nameWithType: RampUpRule.ActionHostName
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActionHostName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets hostname of a slot to which the traffic will be\nredirected if decided to. E.g. myapp-stage.azurewebsites.net.\n"
  example: []
  syntax:
    content: public string ActionHostName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ActionHostName As String
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  id: ReroutePercentage
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ReroutePercentage
  nameWithType: RampUpRule.ReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReroutePercentage
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets percentage of the traffic which will be redirected to\n&amp;lt;code&amp;gt;ActionHostName&amp;lt;/code&amp;gt;.\n"
  example: []
  syntax:
    content: public double ? ReroutePercentage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property ReroutePercentage As Double?
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  id: ChangeStep
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeStep
  nameWithType: RampUpRule.ChangeStep
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeStep
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets in auto ramp up scenario this is the step to to\nadd/remove from\n&amp;lt;code&amp;gt;ReroutePercentage&amp;lt;/code&amp;gt; until it\nreaches\n&amp;lt;code&amp;gt;MinReroutePercentage&amp;lt;/code&amp;gt; or\n&amp;lt;code&amp;gt;MaxReroutePercentage&amp;lt;/code&amp;gt;. Site\nmetrics are checked every N minutes specificed in\n&amp;lt;code&amp;gt;ChangeIntervalInMinutes&amp;lt;/code&amp;gt;.\nCustom decision algorithm can be provided in TiPCallback site\nextension which URL can be specified in\n&amp;lt;code&amp;gt;ChangeDecisionCallbackUrl&amp;lt;/code&amp;gt;.\n"
  example: []
  syntax:
    content: public double ? ChangeStep { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property ChangeStep As Double?
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  id: ChangeIntervalInMinutes
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeIntervalInMinutes
  nameWithType: RampUpRule.ChangeIntervalInMinutes
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeIntervalInMinutes
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets specifies interval in mimuntes to reevaluate\nReroutePercentage.\n"
  example: []
  syntax:
    content: public int ? ChangeIntervalInMinutes { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ChangeIntervalInMinutes As Integer?
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  id: MinReroutePercentage
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: MinReroutePercentage
  nameWithType: RampUpRule.MinReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MinReroutePercentage
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets specifies lower boundary above which ReroutePercentage\nwill stay.\n"
  example: []
  syntax:
    content: public double ? MinReroutePercentage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property MinReroutePercentage As Double?
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  id: MaxReroutePercentage
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: MaxReroutePercentage
  nameWithType: RampUpRule.MaxReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxReroutePercentage
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets specifies upper boundary below which ReroutePercentage\nwill stay.\n"
  example: []
  syntax:
    content: public double ? MaxReroutePercentage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property MaxReroutePercentage As Double?
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  id: ChangeDecisionCallbackUrl
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeDecisionCallbackUrl
  nameWithType: RampUpRule.ChangeDecisionCallbackUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeDecisionCallbackUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets custom decision algorithm can be provided in\nTiPCallback site extension which URL can be specified. See\nTiPCallback site extension for the scaffold and contracts.\nhttps://www.siteextensions.net/packages/TiPCallback/\n"
  example: []
  syntax:
    content: public string ChangeDecisionCallbackUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ChangeDecisionCallbackUrl As String
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  id: Name
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RampUpRule.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets name of the routing rule. The recommended name would\nbe to point to the slot which will receive the traffic in the\nexperiment.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  isExternal: false
  name: RampUpRule
  nameWithType: RampUpRule.RampUpRule
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  isExternal: false
  name: ActionHostName
  nameWithType: RampUpRule.ActionHostName
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  isExternal: false
  name: ReroutePercentage
  nameWithType: RampUpRule.ReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  isExternal: false
  name: ChangeStep
  nameWithType: RampUpRule.ChangeStep
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  isExternal: false
  name: ChangeIntervalInMinutes
  nameWithType: RampUpRule.ChangeIntervalInMinutes
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  isExternal: false
  name: MinReroutePercentage
  nameWithType: RampUpRule.MinReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  isExternal: false
  name: MaxReroutePercentage
  nameWithType: RampUpRule.MaxReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  isExternal: false
  name: ChangeDecisionCallbackUrl
  nameWithType: RampUpRule.ChangeDecisionCallbackUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  isExternal: false
  name: Name
  nameWithType: RampUpRule.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
