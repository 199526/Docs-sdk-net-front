### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  commentId: T:Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  id: SiteCloneability
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor
  - Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor(System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion})
  - Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics
  - Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures
  - Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result
  - Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures
  langs:
  - csharp
  - vb
  name: SiteCloneability
  nameWithType: SiteCloneability
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SiteCloneability
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRepresents whether or not an app is cloneable.\n"
  example: []
  syntax:
    content: public class SiteCloneability
    content.vb: Public Class SiteCloneability
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  langs:
  - csharp
  - vb
  name: SiteCloneability()
  nameWithType: SiteCloneability.SiteCloneability()
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.SiteCloneability()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the SiteCloneability class.\n"
  example: []
  syntax:
    content: public SiteCloneability()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor(System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor(System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion})
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion},System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion})'
  parent: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  langs:
  - csharp
  - vb
  name: SiteCloneability(Nullable<CloneAbilityResult>, IList<SiteCloneabilityCriterion>, IList<SiteCloneabilityCriterion>, IList<SiteCloneabilityCriterion>)
  nameWithType: SiteCloneability.SiteCloneability(Nullable<CloneAbilityResult>, IList<SiteCloneabilityCriterion>, IList<SiteCloneabilityCriterion>, IList<SiteCloneabilityCriterion>)
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.SiteCloneability(System.Nullable<Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion>, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the SiteCloneability class.\n"
  example: []
  syntax:
    content: public SiteCloneability(CloneAbilityResult? result = null, IList<SiteCloneabilityCriterion> blockingFeatures = null, IList<SiteCloneabilityCriterion> unsupportedFeatures = null, IList<SiteCloneabilityCriterion> blockingCharacteristics = null)
    content.vb: Public Sub New(result As CloneAbilityResult? = Nothing, blockingFeatures As IList(Of SiteCloneabilityCriterion) = Nothing, unsupportedFeatures As IList(Of SiteCloneabilityCriterion) = Nothing, blockingCharacteristics As IList(Of SiteCloneabilityCriterion) = Nothing)
    parameters:
    - id: result
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult}
      description: >-
        Name of app. Possible values include:

        'Cloneable', 'PartiallyCloneable', 'NotCloneable'
    - id: blockingFeatures
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
      description: >-
        List of features enabled on app that

        prevent cloning.
    - id: unsupportedFeatures
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
      description: >-
        List of features enabled on app

        that are non-blocking but cannot be cloned. The app can still be

        cloned

        but the features in this list will not be set up on cloned

        app.
    - id: blockingCharacteristics
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
      description: >-
        List of blocking application

        characteristics.
  overload: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor*
  nameWithType.vb: SiteCloneability.SiteCloneability(Nullable(Of CloneAbilityResult), IList(Of SiteCloneabilityCriterion), IList(Of SiteCloneabilityCriterion), IList(Of SiteCloneabilityCriterion))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.SiteCloneability(System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion), System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion))
  name.vb: SiteCloneability(Nullable(Of CloneAbilityResult), IList(Of SiteCloneabilityCriterion), IList(Of SiteCloneabilityCriterion), IList(Of SiteCloneabilityCriterion))
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result
  id: Result
  parent: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: SiteCloneability.Result
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Result
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets name of app. Possible values include: 'Cloneable',\n'PartiallyCloneable', 'NotCloneable'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "result")]

      public CloneAbilityResult? Result { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="result")>

      Public Property Result As CloneAbilityResult?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult}
  overload: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: result
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures
  id: BlockingFeatures
  parent: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  langs:
  - csharp
  - vb
  name: BlockingFeatures
  nameWithType: SiteCloneability.BlockingFeatures
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlockingFeatures
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets list of features enabled on app that prevent cloning.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blockingFeatures")]

      public IList<SiteCloneabilityCriterion> BlockingFeatures { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blockingFeatures")>

      Public Property BlockingFeatures As IList(Of SiteCloneabilityCriterion)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
  overload: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blockingFeatures
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures
  id: UnsupportedFeatures
  parent: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  langs:
  - csharp
  - vb
  name: UnsupportedFeatures
  nameWithType: SiteCloneability.UnsupportedFeatures
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnsupportedFeatures
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets list of features enabled on app that are non-blocking\nbut cannot be cloned. The app can still be cloned\nbut the features in this list will not be set up on cloned app.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "unsupportedFeatures")]

      public IList<SiteCloneabilityCriterion> UnsupportedFeatures { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="unsupportedFeatures")>

      Public Property UnsupportedFeatures As IList(Of SiteCloneabilityCriterion)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
  overload: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: unsupportedFeatures
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics
  id: BlockingCharacteristics
  parent: Microsoft.Azure.Management.WebSites.Models.SiteCloneability
  langs:
  - csharp
  - vb
  name: BlockingCharacteristics
  nameWithType: SiteCloneability.BlockingCharacteristics
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlockingCharacteristics
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/SiteCloneability.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets list of blocking application characteristics.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blockingCharacteristics")]

      public IList<SiteCloneabilityCriterion> BlockingCharacteristics { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blockingCharacteristics")>

      Public Property BlockingCharacteristics As IList(Of SiteCloneabilityCriterion)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
  overload: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blockingCharacteristics
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.#ctor
  isExternal: false
  name: SiteCloneability
  nameWithType: SiteCloneability.SiteCloneability
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.SiteCloneability
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CloneAbilityResult>
  nameWithType: Nullable<CloneAbilityResult>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult>
  nameWithType.vb: Nullable(Of CloneAbilityResult)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult)
  name.vb: Nullable(Of CloneAbilityResult)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult
    name: CloneAbilityResult
    nameWithType: CloneAbilityResult
    fullName: Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult
    name: CloneAbilityResult
    nameWithType: CloneAbilityResult
    fullName: Microsoft.Azure.Management.WebSites.Models.CloneAbilityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SiteCloneabilityCriterion>
  nameWithType: IList<SiteCloneabilityCriterion>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion>
  nameWithType.vb: IList(Of SiteCloneabilityCriterion)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion)
  name.vb: IList(Of SiteCloneabilityCriterion)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion
    name: SiteCloneabilityCriterion
    nameWithType: SiteCloneabilityCriterion
    fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion
    name: SiteCloneabilityCriterion
    nameWithType: SiteCloneabilityCriterion
    fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneabilityCriterion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result
  isExternal: false
  name: Result
  nameWithType: SiteCloneability.Result
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.Result
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures
  isExternal: false
  name: BlockingFeatures
  nameWithType: SiteCloneability.BlockingFeatures
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingFeatures
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures
  isExternal: false
  name: UnsupportedFeatures
  nameWithType: SiteCloneability.UnsupportedFeatures
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.UnsupportedFeatures
- uid: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics
  isExternal: false
  name: BlockingCharacteristics
  nameWithType: SiteCloneability.BlockingCharacteristics
  fullName: Microsoft.Azure.Management.WebSites.Models.SiteCloneability.BlockingCharacteristics
