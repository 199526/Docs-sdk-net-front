### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  commentId: T:Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  id: RestoreRequest
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType},System.Nullable{System.Boolean},System.String)
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl
  - Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate
  langs:
  - csharp
  - vb
  name: RestoreRequest
  nameWithType: RestoreRequest
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RestoreRequest
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of a restore request.\n"
  example: []
  syntax:
    content: >-
      [JsonTransformation]

      public class RestoreRequest : Resource, IResource
    content.vb: >-
      <JsonTransformation>

      Public Class RestoreRequest
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Rest.Serialization.JsonTransformationAttribute
    ctor: Microsoft.Rest.Serialization.JsonTransformationAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: RestoreRequest()
  nameWithType: RestoreRequest.RestoreRequest()
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.RestoreRequest()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the RestoreRequest class.\n"
  example: []
  syntax:
    content: public RestoreRequest()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType},System.Nullable{System.Boolean},System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType},System.Nullable{System.Boolean},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting},System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType},System.Nullable{System.Boolean},System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: RestoreRequest(String, String, String, String, String, IDictionary<String, String>, String, String, Nullable<Boolean>, String, IList<DatabaseBackupSetting>, Nullable<Boolean>, Nullable<BackupRestoreOperationType>, Nullable<Boolean>, String)
  nameWithType: RestoreRequest.RestoreRequest(String, String, String, String, String, IDictionary<String, String>, String, String, Nullable<Boolean>, String, IList<DatabaseBackupSetting>, Nullable<Boolean>, Nullable<BackupRestoreOperationType>, Nullable<Boolean>, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.RestoreRequest(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String, System.Nullable<System.Boolean>, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting>, System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType>, System.Nullable<System.Boolean>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the RestoreRequest class.\n"
  example: []
  syntax:
    content: public RestoreRequest(string location, string id = null, string name = null, string kind = null, string type = null, IDictionary<string, string> tags = null, string storageAccountUrl = null, string blobName = null, bool ? overwrite = null, string siteName = null, IList<DatabaseBackupSetting> databases = null, bool ? ignoreConflictingHostNames = null, BackupRestoreOperationType? operationType = null, bool ? adjustConnectionStrings = null, string hostingEnvironment = null)
    parameters:
    - id: location
      type: System.String
      description: Resource Location.
    - id: id
      type: System.String
      description: Resource Id.
    - id: name
      type: System.String
      description: Resource Name.
    - id: kind
      type: System.String
      description: Kind of resource.
    - id: type
      type: System.String
      description: Resource type.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    - id: storageAccountUrl
      type: System.String
      description: SAS URL to the container.
    - id: blobName
      type: System.String
      description: >-
        Name of a blob which contains the

        backup.
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: >-
        &lt;code&gt;true&lt;/code&gt; if the

        restore operation can overwrite target app; otherwise,

        &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;true&lt;/code&gt; is

        needed if trying to restore over an existing app.
    - id: siteName
      type: System.String
      description: Name of an app.
    - id: databases
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
      description: >-
        Collection of databases which should be

        restored. This list has to match the list of databases included in

        the backup.
    - id: ignoreConflictingHostNames
      type: System.Nullable{System.Boolean}
      description: >-
        Changes a logic when

        restoring an app with custom domains. &lt;code&gt;true&lt;/code&gt;

        to remove custom domains automatically. If

        &lt;code&gt;false&lt;/code&gt;, custom domains are added to

        the app's object when it is being restored, but that might fail due

        to conflicts during the operation.
    - id: operationType
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType}
      description: >-
        Operation type. Possible values

        include: 'Default', 'Clone', 'Relocation'
    - id: adjustConnectionStrings
      type: System.Nullable{System.Boolean}
      description: >-
        &lt;code&gt;true&lt;/code&gt;

        if SiteConfig.ConnectionStrings should be set in new app;

        otherwise, &lt;code&gt;false&lt;/code&gt;.
    - id: hostingEnvironment
      type: System.String
      description: >-
        App Service Environment name, if

        needed (only when restoring an app to an App Service

        Environment).
    content.vb: Public Sub New(location As String, id As String = Nothing, name As String = Nothing, kind As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, storageAccountUrl As String = Nothing, blobName As String = Nothing, overwrite As Boolean? = Nothing, siteName As String = Nothing, databases As IList(Of DatabaseBackupSetting) = Nothing, ignoreConflictingHostNames As Boolean? = Nothing, operationType As BackupRestoreOperationType? = Nothing, adjustConnectionStrings As Boolean? = Nothing, hostingEnvironment As String = Nothing)
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor*
  nameWithType.vb: RestoreRequest.RestoreRequest(String, String, String, String, String, IDictionary(Of String, String), String, String, Nullable(Of Boolean), String, IList(Of DatabaseBackupSetting), Nullable(Of Boolean), Nullable(Of BackupRestoreOperationType), Nullable(Of Boolean), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.RestoreRequest(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String, System.Nullable(Of System.Boolean), System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting), System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType), System.Nullable(Of System.Boolean), System.String)
  name.vb: RestoreRequest(String, String, String, String, String, IDictionary(Of String, String), String, String, Nullable(Of Boolean), String, IList(Of DatabaseBackupSetting), Nullable(Of Boolean), Nullable(Of BackupRestoreOperationType), Nullable(Of Boolean), String)
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl
  id: StorageAccountUrl
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: StorageAccountUrl
  nameWithType: RestoreRequest.StorageAccountUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets SAS URL to the container.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.storageAccountUrl")]

      public string StorageAccountUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="properties.storageAccountUrl")>

      Public Property StorageAccountUrl As String
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.storageAccountUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName
  id: BlobName
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: BlobName
  nameWithType: RestoreRequest.BlobName
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets name of a blob which contains the backup.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.blobName")]

      public string BlobName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="properties.blobName")>

      Public Property BlobName As String
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.blobName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite
  id: Overwrite
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: Overwrite
  nameWithType: RestoreRequest.Overwrite
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Overwrite
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; if the\nrestore operation can overwrite target app; otherwise,\n&amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.\n&amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; is needed if trying\nto restore over an existing app.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.overwrite")]

      public bool ? Overwrite { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="properties.overwrite")>

      Public Property Overwrite As Boolean?
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.overwrite
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName
  id: SiteName
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: SiteName
  nameWithType: RestoreRequest.SiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SiteName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets name of an app.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.siteName")]

      public string SiteName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="properties.siteName")>

      Public Property SiteName As String
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.siteName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases
  id: Databases
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: Databases
  nameWithType: RestoreRequest.Databases
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Databases
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets collection of databases which should be restored. This\nlist has to match the list of databases included in the backup.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.databases")]

      public IList<DatabaseBackupSetting> Databases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
    content.vb: >-
      <JsonProperty(PropertyName:="properties.databases")>

      Public Property Databases As IList(Of DatabaseBackupSetting)
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.databases
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames
  id: IgnoreConflictingHostNames
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: IgnoreConflictingHostNames
  nameWithType: RestoreRequest.IgnoreConflictingHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IgnoreConflictingHostNames
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets changes a logic when restoring an app with custom\ndomains. &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; to remove\ncustom domains automatically. If\n&amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;, custom domains are\nadded to\nthe app's object when it is being restored, but that might fail due\nto conflicts during the operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.ignoreConflictingHostNames")]

      public bool ? IgnoreConflictingHostNames { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="properties.ignoreConflictingHostNames")>

      Public Property IgnoreConflictingHostNames As Boolean?
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.ignoreConflictingHostNames
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType
  id: OperationType
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: OperationType
  nameWithType: RestoreRequest.OperationType
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OperationType
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets operation type. Possible values include: 'Default',\n'Clone', 'Relocation'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.operationType")]

      public BackupRestoreOperationType? OperationType { get; set; }
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType}
    content.vb: >-
      <JsonProperty(PropertyName:="properties.operationType")>

      Public Property OperationType As BackupRestoreOperationType?
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.operationType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings
  id: AdjustConnectionStrings
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: AdjustConnectionStrings
  nameWithType: RestoreRequest.AdjustConnectionStrings
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdjustConnectionStrings
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; if\nSiteConfig.ConnectionStrings should be set in new app; otherwise,\n&amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.adjustConnectionStrings")]

      public bool ? AdjustConnectionStrings { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="properties.adjustConnectionStrings")>

      Public Property AdjustConnectionStrings As Boolean?
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.adjustConnectionStrings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment
  id: HostingEnvironment
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: HostingEnvironment
  nameWithType: RestoreRequest.HostingEnvironment
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostingEnvironment
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets app Service Environment name, if needed (only when\nrestoring an app to an App Service Environment).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostingEnvironment")]

      public string HostingEnvironment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostingEnvironment")>

      Public Property HostingEnvironment As String
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostingEnvironment
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.RestoreRequest
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: RestoreRequest.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/RestoreRequest.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: true
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Kind
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Kind
  nameWithType: Resource.Kind
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Kind
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.#ctor
  isExternal: false
  name: RestoreRequest
  nameWithType: RestoreRequest.RestoreRequest
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.RestoreRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<DatabaseBackupSetting>
  nameWithType: IList<DatabaseBackupSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting>
  nameWithType.vb: IList(Of DatabaseBackupSetting)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting)
  name.vb: IList(Of DatabaseBackupSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
    name: DatabaseBackupSetting
    nameWithType: DatabaseBackupSetting
    fullName: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
    name: DatabaseBackupSetting
    nameWithType: DatabaseBackupSetting
    fullName: Microsoft.Azure.Management.WebSites.Models.DatabaseBackupSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<BackupRestoreOperationType>
  nameWithType: Nullable<BackupRestoreOperationType>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType>
  nameWithType.vb: Nullable(Of BackupRestoreOperationType)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType)
  name.vb: Nullable(Of BackupRestoreOperationType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType
    name: BackupRestoreOperationType
    nameWithType: BackupRestoreOperationType
    fullName: Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType
    name: BackupRestoreOperationType
    nameWithType: BackupRestoreOperationType
    fullName: Microsoft.Azure.Management.WebSites.Models.BackupRestoreOperationType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl
  isExternal: false
  name: StorageAccountUrl
  nameWithType: RestoreRequest.StorageAccountUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.StorageAccountUrl
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName
  isExternal: false
  name: BlobName
  nameWithType: RestoreRequest.BlobName
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.BlobName
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite
  isExternal: false
  name: Overwrite
  nameWithType: RestoreRequest.Overwrite
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Overwrite
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName
  isExternal: false
  name: SiteName
  nameWithType: RestoreRequest.SiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.SiteName
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases
  isExternal: false
  name: Databases
  nameWithType: RestoreRequest.Databases
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Databases
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames
  isExternal: false
  name: IgnoreConflictingHostNames
  nameWithType: RestoreRequest.IgnoreConflictingHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.IgnoreConflictingHostNames
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType
  isExternal: false
  name: OperationType
  nameWithType: RestoreRequest.OperationType
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.OperationType
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings
  isExternal: false
  name: AdjustConnectionStrings
  nameWithType: RestoreRequest.AdjustConnectionStrings
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.AdjustConnectionStrings
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment
  isExternal: false
  name: HostingEnvironment
  nameWithType: RestoreRequest.HostingEnvironment
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.HostingEnvironment
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate
  isExternal: false
  name: Validate
  nameWithType: RestoreRequest.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.RestoreRequest.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
