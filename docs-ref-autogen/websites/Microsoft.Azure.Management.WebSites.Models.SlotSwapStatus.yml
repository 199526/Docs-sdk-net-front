### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  commentId: T:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  id: SlotSwapStatus
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor
  - Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor(System.Nullable{System.DateTime},System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName
  - Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName
  - Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc
  langs:
  - csharp
  - vb
  name: SlotSwapStatus
  nameWithType: SlotSwapStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SlotSwapStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nThe status of the last successfull slot swap operation.\n"
  example: []
  syntax:
    content: public class SlotSwapStatus
    content.vb: Public Class SlotSwapStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  langs:
  - csharp
  - vb
  name: SlotSwapStatus()
  nameWithType: SlotSwapStatus.SlotSwapStatus()
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SlotSwapStatus()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the SlotSwapStatus class.\n"
  example: []
  syntax:
    content: public SlotSwapStatus()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor(System.Nullable{System.DateTime},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor(System.Nullable{System.DateTime},System.String,System.String)
  id: '#ctor(System.Nullable{System.DateTime},System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  langs:
  - csharp
  - vb
  name: SlotSwapStatus(Nullable<DateTime>, String, String)
  nameWithType: SlotSwapStatus.SlotSwapStatus(Nullable<DateTime>, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SlotSwapStatus(System.Nullable<System.DateTime>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the SlotSwapStatus class.\n"
  example: []
  syntax:
    content: public SlotSwapStatus(DateTime? timestampUtc = null, string sourceSlotName = null, string destinationSlotName = null)
    content.vb: Public Sub New(timestampUtc As Date? = Nothing, sourceSlotName As String = Nothing, destinationSlotName As String = Nothing)
    parameters:
    - id: timestampUtc
      type: System.Nullable{System.DateTime}
      description: >-
        The time the last successful slot swap

        completed.
    - id: sourceSlotName
      type: System.String
      description: >-
        The source slot of the last swap

        operation.
    - id: destinationSlotName
      type: System.String
      description: >-
        The destination slot of the last

        swap operation.
  overload: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor*
  nameWithType.vb: SlotSwapStatus.SlotSwapStatus(Nullable(Of DateTime), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SlotSwapStatus(System.Nullable(Of System.DateTime), System.String, System.String)
  name.vb: SlotSwapStatus(Nullable(Of DateTime), String, String)
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc
  id: TimestampUtc
  parent: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  langs:
  - csharp
  - vb
  name: TimestampUtc
  nameWithType: SlotSwapStatus.TimestampUtc
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TimestampUtc
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets the time the last successful slot swap completed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "timestampUtc")]

      public DateTime? TimestampUtc { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="timestampUtc")>

      Public Property TimestampUtc As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: timestampUtc
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName
  id: SourceSlotName
  parent: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  langs:
  - csharp
  - vb
  name: SourceSlotName
  nameWithType: SlotSwapStatus.SourceSlotName
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceSlotName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets the source slot of the last swap operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceSlotName")]

      public string SourceSlotName { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourceSlotName")>

      Public Property SourceSlotName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceSlotName
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName
  id: DestinationSlotName
  parent: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus
  langs:
  - csharp
  - vb
  name: DestinationSlotName
  nameWithType: SlotSwapStatus.DestinationSlotName
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DestinationSlotName
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotSwapStatus.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets the destination slot of the last swap operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "destinationSlotName")]

      public string DestinationSlotName { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="destinationSlotName")>

      Public Property DestinationSlotName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: destinationSlotName
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.#ctor
  isExternal: false
  name: SlotSwapStatus
  nameWithType: SlotSwapStatus.SlotSwapStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SlotSwapStatus
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc
  isExternal: false
  name: TimestampUtc
  nameWithType: SlotSwapStatus.TimestampUtc
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.TimestampUtc
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName
  isExternal: false
  name: SourceSlotName
  nameWithType: SlotSwapStatus.SourceSlotName
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.SourceSlotName
- uid: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName
  isExternal: false
  name: DestinationSlotName
  nameWithType: SlotSwapStatus.DestinationSlotName
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotSwapStatus.DestinationSlotName
