### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  commentId: T:Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  id: HostNameSslState
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState},System.String,System.String,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate
  - Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP
  langs:
  - csharp
  - vb
  name: HostNameSslState
  nameWithType: HostNameSslState
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostNameSslState
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSSL-enabled hostname.\n"
  example: []
  syntax:
    content: public class HostNameSslState
    content.vb: Public Class HostNameSslState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: HostNameSslState()
  nameWithType: HostNameSslState.HostNameSslState()
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.HostNameSslState()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HostNameSslState class.\n"
  example: []
  syntax:
    content: public HostNameSslState()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState},System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState},System.String,System.String,System.Nullable{System.Boolean})
  id: '#ctor(System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState},System.String,System.String,System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: HostNameSslState(String, Nullable<SslState>, String, String, Nullable<Boolean>)
  nameWithType: HostNameSslState.HostNameSslState(String, Nullable<SslState>, String, String, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.HostNameSslState(System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.SslState>, System.String, System.String, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HostNameSslState class.\n"
  example: []
  syntax:
    content: public HostNameSslState(string name = null, SslState? sslState = null, string virtualIP = null, string thumbprint = null, bool ? toUpdate = null)
    content.vb: Public Sub New(name As String = Nothing, sslState As SslState? = Nothing, virtualIP As String = Nothing, thumbprint As String = Nothing, toUpdate As Boolean? = Nothing)
    parameters:
    - id: name
      type: System.String
      description: Hostname.
    - id: sslState
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState}
      description: >-
        SSL type. Possible values include:

        'Disabled', 'SniEnabled', 'IpBasedEnabled'
    - id: virtualIP
      type: System.String
      description: >-
        Virtual IP address assigned to the hostname

        if IP based SSL is enabled.
    - id: thumbprint
      type: System.String
      description: SSL certificate thumbprint.
    - id: toUpdate
      type: System.Nullable{System.Boolean}
      description: >-
        Set to &lt;code&gt;true&lt;/code&gt; to

        update existing hostname.
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor*
  nameWithType.vb: HostNameSslState.HostNameSslState(String, Nullable(Of SslState), String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.HostNameSslState(System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.SslState), System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: HostNameSslState(String, Nullable(Of SslState), String, String, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name
  id: Name
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HostNameSslState.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets hostname.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState
  id: SslState
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: SslState
  nameWithType: HostNameSslState.SslState
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SslState
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets SSL type. Possible values include: 'Disabled',\n'SniEnabled', 'IpBasedEnabled'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sslState")]

      public SslState? SslState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sslState")>

      Public Property SslState As SslState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState}
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sslState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP
  id: VirtualIP
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: VirtualIP
  nameWithType: HostNameSslState.VirtualIP
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualIP
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets virtual IP address assigned to the hostname if IP\nbased SSL is enabled.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "virtualIP")]

      public string VirtualIP { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="virtualIP")>

      Public Property VirtualIP As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: virtualIP
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: HostNameSslState.Thumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets SSL certificate thumbprint.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "thumbprint")]

      public string Thumbprint { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="thumbprint")>

      Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: thumbprint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate
  commentId: P:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate
  id: ToUpdate
  parent: Microsoft.Azure.Management.WebSites.Models.HostNameSslState
  langs:
  - csharp
  - vb
  name: ToUpdate
  nameWithType: HostNameSslState.ToUpdate
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ToUpdate
    path: src/azure-sdk-for-net/src/ResourceManagement/WebSites/Microsoft.Azure.Management.Websites/Generated/Models/HostNameSslState.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGets or sets set to &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;\nto update existing hostname.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "toUpdate")]

      public bool ? ToUpdate { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="toUpdate")>

      Public Property ToUpdate As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: toUpdate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.#ctor
  isExternal: false
  name: HostNameSslState
  nameWithType: HostNameSslState.HostNameSslState
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.HostNameSslState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.SslState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SslState>
  nameWithType: Nullable<SslState>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.SslState>
  nameWithType.vb: Nullable(Of SslState)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.SslState)
  name.vb: Nullable(Of SslState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.SslState
    name: SslState
    nameWithType: SslState
    fullName: Microsoft.Azure.Management.WebSites.Models.SslState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.SslState
    name: SslState
    nameWithType: SslState
    fullName: Microsoft.Azure.Management.WebSites.Models.SslState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name
  isExternal: false
  name: Name
  nameWithType: HostNameSslState.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Name
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState
  isExternal: false
  name: SslState
  nameWithType: HostNameSslState.SslState
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.SslState
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP
  isExternal: false
  name: VirtualIP
  nameWithType: HostNameSslState.VirtualIP
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.VirtualIP
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: HostNameSslState.Thumbprint
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.Thumbprint
- uid: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate
  isExternal: false
  name: ToUpdate
  nameWithType: HostNameSslState.ToUpdate
  fullName: Microsoft.Azure.Management.WebSites.Models.HostNameSslState.ToUpdate
