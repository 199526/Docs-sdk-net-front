### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.Disk
  commentId: T:Microsoft.Azure.Management.Compute.Models.Disk
  id: Disk
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  - Microsoft.Azure.Management.Compute.Models.Disk.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.CreationData,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes},System.Nullable{System.Int32},Microsoft.Azure.Management.Compute.Models.EncryptionSettings,System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.Disk.AccountType
  - Microsoft.Azure.Management.Compute.Models.Disk.CreationData
  - Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  - Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings
  - Microsoft.Azure.Management.Compute.Models.Disk.OsType
  - Microsoft.Azure.Management.Compute.Models.Disk.OwnerId
  - Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState
  - Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated
  - Microsoft.Azure.Management.Compute.Models.Disk.Validate
  langs:
  - csharp
  - vb
  name: Disk
  nameWithType: Disk
  fullName: Microsoft.Azure.Management.Compute.Models.Disk
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Disk
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDisk resource.\n"
  example: []
  syntax:
    content: >-
      [JsonTransformation]

      public class Disk : Resource, IResource
    content.vb: >-
      <JsonTransformation>

      Public Class Disk
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Compute.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Compute.Models.Resource.Id
  - Microsoft.Azure.Management.Compute.Models.Resource.Name
  - Microsoft.Azure.Management.Compute.Models.Resource.Type
  - Microsoft.Azure.Management.Compute.Models.Resource.Location
  - Microsoft.Azure.Management.Compute.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Rest.Serialization.JsonTransformationAttribute
    ctor: Microsoft.Rest.Serialization.JsonTransformationAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Disk()
  nameWithType: Disk.Disk()
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Disk()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the Disk class.\n"
  example: []
  syntax:
    content: public Disk()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.Disk.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.CreationData,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes},System.Nullable{System.Int32},Microsoft.Azure.Management.Compute.Models.EncryptionSettings,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.Disk.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.CreationData,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes},System.Nullable{System.Int32},Microsoft.Azure.Management.Compute.Models.EncryptionSettings,System.String,System.String)
  id: '#ctor(System.String,Microsoft.Azure.Management.Compute.Models.CreationData,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes},System.Nullable{System.Int32},Microsoft.Azure.Management.Compute.Models.EncryptionSettings,System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Disk(String, CreationData, String, String, String, IDictionary<String, String>, Nullable<StorageAccountTypes>, Nullable<DateTime>, Nullable<OperatingSystemTypes>, Nullable<Int32>, EncryptionSettings, String, String)
  nameWithType: Disk.Disk(String, CreationData, String, String, String, IDictionary<String, String>, Nullable<StorageAccountTypes>, Nullable<DateTime>, Nullable<OperatingSystemTypes>, Nullable<Int32>, EncryptionSettings, String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Disk(System.String, Microsoft.Azure.Management.Compute.Models.CreationData, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<Microsoft.Azure.Management.Compute.Models.StorageAccountTypes>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes>, System.Nullable<System.Int32>, Microsoft.Azure.Management.Compute.Models.EncryptionSettings, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the Disk class.\n"
  example: []
  syntax:
    content: public Disk(string location, CreationData creationData, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, StorageAccountTypes? accountType = null, DateTime? timeCreated = null, OperatingSystemTypes? osType = null, int ? diskSizeGB = null, EncryptionSettings encryptionSettings = null, string ownerId = null, string provisioningState = null)
    content.vb: Public Sub New(location As String, creationData As CreationData, id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, accountType As StorageAccountTypes? = Nothing, timeCreated As Date? = Nothing, osType As OperatingSystemTypes? = Nothing, diskSizeGB As Integer? = Nothing, encryptionSettings As EncryptionSettings = Nothing, ownerId As String = Nothing, provisioningState As String = Nothing)
    parameters:
    - id: location
      type: System.String
      description: Resource location
    - id: creationData
      type: Microsoft.Azure.Management.Compute.Models.CreationData
      description: >-
        Disk source information. CreationData

        information cannot be changed after the disk has been

        created.
    - id: id
      type: System.String
      description: Resource Id
    - id: name
      type: System.String
      description: Resource name
    - id: type
      type: System.String
      description: Resource type
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags
    - id: accountType
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes}
      description: >-
        the storage account type of the disk.

        Possible values include: 'Standard_LRS', 'Premium_LRS'
    - id: timeCreated
      type: System.Nullable{System.DateTime}
      description: >-
        The time when the disk was

        created.
    - id: osType
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes}
      description: >-
        The Operating System type. Possible values

        include: 'Windows', 'Linux'
    - id: diskSizeGB
      type: System.Nullable{System.Int32}
      description: >-
        If creationData.createOption is Empty,

        this field is mandatory and it indicates the size of the VHD to

        create. If this field is present for updates or creation with other

        options, it indicates a resize. Resizes are only allowed if the

        disk is not attached to a running VM, and can only increase the

        disk's size.
    - id: encryptionSettings
      type: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
      description: >-
        Encryption settings for disk or

        snapshot
    - id: ownerId
      type: System.String
      description: >-
        A relative URI containing the VM id that has

        the disk attached.
    - id: provisioningState
      type: System.String
      description: >-
        The disk provisioning

        state.
  overload: Microsoft.Azure.Management.Compute.Models.Disk.#ctor*
  nameWithType.vb: Disk.Disk(String, CreationData, String, String, String, IDictionary(Of String, String), Nullable(Of StorageAccountTypes), Nullable(Of DateTime), Nullable(Of OperatingSystemTypes), Nullable(Of Int32), EncryptionSettings, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.Disk.Disk(System.String, Microsoft.Azure.Management.Compute.Models.CreationData, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of Microsoft.Azure.Management.Compute.Models.StorageAccountTypes), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes), System.Nullable(Of System.Int32), Microsoft.Azure.Management.Compute.Models.EncryptionSettings, System.String, System.String)
  name.vb: Disk(String, CreationData, String, String, String, IDictionary(Of String, String), Nullable(Of StorageAccountTypes), Nullable(Of DateTime), Nullable(Of OperatingSystemTypes), Nullable(Of Int32), EncryptionSettings, String, String)
- uid: Microsoft.Azure.Management.Compute.Models.Disk.AccountType
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.AccountType
  id: AccountType
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: AccountType
  nameWithType: Disk.AccountType
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.AccountType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccountType
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the storage account type of the disk. Possible values\ninclude: 'Standard_LRS', 'Premium_LRS'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.accountType")]

      public StorageAccountTypes? AccountType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.accountType")>

      Public Property AccountType As StorageAccountTypes?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes}
  overload: Microsoft.Azure.Management.Compute.Models.Disk.AccountType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.accountType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated
  id: TimeCreated
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: TimeCreated
  nameWithType: Disk.TimeCreated
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TimeCreated
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets the time when the disk was created.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.timeCreated")]

      public DateTime? TimeCreated { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.timeCreated")>

      Public Property TimeCreated As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.timeCreated
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Compute.Models.Disk.OsType
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.OsType
  id: OsType
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: OsType
  nameWithType: Disk.OsType
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.OsType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsType
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Operating System type. Possible values include:\n'Windows', 'Linux'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.osType")]

      public OperatingSystemTypes? OsType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.osType")>

      Public Property OsType As OperatingSystemTypes?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes}
  overload: Microsoft.Azure.Management.Compute.Models.Disk.OsType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.osType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.CreationData
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.CreationData
  id: CreationData
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: CreationData
  nameWithType: Disk.CreationData
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.CreationData
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationData
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets disk source information. CreationData information\ncannot be changed after the disk has been created.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.creationData")]

      public CreationData CreationData { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.creationData")>

      Public Property CreationData As CreationData
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.CreationData
  overload: Microsoft.Azure.Management.Compute.Models.Disk.CreationData*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.creationData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  id: DiskSizeGB
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: DiskSizeGB
  nameWithType: Disk.DiskSizeGB
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DiskSizeGB
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets if creationData.createOption is Empty, this field is\nmandatory and it indicates the size of the VHD to create. If this\nfield is present for updates or creation with other options, it\nindicates a resize. Resizes are only allowed if the disk is not\nattached to a running VM, and can only increase the disk's size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.diskSizeGB")]

      public int ? DiskSizeGB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.diskSizeGB")>

      Public Property DiskSizeGB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.diskSizeGB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings
  id: EncryptionSettings
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: EncryptionSettings
  nameWithType: Disk.EncryptionSettings
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets encryption settings for disk or snapshot\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.encryptionSettings")]

      public EncryptionSettings EncryptionSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.encryptionSettings")>

      Public Property EncryptionSettings As EncryptionSettings
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  overload: Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.encryptionSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.OwnerId
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.OwnerId
  id: OwnerId
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: OwnerId
  nameWithType: Disk.OwnerId
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.OwnerId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OwnerId
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets a relative URI containing the VM id that has the disk\nattached.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.ownerId")]

      public string OwnerId { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.ownerId")>

      Public Property OwnerId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.Disk.OwnerId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.ownerId
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: Disk.ProvisioningState
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets the disk provisioning state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Compute.Models.Disk.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.Disk.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Disk.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/Disk.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  overload: Microsoft.Azure.Management.Compute.Models.Disk.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Compute.Models.Resource
  commentId: T:Microsoft.Azure.Management.Compute.Models.Resource
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Compute.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: true
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Id
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Id
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Name
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Name
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Type
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Type
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Location
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Location
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Compute.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Compute.Models.Disk.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  isExternal: false
  name: Disk
  nameWithType: Disk.Disk
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Disk
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.CreationData
  commentId: T:Microsoft.Azure.Management.Compute.Models.CreationData
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: CreationData
  nameWithType: CreationData
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.StorageAccountTypes}
  parent: System
  definition: System.Nullable`1
  name: Nullable<StorageAccountTypes>
  nameWithType: Nullable<StorageAccountTypes>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.StorageAccountTypes>
  nameWithType.vb: Nullable(Of StorageAccountTypes)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.StorageAccountTypes)
  name.vb: Nullable(Of StorageAccountTypes)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.StorageAccountTypes
    name: StorageAccountTypes
    nameWithType: StorageAccountTypes
    fullName: Microsoft.Azure.Management.Compute.Models.StorageAccountTypes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.StorageAccountTypes
    name: StorageAccountTypes
    nameWithType: StorageAccountTypes
    fullName: Microsoft.Azure.Management.Compute.Models.StorageAccountTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OperatingSystemTypes>
  nameWithType: Nullable<OperatingSystemTypes>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes>
  nameWithType.vb: Nullable(Of OperatingSystemTypes)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes)
  name.vb: Nullable(Of OperatingSystemTypes)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
    name: OperatingSystemTypes
    nameWithType: OperatingSystemTypes
    fullName: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
    name: OperatingSystemTypes
    nameWithType: OperatingSystemTypes
    fullName: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  commentId: T:Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: EncryptionSettings
  nameWithType: EncryptionSettings
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.Disk.AccountType*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.AccountType
  isExternal: false
  name: AccountType
  nameWithType: Disk.AccountType
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.AccountType
- uid: Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated
  isExternal: false
  name: TimeCreated
  nameWithType: Disk.TimeCreated
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.TimeCreated
- uid: Microsoft.Azure.Management.Compute.Models.Disk.OsType*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.OsType
  isExternal: false
  name: OsType
  nameWithType: Disk.OsType
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.OsType
- uid: Microsoft.Azure.Management.Compute.Models.Disk.CreationData*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.CreationData
  isExternal: false
  name: CreationData
  nameWithType: Disk.CreationData
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.CreationData
- uid: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  isExternal: false
  name: DiskSizeGB
  nameWithType: Disk.DiskSizeGB
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
- uid: Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings
  isExternal: false
  name: EncryptionSettings
  nameWithType: Disk.EncryptionSettings
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.EncryptionSettings
- uid: Microsoft.Azure.Management.Compute.Models.Disk.OwnerId*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.OwnerId
  isExternal: false
  name: OwnerId
  nameWithType: Disk.OwnerId
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.OwnerId
- uid: Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: Disk.ProvisioningState
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.ProvisioningState
- uid: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.Resource.Validate
  parent: Microsoft.Azure.Management.Compute.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Compute.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Compute.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.Compute.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.Disk.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.Disk.Validate
  isExternal: false
  name: Validate
  nameWithType: Disk.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
