### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  commentId: T:Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  id: EncryptionSettings
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor
  - Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor(System.Nullable{System.Boolean},Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference,Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference)
  - Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey
  - Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled
  - Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey
  - Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate
  langs:
  - csharp
  - vb
  name: EncryptionSettings
  nameWithType: EncryptionSettings
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nEncryption settings for disk or snapshot\n"
  example: []
  syntax:
    content: public class EncryptionSettings
    content.vb: Public Class EncryptionSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  langs:
  - csharp
  - vb
  name: EncryptionSettings()
  nameWithType: EncryptionSettings.EncryptionSettings()
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.EncryptionSettings()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the EncryptionSettings class.\n"
  example: []
  syntax:
    content: public EncryptionSettings()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor(System.Nullable{System.Boolean},Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference,Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference)
  commentId: M:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor(System.Nullable{System.Boolean},Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference,Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference)
  id: '#ctor(System.Nullable{System.Boolean},Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference,Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference)'
  parent: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  langs:
  - csharp
  - vb
  name: EncryptionSettings(Nullable<Boolean>, KeyVaultAndSecretReference, KeyVaultAndKeyReference)
  nameWithType: EncryptionSettings.EncryptionSettings(Nullable<Boolean>, KeyVaultAndSecretReference, KeyVaultAndKeyReference)
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.EncryptionSettings(System.Nullable<System.Boolean>, Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference, Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the EncryptionSettings class.\n"
  example: []
  syntax:
    content: public EncryptionSettings(bool ? enabled = null, KeyVaultAndSecretReference diskEncryptionKey = null, KeyVaultAndKeyReference keyEncryptionKey = null)
    parameters:
    - id: enabled
      type: System.Nullable{System.Boolean}
      description: >-
        Set this flag to true and provide

        DiskEncryptionKey and optional KeyEncryptionKey to enable

        encryption. Set this flag to false and remove DiskEncryptionKey and

        KeyEncryptionKey to disable encryption. If EncryptionSettings is

        null in the request object, the existing settings remain

        unchanged.
    - id: diskEncryptionKey
      type: Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference
      description: >-
        Key Vault Secret Url and vault id

        of the disk encryption key
    - id: keyEncryptionKey
      type: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
      description: >-
        Key Vault Key Url and vault id of

        the key encryption key
    content.vb: Public Sub New(enabled As Boolean? = Nothing, diskEncryptionKey As KeyVaultAndSecretReference = Nothing, keyEncryptionKey As KeyVaultAndKeyReference = Nothing)
  overload: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor*
  nameWithType.vb: EncryptionSettings.EncryptionSettings(Nullable(Of Boolean), KeyVaultAndSecretReference, KeyVaultAndKeyReference)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.EncryptionSettings(System.Nullable(Of System.Boolean), Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference, Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference)
  name.vb: EncryptionSettings(Nullable(Of Boolean), KeyVaultAndSecretReference, KeyVaultAndKeyReference)
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled
  commentId: P:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled
  id: Enabled
  parent: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: EncryptionSettings.Enabled
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Enabled
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets set this flag to true and provide DiskEncryptionKey\nand optional KeyEncryptionKey to enable encryption. Set this flag\nto false and remove DiskEncryptionKey and KeyEncryptionKey to\ndisable encryption. If EncryptionSettings is null in the request\nobject, the existing settings remain unchanged.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enabled")]

      public bool ? Enabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty(PropertyName:="enabled")>

      Public Property Enabled As Boolean?
  overload: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey
  commentId: P:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey
  id: DiskEncryptionKey
  parent: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  langs:
  - csharp
  - vb
  name: DiskEncryptionKey
  nameWithType: EncryptionSettings.DiskEncryptionKey
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DiskEncryptionKey
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets key Vault Secret Url and vault id of the disk\nencryption key\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "diskEncryptionKey")]

      public KeyVaultAndSecretReference DiskEncryptionKey { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference
    content.vb: >-
      <JsonProperty(PropertyName:="diskEncryptionKey")>

      Public Property DiskEncryptionKey As KeyVaultAndSecretReference
  overload: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: diskEncryptionKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey
  commentId: P:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey
  id: KeyEncryptionKey
  parent: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  langs:
  - csharp
  - vb
  name: KeyEncryptionKey
  nameWithType: EncryptionSettings.KeyEncryptionKey
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyEncryptionKey
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets key Vault Key Url and vault id of the key encryption\nkey\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "keyEncryptionKey")]

      public KeyVaultAndKeyReference KeyEncryptionKey { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
    content.vb: >-
      <JsonProperty(PropertyName:="keyEncryptionKey")>

      Public Property KeyEncryptionKey As KeyVaultAndKeyReference
  overload: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: keyEncryptionKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.EncryptionSettings
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: EncryptionSettings.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/EncryptionSettings.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.#ctor
  isExternal: false
  name: EncryptionSettings
  nameWithType: EncryptionSettings.EncryptionSettings
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.EncryptionSettings
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference
  commentId: T:Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: KeyVaultAndSecretReference
  nameWithType: KeyVaultAndSecretReference
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndSecretReference
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  commentId: T:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: KeyVaultAndKeyReference
  nameWithType: KeyVaultAndKeyReference
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled
  isExternal: false
  name: Enabled
  nameWithType: EncryptionSettings.Enabled
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Enabled
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey
  isExternal: false
  name: DiskEncryptionKey
  nameWithType: EncryptionSettings.DiskEncryptionKey
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.DiskEncryptionKey
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey
  isExternal: false
  name: KeyEncryptionKey
  nameWithType: EncryptionSettings.KeyEncryptionKey
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.KeyEncryptionKey
- uid: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate
  isExternal: false
  name: Validate
  nameWithType: EncryptionSettings.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.EncryptionSettings.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
