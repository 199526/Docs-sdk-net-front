### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  commentId: T:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  id: KeyVaultAndKeyReference
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor
  - Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor(Microsoft.Azure.Management.Compute.Models.SourceVault,System.String)
  - Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl
  - Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault
  - Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate
  langs:
  - csharp
  - vb
  name: KeyVaultAndKeyReference
  nameWithType: KeyVaultAndKeyReference
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultAndKeyReference
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nKey Vault Key Url and vault id of KeK, KeK is optional and when\nprovided is used to unwrap the encryptionKey\n"
  example: []
  syntax:
    content: public class KeyVaultAndKeyReference
    content.vb: Public Class KeyVaultAndKeyReference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  langs:
  - csharp
  - vb
  name: KeyVaultAndKeyReference()
  nameWithType: KeyVaultAndKeyReference.KeyVaultAndKeyReference()
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyVaultAndKeyReference()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the KeyVaultAndKeyReference class.\n"
  example: []
  syntax:
    content: public KeyVaultAndKeyReference()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor(Microsoft.Azure.Management.Compute.Models.SourceVault,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor(Microsoft.Azure.Management.Compute.Models.SourceVault,System.String)
  id: '#ctor(Microsoft.Azure.Management.Compute.Models.SourceVault,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  langs:
  - csharp
  - vb
  name: KeyVaultAndKeyReference(SourceVault, String)
  nameWithType: KeyVaultAndKeyReference.KeyVaultAndKeyReference(SourceVault, String)
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyVaultAndKeyReference(Microsoft.Azure.Management.Compute.Models.SourceVault, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the KeyVaultAndKeyReference class.\n"
  example: []
  syntax:
    content: public KeyVaultAndKeyReference(SourceVault sourceVault, string keyUrl)
    parameters:
    - id: sourceVault
      type: Microsoft.Azure.Management.Compute.Models.SourceVault
      description: >-
        Resource id of the KeyVault containing

        the key or secret
    - id: keyUrl
      type: System.String
      description: >-
        Url pointing to a key or secret in

        KeyVault
    content.vb: Public Sub New(sourceVault As SourceVault, keyUrl As String)
  overload: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault
  commentId: P:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault
  id: SourceVault
  parent: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  langs:
  - csharp
  - vb
  name: SourceVault
  nameWithType: KeyVaultAndKeyReference.SourceVault
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceVault
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets resource id of the KeyVault containing the key or\nsecret\n"
  example: []
  syntax:
    content: public SourceVault SourceVault { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.SourceVault
    content.vb: Public Property SourceVault As SourceVault
  overload: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl
  commentId: P:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl
  id: KeyUrl
  parent: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  langs:
  - csharp
  - vb
  name: KeyUrl
  nameWithType: KeyVaultAndKeyReference.KeyUrl
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyUrl
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets url pointing to a key or secret in KeyVault\n"
  example: []
  syntax:
    content: public string KeyUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property KeyUrl As String
  overload: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: KeyVaultAndKeyReference.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/KeyVaultAndKeyReference.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.#ctor
  isExternal: false
  name: KeyVaultAndKeyReference
  nameWithType: KeyVaultAndKeyReference.KeyVaultAndKeyReference
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyVaultAndKeyReference
- uid: Microsoft.Azure.Management.Compute.Models.SourceVault
  commentId: T:Microsoft.Azure.Management.Compute.Models.SourceVault
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: SourceVault
  nameWithType: SourceVault
  fullName: Microsoft.Azure.Management.Compute.Models.SourceVault
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault
  isExternal: false
  name: SourceVault
  nameWithType: KeyVaultAndKeyReference.SourceVault
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.SourceVault
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl
  isExternal: false
  name: KeyUrl
  nameWithType: KeyVaultAndKeyReference.KeyUrl
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.KeyUrl
- uid: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate
  isExternal: false
  name: Validate
  nameWithType: KeyVaultAndKeyReference.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.KeyVaultAndKeyReference.Validate
