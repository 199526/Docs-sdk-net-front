### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  id: ContainerServiceOrchestratorProfile
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor(Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes)
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  - Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate
  langs:
  - csharp
  - vb
  name: ContainerServiceOrchestratorProfile
  nameWithType: ContainerServiceOrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerServiceOrchestratorProfile
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nProfile for the container service orchestrator.\n"
  example: []
  syntax:
    content: public class ContainerServiceOrchestratorProfile
    content.vb: Public Class ContainerServiceOrchestratorProfile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: ContainerServiceOrchestratorProfile()
  nameWithType: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nContainerServiceOrchestratorProfile class.\n"
  example: []
  syntax:
    content: public ContainerServiceOrchestratorProfile()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor(Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes)
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor(Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes)
  id: '#ctor(Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes)'
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: ContainerServiceOrchestratorProfile(ContainerServiceOchestratorTypes)
  nameWithType: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile(ContainerServiceOchestratorTypes)
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile(Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nContainerServiceOrchestratorProfile class.\n"
  example: []
  syntax:
    content: public ContainerServiceOrchestratorProfile(ContainerServiceOchestratorTypes orchestratorType)
    parameters:
    - id: orchestratorType
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
      description: >-
        The orchestrator to use to manage

        container service cluster resources. Valid values are Swarm, DCOS,

        and Custom. Possible values include: 'Swarm', 'DCOS', 'Custom',

        'Kubernetes'
    content.vb: Public Sub New(orchestratorType As ContainerServiceOchestratorTypes)
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  commentId: P:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  id: OrchestratorType
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: OrchestratorType
  nameWithType: ContainerServiceOrchestratorProfile.OrchestratorType
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OrchestratorType
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the orchestrator to use to manage container service\ncluster resources. Valid values are Swarm, DCOS, and Custom.\nPossible values include: 'Swarm', 'DCOS', 'Custom', 'Kubernetes'\n"
  example: []
  syntax:
    content: public ContainerServiceOchestratorTypes OrchestratorType { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
    content.vb: Public Property OrchestratorType As ContainerServiceOchestratorTypes
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ContainerServiceOrchestratorProfile.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ContainerServiceOrchestratorProfile.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.#ctor
  isExternal: false
  name: ContainerServiceOrchestratorProfile
  nameWithType: ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.ContainerServiceOrchestratorProfile
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
  commentId: T:Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ContainerServiceOchestratorTypes
  nameWithType: ContainerServiceOchestratorTypes
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOchestratorTypes
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
  isExternal: false
  name: OrchestratorType
  nameWithType: ContainerServiceOrchestratorProfile.OrchestratorType
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.OrchestratorType
- uid: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate
  isExternal: false
  name: Validate
  nameWithType: ContainerServiceOrchestratorProfile.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.ContainerServiceOrchestratorProfile.Validate
