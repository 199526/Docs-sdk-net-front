### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.CreationData
  commentId: T:Microsoft.Azure.Management.Compute.Models.CreationData
  id: CreationData
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.CreationData.#ctor
  - Microsoft.Azure.Management.Compute.Models.CreationData.#ctor(Microsoft.Azure.Management.Compute.Models.DiskCreateOption,System.String,Microsoft.Azure.Management.Compute.Models.ImageDiskReference,System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption
  - Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference
  - Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId
  - Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri
  - Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId
  - Microsoft.Azure.Management.Compute.Models.CreationData.Validate
  langs:
  - csharp
  - vb
  name: CreationData
  nameWithType: CreationData
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationData
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nData used when creating a disk.\n"
  example: []
  syntax:
    content: public class CreationData
    content.vb: Public Class CreationData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.CreationData.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: CreationData()
  nameWithType: CreationData.CreationData()
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.CreationData()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the CreationData class.\n"
  example: []
  syntax:
    content: public CreationData()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.#ctor(Microsoft.Azure.Management.Compute.Models.DiskCreateOption,System.String,Microsoft.Azure.Management.Compute.Models.ImageDiskReference,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.CreationData.#ctor(Microsoft.Azure.Management.Compute.Models.DiskCreateOption,System.String,Microsoft.Azure.Management.Compute.Models.ImageDiskReference,System.String,System.String)
  id: '#ctor(Microsoft.Azure.Management.Compute.Models.DiskCreateOption,System.String,Microsoft.Azure.Management.Compute.Models.ImageDiskReference,System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: CreationData(DiskCreateOption, String, ImageDiskReference, String, String)
  nameWithType: CreationData.CreationData(DiskCreateOption, String, ImageDiskReference, String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.CreationData(Microsoft.Azure.Management.Compute.Models.DiskCreateOption, System.String, Microsoft.Azure.Management.Compute.Models.ImageDiskReference, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the CreationData class.\n"
  example: []
  syntax:
    content: public CreationData(DiskCreateOption createOption, string storageAccountId = null, ImageDiskReference imageReference = null, string sourceUri = null, string sourceResourceId = null)
    content.vb: Public Sub New(createOption As DiskCreateOption, storageAccountId As String = Nothing, imageReference As ImageDiskReference = Nothing, sourceUri As String = Nothing, sourceResourceId As String = Nothing)
    parameters:
    - id: createOption
      type: Microsoft.Azure.Management.Compute.Models.DiskCreateOption
      description: >-
        Possible values include: 'Empty',

        'Attach', 'FromImage', 'Import', 'Copy', 'Restore'
    - id: storageAccountId
      type: System.String
      description: >-
        If createOption is Import, the Azure

        Resource Manager identifier of the storage account containing the

        blob to import as a disk. Required only if the blob is in a

        different subscription
    - id: imageReference
      type: Microsoft.Azure.Management.Compute.Models.ImageDiskReference
      description: Disk source information.
    - id: sourceUri
      type: System.String
      description: >-
        If creationOption is Import, this is a SAS

        URI to a blob to be imported into a managed disk. If creationOption

        is Copy, this is a relative Uri containing the id of the source

        snapshot to be copied into a managed disk.
    - id: sourceResourceId
      type: System.String
      description: >-
        If createOption is Copy, this is the

        ARM id of the source snapshot or disk. If creationOption is

        Restore, this is the ARM-like id of the source disk restore

        point.
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption
  commentId: P:Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption
  id: CreateOption
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: CreateOption
  nameWithType: CreationData.CreateOption
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOption
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets possible values include: 'Empty', 'Attach',\n'FromImage', 'Import', 'Copy', 'Restore'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "createOption")]

      public DiskCreateOption CreateOption { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="createOption")>

      Public Property CreateOption As DiskCreateOption
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.DiskCreateOption
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: createOption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId
  commentId: P:Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId
  id: StorageAccountId
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: StorageAccountId
  nameWithType: CreationData.StorageAccountId
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountId
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets if createOption is Import, the Azure Resource Manager\nidentifier of the storage account containing the blob to import as\na disk. Required only if the blob is in a different subscription\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "storageAccountId")]

      public string StorageAccountId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="storageAccountId")>

      Public Property StorageAccountId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: storageAccountId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference
  commentId: P:Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference
  id: ImageReference
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: ImageReference
  nameWithType: CreationData.ImageReference
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageReference
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets disk source information.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "imageReference")]

      public ImageDiskReference ImageReference { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="imageReference")>

      Public Property ImageReference As ImageDiskReference
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.ImageDiskReference
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: imageReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri
  commentId: P:Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri
  id: SourceUri
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: SourceUri
  nameWithType: CreationData.SourceUri
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceUri
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets if creationOption is Import, this is a SAS URI to a\nblob to be imported into a managed disk. If creationOption is Copy,\nthis is a relative Uri containing the id of the source snapshot to\nbe copied into a managed disk.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceUri")]

      public string SourceUri { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourceUri")>

      Public Property SourceUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId
  commentId: P:Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId
  id: SourceResourceId
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: SourceResourceId
  nameWithType: CreationData.SourceResourceId
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceResourceId
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets if createOption is Copy, this is the ARM id of the\nsource snapshot or disk. If creationOption is Restore, this is the\nARM-like id of the source disk restore point.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceResourceId")]

      public string SourceResourceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourceResourceId")>

      Public Property SourceResourceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceResourceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.CreationData.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.CreationData
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CreationData.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/CreationData.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Compute.Models.CreationData.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.#ctor
  isExternal: false
  name: CreationData
  nameWithType: CreationData.CreationData
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.CreationData
- uid: Microsoft.Azure.Management.Compute.Models.DiskCreateOption
  commentId: T:Microsoft.Azure.Management.Compute.Models.DiskCreateOption
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: DiskCreateOption
  nameWithType: DiskCreateOption
  fullName: Microsoft.Azure.Management.Compute.Models.DiskCreateOption
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.ImageDiskReference
  commentId: T:Microsoft.Azure.Management.Compute.Models.ImageDiskReference
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: ImageDiskReference
  nameWithType: ImageDiskReference
  fullName: Microsoft.Azure.Management.Compute.Models.ImageDiskReference
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption
  isExternal: false
  name: CreateOption
  nameWithType: CreationData.CreateOption
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.CreateOption
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId
  isExternal: false
  name: StorageAccountId
  nameWithType: CreationData.StorageAccountId
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.StorageAccountId
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference
  isExternal: false
  name: ImageReference
  nameWithType: CreationData.ImageReference
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.ImageReference
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri
  isExternal: false
  name: SourceUri
  nameWithType: CreationData.SourceUri
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.SourceUri
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId
  isExternal: false
  name: SourceResourceId
  nameWithType: CreationData.SourceResourceId
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.SourceResourceId
- uid: Microsoft.Azure.Management.Compute.Models.CreationData.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.CreationData.Validate
  isExternal: false
  name: Validate
  nameWithType: CreationData.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.CreationData.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
