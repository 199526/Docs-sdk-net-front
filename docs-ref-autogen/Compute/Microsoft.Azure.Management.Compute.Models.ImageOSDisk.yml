### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  commentId: T:Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  id: ImageOSDisk
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor(Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes,Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes,Microsoft.Azure.Management.Compute.Models.SubResource,Microsoft.Azure.Management.Compute.Models.SubResource,System.String,System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes},System.Nullable{System.Int32})
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot
  - Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate
  langs:
  - csharp
  - vb
  name: ImageOSDisk
  nameWithType: ImageOSDisk
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageOSDisk
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes an Operating System disk.\n"
  example: []
  syntax:
    content: public class ImageOSDisk
    content.vb: Public Class ImageOSDisk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: ImageOSDisk()
  nameWithType: ImageOSDisk.ImageOSDisk()
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ImageOSDisk()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ImageOSDisk class.\n"
  example: []
  syntax:
    content: public ImageOSDisk()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor(Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes,Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes,Microsoft.Azure.Management.Compute.Models.SubResource,Microsoft.Azure.Management.Compute.Models.SubResource,System.String,System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor(Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes,Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes,Microsoft.Azure.Management.Compute.Models.SubResource,Microsoft.Azure.Management.Compute.Models.SubResource,System.String,System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes},System.Nullable{System.Int32})
  id: '#ctor(Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes,Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes,Microsoft.Azure.Management.Compute.Models.SubResource,Microsoft.Azure.Management.Compute.Models.SubResource,System.String,System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: ImageOSDisk(OperatingSystemTypes, OperatingSystemStateTypes, SubResource, SubResource, String, Nullable<CachingTypes>, Nullable<Int32>)
  nameWithType: ImageOSDisk.ImageOSDisk(OperatingSystemTypes, OperatingSystemStateTypes, SubResource, SubResource, String, Nullable<CachingTypes>, Nullable<Int32>)
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ImageOSDisk(Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes, Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes, Microsoft.Azure.Management.Compute.Models.SubResource, Microsoft.Azure.Management.Compute.Models.SubResource, System.String, System.Nullable<Microsoft.Azure.Management.Compute.Models.CachingTypes>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ImageOSDisk class.\n"
  example: []
  syntax:
    content: public ImageOSDisk(OperatingSystemTypes osType, OperatingSystemStateTypes osState, SubResource snapshot = null, SubResource managedDisk = null, string blobUri = null, CachingTypes? caching = null, int ? diskSizeGB = null)
    content.vb: Public Sub New(osType As OperatingSystemTypes, osState As OperatingSystemStateTypes, snapshot As SubResource = Nothing, managedDisk As SubResource = Nothing, blobUri As String = Nothing, caching As CachingTypes? = Nothing, diskSizeGB As Integer? = Nothing)
    parameters:
    - id: osType
      type: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
      description: >-
        The Operating System type. Possible values

        include: 'Windows', 'Linux'
    - id: osState
      type: Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes
      description: >-
        The OS State. Possible values include:

        'Generalized', 'Specialized'
    - id: snapshot
      type: Microsoft.Azure.Management.Compute.Models.SubResource
      description: The snapshot.
    - id: managedDisk
      type: Microsoft.Azure.Management.Compute.Models.SubResource
      description: The managedDisk.
    - id: blobUri
      type: System.String
      description: The Virtual Hard Disk.
    - id: caching
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes}
      description: >-
        The caching type. Possible values include:

        'None', 'ReadOnly', 'ReadWrite'
    - id: diskSizeGB
      type: System.Nullable{System.Int32}
      description: >-
        The initial managed disk size in GB for

        blank data disks, and the new desired size for existing OS and Data

        disks.
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor*
  nameWithType.vb: ImageOSDisk.ImageOSDisk(OperatingSystemTypes, OperatingSystemStateTypes, SubResource, SubResource, String, Nullable(Of CachingTypes), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ImageOSDisk(Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes, Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes, Microsoft.Azure.Management.Compute.Models.SubResource, Microsoft.Azure.Management.Compute.Models.SubResource, System.String, System.Nullable(Of Microsoft.Azure.Management.Compute.Models.CachingTypes), System.Nullable(Of System.Int32))
  name.vb: ImageOSDisk(OperatingSystemTypes, OperatingSystemStateTypes, SubResource, SubResource, String, Nullable(Of CachingTypes), Nullable(Of Int32))
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType
  id: OsType
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: OsType
  nameWithType: ImageOSDisk.OsType
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsType
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Operating System type. Possible values include:\n'Windows', 'Linux'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "osType")]

      public OperatingSystemTypes OsType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="osType")>

      Public Property OsType As OperatingSystemTypes
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: osType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState
  id: OsState
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: OsState
  nameWithType: ImageOSDisk.OsState
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsState
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the OS State. Possible values include: 'Generalized',\n'Specialized'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "osState")]

      public OperatingSystemStateTypes OsState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="osState")>

      Public Property OsState As OperatingSystemStateTypes
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: osState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot
  id: Snapshot
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: Snapshot
  nameWithType: ImageOSDisk.Snapshot
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Snapshot
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the snapshot.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "snapshot")]

      public SubResource Snapshot { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="snapshot")>

      Public Property Snapshot As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.SubResource
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: snapshot
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk
  id: ManagedDisk
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: ManagedDisk
  nameWithType: ImageOSDisk.ManagedDisk
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagedDisk
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the managedDisk.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "managedDisk")]

      public SubResource ManagedDisk { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="managedDisk")>

      Public Property ManagedDisk As SubResource
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.SubResource
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: managedDisk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri
  id: BlobUri
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: BlobUri
  nameWithType: ImageOSDisk.BlobUri
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobUri
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the Virtual Hard Disk.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blobUri")]

      public string BlobUri { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blobUri")>

      Public Property BlobUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blobUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching
  id: Caching
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: Caching
  nameWithType: ImageOSDisk.Caching
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Caching
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the caching type. Possible values include: 'None',\n'ReadOnly', 'ReadWrite'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "caching")]

      public CachingTypes? Caching { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="caching")>

      Public Property Caching As CachingTypes?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes}
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: caching
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB
  commentId: P:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB
  id: DiskSizeGB
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: DiskSizeGB
  nameWithType: ImageOSDisk.DiskSizeGB
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DiskSizeGB
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the initial managed disk size in GB for blank data\ndisks, and the new desired size for existing OS and Data disks.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "diskSizeGB")]

      public int ? DiskSizeGB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="diskSizeGB")>

      Public Property DiskSizeGB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: diskSizeGB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate
  commentId: M:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Compute.Models.ImageOSDisk
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ImageOSDisk.Validate()
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/ImageOSDisk.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Compute.Models
  commentId: N:Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  nameWithType: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.#ctor
  isExternal: false
  name: ImageOSDisk
  nameWithType: ImageOSDisk.ImageOSDisk
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ImageOSDisk
- uid: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
  commentId: T:Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: OperatingSystemTypes
  nameWithType: OperatingSystemTypes
  fullName: Microsoft.Azure.Management.Compute.Models.OperatingSystemTypes
- uid: Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes
  commentId: T:Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: OperatingSystemStateTypes
  nameWithType: OperatingSystemStateTypes
  fullName: Microsoft.Azure.Management.Compute.Models.OperatingSystemStateTypes
- uid: Microsoft.Azure.Management.Compute.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Compute.Models.SubResource
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Compute.Models.SubResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Compute.Models.CachingTypes}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CachingTypes>
  nameWithType: Nullable<CachingTypes>
  fullName: System.Nullable<Microsoft.Azure.Management.Compute.Models.CachingTypes>
  nameWithType.vb: Nullable(Of CachingTypes)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Management.Compute.Models.CachingTypes)
  name.vb: Nullable(Of CachingTypes)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.CachingTypes
    name: CachingTypes
    nameWithType: CachingTypes
    fullName: Microsoft.Azure.Management.Compute.Models.CachingTypes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.CachingTypes
    name: CachingTypes
    nameWithType: CachingTypes
    fullName: Microsoft.Azure.Management.Compute.Models.CachingTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType
  isExternal: false
  name: OsType
  nameWithType: ImageOSDisk.OsType
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsType
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState
  isExternal: false
  name: OsState
  nameWithType: ImageOSDisk.OsState
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.OsState
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot
  isExternal: false
  name: Snapshot
  nameWithType: ImageOSDisk.Snapshot
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Snapshot
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk
  isExternal: false
  name: ManagedDisk
  nameWithType: ImageOSDisk.ManagedDisk
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.ManagedDisk
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri
  isExternal: false
  name: BlobUri
  nameWithType: ImageOSDisk.BlobUri
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.BlobUri
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching
  isExternal: false
  name: Caching
  nameWithType: ImageOSDisk.Caching
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Caching
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB
  isExternal: false
  name: DiskSizeGB
  nameWithType: ImageOSDisk.DiskSizeGB
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.DiskSizeGB
- uid: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate*
  commentId: Overload:Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate
  isExternal: false
  name: Validate
  nameWithType: ImageOSDisk.Validate
  fullName: Microsoft.Azure.Management.Compute.Models.ImageOSDisk.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
