### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ISupportMetrics
  id: ISupportMetrics
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics
  langs:
  - csharp
  - vb
  name: ISupportMetrics
  nameWithType: ISupportMetrics
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics
  type: Interface
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ISupportMetrics.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: ISupportMetrics
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/ISupportMetrics.cs
    startLine: 7
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nRepresents an object that supports application-defined metrics.\n"
  example: []
  syntax:
    content: public interface ISupportMetrics
    content.vb: Public Interface ISupportMetrics
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics
  id: Metrics
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: ISupportMetrics.Metrics
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ISupportMetrics.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Metrics
    path: src/ApplicationInsights-dotnet/src/Core/Managed/Shared/DataContracts/ISupportMetrics.cs
    startLine: 12
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined metric names and values providing additional information about telemetry.\n"
  example: []
  syntax:
    content: IDictionary<string, double> Metrics { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Double}
    content.vb: ReadOnly Property Metrics As IDictionary(Of String, Double)
  overload: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics
  isExternal: false
  name: Metrics
  nameWithType: ISupportMetrics.Metrics
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics
- uid: System.Collections.Generic.IDictionary{System.String,System.Double}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Double>
  nameWithType: IDictionary<String, Double>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Double>
  nameWithType.vb: IDictionary(Of String, Double)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Double)
  name.vb: IDictionary(Of String, Double)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
