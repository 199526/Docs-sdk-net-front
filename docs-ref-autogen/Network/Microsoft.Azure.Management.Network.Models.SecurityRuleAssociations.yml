### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  commentId: T:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  id: SecurityRuleAssociations
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor
  - Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor(Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation,Microsoft.Azure.Management.Network.Models.SubnetAssociation,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule})
  - Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules
  - Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules
  - Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation
  - Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation
  langs:
  - csharp
  - vb
  name: SecurityRuleAssociations
  nameWithType: SecurityRuleAssociations
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecurityRuleAssociations
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nAll security rules associated with the network interface.\n"
  example: []
  syntax:
    content: public class SecurityRuleAssociations
    content.vb: Public Class SecurityRuleAssociations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  langs:
  - csharp
  - vb
  name: SecurityRuleAssociations()
  nameWithType: SecurityRuleAssociations.SecurityRuleAssociations()
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SecurityRuleAssociations()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the SecurityRuleAssociations class.\n"
  example: []
  syntax:
    content: public SecurityRuleAssociations()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor(Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation,Microsoft.Azure.Management.Network.Models.SubnetAssociation,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule})
  commentId: M:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor(Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation,Microsoft.Azure.Management.Network.Models.SubnetAssociation,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule})
  id: '#ctor(Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation,Microsoft.Azure.Management.Network.Models.SubnetAssociation,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule})'
  parent: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  langs:
  - csharp
  - vb
  name: SecurityRuleAssociations(NetworkInterfaceAssociation, SubnetAssociation, IList<SecurityRule>, IList<EffectiveNetworkSecurityRule>)
  nameWithType: SecurityRuleAssociations.SecurityRuleAssociations(NetworkInterfaceAssociation, SubnetAssociation, IList<SecurityRule>, IList<EffectiveNetworkSecurityRule>)
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SecurityRuleAssociations(Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation, Microsoft.Azure.Management.Network.Models.SubnetAssociation, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.SecurityRule>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the SecurityRuleAssociations class.\n"
  example: []
  syntax:
    content: public SecurityRuleAssociations(NetworkInterfaceAssociation networkInterfaceAssociation = null, SubnetAssociation subnetAssociation = null, IList<SecurityRule> defaultSecurityRules = null, IList<EffectiveNetworkSecurityRule> effectiveSecurityRules = null)
    content.vb: Public Sub New(networkInterfaceAssociation As NetworkInterfaceAssociation = Nothing, subnetAssociation As SubnetAssociation = Nothing, defaultSecurityRules As IList(Of SecurityRule) = Nothing, effectiveSecurityRules As IList(Of EffectiveNetworkSecurityRule) = Nothing)
    parameters:
    - id: networkInterfaceAssociation
      type: Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation
    - id: subnetAssociation
      type: Microsoft.Azure.Management.Network.Models.SubnetAssociation
    - id: defaultSecurityRules
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule}
      description: >-
        Collection of default security

        rules of the network security group.
    - id: effectiveSecurityRules
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule}
      description: >-
        Collection of effective

        security rules.
  overload: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor*
  nameWithType.vb: SecurityRuleAssociations.SecurityRuleAssociations(NetworkInterfaceAssociation, SubnetAssociation, IList(Of SecurityRule), IList(Of EffectiveNetworkSecurityRule))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SecurityRuleAssociations(Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation, Microsoft.Azure.Management.Network.Models.SubnetAssociation, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.SecurityRule), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule))
  name.vb: SecurityRuleAssociations(NetworkInterfaceAssociation, SubnetAssociation, IList(Of SecurityRule), IList(Of EffectiveNetworkSecurityRule))
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation
  id: NetworkInterfaceAssociation
  parent: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  langs:
  - csharp
  - vb
  name: NetworkInterfaceAssociation
  nameWithType: SecurityRuleAssociations.NetworkInterfaceAssociation
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkInterfaceAssociation
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "networkInterfaceAssociation")]

      public NetworkInterfaceAssociation NetworkInterfaceAssociation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="networkInterfaceAssociation")>

      Public Property NetworkInterfaceAssociation As NetworkInterfaceAssociation
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation
  overload: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: networkInterfaceAssociation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation
  id: SubnetAssociation
  parent: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  langs:
  - csharp
  - vb
  name: SubnetAssociation
  nameWithType: SecurityRuleAssociations.SubnetAssociation
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubnetAssociation
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subnetAssociation")]

      public SubnetAssociation SubnetAssociation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="subnetAssociation")>

      Public Property SubnetAssociation As SubnetAssociation
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.SubnetAssociation
  overload: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subnetAssociation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules
  id: DefaultSecurityRules
  parent: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  langs:
  - csharp
  - vb
  name: DefaultSecurityRules
  nameWithType: SecurityRuleAssociations.DefaultSecurityRules
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultSecurityRules
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of default security rules of the network\nsecurity group.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "defaultSecurityRules")]

      public IList<SecurityRule> DefaultSecurityRules { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="defaultSecurityRules")>

      Public Property DefaultSecurityRules As IList(Of SecurityRule)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule}
  overload: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: defaultSecurityRules
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules
  commentId: P:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules
  id: EffectiveSecurityRules
  parent: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations
  langs:
  - csharp
  - vb
  name: EffectiveSecurityRules
  nameWithType: SecurityRuleAssociations.EffectiveSecurityRules
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EffectiveSecurityRules
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/SecurityRuleAssociations.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of effective security rules.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "effectiveSecurityRules")]

      public IList<EffectiveNetworkSecurityRule> EffectiveSecurityRules { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="effectiveSecurityRules")>

      Public Property EffectiveSecurityRules As IList(Of EffectiveNetworkSecurityRule)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule}
  overload: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: effectiveSecurityRules
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.#ctor
  isExternal: false
  name: SecurityRuleAssociations
  nameWithType: SecurityRuleAssociations.SecurityRuleAssociations
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SecurityRuleAssociations
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation
  commentId: T:Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: NetworkInterfaceAssociation
  nameWithType: NetworkInterfaceAssociation
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceAssociation
- uid: Microsoft.Azure.Management.Network.Models.SubnetAssociation
  commentId: T:Microsoft.Azure.Management.Network.Models.SubnetAssociation
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubnetAssociation
  nameWithType: SubnetAssociation
  fullName: Microsoft.Azure.Management.Network.Models.SubnetAssociation
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.SecurityRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SecurityRule>
  nameWithType: IList<SecurityRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.SecurityRule>
  nameWithType.vb: IList(Of SecurityRule)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.SecurityRule)
  name.vb: IList(Of SecurityRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.SecurityRule
    name: SecurityRule
    nameWithType: SecurityRule
    fullName: Microsoft.Azure.Management.Network.Models.SecurityRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.SecurityRule
    name: SecurityRule
    nameWithType: SecurityRule
    fullName: Microsoft.Azure.Management.Network.Models.SecurityRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EffectiveNetworkSecurityRule>
  nameWithType: IList<EffectiveNetworkSecurityRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule>
  nameWithType.vb: IList(Of EffectiveNetworkSecurityRule)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule)
  name.vb: IList(Of EffectiveNetworkSecurityRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
    name: EffectiveNetworkSecurityRule
    nameWithType: EffectiveNetworkSecurityRule
    fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
    name: EffectiveNetworkSecurityRule
    nameWithType: EffectiveNetworkSecurityRule
    fullName: Microsoft.Azure.Management.Network.Models.EffectiveNetworkSecurityRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation
  isExternal: false
  name: NetworkInterfaceAssociation
  nameWithType: SecurityRuleAssociations.NetworkInterfaceAssociation
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.NetworkInterfaceAssociation
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation
  isExternal: false
  name: SubnetAssociation
  nameWithType: SecurityRuleAssociations.SubnetAssociation
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.SubnetAssociation
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules
  isExternal: false
  name: DefaultSecurityRules
  nameWithType: SecurityRuleAssociations.DefaultSecurityRules
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.DefaultSecurityRules
- uid: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules
  isExternal: false
  name: EffectiveSecurityRules
  nameWithType: SecurityRuleAssociations.EffectiveSecurityRules
  fullName: Microsoft.Azure.Management.Network.Models.SecurityRuleAssociations.EffectiveSecurityRules
