### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  commentId: T:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  id: PacketCaptureFilter
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress
  - Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort
  langs:
  - csharp
  - vb
  name: PacketCaptureFilter
  nameWithType: PacketCaptureFilter
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PacketCaptureFilter
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nFilter that is applied to packet capture request. Multiple filters can\nbe applied.\n"
  example: []
  syntax:
    content: public class PacketCaptureFilter
    content.vb: Public Class PacketCaptureFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: PacketCaptureFilter()
  nameWithType: PacketCaptureFilter.PacketCaptureFilter()
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.PacketCaptureFilter()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the PacketCaptureFilter class.\n"
  example: []
  syntax:
    content: public PacketCaptureFilter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: PacketCaptureFilter(String, String, String, String, String)
  nameWithType: PacketCaptureFilter.PacketCaptureFilter(String, String, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.PacketCaptureFilter(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the PacketCaptureFilter class.\n"
  example: []
  syntax:
    content: public PacketCaptureFilter(string protocol = null, string localIPAddress = null, string remoteIPAddress = null, string localPort = null, string remotePort = null)
    content.vb: Public Sub New(protocol As String = Nothing, localIPAddress As String = Nothing, remoteIPAddress As String = Nothing, localPort As String = Nothing, remotePort As String = Nothing)
    parameters:
    - id: protocol
      type: System.String
      description: >-
        Protocol to be filtered on. Possible values

        include: 'TCP', 'UDP', 'Any'
    - id: localIPAddress
      type: System.String
      description: >-
        Local IP Address to be filtered on.

        Notation: "127.0.0.1" for single address entry.

        "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for

        multiple entries. Multiple ranges not currently supported. Mixing

        ranges with multiple entries not currently supported. Default =

        null.
    - id: remoteIPAddress
      type: System.String
      description: >-
        Local IP Address to be filtered on.

        Notation: "127.0.0.1" for single address entry.

        "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for

        multiple entries. Multiple ranges not currently supported. Mixing

        ranges with multiple entries not currently supported. Default =

        null.
    - id: localPort
      type: System.String
      description: >-
        Local port to be filtered on. Notation:

        "80" for single port entry."80-85" for range. "80;443;" for

        multiple entries. Multiple ranges not currently supported. Mixing

        ranges with multiple entries not currently supported. Default =

        null.
    - id: remotePort
      type: System.String
      description: >-
        Remote port to be filtered on. Notation:

        "80" for single port entry."80-85" for range. "80;443;" for

        multiple entries. Multiple ranges not currently supported. Mixing

        ranges with multiple entries not currently supported. Default =

        null.
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: PacketCaptureFilter.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets protocol to be filtered on. Possible values include:\n'TCP', 'UDP', 'Any'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress
  id: LocalIPAddress
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: LocalIPAddress
  nameWithType: PacketCaptureFilter.LocalIPAddress
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LocalIPAddress
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets local IP Address to be filtered on. Notation:\n\"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for\nrange. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges\nnot currently supported. Mixing ranges with multiple entries not\ncurrently supported. Default = null.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "localIPAddress")]

      public string LocalIPAddress { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="localIPAddress")>

      Public Property LocalIPAddress As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: localIPAddress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress
  id: RemoteIPAddress
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: RemoteIPAddress
  nameWithType: PacketCaptureFilter.RemoteIPAddress
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoteIPAddress
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets local IP Address to be filtered on. Notation:\n\"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for\nrange. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges\nnot currently supported. Mixing ranges with multiple entries not\ncurrently supported. Default = null.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "remoteIPAddress")]

      public string RemoteIPAddress { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="remoteIPAddress")>

      Public Property RemoteIPAddress As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: remoteIPAddress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort
  id: LocalPort
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: LocalPort
  nameWithType: PacketCaptureFilter.LocalPort
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LocalPort
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets local port to be filtered on. Notation: \"80\" for\nsingle port entry.\"80-85\" for range. \"80;443;\" for multiple\nentries. Multiple ranges not currently supported. Mixing ranges\nwith multiple entries not currently supported. Default = null.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "localPort")]

      public string LocalPort { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="localPort")>

      Public Property LocalPort As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: localPort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort
  id: RemotePort
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter
  langs:
  - csharp
  - vb
  name: RemotePort
  nameWithType: PacketCaptureFilter.RemotePort
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemotePort
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureFilter.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets remote port to be filtered on. Notation: \"80\" for\nsingle port entry.\"80-85\" for range. \"80;443;\" for multiple\nentries. Multiple ranges not currently supported. Mixing ranges\nwith multiple entries not currently supported. Default = null.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "remotePort")]

      public string RemotePort { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="remotePort")>

      Public Property RemotePort As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: remotePort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.#ctor
  isExternal: false
  name: PacketCaptureFilter
  nameWithType: PacketCaptureFilter.PacketCaptureFilter
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.PacketCaptureFilter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol
  isExternal: false
  name: Protocol
  nameWithType: PacketCaptureFilter.Protocol
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.Protocol
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress
  isExternal: false
  name: LocalIPAddress
  nameWithType: PacketCaptureFilter.LocalIPAddress
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalIPAddress
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress
  isExternal: false
  name: RemoteIPAddress
  nameWithType: PacketCaptureFilter.RemoteIPAddress
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemoteIPAddress
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort
  isExternal: false
  name: LocalPort
  nameWithType: PacketCaptureFilter.LocalPort
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.LocalPort
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort
  isExternal: false
  name: RemotePort
  nameWithType: PacketCaptureFilter.RemotePort
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureFilter.RemotePort
