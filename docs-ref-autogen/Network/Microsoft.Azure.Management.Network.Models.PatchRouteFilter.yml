### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  commentId: T:Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  id: PatchRouteFilter
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags
  - Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type
  langs:
  - csharp
  - vb
  name: PatchRouteFilter
  nameWithType: PatchRouteFilter
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PatchRouteFilter
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nRoute Filter Resource.\n"
  example: []
  syntax:
    content: 'public class PatchRouteFilter : SubResource'
    content.vb: >-
      Public Class PatchRouteFilter
          Inherits SubResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: PatchRouteFilter()
  nameWithType: PatchRouteFilter.PatchRouteFilter()
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.PatchRouteFilter()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the PatchRouteFilter class.\n"
  example: []
  syntax:
    content: public PatchRouteFilter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: PatchRouteFilter(String, IList<RouteFilterRule>, IList<ExpressRouteCircuitPeering>, String, String, String, String, IDictionary<String, String>)
  nameWithType: PatchRouteFilter.PatchRouteFilter(String, IList<RouteFilterRule>, IList<ExpressRouteCircuitPeering>, String, String, String, String, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.PatchRouteFilter(System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.RouteFilterRule>, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering>, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the PatchRouteFilter class.\n"
  example: []
  syntax:
    content: public PatchRouteFilter(string id = null, IList<RouteFilterRule> rules = null, IList<ExpressRouteCircuitPeering> peerings = null, string provisioningState = null, string name = null, string etag = null, string type = null, IDictionary<string, string> tags = null)
    parameters:
    - id: id
      type: System.String
      description: Resource ID.
    - id: rules
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule}
      description: >-
        Collection of RouteFilterRules contained within

        a route filter.
    - id: peerings
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
      description: >-
        A collection of references to express route

        circuit peerings.
    - id: provisioningState
      type: System.String
      description: >-
        The provisioning state of the

        resource. Possible values are: 'Updating', 'Deleting', 'Succeeded'

        and 'Failed'.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
    - id: type
      type: System.String
      description: Resource type.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
    content.vb: Public Sub New(id As String = Nothing, rules As IList(Of RouteFilterRule) = Nothing, peerings As IList(Of ExpressRouteCircuitPeering) = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing)
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor*
  nameWithType.vb: PatchRouteFilter.PatchRouteFilter(String, IList(Of RouteFilterRule), IList(Of ExpressRouteCircuitPeering), String, String, String, String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.PatchRouteFilter(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.RouteFilterRule), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering), System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: PatchRouteFilter(String, IList(Of RouteFilterRule), IList(Of ExpressRouteCircuitPeering), String, String, String, String, IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules
  id: Rules
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: Rules
  nameWithType: PatchRouteFilter.Rules
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Rules
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets collection of RouteFilterRules contained within a\nroute filter.\n"
  example: []
  syntax:
    content: public IList<RouteFilterRule> Rules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule}
    content.vb: Public Property Rules As IList(Of RouteFilterRule)
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings
  id: Peerings
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: Peerings
  nameWithType: PatchRouteFilter.Peerings
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Peerings
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a collection of references to express route circuit peerings.\n"
  example: []
  syntax:
    content: public IList<ExpressRouteCircuitPeering> Peerings { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
    content.vb: Public Property Peerings As IList(Of ExpressRouteCircuitPeering)
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: PatchRouteFilter.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the resource. Possible values are:\n'Updating', 'Deleting', 'Succeeded' and 'Failed'.\n"
  example: []
  syntax:
    content: public string ProvisioningState { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProvisioningState As String
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PatchRouteFilter.Name
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the name of the resource that is unique within a resource\ngroup. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: PatchRouteFilter.Etag
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a unique read-only string that changes whenever the resource\nis updated.\n"
  example: []
  syntax:
    content: public string Etag { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Etag As String
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type
  id: Type
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: PatchRouteFilter.Type
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets resource type.\n"
  example: []
  syntax:
    content: public string Type { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags
  commentId: P:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags
  id: Tags
  parent: Microsoft.Azure.Management.Network.Models.PatchRouteFilter
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: PatchRouteFilter.Tags
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tags
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PatchRouteFilter.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets resource tags.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Property Tags As IDictionary(Of String, String)
  overload: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.#ctor
  isExternal: false
  name: PatchRouteFilter
  nameWithType: PatchRouteFilter.PatchRouteFilter
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.PatchRouteFilter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.RouteFilterRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RouteFilterRule>
  nameWithType: IList<RouteFilterRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.RouteFilterRule>
  nameWithType.vb: IList(Of RouteFilterRule)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.RouteFilterRule)
  name.vb: IList(Of RouteFilterRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule
    name: RouteFilterRule
    nameWithType: RouteFilterRule
    fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule
    name: RouteFilterRule
    nameWithType: RouteFilterRule
    fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ExpressRouteCircuitPeering>
  nameWithType: IList<ExpressRouteCircuitPeering>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering>
  nameWithType.vb: IList(Of ExpressRouteCircuitPeering)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering)
  name.vb: IList(Of ExpressRouteCircuitPeering)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
    name: ExpressRouteCircuitPeering
    nameWithType: ExpressRouteCircuitPeering
    fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
    name: ExpressRouteCircuitPeering
    nameWithType: ExpressRouteCircuitPeering
    fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules
  isExternal: false
  name: Rules
  nameWithType: PatchRouteFilter.Rules
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Rules
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings
  isExternal: false
  name: Peerings
  nameWithType: PatchRouteFilter.Peerings
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Peerings
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: PatchRouteFilter.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name
  isExternal: false
  name: Name
  nameWithType: PatchRouteFilter.Name
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Name
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag
  isExternal: false
  name: Etag
  nameWithType: PatchRouteFilter.Etag
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Etag
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type
  isExternal: false
  name: Type
  nameWithType: PatchRouteFilter.Type
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Type
- uid: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags
  isExternal: false
  name: Tags
  nameWithType: PatchRouteFilter.Tags
  fullName: Microsoft.Azure.Management.Network.Models.PatchRouteFilter.Tags
