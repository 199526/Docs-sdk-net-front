### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  commentId: T:Microsoft.Azure.Management.Network.Models.RouteFilterRule
  id: RouteFilterRule
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags
  - Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate
  langs:
  - csharp
  - vb
  name: RouteFilterRule
  nameWithType: RouteFilterRule
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RouteFilterRule
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nRoute Filter Rule Resource\n"
  example: []
  syntax:
    content: >-
      [JsonTransformation]

      public class RouteFilterRule : SubResource, IResource
    content.vb: >-
      <JsonTransformation>

      Public Class RouteFilterRule
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Rest.Serialization.JsonTransformationAttribute
    ctor: Microsoft.Rest.Serialization.JsonTransformationAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: RouteFilterRule()
  nameWithType: RouteFilterRule.RouteFilterRule()
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the RouteFilterRule class.\n"
  example: []
  syntax:
    content: public RouteFilterRule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: RouteFilterRule(String, IList<String>, String, String, String, String, String, IDictionary<String, String>)
  nameWithType: RouteFilterRule.RouteFilterRule(String, IList<String>, String, String, String, String, String, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRule(System.String, System.Collections.Generic.IList<System.String>, System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the RouteFilterRule class.\n"
  example: []
  syntax:
    content: public RouteFilterRule(string access, IList<string> communities, string id = null, string provisioningState = null, string name = null, string location = null, string etag = null, IDictionary<string, string> tags = null)
    content.vb: Public Sub New(access As String, communities As IList(Of String), id As String = Nothing, provisioningState As String = Nothing, name As String = Nothing, location As String = Nothing, etag As String = Nothing, tags As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: access
      type: System.String
      description: >-
        The access type of the rule. Valid values are:

        'Allow', 'Deny'. Possible values include: 'Allow', 'Deny'
    - id: communities
      type: System.Collections.Generic.IList{System.String}
      description: >-
        The collection for bgp community values

        to filter on. e.g. ['12076:5010','12076:5020']
    - id: id
      type: System.String
      description: Resource ID.
    - id: provisioningState
      type: System.String
      description: >-
        The provisioning state of the

        resource. Possible values are: 'Updating', 'Deleting', 'Succeeded'

        and 'Failed'.
    - id: name
      type: System.String
      description: >-
        The name of the resource that is unique within a

        resource group. This name can be used to access the

        resource.
    - id: location
      type: System.String
      description: Resource location.
    - id: etag
      type: System.String
      description: >-
        A unique read-only string that changes whenever

        the resource is updated.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Resource tags.
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor*
  nameWithType.vb: RouteFilterRule.RouteFilterRule(String, IList(Of String), String, String, String, String, String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRule(System.String, System.Collections.Generic.IList(Of System.String), System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: RouteFilterRule(String, IList(Of String), String, String, String, String, String, IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access
  id: Access
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Access
  nameWithType: RouteFilterRule.Access
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Access
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the access type of the rule. Valid values are:\n'Allow', 'Deny'. Possible values include: 'Allow', 'Deny'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.access")]

      public string Access { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.access")>

      Public Property Access As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.access
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities
  id: Communities
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Communities
  nameWithType: RouteFilterRule.Communities
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Communities
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the collection for bgp community values to filter on.\ne.g. ['12076:5010','12076:5020']\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.communities")]

      public IList<string> Communities { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.communities")>

      Public Property Communities As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.communities
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: RouteFilterRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the provisioning state of the resource. Possible values are:\n'Updating', 'Deleting', 'Succeeded' and 'Failed'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RouteFilterRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets the name of the resource that is unique within a resource\ngroup. This name can be used to access the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location
  id: Location
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: RouteFilterRule.Location
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets resource location.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "location")]

      public string Location { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="location")>

      Public Property Location As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: RouteFilterRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Etag
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets a unique read-only string that changes whenever the resource\nis updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags
  id: Tags
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: RouteFilterRule.Tags
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tags
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets resource tags.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tags")]

      public IDictionary<string, string> Tags { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tags")>

      Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType
  commentId: P:Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType
  id: RouteFilterRuleType
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: RouteFilterRuleType
  nameWithType: RouteFilterRule.RouteFilterRuleType
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RouteFilterRuleType
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nThe rule type of the rule. Valid value is: 'Community'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.routeFilterRuleType")]

      public static string RouteFilterRuleType { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.routeFilterRuleType")>

      Public Shared ReadOnly Property RouteFilterRuleType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.routeFilterRuleType
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.RouteFilterRule
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: RouteFilterRule.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/RouteFilterRule.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  commentId: T:Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  nameWithType: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: true
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  nameWithType: SubResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.#ctor
  isExternal: false
  name: RouteFilterRule
  nameWithType: RouteFilterRule.RouteFilterRule
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access
  isExternal: false
  name: Access
  nameWithType: RouteFilterRule.Access
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Access
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities
  isExternal: false
  name: Communities
  nameWithType: RouteFilterRule.Communities
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Communities
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: RouteFilterRule.ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.ProvisioningState
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name
  isExternal: false
  name: Name
  nameWithType: RouteFilterRule.Name
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Name
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location
  isExternal: false
  name: Location
  nameWithType: RouteFilterRule.Location
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Location
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag
  isExternal: false
  name: Etag
  nameWithType: RouteFilterRule.Etag
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Etag
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags
  isExternal: false
  name: Tags
  nameWithType: RouteFilterRule.Tags
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Tags
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType
  isExternal: false
  name: RouteFilterRuleType
  nameWithType: RouteFilterRule.RouteFilterRuleType
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.RouteFilterRuleType
- uid: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate
  isExternal: false
  name: Validate
  nameWithType: RouteFilterRule.Validate
  fullName: Microsoft.Azure.Management.Network.Models.RouteFilterRule.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
