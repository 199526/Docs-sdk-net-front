### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource
  commentId: T:Microsoft.Azure.Management.Network.Models.TopologyResource
  id: TopologyResource
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor
  - Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation})
  - Microsoft.Azure.Management.Network.Models.TopologyResource.Associations
  - Microsoft.Azure.Management.Network.Models.TopologyResource.Id
  - Microsoft.Azure.Management.Network.Models.TopologyResource.Location
  - Microsoft.Azure.Management.Network.Models.TopologyResource.Name
  langs:
  - csharp
  - vb
  name: TopologyResource
  nameWithType: TopologyResource
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TopologyResource
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nThe network resource topology information for the given resource group.\n"
  example: []
  syntax:
    content: public class TopologyResource
    content.vb: Public Class TopologyResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.TopologyResource
  langs:
  - csharp
  - vb
  name: TopologyResource()
  nameWithType: TopologyResource.TopologyResource()
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.TopologyResource()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the TopologyResource class.\n"
  example: []
  syntax:
    content: public TopologyResource()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation})
  commentId: M:Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation})'
  parent: Microsoft.Azure.Management.Network.Models.TopologyResource
  langs:
  - csharp
  - vb
  name: TopologyResource(String, String, String, IList<TopologyAssociation>)
  nameWithType: TopologyResource.TopologyResource(String, String, String, IList<TopologyAssociation>)
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.TopologyResource(System.String, System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.TopologyAssociation>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the TopologyResource class.\n"
  example: []
  syntax:
    content: public TopologyResource(string name = null, string id = null, string location = null, IList<TopologyAssociation> associations = null)
    content.vb: Public Sub New(name As String = Nothing, id As String = Nothing, location As String = Nothing, associations As IList(Of TopologyAssociation) = Nothing)
    parameters:
    - id: name
      type: System.String
      description: Name of the resource.
    - id: id
      type: System.String
      description: ID of the resource.
    - id: location
      type: System.String
      description: Resource location.
    - id: associations
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation}
      description: >-
        Holds the associations the resource has

        with other resources in the resource group.
  overload: Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor*
  nameWithType.vb: TopologyResource.TopologyResource(String, String, String, IList(Of TopologyAssociation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.TopologyResource.TopologyResource(System.String, System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.TopologyAssociation))
  name.vb: TopologyResource(String, String, String, IList(Of TopologyAssociation))
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.TopologyResource.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.TopologyResource
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TopologyResource.Name
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets name of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.TopologyResource.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Id
  commentId: P:Microsoft.Azure.Management.Network.Models.TopologyResource.Id
  id: Id
  parent: Microsoft.Azure.Management.Network.Models.TopologyResource
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TopologyResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets ID of the resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.TopologyResource.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Location
  commentId: P:Microsoft.Azure.Management.Network.Models.TopologyResource.Location
  id: Location
  parent: Microsoft.Azure.Management.Network.Models.TopologyResource
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: TopologyResource.Location
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Location
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets resource location.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "location")]

      public string Location { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="location")>

      Public Property Location As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Network.Models.TopologyResource.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Associations
  commentId: P:Microsoft.Azure.Management.Network.Models.TopologyResource.Associations
  id: Associations
  parent: Microsoft.Azure.Management.Network.Models.TopologyResource
  langs:
  - csharp
  - vb
  name: Associations
  nameWithType: TopologyResource.Associations
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Associations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Associations
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/TopologyResource.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets holds the associations the resource has with other\nresources in the resource group.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "associations")]

      public IList<TopologyAssociation> Associations { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="associations")>

      Public Property Associations As IList(Of TopologyAssociation)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation}
  overload: Microsoft.Azure.Management.Network.Models.TopologyResource.Associations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: associations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TopologyResource.#ctor
  isExternal: false
  name: TopologyResource
  nameWithType: TopologyResource.TopologyResource
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.TopologyResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.TopologyAssociation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TopologyAssociation>
  nameWithType: IList<TopologyAssociation>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.TopologyAssociation>
  nameWithType.vb: IList(Of TopologyAssociation)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.TopologyAssociation)
  name.vb: IList(Of TopologyAssociation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.TopologyAssociation
    name: TopologyAssociation
    nameWithType: TopologyAssociation
    fullName: Microsoft.Azure.Management.Network.Models.TopologyAssociation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.TopologyAssociation
    name: TopologyAssociation
    nameWithType: TopologyAssociation
    fullName: Microsoft.Azure.Management.Network.Models.TopologyAssociation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Name*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TopologyResource.Name
  isExternal: false
  name: Name
  nameWithType: TopologyResource.Name
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Name
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Id*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TopologyResource.Id
  isExternal: false
  name: Id
  nameWithType: TopologyResource.Id
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Id
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Location*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TopologyResource.Location
  isExternal: false
  name: Location
  nameWithType: TopologyResource.Location
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Location
- uid: Microsoft.Azure.Management.Network.Models.TopologyResource.Associations*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.TopologyResource.Associations
  isExternal: false
  name: Associations
  nameWithType: TopologyResource.Associations
  fullName: Microsoft.Azure.Management.Network.Models.TopologyResource.Associations
