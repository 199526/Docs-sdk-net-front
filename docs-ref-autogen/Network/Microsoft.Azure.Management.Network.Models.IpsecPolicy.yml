### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  commentId: T:Microsoft.Azure.Management.Network.Models.IpsecPolicy
  id: IpsecPolicy
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds
  - Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate
  langs:
  - csharp
  - vb
  name: IpsecPolicy
  nameWithType: IpsecPolicy
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpsecPolicy
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nAn IPSec Policy configuration for a virtual network gateway connection\n"
  example: []
  syntax:
    content: public class IpsecPolicy
    content.vb: Public Class IpsecPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: IpsecPolicy()
  nameWithType: IpsecPolicy.IpsecPolicy()
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecPolicy()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the IpsecPolicy class.\n"
  example: []
  syntax:
    content: public IpsecPolicy()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: IpsecPolicy(Int32, Int32, String, String, String, String, String, String)
  nameWithType: IpsecPolicy.IpsecPolicy(Int32, Int32, String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecPolicy(System.Int32, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the IpsecPolicy class.\n"
  example: []
  syntax:
    content: public IpsecPolicy(int saLifeTimeSeconds, int saDataSizeKilobytes, string ipsecEncryption, string ipsecIntegrity, string ikeEncryption, string ikeIntegrity, string dhGroup, string pfsGroup)
    parameters:
    - id: saLifeTimeSeconds
      type: System.Int32
      description: >-
        The IPSec Security Association

        (also called Quick Mode or Phase 2 SA) lifetime in seconds for a

        site to site VPN tunnel.
    - id: saDataSizeKilobytes
      type: System.Int32
      description: >-
        The IPSec Security Association

        (also called Quick Mode or Phase 2 SA) payload size in KB for a

        site to site VPN tunnel.
    - id: ipsecEncryption
      type: System.String
      description: >-
        The IPSec encryption algorithm (IKE

        phase 1). Possible values include: 'None', 'DES', 'DES3', 'AES128',

        'AES192', 'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'
    - id: ipsecIntegrity
      type: System.String
      description: >-
        The IPSec integrity algorithm (IKE

        phase 1). Possible values include: 'MD5', 'SHA1', 'SHA256',

        'GCMAES128', 'GCMAES192', 'GCMAES256'
    - id: ikeEncryption
      type: System.String
      description: >-
        The IKE encryption algorithm (IKE phase

        2). Possible values include: 'DES', 'DES3', 'AES128', 'AES192',

        'AES256'
    - id: ikeIntegrity
      type: System.String
      description: >-
        The IKE integrity algorithm (IKE phase

        2). Possible values include: 'MD5', 'SHA1', 'SHA256',

        'SHA384'
    - id: dhGroup
      type: System.String
      description: >-
        The DH Groups used in IKE Phase 1 for initial

        SA. Possible values include: 'None', 'DHGroup1', 'DHGroup2',

        'DHGroup14', 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'
    - id: pfsGroup
      type: System.String
      description: >-
        The DH Groups used in IKE Phase 2 for new

        child SA. Possible values include: 'None', 'PFS1', 'PFS2',

        'PFS2048', 'ECP256', 'ECP384', 'PFS24'
    content.vb: Public Sub New(saLifeTimeSeconds As Integer, saDataSizeKilobytes As Integer, ipsecEncryption As String, ipsecIntegrity As String, ikeEncryption As String, ikeIntegrity As String, dhGroup As String, pfsGroup As String)
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds
  id: SaLifeTimeSeconds
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: SaLifeTimeSeconds
  nameWithType: IpsecPolicy.SaLifeTimeSeconds
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SaLifeTimeSeconds
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the IPSec Security Association (also called Quick Mode\nor Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.\n"
  example: []
  syntax:
    content: public int SaLifeTimeSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SaLifeTimeSeconds As Integer
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes
  id: SaDataSizeKilobytes
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: SaDataSizeKilobytes
  nameWithType: IpsecPolicy.SaDataSizeKilobytes
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SaDataSizeKilobytes
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the IPSec Security Association (also called Quick Mode\nor Phase 2 SA) payload size in KB for a site to site VPN tunnel.\n"
  example: []
  syntax:
    content: public int SaDataSizeKilobytes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SaDataSizeKilobytes As Integer
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption
  id: IpsecEncryption
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: IpsecEncryption
  nameWithType: IpsecPolicy.IpsecEncryption
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpsecEncryption
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the IPSec encryption algorithm (IKE phase 1). Possible\nvalues include: 'None', 'DES', 'DES3', 'AES128', 'AES192',\n'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'\n"
  example: []
  syntax:
    content: public string IpsecEncryption { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IpsecEncryption As String
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity
  id: IpsecIntegrity
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: IpsecIntegrity
  nameWithType: IpsecPolicy.IpsecIntegrity
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpsecIntegrity
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the IPSec integrity algorithm (IKE phase 1). Possible\nvalues include: 'MD5', 'SHA1', 'SHA256', 'GCMAES128', 'GCMAES192',\n'GCMAES256'\n"
  example: []
  syntax:
    content: public string IpsecIntegrity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IpsecIntegrity As String
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption
  id: IkeEncryption
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: IkeEncryption
  nameWithType: IpsecPolicy.IkeEncryption
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IkeEncryption
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the IKE encryption algorithm (IKE phase 2). Possible\nvalues include: 'DES', 'DES3', 'AES128', 'AES192', 'AES256'\n"
  example: []
  syntax:
    content: public string IkeEncryption { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IkeEncryption As String
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity
  id: IkeIntegrity
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: IkeIntegrity
  nameWithType: IpsecPolicy.IkeIntegrity
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IkeIntegrity
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the IKE integrity algorithm (IKE phase 2). Possible\nvalues include: 'MD5', 'SHA1', 'SHA256', 'SHA384'\n"
  example: []
  syntax:
    content: public string IkeIntegrity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IkeIntegrity As String
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup
  id: DhGroup
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: DhGroup
  nameWithType: IpsecPolicy.DhGroup
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DhGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the DH Groups used in IKE Phase 1 for initial SA.\nPossible values include: 'None', 'DHGroup1', 'DHGroup2',\n'DHGroup14', 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'\n"
  example: []
  syntax:
    content: public string DhGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DhGroup As String
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup
  commentId: P:Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup
  id: PfsGroup
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: PfsGroup
  nameWithType: IpsecPolicy.PfsGroup
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PfsGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the DH Groups used in IKE Phase 2 for new child SA.\nPossible values include: 'None', 'PFS1', 'PFS2', 'PFS2048',\n'ECP256', 'ECP384', 'PFS24'\n"
  example: []
  syntax:
    content: public string PfsGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PfsGroup As String
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate
  commentId: M:Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Network.Models.IpsecPolicy
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: IpsecPolicy.Validate()
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/IpsecPolicy.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.#ctor
  isExternal: false
  name: IpsecPolicy
  nameWithType: IpsecPolicy.IpsecPolicy
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecPolicy
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds
  isExternal: false
  name: SaLifeTimeSeconds
  nameWithType: IpsecPolicy.SaLifeTimeSeconds
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaLifeTimeSeconds
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes
  isExternal: false
  name: SaDataSizeKilobytes
  nameWithType: IpsecPolicy.SaDataSizeKilobytes
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.SaDataSizeKilobytes
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption
  isExternal: false
  name: IpsecEncryption
  nameWithType: IpsecPolicy.IpsecEncryption
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecEncryption
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity
  isExternal: false
  name: IpsecIntegrity
  nameWithType: IpsecPolicy.IpsecIntegrity
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IpsecIntegrity
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption
  isExternal: false
  name: IkeEncryption
  nameWithType: IpsecPolicy.IkeEncryption
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeEncryption
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity
  isExternal: false
  name: IkeIntegrity
  nameWithType: IpsecPolicy.IkeIntegrity
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.IkeIntegrity
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup
  isExternal: false
  name: DhGroup
  nameWithType: IpsecPolicy.DhGroup
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.DhGroup
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup
  isExternal: false
  name: PfsGroup
  nameWithType: IpsecPolicy.PfsGroup
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.PfsGroup
- uid: Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate
  isExternal: false
  name: Validate
  nameWithType: IpsecPolicy.Validate
  fullName: Microsoft.Azure.Management.Network.Models.IpsecPolicy.Validate
