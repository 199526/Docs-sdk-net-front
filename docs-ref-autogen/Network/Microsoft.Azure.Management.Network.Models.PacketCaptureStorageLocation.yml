### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  commentId: T:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  id: PacketCaptureStorageLocation
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor
  - Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath
  - Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId
  - Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath
  langs:
  - csharp
  - vb
  name: PacketCaptureStorageLocation
  nameWithType: PacketCaptureStorageLocation
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PacketCaptureStorageLocation
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nDescribes the storage location for a packet capture session.\n"
  example: []
  syntax:
    content: public class PacketCaptureStorageLocation
    content.vb: Public Class PacketCaptureStorageLocation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  langs:
  - csharp
  - vb
  name: PacketCaptureStorageLocation()
  nameWithType: PacketCaptureStorageLocation.PacketCaptureStorageLocation()
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.PacketCaptureStorageLocation()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the PacketCaptureStorageLocation\nclass.\n"
  example: []
  syntax:
    content: public PacketCaptureStorageLocation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  langs:
  - csharp
  - vb
  name: PacketCaptureStorageLocation(String, String, String)
  nameWithType: PacketCaptureStorageLocation.PacketCaptureStorageLocation(String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.PacketCaptureStorageLocation(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the PacketCaptureStorageLocation\nclass.\n"
  example: []
  syntax:
    content: public PacketCaptureStorageLocation(string storageId = null, string storagePath = null, string filePath = null)
    parameters:
    - id: storageId
      type: System.String
      description: >-
        The ID of the storage account to save the

        packet capture session. Required if no local file path is

        provided.
    - id: storagePath
      type: System.String
      description: >-
        The URI of the storage path to save the

        packet capture. Must be a well-formed URI describing the location

        to save the packet capture.
    - id: filePath
      type: System.String
      description: >-
        A valid local path on the targeting VM. Must

        include the name of the capture file (*.cap). For linux virtual

        machine it must start with /var/captures. Required if no storage ID

        is provided, otherwise optional.
    content.vb: Public Sub New(storageId As String = Nothing, storagePath As String = Nothing, filePath As String = Nothing)
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId
  id: StorageId
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  langs:
  - csharp
  - vb
  name: StorageId
  nameWithType: PacketCaptureStorageLocation.StorageId
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageId
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the ID of the storage account to save the packet\ncapture session. Required if no local file path is provided.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "storageId")]

      public string StorageId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="storageId")>

      Public Property StorageId As String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: storageId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath
  id: StoragePath
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  langs:
  - csharp
  - vb
  name: StoragePath
  nameWithType: PacketCaptureStorageLocation.StoragePath
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StoragePath
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets the URI of the storage path to save the packet\ncapture. Must be a well-formed URI describing the location to save\nthe packet capture.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "storagePath")]

      public string StoragePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="storagePath")>

      Public Property StoragePath As String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: storagePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath
  commentId: P:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath
  id: FilePath
  parent: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: PacketCaptureStorageLocation.FilePath
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FilePath
    path: src/azure-sdk-for-net/src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/PacketCaptureStorageLocation.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nGets or sets a valid local path on the targeting VM. Must include\nthe name of the capture file (*.cap). For linux virtual machine it\nmust start with /var/captures. Required if no storage ID is\nprovided, otherwise optional.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "filePath")]

      public string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(PropertyName:="filePath")>

      Public Property FilePath As String
  overload: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: filePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  commentId: N:Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  nameWithType: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.#ctor
  isExternal: false
  name: PacketCaptureStorageLocation
  nameWithType: PacketCaptureStorageLocation.PacketCaptureStorageLocation
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.PacketCaptureStorageLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId
  isExternal: false
  name: StorageId
  nameWithType: PacketCaptureStorageLocation.StorageId
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StorageId
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath
  isExternal: false
  name: StoragePath
  nameWithType: PacketCaptureStorageLocation.StoragePath
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.StoragePath
- uid: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath*
  commentId: Overload:Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath
  isExternal: false
  name: FilePath
  nameWithType: PacketCaptureStorageLocation.FilePath
  fullName: Microsoft.Azure.Management.Network.Models.PacketCaptureStorageLocation.FilePath
