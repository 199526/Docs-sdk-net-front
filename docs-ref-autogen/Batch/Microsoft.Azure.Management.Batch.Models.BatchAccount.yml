### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount
  commentId: T:Microsoft.Azure.Management.Batch.Models.BatchAccount
  id: BatchAccount
  parent: Microsoft.Azure.Management.Batch.Models
  children:
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Batch.Models.ProvisioningState,System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode},Microsoft.Azure.Management.Batch.Models.KeyVaultReference,Microsoft.Azure.Management.Batch.Models.AutoStorageProperties,System.Int32,System.Int32,System.Int32)
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState
  - Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate
  langs:
  - csharp
  - vb
  name: BatchAccount
  nameWithType: BatchAccount
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchAccount
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nContains information about an Azure Batch account.\n"
  example: []
  syntax:
    content: >-
      [JsonTransformation]

      public class BatchAccount : Resource, IResource
    content.vb: >-
      <JsonTransformation>

      Public Class BatchAccount
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Batch.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Batch.Models.Resource.Id
  - Microsoft.Azure.Management.Batch.Models.Resource.Name
  - Microsoft.Azure.Management.Batch.Models.Resource.Type
  - Microsoft.Azure.Management.Batch.Models.Resource.Location
  - Microsoft.Azure.Management.Batch.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Rest.Serialization.JsonTransformationAttribute
    ctor: Microsoft.Rest.Serialization.JsonTransformationAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor
  commentId: M:Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: BatchAccount()
  nameWithType: BatchAccount.BatchAccount()
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.BatchAccount()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nInitializes a new instance of the BatchAccount class.\n"
  example: []
  syntax:
    content: public BatchAccount()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Batch.Models.ProvisioningState,System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode},Microsoft.Azure.Management.Batch.Models.KeyVaultReference,Microsoft.Azure.Management.Batch.Models.AutoStorageProperties,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Batch.Models.ProvisioningState,System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode},Microsoft.Azure.Management.Batch.Models.KeyVaultReference,Microsoft.Azure.Management.Batch.Models.AutoStorageProperties,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Batch.Models.ProvisioningState,System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode},Microsoft.Azure.Management.Batch.Models.KeyVaultReference,Microsoft.Azure.Management.Batch.Models.AutoStorageProperties,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: BatchAccount(String, String, String, String, IDictionary<String, String>, String, ProvisioningState, Nullable<PoolAllocationMode>, KeyVaultReference, AutoStorageProperties, Int32, Int32, Int32)
  nameWithType: BatchAccount.BatchAccount(String, String, String, String, IDictionary<String, String>, String, ProvisioningState, Nullable<PoolAllocationMode>, KeyVaultReference, AutoStorageProperties, Int32, Int32, Int32)
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.BatchAccount(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, Microsoft.Azure.Management.Batch.Models.ProvisioningState, System.Nullable<Microsoft.Azure.Management.Batch.Models.PoolAllocationMode>, Microsoft.Azure.Management.Batch.Models.KeyVaultReference, Microsoft.Azure.Management.Batch.Models.AutoStorageProperties, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nInitializes a new instance of the BatchAccount class.\n"
  example: []
  syntax:
    content: public BatchAccount(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, string accountEndpoint = null, ProvisioningState provisioningState = ProvisioningState.Invalid, PoolAllocationMode? poolAllocationMode = null, KeyVaultReference keyVaultReference = null, AutoStorageProperties autoStorage = null, int coreQuota = 0, int poolQuota = 0, int activeJobAndJobScheduleQuota = 0)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, accountEndpoint As String = Nothing, provisioningState As ProvisioningState = ProvisioningState.Invalid, poolAllocationMode As PoolAllocationMode? = Nothing, keyVaultReference As KeyVaultReference = Nothing, autoStorage As AutoStorageProperties = Nothing, coreQuota As Integer = 0, poolQuota As Integer = 0, activeJobAndJobScheduleQuota As Integer = 0)
    parameters:
    - id: id
      type: System.String
      description: The ID of the resource
    - id: name
      type: System.String
      description: The name of the resource
    - id: type
      type: System.String
      description: The type of the resource
    - id: location
      type: System.String
      description: The location of the resource
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The tags of the resource
    - id: accountEndpoint
      type: System.String
      description: >-
        The endpoint used by this account to

        interact with the Batch services.
    - id: provisioningState
      type: Microsoft.Azure.Management.Batch.Models.ProvisioningState
      description: >-
        The provisioned state of the

        resource. Possible values include: 'Invalid', 'Creating',

        'Deleting', 'Succeeded', 'Failed', 'Cancelled'
    - id: poolAllocationMode
      type: System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode}
      description: >-
        The allocation mode to use for

        creating pools in the Batch account.
    - id: keyVaultReference
      type: Microsoft.Azure.Management.Batch.Models.KeyVaultReference
      description: >-
        A reference to the Azure key vault

        associated with the Batch account.
    - id: autoStorage
      type: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
      description: >-
        The properties and status of any auto

        storage account associated with the Batch account.
    - id: coreQuota
      type: System.Int32
      description: >-
        The core quota for this Batch

        account.
    - id: poolQuota
      type: System.Int32
      description: >-
        The pool quota for this Batch

        account.
    - id: activeJobAndJobScheduleQuota
      type: System.Int32
      description: >-
        The active job and job

        schedule quota for this Batch account.
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor*
  nameWithType.vb: BatchAccount.BatchAccount(String, String, String, String, IDictionary(Of String, String), String, ProvisioningState, Nullable(Of PoolAllocationMode), KeyVaultReference, AutoStorageProperties, Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Batch.Models.BatchAccount.BatchAccount(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, Microsoft.Azure.Management.Batch.Models.ProvisioningState, System.Nullable(Of Microsoft.Azure.Management.Batch.Models.PoolAllocationMode), Microsoft.Azure.Management.Batch.Models.KeyVaultReference, Microsoft.Azure.Management.Batch.Models.AutoStorageProperties, System.Int32, System.Int32, System.Int32)
  name.vb: BatchAccount(String, String, String, String, IDictionary(Of String, String), String, ProvisioningState, Nullable(Of PoolAllocationMode), KeyVaultReference, AutoStorageProperties, Int32, Int32, Int32)
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint
  id: AccountEndpoint
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: AccountEndpoint
  nameWithType: BatchAccount.AccountEndpoint
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccountEndpoint
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the endpoint used by this account to interact with the Batch\nservices.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.accountEndpoint")]

      public string AccountEndpoint { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.accountEndpoint")>

      Public Property AccountEndpoint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.accountEndpoint
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: BatchAccount.ProvisioningState
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the provisioned state of the resource. Possible values\ninclude: 'Invalid', 'Creating', 'Deleting', 'Succeeded', 'Failed',\n'Cancelled'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public ProvisioningState ProvisioningState { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As ProvisioningState
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.Models.ProvisioningState
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode
  id: PoolAllocationMode
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: PoolAllocationMode
  nameWithType: BatchAccount.PoolAllocationMode
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolAllocationMode
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the allocation mode to use for creating pools in the Batch\naccount.\n"
  remarks: "\nPossible values include: 'BatchService', 'UserSubscription'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.poolAllocationMode")]

      public PoolAllocationMode? PoolAllocationMode { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.poolAllocationMode")>

      Public Property PoolAllocationMode As PoolAllocationMode?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode}
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.poolAllocationMode
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference
  id: KeyVaultReference
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: KeyVaultReference
  nameWithType: BatchAccount.KeyVaultReference
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultReference
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets a reference to the Azure key vault associated with the Batch\naccount.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.keyVaultReference")]

      public KeyVaultReference KeyVaultReference { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.keyVaultReference")>

      Public Property KeyVaultReference As KeyVaultReference
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.Models.KeyVaultReference
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.keyVaultReference
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage
  id: AutoStorage
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: AutoStorage
  nameWithType: BatchAccount.AutoStorage
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoStorage
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the properties and status of any auto storage account\nassociated with the Batch account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.autoStorage")]

      public AutoStorageProperties AutoStorage { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.autoStorage")>

      Public Property AutoStorage As AutoStorageProperties
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.autoStorage
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota
  id: CoreQuota
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: CoreQuota
  nameWithType: BatchAccount.CoreQuota
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CoreQuota
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the core quota for this Batch account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.coreQuota")]

      public int CoreQuota { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.coreQuota")>

      Public Property CoreQuota As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.coreQuota
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota
  id: PoolQuota
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: PoolQuota
  nameWithType: BatchAccount.PoolQuota
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolQuota
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the pool quota for this Batch account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.poolQuota")]

      public int PoolQuota { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.poolQuota")>

      Public Property PoolQuota As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.poolQuota
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota
  commentId: P:Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota
  id: ActiveJobAndJobScheduleQuota
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: ActiveJobAndJobScheduleQuota
  nameWithType: BatchAccount.ActiveJobAndJobScheduleQuota
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActiveJobAndJobScheduleQuota
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets the active job and job schedule quota for this Batch account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.activeJobAndJobScheduleQuota")]

      public int ActiveJobAndJobScheduleQuota { get; protected set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.activeJobAndJobScheduleQuota")>

      Public Property ActiveJobAndJobScheduleQuota As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.activeJobAndJobScheduleQuota
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate
  commentId: M:Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Batch.Models.BatchAccount
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: BatchAccount.Validate()
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Batch/Microsoft.Azure.Management.Batch/Generated/Models/BatchAccount.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Batch.Models
  commentId: N:Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: Microsoft.Azure.Management.Batch.Models
  nameWithType: Microsoft.Azure.Management.Batch.Models
  fullName: Microsoft.Azure.Management.Batch.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Batch.Models.Resource
  commentId: T:Microsoft.Azure.Management.Batch.Models.Resource
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.Batch.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: true
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Batch.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.Batch.Models.Resource.Id
  parent: Microsoft.Azure.Management.Batch.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.Batch.Models.Resource.Id
- uid: Microsoft.Azure.Management.Batch.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.Batch.Models.Resource.Name
  parent: Microsoft.Azure.Management.Batch.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.Batch.Models.Resource.Name
- uid: Microsoft.Azure.Management.Batch.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.Batch.Models.Resource.Type
  parent: Microsoft.Azure.Management.Batch.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.Batch.Models.Resource.Type
- uid: Microsoft.Azure.Management.Batch.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.Batch.Models.Resource.Location
  parent: Microsoft.Azure.Management.Batch.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.Batch.Models.Resource.Location
- uid: Microsoft.Azure.Management.Batch.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.Batch.Models.Resource.Tags
  parent: Microsoft.Azure.Management.Batch.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.Batch.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.#ctor
  isExternal: false
  name: BatchAccount
  nameWithType: BatchAccount.BatchAccount
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.BatchAccount
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Batch.Models.ProvisioningState
  commentId: T:Microsoft.Azure.Management.Batch.Models.ProvisioningState
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: ProvisioningState
  nameWithType: ProvisioningState
  fullName: Microsoft.Azure.Management.Batch.Models.ProvisioningState
- uid: System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode}
  commentId: T:System.Nullable{Microsoft.Azure.Management.Batch.Models.PoolAllocationMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PoolAllocationMode>
  nameWithType: Nullable<PoolAllocationMode>
  fullName: System.Nullable<Microsoft.Azure.Management.Batch.Models.PoolAllocationMode>
  nameWithType.vb: Nullable(Of PoolAllocationMode)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Management.Batch.Models.PoolAllocationMode)
  name.vb: Nullable(Of PoolAllocationMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.PoolAllocationMode
    name: PoolAllocationMode
    nameWithType: PoolAllocationMode
    fullName: Microsoft.Azure.Management.Batch.Models.PoolAllocationMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.PoolAllocationMode
    name: PoolAllocationMode
    nameWithType: PoolAllocationMode
    fullName: Microsoft.Azure.Management.Batch.Models.PoolAllocationMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Batch.Models.KeyVaultReference
  commentId: T:Microsoft.Azure.Management.Batch.Models.KeyVaultReference
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: KeyVaultReference
  nameWithType: KeyVaultReference
  fullName: Microsoft.Azure.Management.Batch.Models.KeyVaultReference
- uid: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
  commentId: T:Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: AutoStorageProperties
  nameWithType: AutoStorageProperties
  fullName: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint
  isExternal: false
  name: AccountEndpoint
  nameWithType: BatchAccount.AccountEndpoint
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.AccountEndpoint
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState
  isExternal: false
  name: ProvisioningState
  nameWithType: BatchAccount.ProvisioningState
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.ProvisioningState
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode
  isExternal: false
  name: PoolAllocationMode
  nameWithType: BatchAccount.PoolAllocationMode
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolAllocationMode
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference
  isExternal: false
  name: KeyVaultReference
  nameWithType: BatchAccount.KeyVaultReference
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.KeyVaultReference
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage
  isExternal: false
  name: AutoStorage
  nameWithType: BatchAccount.AutoStorage
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.AutoStorage
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota
  isExternal: false
  name: CoreQuota
  nameWithType: BatchAccount.CoreQuota
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.CoreQuota
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota
  isExternal: false
  name: PoolQuota
  nameWithType: BatchAccount.PoolQuota
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.PoolQuota
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota
  isExternal: false
  name: ActiveJobAndJobScheduleQuota
  nameWithType: BatchAccount.ActiveJobAndJobScheduleQuota
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.ActiveJobAndJobScheduleQuota
- uid: Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate*
  commentId: Overload:Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate
  isExternal: false
  name: Validate
  nameWithType: BatchAccount.Validate
  fullName: Microsoft.Azure.Management.Batch.Models.BatchAccount.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
