### YamlMime:ManagedReference
items:
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  id: RetryStrategy
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  children:
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.#ctor(System.String,System.Boolean)
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  langs:
  - csharp
  - vb
  name: RetryStrategy
  nameWithType: RetryStrategy
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RetryStrategy
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents a retry strategy that determines the number of retry attempts and the interval between retries.\n"
  example: []
  syntax:
    content: public abstract class RetryStrategy
    content.vb: Public MustInherit Class RetryStrategy
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.FixedInterval
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Incremental
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  id: DefaultClientRetryCount
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultClientRetryCount
  nameWithType: RetryStrategy.DefaultClientRetryCount
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultClientRetryCount
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default number of retry attempts.\n"
  example: []
  syntax:
    content: public static readonly int DefaultClientRetryCount
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly DefaultClientRetryCount As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  id: DefaultClientBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultClientBackoff
  nameWithType: RetryStrategy.DefaultClientBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultClientBackoff
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default amount of time used when calculating a random delta in the exponential delay between retries.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultClientBackoff
    return:
      type: System.TimeSpan
    content.vb: Public Shared ReadOnly DefaultClientBackoff As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  id: DefaultMaxBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultMaxBackoff
  nameWithType: RetryStrategy.DefaultMaxBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultMaxBackoff
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default maximum amount of time used when calculating the exponential delay between retries.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultMaxBackoff
    return:
      type: System.TimeSpan
    content.vb: Public Shared ReadOnly DefaultMaxBackoff As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  id: DefaultMinBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultMinBackoff
  nameWithType: RetryStrategy.DefaultMinBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultMinBackoff
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default minimum amount of time used when calculating the exponential delay between retries.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultMinBackoff
    return:
      type: System.TimeSpan
    content.vb: Public Shared ReadOnly DefaultMinBackoff As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  id: DefaultRetryInterval
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultRetryInterval
  nameWithType: RetryStrategy.DefaultRetryInterval
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultRetryInterval
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default interval between retries.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultRetryInterval
    return:
      type: System.TimeSpan
    content.vb: Public Shared ReadOnly DefaultRetryInterval As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  id: DefaultRetryIncrement
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultRetryIncrement
  nameWithType: RetryStrategy.DefaultRetryIncrement
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultRetryIncrement
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default time increment between retry attempts in the progressive delay policy.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultRetryIncrement
    return:
      type: System.TimeSpan
    content.vb: Public Shared ReadOnly DefaultRetryIncrement As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  id: DefaultFirstFastRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultFirstFastRetry
  nameWithType: RetryStrategy.DefaultFirstFastRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultFirstFastRetry
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nRepresents the default flag indicating whether the first retry attempt will be made immediately,\nwhereas subsequent retries will remain subject to the retry interval.\n"
  example: []
  syntax:
    content: public static readonly bool DefaultFirstFastRetry
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly DefaultFirstFastRetry As Boolean
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  id: NoRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: NoRetry
  nameWithType: RetryStrategy.NoRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: NoRetry
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nReturns a default policy that performs no retries, but invokes the action only once.\n"
  example: []
  syntax:
    content: public static RetryStrategy NoRetry { get; }
    parameters: []
    return:
      type: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
    content.vb: Public Shared ReadOnly Property NoRetry As RetryStrategy
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  id: DefaultFixed
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultFixed
  nameWithType: RetryStrategy.DefaultFixed
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultFixed
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nReturns a default policy that implements a fixed retry interval configured with the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval\" data-throw-if-not-resolved=\"false\"></xref> parameters.\nThe default retry policy treats all caught exceptions as transient errors.\n"
  example: []
  syntax:
    content: public static RetryStrategy DefaultFixed { get; }
    parameters: []
    return:
      type: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
    content.vb: Public Shared ReadOnly Property DefaultFixed As RetryStrategy
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  id: DefaultProgressive
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultProgressive
  nameWithType: RetryStrategy.DefaultProgressive
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultProgressive
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nReturns a default policy that implements a progressive retry interval configured with the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement\" data-throw-if-not-resolved=\"false\"></xref> parameters.\nThe default retry policy treats all caught exceptions as transient errors.\n"
  example: []
  syntax:
    content: public static RetryStrategy DefaultProgressive { get; }
    parameters: []
    return:
      type: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
    content.vb: Public Shared ReadOnly Property DefaultProgressive As RetryStrategy
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  id: DefaultExponential
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: DefaultExponential
  nameWithType: RetryStrategy.DefaultExponential
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultExponential
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nReturns a default policy that implements a random exponential retry interval configured with the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff\" data-throw-if-not-resolved=\"false\"></xref> parameters.\nThe default retry policy treats all caught exceptions as transient errors.\n"
  example: []
  syntax:
    content: public static RetryStrategy DefaultExponential { get; }
    parameters: []
    return:
      type: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
    content.vb: Public Shared ReadOnly Property DefaultExponential As RetryStrategy
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  id: FastFirstRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: FastFirstRetry
  nameWithType: RetryStrategy.FastFirstRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: FastFirstRetry
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nGets or sets a value indicating whether the first retry attempt will be made immediately,\nwhereas subsequent retries will remain subject to the retry interval.\n"
  example: []
  syntax:
    content: public bool FastFirstRetry { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FastFirstRetry As Boolean
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  id: Name
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RetryStrategy.Name
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Name
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nGets the name of the retry strategy.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.#ctor(System.String,System.Boolean)
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: RetryStrategy(String, Boolean)
  nameWithType: RetryStrategy.RetryStrategy(String, Boolean)
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.RetryStrategy(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: protected RetryStrategy(string name, bool firstFastRetry)
    parameters:
    - id: name
      type: System.String
      description: The name of the retry strategy.
    - id: firstFastRetry
      type: System.Boolean
      description: true to immediately retry in the first attempt; otherwise, false. The subsequent retries will remain subject to the configured retry interval.
    content.vb: Protected Sub New(name As String, firstFastRetry As Boolean)
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  id: GetShouldRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  langs:
  - csharp
  - vb
  name: GetShouldRetry()
  nameWithType: RetryStrategy.GetShouldRetry()
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetShouldRetry
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryStrategy.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nReturns the corresponding ShouldRetry delegate.\n"
  example: []
  syntax:
    content: public abstract ShouldRetry GetShouldRetry()
    return:
      type: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
      description: The ShouldRetry delegate.
    content.vb: Public MustOverride Function GetShouldRetry As ShouldRetry
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  commentId: N:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  nameWithType: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  isExternal: false
  name: NoRetry
  nameWithType: RetryStrategy.NoRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: RetryStrategy
  nameWithType: RetryStrategy
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultClientRetryCount
  nameWithType: RetryStrategy.DefaultClientRetryCount
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultRetryInterval
  nameWithType: RetryStrategy.DefaultRetryInterval
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  isExternal: false
  name: DefaultFixed
  nameWithType: RetryStrategy.DefaultFixed
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultRetryIncrement
  nameWithType: RetryStrategy.DefaultRetryIncrement
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  isExternal: false
  name: DefaultProgressive
  nameWithType: RetryStrategy.DefaultProgressive
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultMinBackoff
  nameWithType: RetryStrategy.DefaultMinBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultMaxBackoff
  nameWithType: RetryStrategy.DefaultMaxBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultClientBackoff
  nameWithType: RetryStrategy.DefaultClientBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  isExternal: false
  name: DefaultExponential
  nameWithType: RetryStrategy.DefaultExponential
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  isExternal: false
  name: FastFirstRetry
  nameWithType: RetryStrategy.FastFirstRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  isExternal: false
  name: Name
  nameWithType: RetryStrategy.Name
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.#ctor*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.#ctor
  isExternal: false
  name: RetryStrategy
  nameWithType: RetryStrategy.RetryStrategy
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.RetryStrategy
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  isExternal: false
  name: GetShouldRetry
  nameWithType: RetryStrategy.GetShouldRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: ShouldRetry
  nameWithType: ShouldRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
