### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  id: MqttTransportSettings
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  children:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage
  langs:
  - csharp
  - vb
  name: MqttTransportSettings
  nameWithType: MqttTransportSettings
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: MqttTransportSettings
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: 'public class MqttTransportSettings : ITransportSettings'
    content.vb: >-
      Public Class MqttTransportSettings
          Implements ITransportSettings
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Devices.Client.ITransportSettings
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)
  id: '#ctor(Microsoft.Azure.Devices.Client.TransportType)'
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: MqttTransportSettings(TransportType)
  nameWithType: MqttTransportSettings.MqttTransportSettings(TransportType)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MqttTransportSettings(Microsoft.Azure.Devices.Client.TransportType)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public MqttTransportSettings(TransportType transportType)
    parameters:
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
    content.vb: Public Sub New(transportType As TransportType)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout
  id: DeviceReceiveAckCanTimeout
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: DeviceReceiveAckCanTimeout
  nameWithType: MqttTransportSettings.DeviceReceiveAckCanTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceReceiveAckCanTimeout
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool DeviceReceiveAckCanTimeout { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeviceReceiveAckCanTimeout As Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout
  id: DeviceReceiveAckTimeout
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: DeviceReceiveAckTimeout
  nameWithType: MqttTransportSettings.DeviceReceiveAckTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceReceiveAckTimeout
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public TimeSpan DeviceReceiveAckTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property DeviceReceiveAckTimeout As TimeSpan
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS
  id: PublishToServerQoS
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: PublishToServerQoS
  nameWithType: MqttTransportSettings.PublishToServerQoS
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: PublishToServerQoS
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public QualityOfService PublishToServerQoS { get; set; }
    parameters: []
    return:
      type: DotNetty.Codecs.Mqtt.Packets.QualityOfService
    content.vb: Public Property PublishToServerQoS As QualityOfService
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS
  id: ReceivingQoS
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: ReceivingQoS
  nameWithType: MqttTransportSettings.ReceivingQoS
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ReceivingQoS
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public QualityOfService ReceivingQoS { get; set; }
    parameters: []
    return:
      type: DotNetty.Codecs.Mqtt.Packets.QualityOfService
    content.vb: Public Property ReceivingQoS As QualityOfService
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName
  id: RetainPropertyName
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: RetainPropertyName
  nameWithType: MqttTransportSettings.RetainPropertyName
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RetainPropertyName
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public string RetainPropertyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RetainPropertyName As String
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName
  id: DupPropertyName
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: DupPropertyName
  nameWithType: MqttTransportSettings.DupPropertyName
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DupPropertyName
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public string DupPropertyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DupPropertyName As String
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName
  id: QoSPropertyName
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: QoSPropertyName
  nameWithType: MqttTransportSettings.QoSPropertyName
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: QoSPropertyName
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public string QoSPropertyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property QoSPropertyName As String
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced
  id: MaxOutboundRetransmissionEnforced
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: MaxOutboundRetransmissionEnforced
  nameWithType: MqttTransportSettings.MaxOutboundRetransmissionEnforced
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: MaxOutboundRetransmissionEnforced
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool MaxOutboundRetransmissionEnforced { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MaxOutboundRetransmissionEnforced As Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages
  id: MaxPendingInboundMessages
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: MaxPendingInboundMessages
  nameWithType: MqttTransportSettings.MaxPendingInboundMessages
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: MaxPendingInboundMessages
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public int MaxPendingInboundMessages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxPendingInboundMessages As Integer
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout
  id: ConnectArrivalTimeout
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: ConnectArrivalTimeout
  nameWithType: MqttTransportSettings.ConnectArrivalTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ConnectArrivalTimeout
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public TimeSpan ConnectArrivalTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ConnectArrivalTimeout As TimeSpan
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession
  id: CleanSession
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: CleanSession
  nameWithType: MqttTransportSettings.CleanSession
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CleanSession
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool CleanSession { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CleanSession As Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds
  id: KeepAliveInSeconds
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: KeepAliveInSeconds
  nameWithType: MqttTransportSettings.KeepAliveInSeconds
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: KeepAliveInSeconds
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public int KeepAliveInSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property KeepAliveInSeconds As Integer
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill
  id: HasWill
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: HasWill
  nameWithType: MqttTransportSettings.HasWill
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: HasWill
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool HasWill { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasWill As Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage
  id: WillMessage
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: WillMessage
  nameWithType: MqttTransportSettings.WillMessage
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: WillMessage
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public IWillMessage WillMessage { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
    content.vb: Public Property WillMessage As IWillMessage
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType
  id: GetTransportType
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: GetTransportType()
  nameWithType: MqttTransportSettings.GetTransportType()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetTransportType
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public TransportType GetTransportType()
    return:
      type: Microsoft.Azure.Devices.Client.TransportType
    content.vb: Public Function GetTransportType As TransportType
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType*
  implements:
  - Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: DefaultReceiveTimeout
  nameWithType: MqttTransportSettings.DefaultReceiveTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DefaultReceiveTimeout
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public TimeSpan DefaultReceiveTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property DefaultReceiveTimeout As TimeSpan
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout*
  implements:
  - Microsoft.Azure.Devices.Client.ITransportSettings.DefaultReceiveTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate
  id: ClientCertificate
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings
  langs:
  - csharp
  - vb
  name: ClientCertificate
  nameWithType: MqttTransportSettings.ClientCertificate
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ClientCertificate
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/MqttTransportSettings.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public X509Certificate ClientCertificate { get; set; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
    content.vb: Public Property ClientCertificate As X509Certificate
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt
  commentId: N:Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Transport.Mqtt
  nameWithType: Microsoft.Azure.Devices.Client.Transport.Mqtt
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Devices.Client.ITransportSettings
  commentId: T:Microsoft.Azure.Devices.Client.ITransportSettings
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: ITransportSettings
  nameWithType: ITransportSettings
  fullName: Microsoft.Azure.Devices.Client.ITransportSettings
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client
  commentId: N:Microsoft.Azure.Devices.Client
  isExternal: false
  name: Microsoft.Azure.Devices.Client
  nameWithType: Microsoft.Azure.Devices.Client
  fullName: Microsoft.Azure.Devices.Client
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor
  isExternal: false
  name: MqttTransportSettings
  nameWithType: MqttTransportSettings.MqttTransportSettings
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MqttTransportSettings
- uid: Microsoft.Azure.Devices.Client.TransportType
  commentId: T:Microsoft.Azure.Devices.Client.TransportType
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: TransportType
  nameWithType: TransportType
  fullName: Microsoft.Azure.Devices.Client.TransportType
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout
  isExternal: false
  name: DeviceReceiveAckCanTimeout
  nameWithType: MqttTransportSettings.DeviceReceiveAckCanTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout
  isExternal: false
  name: DeviceReceiveAckTimeout
  nameWithType: MqttTransportSettings.DeviceReceiveAckTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS
  isExternal: false
  name: PublishToServerQoS
  nameWithType: MqttTransportSettings.PublishToServerQoS
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS
- uid: DotNetty.Codecs.Mqtt.Packets.QualityOfService
  commentId: T:DotNetty.Codecs.Mqtt.Packets.QualityOfService
  parent: DotNetty.Codecs.Mqtt.Packets
  isExternal: true
  name: QualityOfService
  nameWithType: QualityOfService
  fullName: DotNetty.Codecs.Mqtt.Packets.QualityOfService
- uid: DotNetty.Codecs.Mqtt.Packets
  commentId: N:DotNetty.Codecs.Mqtt.Packets
  isExternal: false
  name: DotNetty.Codecs.Mqtt.Packets
  nameWithType: DotNetty.Codecs.Mqtt.Packets
  fullName: DotNetty.Codecs.Mqtt.Packets
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS
  isExternal: false
  name: ReceivingQoS
  nameWithType: MqttTransportSettings.ReceivingQoS
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName
  isExternal: false
  name: RetainPropertyName
  nameWithType: MqttTransportSettings.RetainPropertyName
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName
  isExternal: false
  name: DupPropertyName
  nameWithType: MqttTransportSettings.DupPropertyName
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName
  isExternal: false
  name: QoSPropertyName
  nameWithType: MqttTransportSettings.QoSPropertyName
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced
  isExternal: false
  name: MaxOutboundRetransmissionEnforced
  nameWithType: MqttTransportSettings.MaxOutboundRetransmissionEnforced
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages
  isExternal: false
  name: MaxPendingInboundMessages
  nameWithType: MqttTransportSettings.MaxPendingInboundMessages
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout
  isExternal: false
  name: ConnectArrivalTimeout
  nameWithType: MqttTransportSettings.ConnectArrivalTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession
  isExternal: false
  name: CleanSession
  nameWithType: MqttTransportSettings.CleanSession
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds
  isExternal: false
  name: KeepAliveInSeconds
  nameWithType: MqttTransportSettings.KeepAliveInSeconds
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill
  isExternal: false
  name: HasWill
  nameWithType: MqttTransportSettings.HasWill
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage
  isExternal: false
  name: WillMessage
  nameWithType: MqttTransportSettings.WillMessage
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: IWillMessage
  nameWithType: IWillMessage
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType
  isExternal: false
  name: GetTransportType
  nameWithType: MqttTransportSettings.GetTransportType
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType
- uid: Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
  commentId: M:Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
  parent: Microsoft.Azure.Devices.Client.ITransportSettings
  isExternal: false
  name: GetTransportType()
  nameWithType: ITransportSettings.GetTransportType()
  fullName: Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType()
  spec.csharp:
  - uid: Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
    name: GetTransportType
    nameWithType: ITransportSettings.GetTransportType
    fullName: Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
    name: GetTransportType
    nameWithType: ITransportSettings.GetTransportType
    fullName: Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: MqttTransportSettings.DefaultReceiveTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout
- uid: Microsoft.Azure.Devices.Client.ITransportSettings.DefaultReceiveTimeout
  commentId: P:Microsoft.Azure.Devices.Client.ITransportSettings.DefaultReceiveTimeout
  parent: Microsoft.Azure.Devices.Client.ITransportSettings
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ITransportSettings.DefaultReceiveTimeout
  fullName: Microsoft.Azure.Devices.Client.ITransportSettings.DefaultReceiveTimeout
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate
  isExternal: false
  name: ClientCertificate
  nameWithType: MqttTransportSettings.ClientCertificate
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
