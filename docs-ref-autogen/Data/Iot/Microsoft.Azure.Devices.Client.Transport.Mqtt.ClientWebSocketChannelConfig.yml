### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  id: ClientWebSocketChannelConfig
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  children:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount
  langs:
  - csharp
  - vb
  name: ClientWebSocketChannelConfig
  nameWithType: ClientWebSocketChannelConfig
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ClientWebSocketChannelConfig
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: 'public class ClientWebSocketChannelConfig : IChannelConfiguration'
    content.vb: >-
      Public Class ClientWebSocketChannelConfig
          Implements IChannelConfiguration
  inheritance:
  - System.Object
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  id: GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: GetOption<T>(ChannelOption<T>)
  nameWithType: ClientWebSocketChannelConfig.GetOption<T>(ChannelOption<T>)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption<T>(DotNetty.Transport.Channels.ChannelOption<T>)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetOption
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public T GetOption<T>(ChannelOption<T> option)
    content.vb: Public Function GetOption(Of T)(option As ChannelOption(Of T)) As T
    parameters:
    - id: option
      type: DotNetty.Transport.Channels.ChannelOption{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{{T}})
  nameWithType.vb: ClientWebSocketChannelConfig.GetOption(Of T)(ChannelOption(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption(Of T)(DotNetty.Transport.Channels.ChannelOption(Of T))
  name.vb: GetOption(Of T)(ChannelOption(Of T))
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  id: SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: SetOption(ChannelOption, Object)
  nameWithType: ClientWebSocketChannelConfig.SetOption(ChannelOption, Object)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(DotNetty.Transport.Channels.ChannelOption, System.Object)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: SetOption
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool SetOption(ChannelOption option, object value)
    content.vb: Public Function SetOption(option As ChannelOption, value As Object) As Boolean
    parameters:
    - id: option
      type: DotNetty.Transport.Channels.ChannelOption
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  id: SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: SetOption<T>(ChannelOption<T>, T)
  nameWithType: ClientWebSocketChannelConfig.SetOption<T>(ChannelOption<T>, T)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption<T>(DotNetty.Transport.Channels.ChannelOption<T>, T)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: SetOption
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool SetOption<T>(ChannelOption<T> option, T value)
    content.vb: Public Function SetOption(Of T)(option As ChannelOption(Of T), value As T) As Boolean
    parameters:
    - id: option
      type: DotNetty.Transport.Channels.ChannelOption{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{{T}},{T})
  nameWithType.vb: ClientWebSocketChannelConfig.SetOption(Of T)(ChannelOption(Of T), T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(Of T)(DotNetty.Transport.Channels.ChannelOption(Of T), T)
  name.vb: SetOption(Of T)(ChannelOption(Of T), T)
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout
  id: ConnectTimeout
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: ConnectTimeout
  nameWithType: ClientWebSocketChannelConfig.ConnectTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ConnectTimeout
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public TimeSpan ConnectTimeout { get; set; }
    content.vb: Public Property ConnectTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.ConnectTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount
  id: WriteSpinCount
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: WriteSpinCount
  nameWithType: ClientWebSocketChannelConfig.WriteSpinCount
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: WriteSpinCount
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public int WriteSpinCount { get; set; }
    content.vb: Public Property WriteSpinCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.WriteSpinCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator
  id: Allocator
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: Allocator
  nameWithType: ClientWebSocketChannelConfig.Allocator
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Allocator
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public IByteBufferAllocator Allocator { get; set; }
    content.vb: Public Property Allocator As IByteBufferAllocator
    parameters: []
    return:
      type: DotNetty.Buffers.IByteBufferAllocator
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.Allocator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator
  id: RecvByteBufAllocator
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: RecvByteBufAllocator
  nameWithType: ClientWebSocketChannelConfig.RecvByteBufAllocator
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RecvByteBufAllocator
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public IRecvByteBufAllocator RecvByteBufAllocator { get; set; }
    content.vb: Public Property RecvByteBufAllocator As IRecvByteBufAllocator
    parameters: []
    return:
      type: DotNetty.Transport.Channels.IRecvByteBufAllocator
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.RecvByteBufAllocator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead
  id: AutoRead
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: AutoRead
  nameWithType: ClientWebSocketChannelConfig.AutoRead
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: AutoRead
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public bool AutoRead { get; set; }
    content.vb: Public Property AutoRead As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.AutoRead
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  id: WriteBufferHighWaterMark
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: WriteBufferHighWaterMark
  nameWithType: ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: WriteBufferHighWaterMark
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public int WriteBufferHighWaterMark { get; set; }
    content.vb: Public Property WriteBufferHighWaterMark As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferHighWaterMark
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  id: WriteBufferLowWaterMark
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: WriteBufferLowWaterMark
  nameWithType: ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: WriteBufferLowWaterMark
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public int WriteBufferLowWaterMark { get; set; }
    content.vb: Public Property WriteBufferLowWaterMark As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferLowWaterMark
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator
  id: MessageSizeEstimator
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig
  langs:
  - csharp
  - vb
  name: MessageSizeEstimator
  nameWithType: ClientWebSocketChannelConfig.MessageSizeEstimator
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: MessageSizeEstimator
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannelConfig.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public IMessageSizeEstimator MessageSizeEstimator { get; set; }
    content.vb: Public Property MessageSizeEstimator As IMessageSizeEstimator
    parameters: []
    return:
      type: DotNetty.Transport.Channels.IMessageSizeEstimator
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator*
  implements:
  - DotNetty.Transport.Channels.IChannelConfiguration.MessageSizeEstimator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt
  commentId: N:Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Transport.Mqtt
  nameWithType: Microsoft.Azure.Devices.Client.Transport.Mqtt
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.IChannelConfiguration
  commentId: T:DotNetty.Transport.Channels.IChannelConfiguration
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelConfiguration
  nameWithType: IChannelConfiguration
  fullName: DotNetty.Transport.Channels.IChannelConfiguration
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: false
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption
  isExternal: false
  name: GetOption
  nameWithType: ClientWebSocketChannelConfig.GetOption
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption
- uid: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{{T}})
  commentId: M:DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  definition: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  name: GetOption<T>(ChannelOption<T>)
  nameWithType: IChannelConfiguration.GetOption<T>(ChannelOption<T>)
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.GetOption<T>(DotNetty.Transport.Channels.ChannelOption<T>)
  nameWithType.vb: IChannelConfiguration.GetOption(Of T)(ChannelOption(Of T))
  fullName.vb: DotNetty.Transport.Channels.IChannelConfiguration.GetOption(Of T)(DotNetty.Transport.Channels.ChannelOption(Of T))
  name.vb: GetOption(Of T)(ChannelOption(Of T))
  spec.csharp:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
    name: GetOption<T>
    nameWithType: IChannelConfiguration.GetOption<T>
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.GetOption<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
    name: GetOption(Of T)
    nameWithType: IChannelConfiguration.GetOption(Of T)
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.GetOption(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelOption{{T}}
  commentId: T:DotNetty.Transport.Channels.ChannelOption{``0}
  parent: DotNetty.Transport.Channels
  definition: DotNetty.Transport.Channels.ChannelOption`1
  name: ChannelOption<T>
  nameWithType: ChannelOption<T>
  fullName: DotNetty.Transport.Channels.ChannelOption<T>
  nameWithType.vb: ChannelOption(Of T)
  fullName.vb: DotNetty.Transport.Channels.ChannelOption(Of T)
  name.vb: ChannelOption(Of T)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  commentId: M:DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
  isExternal: true
  name: GetOption<T>(ChannelOption<T>)
  nameWithType: IChannelConfiguration.GetOption<T>(ChannelOption<T>)
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.GetOption<T>(DotNetty.Transport.Channels.ChannelOption<T>)
  nameWithType.vb: IChannelConfiguration.GetOption(Of T)(ChannelOption(Of T))
  fullName.vb: DotNetty.Transport.Channels.IChannelConfiguration.GetOption(Of T)(DotNetty.Transport.Channels.ChannelOption(Of T))
  name.vb: GetOption(Of T)(ChannelOption(Of T))
  spec.csharp:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
    name: GetOption<T>
    nameWithType: IChannelConfiguration.GetOption<T>
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.GetOption<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})
    name: GetOption(Of T)
    nameWithType: IChannelConfiguration.GetOption(Of T)
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.GetOption(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelOption`1
  commentId: T:DotNetty.Transport.Channels.ChannelOption`1
  isExternal: true
  name: ChannelOption<T>
  nameWithType: ChannelOption<T>
  fullName: DotNetty.Transport.Channels.ChannelOption<T>
  nameWithType.vb: ChannelOption(Of T)
  fullName.vb: DotNetty.Transport.Channels.ChannelOption(Of T)
  name.vb: ChannelOption(Of T)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption
  isExternal: false
  name: SetOption
  nameWithType: ClientWebSocketChannelConfig.SetOption
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption
- uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  commentId: M:DotNetty.Transport.Channels.IChannelConfiguration.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: SetOption(ChannelOption, Object)
  nameWithType: IChannelConfiguration.SetOption(ChannelOption, Object)
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(DotNetty.Transport.Channels.ChannelOption, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
    name: SetOption
    nameWithType: IChannelConfiguration.SetOption
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)
    name: SetOption
    nameWithType: IChannelConfiguration.SetOption
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelOption
  commentId: T:DotNetty.Transport.Channels.ChannelOption
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelOption
  nameWithType: ChannelOption
  fullName: DotNetty.Transport.Channels.ChannelOption
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{{T}},{T})
  commentId: M:DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  definition: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  name: SetOption<T>(ChannelOption<T>, T)
  nameWithType: IChannelConfiguration.SetOption<T>(ChannelOption<T>, T)
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption<T>(DotNetty.Transport.Channels.ChannelOption<T>, T)
  nameWithType.vb: IChannelConfiguration.SetOption(Of T)(ChannelOption(Of T), T)
  fullName.vb: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(Of T)(DotNetty.Transport.Channels.ChannelOption(Of T), T)
  name.vb: SetOption(Of T)(ChannelOption(Of T), T)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
    name: SetOption<T>
    nameWithType: IChannelConfiguration.SetOption<T>
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
    name: SetOption(Of T)
    nameWithType: IChannelConfiguration.SetOption(Of T)
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  commentId: M:DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
  isExternal: true
  name: SetOption<T>(ChannelOption<T>, T)
  nameWithType: IChannelConfiguration.SetOption<T>(ChannelOption<T>, T)
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption<T>(DotNetty.Transport.Channels.ChannelOption<T>, T)
  nameWithType.vb: IChannelConfiguration.SetOption(Of T)(ChannelOption(Of T), T)
  fullName.vb: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(Of T)(DotNetty.Transport.Channels.ChannelOption(Of T), T)
  name.vb: SetOption(Of T)(ChannelOption(Of T), T)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
    name: SetOption<T>
    nameWithType: IChannelConfiguration.SetOption<T>
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.IChannelConfiguration.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)
    name: SetOption(Of T)
    nameWithType: IChannelConfiguration.SetOption(Of T)
    fullName: DotNetty.Transport.Channels.IChannelConfiguration.SetOption(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: DotNetty.Transport.Channels.ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout
  isExternal: false
  name: ConnectTimeout
  nameWithType: ClientWebSocketChannelConfig.ConnectTimeout
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout
- uid: DotNetty.Transport.Channels.IChannelConfiguration.ConnectTimeout
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.ConnectTimeout
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: ConnectTimeout
  nameWithType: IChannelConfiguration.ConnectTimeout
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.ConnectTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount
  isExternal: false
  name: WriteSpinCount
  nameWithType: ClientWebSocketChannelConfig.WriteSpinCount
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount
- uid: DotNetty.Transport.Channels.IChannelConfiguration.WriteSpinCount
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.WriteSpinCount
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: WriteSpinCount
  nameWithType: IChannelConfiguration.WriteSpinCount
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.WriteSpinCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator
  isExternal: false
  name: Allocator
  nameWithType: ClientWebSocketChannelConfig.Allocator
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator
- uid: DotNetty.Transport.Channels.IChannelConfiguration.Allocator
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.Allocator
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: Allocator
  nameWithType: IChannelConfiguration.Allocator
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.Allocator
- uid: DotNetty.Buffers.IByteBufferAllocator
  commentId: T:DotNetty.Buffers.IByteBufferAllocator
  parent: DotNetty.Buffers
  isExternal: true
  name: IByteBufferAllocator
  nameWithType: IByteBufferAllocator
  fullName: DotNetty.Buffers.IByteBufferAllocator
- uid: DotNetty.Buffers
  commentId: N:DotNetty.Buffers
  isExternal: false
  name: DotNetty.Buffers
  nameWithType: DotNetty.Buffers
  fullName: DotNetty.Buffers
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator
  isExternal: false
  name: RecvByteBufAllocator
  nameWithType: ClientWebSocketChannelConfig.RecvByteBufAllocator
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator
- uid: DotNetty.Transport.Channels.IChannelConfiguration.RecvByteBufAllocator
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.RecvByteBufAllocator
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: RecvByteBufAllocator
  nameWithType: IChannelConfiguration.RecvByteBufAllocator
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.RecvByteBufAllocator
- uid: DotNetty.Transport.Channels.IRecvByteBufAllocator
  commentId: T:DotNetty.Transport.Channels.IRecvByteBufAllocator
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IRecvByteBufAllocator
  nameWithType: IRecvByteBufAllocator
  fullName: DotNetty.Transport.Channels.IRecvByteBufAllocator
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead
  isExternal: false
  name: AutoRead
  nameWithType: ClientWebSocketChannelConfig.AutoRead
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead
- uid: DotNetty.Transport.Channels.IChannelConfiguration.AutoRead
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.AutoRead
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: AutoRead
  nameWithType: IChannelConfiguration.AutoRead
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.AutoRead
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  isExternal: false
  name: WriteBufferHighWaterMark
  nameWithType: ClientWebSocketChannelConfig.WriteBufferHighWaterMark
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark
- uid: DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferHighWaterMark
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferHighWaterMark
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: WriteBufferHighWaterMark
  nameWithType: IChannelConfiguration.WriteBufferHighWaterMark
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferHighWaterMark
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  isExternal: false
  name: WriteBufferLowWaterMark
  nameWithType: ClientWebSocketChannelConfig.WriteBufferLowWaterMark
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark
- uid: DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferLowWaterMark
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferLowWaterMark
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: WriteBufferLowWaterMark
  nameWithType: IChannelConfiguration.WriteBufferLowWaterMark
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.WriteBufferLowWaterMark
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator
  isExternal: false
  name: MessageSizeEstimator
  nameWithType: ClientWebSocketChannelConfig.MessageSizeEstimator
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator
- uid: DotNetty.Transport.Channels.IChannelConfiguration.MessageSizeEstimator
  commentId: P:DotNetty.Transport.Channels.IChannelConfiguration.MessageSizeEstimator
  parent: DotNetty.Transport.Channels.IChannelConfiguration
  isExternal: true
  name: MessageSizeEstimator
  nameWithType: IChannelConfiguration.MessageSizeEstimator
  fullName: DotNetty.Transport.Channels.IChannelConfiguration.MessageSizeEstimator
- uid: DotNetty.Transport.Channels.IMessageSizeEstimator
  commentId: T:DotNetty.Transport.Channels.IMessageSizeEstimator
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IMessageSizeEstimator
  nameWithType: IMessageSizeEstimator
  fullName: DotNetty.Transport.Channels.IMessageSizeEstimator
