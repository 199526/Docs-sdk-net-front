### YamlMime:ManagedReference
items:
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  id: ExponentialBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  children:
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry
  langs:
  - csharp
  - vb
  name: ExponentialBackoff
  nameWithType: ExponentialBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ExponentialBackoff
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nA retry strategy with backoff parameters for calculating the exponential delay between retries.\n"
  example: []
  syntax:
    content: 'public class ExponentialBackoff : RetryStrategy'
    content.vb: >-
      Public Class ExponentialBackoff
          Inherits RetryStrategy
  inheritance:
  - System.Object
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  inheritedMembers:
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor
  id: '#ctor'
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  langs:
  - csharp
  - vb
  name: ExponentialBackoff()
  nameWithType: ExponentialBackoff.ExponentialBackoff()
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.ExponentialBackoff()
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: public ExponentialBackoff()
    content.vb: Public Sub New
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)'
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  langs:
  - csharp
  - vb
  name: ExponentialBackoff(Int32, TimeSpan, TimeSpan, TimeSpan)
  nameWithType: ExponentialBackoff.ExponentialBackoff(Int32, TimeSpan, TimeSpan, TimeSpan)
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.ExponentialBackoff(System.Int32, System.TimeSpan, System.TimeSpan, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff\" data-throw-if-not-resolved=\"false\"></xref> class with the specified retry settings.\n"
  example: []
  syntax:
    content: public ExponentialBackoff(int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff)
    parameters:
    - id: retryCount
      type: System.Int32
      description: The maximum number of retry attempts.
    - id: minBackoff
      type: System.TimeSpan
      description: The minimum backoff time
    - id: maxBackoff
      type: System.TimeSpan
      description: The maximum backoff time.
    - id: deltaBackoff
      type: System.TimeSpan
      description: The value that will be used to calculate a random delta in the exponential delay between retries.
    content.vb: Public Sub New(retryCount As Integer, minBackoff As TimeSpan, maxBackoff As TimeSpan, deltaBackoff As TimeSpan)
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)'
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  langs:
  - csharp
  - vb
  name: ExponentialBackoff(String, Int32, TimeSpan, TimeSpan, TimeSpan)
  nameWithType: ExponentialBackoff.ExponentialBackoff(String, Int32, TimeSpan, TimeSpan, TimeSpan)
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.ExponentialBackoff(System.String, System.Int32, System.TimeSpan, System.TimeSpan, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and retry settings.\n"
  example: []
  syntax:
    content: public ExponentialBackoff(string name, int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff)
    parameters:
    - id: name
      type: System.String
      description: The name of the retry strategy.
    - id: retryCount
      type: System.Int32
      description: The maximum number of retry attempts.
    - id: minBackoff
      type: System.TimeSpan
      description: The minimum backoff time
    - id: maxBackoff
      type: System.TimeSpan
      description: The maximum backoff time.
    - id: deltaBackoff
      type: System.TimeSpan
      description: The value that will be used to calculate a random delta in the exponential delay between retries.
    content.vb: Public Sub New(name As String, retryCount As Integer, minBackoff As TimeSpan, maxBackoff As TimeSpan, deltaBackoff As TimeSpan)
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)
  id: '#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)'
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  langs:
  - csharp
  - vb
  name: ExponentialBackoff(String, Int32, TimeSpan, TimeSpan, TimeSpan, Boolean)
  nameWithType: ExponentialBackoff.ExponentialBackoff(String, Int32, TimeSpan, TimeSpan, TimeSpan, Boolean)
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.ExponentialBackoff(System.String, System.Int32, System.TimeSpan, System.TimeSpan, System.TimeSpan, System.Boolean)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name, retry settings, and fast retry option.\n"
  example: []
  syntax:
    content: public ExponentialBackoff(string name, int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff, bool firstFastRetry)
    parameters:
    - id: name
      type: System.String
      description: The name of the retry strategy.
    - id: retryCount
      type: System.Int32
      description: The maximum number of retry attempts.
    - id: minBackoff
      type: System.TimeSpan
      description: The minimum backoff time
    - id: maxBackoff
      type: System.TimeSpan
      description: The maximum backoff time.
    - id: deltaBackoff
      type: System.TimeSpan
      description: The value that will be used to calculate a random delta in the exponential delay between retries.
    - id: firstFastRetry
      type: System.Boolean
      description: true to immediately retry in the first attempt; otherwise, false. The subsequent retries will remain subject to the configured retry interval.
    content.vb: Public Sub New(name As String, retryCount As Integer, minBackoff As TimeSpan, maxBackoff As TimeSpan, deltaBackoff As TimeSpan, firstFastRetry As Boolean)
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry
  id: GetShouldRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  langs:
  - csharp
  - vb
  name: GetShouldRetry()
  nameWithType: ExponentialBackoff.GetShouldRetry()
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetShouldRetry
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/ExponentialBackoff.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nReturns the corresponding ShouldRetry delegate.\n"
  example: []
  syntax:
    content: public override ShouldRetry GetShouldRetry()
    return:
      type: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
      description: The ShouldRetry delegate.
    content.vb: Public Overrides Function GetShouldRetry As ShouldRetry
  overridden: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  commentId: N:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  nameWithType: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: RetryStrategy
  nameWithType: RetryStrategy
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultClientRetryCount
  nameWithType: RetryStrategy.DefaultClientRetryCount
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientRetryCount
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultClientBackoff
  nameWithType: RetryStrategy.DefaultClientBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultClientBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultMaxBackoff
  nameWithType: RetryStrategy.DefaultMaxBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMaxBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultMinBackoff
  nameWithType: RetryStrategy.DefaultMinBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultMinBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultRetryInterval
  nameWithType: RetryStrategy.DefaultRetryInterval
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryInterval
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultRetryIncrement
  nameWithType: RetryStrategy.DefaultRetryIncrement
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultRetryIncrement
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  commentId: F:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultFirstFastRetry
  nameWithType: RetryStrategy.DefaultFirstFastRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFirstFastRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: NoRetry
  nameWithType: RetryStrategy.NoRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.NoRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultFixed
  nameWithType: RetryStrategy.DefaultFixed
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultFixed
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultProgressive
  nameWithType: RetryStrategy.DefaultProgressive
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultProgressive
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: DefaultExponential
  nameWithType: RetryStrategy.DefaultExponential
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.DefaultExponential
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: FastFirstRetry
  nameWithType: RetryStrategy.FastFirstRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.FastFirstRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: Name
  nameWithType: RetryStrategy.Name
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.Name
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
  isExternal: false
  name: ExponentialBackoff
  nameWithType: ExponentialBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.#ctor
  isExternal: false
  name: ExponentialBackoff
  nameWithType: ExponentialBackoff.ExponentialBackoff
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.ExponentialBackoff
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy
  isExternal: false
  name: GetShouldRetry()
  nameWithType: RetryStrategy.GetShouldRetry()
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry()
  spec.csharp:
  - uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
    name: GetShouldRetry
    nameWithType: RetryStrategy.GetShouldRetry
    fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
    name: GetShouldRetry
    nameWithType: RetryStrategy.GetShouldRetry
    fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryStrategy.GetShouldRetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry
  isExternal: false
  name: GetShouldRetry
  nameWithType: ExponentialBackoff.GetShouldRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ExponentialBackoff.GetShouldRetry
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: ShouldRetry
  nameWithType: ShouldRetry
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ShouldRetry
