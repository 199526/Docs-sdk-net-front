### YamlMime:ManagedReference
items:
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  id: RetryingEventArgs
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  children:
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay
  - Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException
  langs:
  - csharp
  - vb
  name: RetryingEventArgs
  nameWithType: RetryingEventArgs
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RetryingEventArgs
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nContains information that is required for the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy.Retrying\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public class RetryingEventArgs : EventArgs'
    content.vb: >-
      Public Class RetryingEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount
  id: CurrentRetryCount
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  langs:
  - csharp
  - vb
  name: CurrentRetryCount
  nameWithType: RetryingEventArgs.CurrentRetryCount
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CurrentRetryCount
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nGets the current retry count.\n"
  example: []
  syntax:
    content: public int CurrentRetryCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentRetryCount As Integer
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay
  id: Delay
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  langs:
  - csharp
  - vb
  name: Delay
  nameWithType: RetryingEventArgs.Delay
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Delay
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nGets the delay that indicates how long the current thread will be suspended before the next iteration is invoked.\n"
  example: []
  syntax:
    content: public TimeSpan Delay { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property Delay As TimeSpan
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException
  commentId: P:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException
  id: LastException
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  langs:
  - csharp
  - vb
  name: LastException
  nameWithType: RetryingEventArgs.LastException
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: LastException
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nGets the exception that caused the retry conditions to occur.\n"
  example: []
  syntax:
    content: public Exception LastException { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property LastException As Exception
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)
  commentId: M:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)
  id: '#ctor(System.Int32,System.TimeSpan,System.Exception)'
  parent: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  langs:
  - csharp
  - vb
  name: RetryingEventArgs(Int32, TimeSpan, Exception)
  nameWithType: RetryingEventArgs.RetryingEventArgs(Int32, TimeSpan, Exception)
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.RetryingEventArgs(System.Int32, System.TimeSpan, System.Exception)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/TransientFaultHandling/RetryingEventArgs.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Devices.Client.NetStandard
  namespace: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RetryingEventArgs(int currentRetryCount, TimeSpan delay, Exception lastException)
    parameters:
    - id: currentRetryCount
      type: System.Int32
      description: The current retry attempt count.
    - id: delay
      type: System.TimeSpan
      description: The delay that indicates how long the current thread will be suspended before the next iteration is invoked.
    - id: lastException
      type: System.Exception
      description: The exception that caused the retry conditions to occur.
    content.vb: Public Sub New(currentRetryCount As Integer, delay As TimeSpan, lastException As Exception)
  overload: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy.Retrying
  commentId: E:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryPolicy.Retrying
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  commentId: N:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  isExternal: false
  name: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  nameWithType: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount
  isExternal: false
  name: CurrentRetryCount
  nameWithType: RetryingEventArgs.CurrentRetryCount
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.CurrentRetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay
  isExternal: false
  name: Delay
  nameWithType: RetryingEventArgs.Delay
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.Delay
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException
  isExternal: false
  name: LastException
  nameWithType: RetryingEventArgs.LastException
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.LastException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  commentId: T:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
  isExternal: false
  name: RetryingEventArgs
  nameWithType: RetryingEventArgs
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs
- uid: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.#ctor*
  commentId: Overload:Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.#ctor
  isExternal: false
  name: RetryingEventArgs
  nameWithType: RetryingEventArgs.RetryingEventArgs
  fullName: Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.RetryingEventArgs.RetryingEventArgs
