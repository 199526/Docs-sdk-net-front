### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  id: StreamSocketChannel
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  children:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.#ctor(Windows.Networking.Sockets.StreamSocket)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind(System.Net.EndPoint)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket
  langs:
  - csharp
  - vb
  name: StreamSocketChannel
  nameWithType: StreamSocketChannel
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: StreamSocketChannel
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  summary: "\nStreamSocketChannel is a sample implementation of AbstractChannel that is based on WinRT \nWindows.Networking.Sockets.StreamSocket class. The channel receives a connected StreamSocket\nobject that may or may not be upgraded to SSL.\nThis a reference implementation only.\nPossible extensions are:\n- Exposing server side certificates and their validation\n- Exposing additional configuration options (such as SSL)\n"
  example: []
  syntax:
    content: 'public class StreamSocketChannel : AbstractChannel, IChannel, IAttributeMap, IComparable<IChannel>'
    content.vb: >-
      Public Class StreamSocketChannel
          Inherits AbstractChannel
          Implements IChannel, IAttributeMap, IComparable(Of IChannel)
  inheritance:
  - System.Object
  - DotNetty.Common.Utilities.DefaultAttributeMap
  - DotNetty.Transport.Channels.AbstractChannel
  implements:
  - DotNetty.Transport.Channels.IChannel
  - DotNetty.Common.Utilities.IAttributeMap
  - System.IComparable{DotNetty.Transport.Channels.IChannel}
  inheritedMembers:
  - DotNetty.Transport.Channels.AbstractChannel.ClosedChannelException
  - DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
  - DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
  - DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
  - DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
  - DotNetty.Transport.Channels.AbstractChannel.NewId
  - DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
  - DotNetty.Transport.Channels.AbstractChannel.BindAsync(System.Net.EndPoint)
  - DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint)
  - DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  - DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
  - DotNetty.Transport.Channels.AbstractChannel.CloseAsync
  - DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
  - DotNetty.Transport.Channels.AbstractChannel.Flush
  - DotNetty.Transport.Channels.AbstractChannel.Read
  - DotNetty.Transport.Channels.AbstractChannel.WriteAsync(System.Object)
  - DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync(System.Object)
  - DotNetty.Transport.Channels.AbstractChannel.GetHashCode
  - DotNetty.Transport.Channels.AbstractChannel.Equals(System.Object)
  - DotNetty.Transport.Channels.AbstractChannel.CompareTo(DotNetty.Transport.Channels.IChannel)
  - DotNetty.Transport.Channels.AbstractChannel.ToString
  - DotNetty.Transport.Channels.AbstractChannel.DoRegister
  - DotNetty.Transport.Channels.AbstractChannel.DoDeregister
  - DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage(System.Object)
  - DotNetty.Transport.Channels.AbstractChannel.Id
  - DotNetty.Transport.Channels.AbstractChannel.IsWritable
  - DotNetty.Transport.Channels.AbstractChannel.Parent
  - DotNetty.Transport.Channels.AbstractChannel.Pipeline
  - DotNetty.Transport.Channels.AbstractChannel.Allocator
  - DotNetty.Transport.Channels.AbstractChannel.EventLoop
  - DotNetty.Transport.Channels.AbstractChannel.LocalAddress
  - DotNetty.Transport.Channels.AbstractChannel.RemoteAddress
  - DotNetty.Transport.Channels.AbstractChannel.Registered
  - DotNetty.Transport.Channels.AbstractChannel.CloseCompletion
  - DotNetty.Transport.Channels.AbstractChannel.Unsafe
  - DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{{T}})
  - DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{{T}})
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.#ctor(Windows.Networking.Sockets.StreamSocket)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.#ctor(Windows.Networking.Sockets.StreamSocket)
  id: '#ctor(Windows.Networking.Sockets.StreamSocket)'
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: StreamSocketChannel(StreamSocket)
  nameWithType: StreamSocketChannel.StreamSocketChannel(StreamSocket)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocketChannel(Windows.Networking.Sockets.StreamSocket)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public StreamSocketChannel(StreamSocket streamSocket)
    parameters:
    - id: streamSocket
      type: Windows.Networking.Sockets.StreamSocket
    content.vb: Public Sub New(streamSocket As StreamSocket)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket
  id: StreamSocket
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: StreamSocket
  nameWithType: StreamSocketChannel.StreamSocket
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: StreamSocket
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public StreamSocket StreamSocket { get; }
    parameters: []
    return:
      type: Windows.Networking.Sockets.StreamSocket
    content.vb: Public ReadOnly Property StreamSocket As StreamSocket
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active
  id: Active
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: StreamSocketChannel.Active
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Active
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override bool Active { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property Active As Boolean
  overridden: DotNetty.Transport.Channels.AbstractChannel.Active
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration
  id: Configuration
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: StreamSocketChannel.Configuration
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Configuration
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override IChannelConfiguration Configuration { get; }
    parameters: []
    return:
      type: DotNetty.Transport.Channels.IChannelConfiguration
    content.vb: Public Overrides ReadOnly Property Configuration As IChannelConfiguration
  overridden: DotNetty.Transport.Channels.AbstractChannel.Configuration
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata
  id: Metadata
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: StreamSocketChannel.Metadata
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Metadata
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override ChannelMetadata Metadata { get; }
    parameters: []
    return:
      type: DotNetty.Transport.Channels.ChannelMetadata
    content.vb: Public Overrides ReadOnly Property Metadata As ChannelMetadata
  overridden: DotNetty.Transport.Channels.AbstractChannel.Metadata
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open
  id: Open
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: Open
  nameWithType: StreamSocketChannel.Open
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Open
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override bool Open { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property Open As Boolean
  overridden: DotNetty.Transport.Channels.AbstractChannel.Open
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal
  id: LocalAddressInternal
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: LocalAddressInternal
  nameWithType: StreamSocketChannel.LocalAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: LocalAddressInternal
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override EndPoint LocalAddressInternal { get; }
    parameters: []
    return:
      type: System.Net.EndPoint
    content.vb: Protected Overrides ReadOnly Property LocalAddressInternal As EndPoint
  overridden: DotNetty.Transport.Channels.AbstractChannel.LocalAddressInternal
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal
  id: RemoteAddressInternal
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: RemoteAddressInternal
  nameWithType: StreamSocketChannel.RemoteAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RemoteAddressInternal
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override EndPoint RemoteAddressInternal { get; }
    parameters: []
    return:
      type: System.Net.EndPoint
    content.vb: Protected Overrides ReadOnly Property RemoteAddressInternal As EndPoint
  overridden: DotNetty.Transport.Channels.AbstractChannel.RemoteAddressInternal
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead
  id: DoBeginRead
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: DoBeginRead()
  nameWithType: StreamSocketChannel.DoBeginRead()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoBeginRead
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoBeginRead()
    content.vb: Protected Overrides Sub DoBeginRead
  overridden: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind(System.Net.EndPoint)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind(System.Net.EndPoint)
  id: DoBind(System.Net.EndPoint)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: DoBind(EndPoint)
  nameWithType: StreamSocketChannel.DoBind(EndPoint)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind(System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoBind
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoBind(EndPoint localAddress)
    parameters:
    - id: localAddress
      type: System.Net.EndPoint
    content.vb: Protected Overrides Sub DoBind(localAddress As EndPoint)
  overridden: DotNetty.Transport.Channels.AbstractChannel.DoBind(System.Net.EndPoint)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose
  id: DoClose
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: DoClose()
  nameWithType: StreamSocketChannel.DoClose()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoClose
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoClose()
    content.vb: Protected Overrides Sub DoClose
  overridden: DotNetty.Transport.Channels.AbstractChannel.DoClose
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect
  id: DoDisconnect
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: DoDisconnect()
  nameWithType: StreamSocketChannel.DoDisconnect()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoDisconnect
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoDisconnect()
    content.vb: Protected Overrides Sub DoDisconnect
  overridden: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  id: DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: DoWrite(ChannelOutboundBuffer)
  nameWithType: StreamSocketChannel.DoWrite(ChannelOutboundBuffer)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoWrite
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoWrite(ChannelOutboundBuffer channelOutboundBuffer)
    parameters:
    - id: channelOutboundBuffer
      type: DotNetty.Transport.Channels.ChannelOutboundBuffer
    content.vb: Protected Overrides Sub DoWrite(channelOutboundBuffer As ChannelOutboundBuffer)
  overridden: DotNetty.Transport.Channels.AbstractChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  id: IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: IsCompatible(IEventLoop)
  nameWithType: StreamSocketChannel.IsCompatible(IEventLoop)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: IsCompatible
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override bool IsCompatible(IEventLoop eventLoop)
    parameters:
    - id: eventLoop
      type: DotNetty.Transport.Channels.IEventLoop
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsCompatible(eventLoop As IEventLoop) As Boolean
  overridden: DotNetty.Transport.Channels.AbstractChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe
  id: NewUnsafe
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel
  langs:
  - csharp
  - vb
  name: NewUnsafe()
  nameWithType: StreamSocketChannel.NewUnsafe()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: NewUnsafe
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/StreamSocketChannel.cs
    startLine: 196
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override IChannelUnsafe NewUnsafe()
    return:
      type: DotNetty.Transport.Channels.IChannelUnsafe
    content.vb: Protected Overrides Function NewUnsafe As IChannelUnsafe
  overridden: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt
  commentId: N:Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Transport.Mqtt
  nameWithType: Microsoft.Azure.Devices.Client.Transport.Mqtt
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Common.Utilities.DefaultAttributeMap
  commentId: T:DotNetty.Common.Utilities.DefaultAttributeMap
  parent: DotNetty.Common.Utilities
  isExternal: true
  name: DefaultAttributeMap
  nameWithType: DefaultAttributeMap
  fullName: DotNetty.Common.Utilities.DefaultAttributeMap
- uid: DotNetty.Transport.Channels.AbstractChannel
  commentId: T:DotNetty.Transport.Channels.AbstractChannel
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: AbstractChannel
  nameWithType: AbstractChannel
  fullName: DotNetty.Transport.Channels.AbstractChannel
- uid: DotNetty.Transport.Channels.IChannel
  commentId: T:DotNetty.Transport.Channels.IChannel
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: DotNetty.Transport.Channels.IChannel
- uid: DotNetty.Common.Utilities.IAttributeMap
  commentId: T:DotNetty.Common.Utilities.IAttributeMap
  parent: DotNetty.Common.Utilities
  isExternal: true
  name: IAttributeMap
  nameWithType: IAttributeMap
  fullName: DotNetty.Common.Utilities.IAttributeMap
- uid: System.IComparable{DotNetty.Transport.Channels.IChannel}
  commentId: T:System.IComparable{DotNetty.Transport.Channels.IChannel}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IChannel>
  nameWithType: IComparable<IChannel>
  fullName: System.IComparable<DotNetty.Transport.Channels.IChannel>
  nameWithType.vb: IComparable(Of IChannel)
  fullName.vb: System.IComparable(Of DotNetty.Transport.Channels.IChannel)
  name.vb: IComparable(Of IChannel)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetty.Transport.Channels.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: DotNetty.Transport.Channels.IChannel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetty.Transport.Channels.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: DotNetty.Transport.Channels.IChannel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.ClosedChannelException
  commentId: F:DotNetty.Transport.Channels.AbstractChannel.ClosedChannelException
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: ClosedChannelException
  nameWithType: AbstractChannel.ClosedChannelException
  fullName: DotNetty.Transport.Channels.AbstractChannel.ClosedChannelException
- uid: DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: InvalidateLocalAddress()
  nameWithType: AbstractChannel.InvalidateLocalAddress()
  fullName: DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
    name: InvalidateLocalAddress
    nameWithType: AbstractChannel.InvalidateLocalAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
    name: InvalidateLocalAddress
    nameWithType: AbstractChannel.InvalidateLocalAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.InvalidateLocalAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: CacheLocalAddress()
  nameWithType: AbstractChannel.CacheLocalAddress()
  fullName: DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
    name: CacheLocalAddress
    nameWithType: AbstractChannel.CacheLocalAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
    name: CacheLocalAddress
    nameWithType: AbstractChannel.CacheLocalAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.CacheLocalAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: InvalidateRemoteAddress()
  nameWithType: AbstractChannel.InvalidateRemoteAddress()
  fullName: DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
    name: InvalidateRemoteAddress
    nameWithType: AbstractChannel.InvalidateRemoteAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
    name: InvalidateRemoteAddress
    nameWithType: AbstractChannel.InvalidateRemoteAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.InvalidateRemoteAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: CacheRemoteAddress()
  nameWithType: AbstractChannel.CacheRemoteAddress()
  fullName: DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
    name: CacheRemoteAddress
    nameWithType: AbstractChannel.CacheRemoteAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
    name: CacheRemoteAddress
    nameWithType: AbstractChannel.CacheRemoteAddress
    fullName: DotNetty.Transport.Channels.AbstractChannel.CacheRemoteAddress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.NewId
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.NewId
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: NewId()
  nameWithType: AbstractChannel.NewId()
  fullName: DotNetty.Transport.Channels.AbstractChannel.NewId()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.NewId
    name: NewId
    nameWithType: AbstractChannel.NewId
    fullName: DotNetty.Transport.Channels.AbstractChannel.NewId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.NewId
    name: NewId
    nameWithType: AbstractChannel.NewId
    fullName: DotNetty.Transport.Channels.AbstractChannel.NewId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: NewChannelPipeline()
  nameWithType: AbstractChannel.NewChannelPipeline()
  fullName: DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
    name: NewChannelPipeline
    nameWithType: AbstractChannel.NewChannelPipeline
    fullName: DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
    name: NewChannelPipeline
    nameWithType: AbstractChannel.NewChannelPipeline
    fullName: DotNetty.Transport.Channels.AbstractChannel.NewChannelPipeline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.BindAsync(System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.BindAsync(System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: BindAsync(EndPoint)
  nameWithType: AbstractChannel.BindAsync(EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.BindAsync(System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.BindAsync(System.Net.EndPoint)
    name: BindAsync
    nameWithType: AbstractChannel.BindAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.BindAsync(System.Net.EndPoint)
    name: BindAsync
    nameWithType: AbstractChannel.BindAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: ConnectAsync(EndPoint)
  nameWithType: AbstractChannel.ConnectAsync(EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: AbstractChannel.ConnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: AbstractChannel.ConnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: ConnectAsync(EndPoint, EndPoint)
  nameWithType: AbstractChannel.ConnectAsync(EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: AbstractChannel.ConnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: AbstractChannel.ConnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DisconnectAsync()
  nameWithType: AbstractChannel.DisconnectAsync()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
    name: DisconnectAsync
    nameWithType: AbstractChannel.DisconnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
    name: DisconnectAsync
    nameWithType: AbstractChannel.DisconnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.CloseAsync
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.CloseAsync
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: CloseAsync()
  nameWithType: AbstractChannel.CloseAsync()
  fullName: DotNetty.Transport.Channels.AbstractChannel.CloseAsync()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CloseAsync
    name: CloseAsync
    nameWithType: AbstractChannel.CloseAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CloseAsync
    name: CloseAsync
    nameWithType: AbstractChannel.CloseAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DeregisterAsync()
  nameWithType: AbstractChannel.DeregisterAsync()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
    name: DeregisterAsync
    nameWithType: AbstractChannel.DeregisterAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
    name: DeregisterAsync
    nameWithType: AbstractChannel.DeregisterAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.Flush
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.Flush
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Flush()
  nameWithType: AbstractChannel.Flush()
  fullName: DotNetty.Transport.Channels.AbstractChannel.Flush()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.Flush
    name: Flush
    nameWithType: AbstractChannel.Flush
    fullName: DotNetty.Transport.Channels.AbstractChannel.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.Flush
    name: Flush
    nameWithType: AbstractChannel.Flush
    fullName: DotNetty.Transport.Channels.AbstractChannel.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.Read
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.Read
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Read()
  nameWithType: AbstractChannel.Read()
  fullName: DotNetty.Transport.Channels.AbstractChannel.Read()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.Read
    name: Read
    nameWithType: AbstractChannel.Read
    fullName: DotNetty.Transport.Channels.AbstractChannel.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.Read
    name: Read
    nameWithType: AbstractChannel.Read
    fullName: DotNetty.Transport.Channels.AbstractChannel.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.WriteAsync(System.Object)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.WriteAsync(System.Object)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: WriteAsync(Object)
  nameWithType: AbstractChannel.WriteAsync(Object)
  fullName: DotNetty.Transport.Channels.AbstractChannel.WriteAsync(System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.WriteAsync(System.Object)
    name: WriteAsync
    nameWithType: AbstractChannel.WriteAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.WriteAsync(System.Object)
    name: WriteAsync
    nameWithType: AbstractChannel.WriteAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync(System.Object)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync(System.Object)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: WriteAndFlushAsync(Object)
  nameWithType: AbstractChannel.WriteAndFlushAsync(Object)
  fullName: DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync(System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync(System.Object)
    name: WriteAndFlushAsync
    nameWithType: AbstractChannel.WriteAndFlushAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync(System.Object)
    name: WriteAndFlushAsync
    nameWithType: AbstractChannel.WriteAndFlushAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.WriteAndFlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.GetHashCode
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.GetHashCode
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: GetHashCode()
  nameWithType: AbstractChannel.GetHashCode()
  fullName: DotNetty.Transport.Channels.AbstractChannel.GetHashCode()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.GetHashCode
    name: GetHashCode
    nameWithType: AbstractChannel.GetHashCode
    fullName: DotNetty.Transport.Channels.AbstractChannel.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.GetHashCode
    name: GetHashCode
    nameWithType: AbstractChannel.GetHashCode
    fullName: DotNetty.Transport.Channels.AbstractChannel.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.Equals(System.Object)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.Equals(System.Object)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Equals(Object)
  nameWithType: AbstractChannel.Equals(Object)
  fullName: DotNetty.Transport.Channels.AbstractChannel.Equals(System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.Equals(System.Object)
    name: Equals
    nameWithType: AbstractChannel.Equals
    fullName: DotNetty.Transport.Channels.AbstractChannel.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.Equals(System.Object)
    name: Equals
    nameWithType: AbstractChannel.Equals
    fullName: DotNetty.Transport.Channels.AbstractChannel.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.CompareTo(DotNetty.Transport.Channels.IChannel)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.CompareTo(DotNetty.Transport.Channels.IChannel)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: CompareTo(IChannel)
  nameWithType: AbstractChannel.CompareTo(IChannel)
  fullName: DotNetty.Transport.Channels.AbstractChannel.CompareTo(DotNetty.Transport.Channels.IChannel)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CompareTo(DotNetty.Transport.Channels.IChannel)
    name: CompareTo
    nameWithType: AbstractChannel.CompareTo
    fullName: DotNetty.Transport.Channels.AbstractChannel.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: DotNetty.Transport.Channels.IChannel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.CompareTo(DotNetty.Transport.Channels.IChannel)
    name: CompareTo
    nameWithType: AbstractChannel.CompareTo
    fullName: DotNetty.Transport.Channels.AbstractChannel.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: DotNetty.Transport.Channels.IChannel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.ToString
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.ToString
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: ToString()
  nameWithType: AbstractChannel.ToString()
  fullName: DotNetty.Transport.Channels.AbstractChannel.ToString()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.ToString
    name: ToString
    nameWithType: AbstractChannel.ToString
    fullName: DotNetty.Transport.Channels.AbstractChannel.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.ToString
    name: ToString
    nameWithType: AbstractChannel.ToString
    fullName: DotNetty.Transport.Channels.AbstractChannel.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.DoRegister
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoRegister
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoRegister()
  nameWithType: AbstractChannel.DoRegister()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoRegister()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoRegister
    name: DoRegister
    nameWithType: AbstractChannel.DoRegister
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoRegister
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoRegister
    name: DoRegister
    nameWithType: AbstractChannel.DoRegister
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoRegister
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.DoDeregister
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoDeregister
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoDeregister()
  nameWithType: AbstractChannel.DoDeregister()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoDeregister()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoDeregister
    name: DoDeregister
    nameWithType: AbstractChannel.DoDeregister
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoDeregister
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoDeregister
    name: DoDeregister
    nameWithType: AbstractChannel.DoDeregister
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoDeregister
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage(System.Object)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage(System.Object)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: FilterOutboundMessage(Object)
  nameWithType: AbstractChannel.FilterOutboundMessage(Object)
  fullName: DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage(System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage(System.Object)
    name: FilterOutboundMessage
    nameWithType: AbstractChannel.FilterOutboundMessage
    fullName: DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage(System.Object)
    name: FilterOutboundMessage
    nameWithType: AbstractChannel.FilterOutboundMessage
    fullName: DotNetty.Transport.Channels.AbstractChannel.FilterOutboundMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.Id
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Id
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Id
  nameWithType: AbstractChannel.Id
  fullName: DotNetty.Transport.Channels.AbstractChannel.Id
- uid: DotNetty.Transport.Channels.AbstractChannel.IsWritable
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.IsWritable
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: IsWritable
  nameWithType: AbstractChannel.IsWritable
  fullName: DotNetty.Transport.Channels.AbstractChannel.IsWritable
- uid: DotNetty.Transport.Channels.AbstractChannel.Parent
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Parent
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Parent
  nameWithType: AbstractChannel.Parent
  fullName: DotNetty.Transport.Channels.AbstractChannel.Parent
- uid: DotNetty.Transport.Channels.AbstractChannel.Pipeline
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Pipeline
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Pipeline
  nameWithType: AbstractChannel.Pipeline
  fullName: DotNetty.Transport.Channels.AbstractChannel.Pipeline
- uid: DotNetty.Transport.Channels.AbstractChannel.Allocator
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Allocator
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Allocator
  nameWithType: AbstractChannel.Allocator
  fullName: DotNetty.Transport.Channels.AbstractChannel.Allocator
- uid: DotNetty.Transport.Channels.AbstractChannel.EventLoop
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.EventLoop
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: EventLoop
  nameWithType: AbstractChannel.EventLoop
  fullName: DotNetty.Transport.Channels.AbstractChannel.EventLoop
- uid: DotNetty.Transport.Channels.AbstractChannel.LocalAddress
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.LocalAddress
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: LocalAddress
  nameWithType: AbstractChannel.LocalAddress
  fullName: DotNetty.Transport.Channels.AbstractChannel.LocalAddress
- uid: DotNetty.Transport.Channels.AbstractChannel.RemoteAddress
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.RemoteAddress
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: RemoteAddress
  nameWithType: AbstractChannel.RemoteAddress
  fullName: DotNetty.Transport.Channels.AbstractChannel.RemoteAddress
- uid: DotNetty.Transport.Channels.AbstractChannel.Registered
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Registered
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Registered
  nameWithType: AbstractChannel.Registered
  fullName: DotNetty.Transport.Channels.AbstractChannel.Registered
- uid: DotNetty.Transport.Channels.AbstractChannel.CloseCompletion
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.CloseCompletion
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: CloseCompletion
  nameWithType: AbstractChannel.CloseCompletion
  fullName: DotNetty.Transport.Channels.AbstractChannel.CloseCompletion
- uid: DotNetty.Transport.Channels.AbstractChannel.Unsafe
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Unsafe
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Unsafe
  nameWithType: AbstractChannel.Unsafe
  fullName: DotNetty.Transport.Channels.AbstractChannel.Unsafe
- uid: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{{T}})
  commentId: M:DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  parent: DotNetty.Common.Utilities.DefaultAttributeMap
  definition: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  name: GetAttribute<T>(AttributeKey<T>)
  nameWithType: DefaultAttributeMap.GetAttribute<T>(AttributeKey<T>)
  fullName: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute<T>(DotNetty.Common.Utilities.AttributeKey<T>)
  nameWithType.vb: DefaultAttributeMap.GetAttribute(Of T)(AttributeKey(Of T))
  fullName.vb: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute(Of T)(DotNetty.Common.Utilities.AttributeKey(Of T))
  name.vb: GetAttribute(Of T)(AttributeKey(Of T))
  spec.csharp:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: GetAttribute<T>
    nameWithType: DefaultAttributeMap.GetAttribute<T>
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: GetAttribute(Of T)
    nameWithType: DefaultAttributeMap.GetAttribute(Of T)
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{{T}})
  commentId: M:DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  parent: DotNetty.Common.Utilities.DefaultAttributeMap
  definition: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  name: HasAttribute<T>(AttributeKey<T>)
  nameWithType: DefaultAttributeMap.HasAttribute<T>(AttributeKey<T>)
  fullName: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute<T>(DotNetty.Common.Utilities.AttributeKey<T>)
  nameWithType.vb: DefaultAttributeMap.HasAttribute(Of T)(AttributeKey(Of T))
  fullName.vb: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute(Of T)(DotNetty.Common.Utilities.AttributeKey(Of T))
  name.vb: HasAttribute(Of T)(AttributeKey(Of T))
  spec.csharp:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: HasAttribute<T>
    nameWithType: DefaultAttributeMap.HasAttribute<T>
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: HasAttribute(Of T)
    nameWithType: DefaultAttributeMap.HasAttribute(Of T)
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Common.Utilities
  commentId: N:DotNetty.Common.Utilities
  isExternal: false
  name: DotNetty.Common.Utilities
  nameWithType: DotNetty.Common.Utilities
  fullName: DotNetty.Common.Utilities
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: false
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  commentId: M:DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  isExternal: true
  name: GetAttribute<T>(AttributeKey<T>)
  nameWithType: DefaultAttributeMap.GetAttribute<T>(AttributeKey<T>)
  fullName: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute<T>(DotNetty.Common.Utilities.AttributeKey<T>)
  nameWithType.vb: DefaultAttributeMap.GetAttribute(Of T)(AttributeKey(Of T))
  fullName.vb: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute(Of T)(DotNetty.Common.Utilities.AttributeKey(Of T))
  name.vb: GetAttribute(Of T)(AttributeKey(Of T))
  spec.csharp:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: GetAttribute<T>
    nameWithType: DefaultAttributeMap.GetAttribute<T>
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: GetAttribute(Of T)
    nameWithType: DefaultAttributeMap.GetAttribute(Of T)
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.GetAttribute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  commentId: M:DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
  isExternal: true
  name: HasAttribute<T>(AttributeKey<T>)
  nameWithType: DefaultAttributeMap.HasAttribute<T>(AttributeKey<T>)
  fullName: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute<T>(DotNetty.Common.Utilities.AttributeKey<T>)
  nameWithType.vb: DefaultAttributeMap.HasAttribute(Of T)(AttributeKey(Of T))
  fullName.vb: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute(Of T)(DotNetty.Common.Utilities.AttributeKey(Of T))
  name.vb: HasAttribute(Of T)(AttributeKey(Of T))
  spec.csharp:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: HasAttribute<T>
    nameWithType: DefaultAttributeMap.HasAttribute<T>
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute``1(DotNetty.Common.Utilities.AttributeKey{``0})
    name: HasAttribute(Of T)
    nameWithType: DefaultAttributeMap.HasAttribute(Of T)
    fullName: DotNetty.Common.Utilities.DefaultAttributeMap.HasAttribute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Utilities.AttributeKey`1
    name: AttributeKey
    nameWithType: AttributeKey
    fullName: DotNetty.Common.Utilities.AttributeKey
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.#ctor
  isExternal: false
  name: StreamSocketChannel
  nameWithType: StreamSocketChannel.StreamSocketChannel
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocketChannel
- uid: Windows.Networking.Sockets.StreamSocket
  commentId: T:Windows.Networking.Sockets.StreamSocket
  parent: Windows.Networking.Sockets
  isExternal: true
  name: StreamSocket
  nameWithType: StreamSocket
  fullName: Windows.Networking.Sockets.StreamSocket
- uid: Windows.Networking.Sockets
  commentId: N:Windows.Networking.Sockets
  isExternal: false
  name: Windows.Networking.Sockets
  nameWithType: Windows.Networking.Sockets
  fullName: Windows.Networking.Sockets
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket
  isExternal: false
  name: StreamSocket
  nameWithType: StreamSocketChannel.StreamSocket
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.StreamSocket
- uid: DotNetty.Transport.Channels.AbstractChannel.Active
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Active
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Active
  nameWithType: AbstractChannel.Active
  fullName: DotNetty.Transport.Channels.AbstractChannel.Active
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active
  isExternal: false
  name: Active
  nameWithType: StreamSocketChannel.Active
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetty.Transport.Channels.AbstractChannel.Configuration
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Configuration
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Configuration
  nameWithType: AbstractChannel.Configuration
  fullName: DotNetty.Transport.Channels.AbstractChannel.Configuration
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration
  isExternal: false
  name: Configuration
  nameWithType: StreamSocketChannel.Configuration
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Configuration
- uid: DotNetty.Transport.Channels.IChannelConfiguration
  commentId: T:DotNetty.Transport.Channels.IChannelConfiguration
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelConfiguration
  nameWithType: IChannelConfiguration
  fullName: DotNetty.Transport.Channels.IChannelConfiguration
- uid: DotNetty.Transport.Channels.AbstractChannel.Metadata
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Metadata
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Metadata
  nameWithType: AbstractChannel.Metadata
  fullName: DotNetty.Transport.Channels.AbstractChannel.Metadata
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata
  isExternal: false
  name: Metadata
  nameWithType: StreamSocketChannel.Metadata
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Metadata
- uid: DotNetty.Transport.Channels.ChannelMetadata
  commentId: T:DotNetty.Transport.Channels.ChannelMetadata
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelMetadata
  nameWithType: ChannelMetadata
  fullName: DotNetty.Transport.Channels.ChannelMetadata
- uid: DotNetty.Transport.Channels.AbstractChannel.Open
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.Open
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: Open
  nameWithType: AbstractChannel.Open
  fullName: DotNetty.Transport.Channels.AbstractChannel.Open
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open
  isExternal: false
  name: Open
  nameWithType: StreamSocketChannel.Open
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.Open
- uid: DotNetty.Transport.Channels.AbstractChannel.LocalAddressInternal
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.LocalAddressInternal
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: LocalAddressInternal
  nameWithType: AbstractChannel.LocalAddressInternal
  fullName: DotNetty.Transport.Channels.AbstractChannel.LocalAddressInternal
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal
  isExternal: false
  name: LocalAddressInternal
  nameWithType: StreamSocketChannel.LocalAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.LocalAddressInternal
- uid: System.Net.EndPoint
  commentId: T:System.Net.EndPoint
  parent: System.Net
  isExternal: true
  name: EndPoint
  nameWithType: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: DotNetty.Transport.Channels.AbstractChannel.RemoteAddressInternal
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.RemoteAddressInternal
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: RemoteAddressInternal
  nameWithType: AbstractChannel.RemoteAddressInternal
  fullName: DotNetty.Transport.Channels.AbstractChannel.RemoteAddressInternal
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal
  isExternal: false
  name: RemoteAddressInternal
  nameWithType: StreamSocketChannel.RemoteAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.RemoteAddressInternal
- uid: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoBeginRead()
  nameWithType: AbstractChannel.DoBeginRead()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
    name: DoBeginRead
    nameWithType: AbstractChannel.DoBeginRead
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
    name: DoBeginRead
    nameWithType: AbstractChannel.DoBeginRead
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoBeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead
  isExternal: false
  name: DoBeginRead
  nameWithType: StreamSocketChannel.DoBeginRead
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBeginRead
- uid: DotNetty.Transport.Channels.AbstractChannel.DoBind(System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoBind(System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoBind(EndPoint)
  nameWithType: AbstractChannel.DoBind(EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoBind(System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoBind(System.Net.EndPoint)
    name: DoBind
    nameWithType: AbstractChannel.DoBind
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoBind(System.Net.EndPoint)
    name: DoBind
    nameWithType: AbstractChannel.DoBind
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind
  isExternal: false
  name: DoBind
  nameWithType: StreamSocketChannel.DoBind
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoBind
- uid: DotNetty.Transport.Channels.AbstractChannel.DoClose
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoClose
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoClose()
  nameWithType: AbstractChannel.DoClose()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoClose()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoClose
    name: DoClose
    nameWithType: AbstractChannel.DoClose
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoClose
    name: DoClose
    nameWithType: AbstractChannel.DoClose
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose
  isExternal: false
  name: DoClose
  nameWithType: StreamSocketChannel.DoClose
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoClose
- uid: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoDisconnect()
  nameWithType: AbstractChannel.DoDisconnect()
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
    name: DoDisconnect
    nameWithType: AbstractChannel.DoDisconnect
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
    name: DoDisconnect
    nameWithType: AbstractChannel.DoDisconnect
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoDisconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect
  isExternal: false
  name: DoDisconnect
  nameWithType: StreamSocketChannel.DoDisconnect
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoDisconnect
- uid: DotNetty.Transport.Channels.AbstractChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: DoWrite(ChannelOutboundBuffer)
  nameWithType: AbstractChannel.DoWrite(ChannelOutboundBuffer)
  fullName: DotNetty.Transport.Channels.AbstractChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
    name: DoWrite
    nameWithType: AbstractChannel.DoWrite
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOutboundBuffer
    name: ChannelOutboundBuffer
    nameWithType: ChannelOutboundBuffer
    fullName: DotNetty.Transport.Channels.ChannelOutboundBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.DoWrite(DotNetty.Transport.Channels.ChannelOutboundBuffer)
    name: DoWrite
    nameWithType: AbstractChannel.DoWrite
    fullName: DotNetty.Transport.Channels.AbstractChannel.DoWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.ChannelOutboundBuffer
    name: ChannelOutboundBuffer
    nameWithType: ChannelOutboundBuffer
    fullName: DotNetty.Transport.Channels.ChannelOutboundBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite
  isExternal: false
  name: DoWrite
  nameWithType: StreamSocketChannel.DoWrite
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.DoWrite
- uid: DotNetty.Transport.Channels.ChannelOutboundBuffer
  commentId: T:DotNetty.Transport.Channels.ChannelOutboundBuffer
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelOutboundBuffer
  nameWithType: ChannelOutboundBuffer
  fullName: DotNetty.Transport.Channels.ChannelOutboundBuffer
- uid: DotNetty.Transport.Channels.AbstractChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: IsCompatible(IEventLoop)
  nameWithType: AbstractChannel.IsCompatible(IEventLoop)
  fullName: DotNetty.Transport.Channels.AbstractChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
    name: IsCompatible
    nameWithType: AbstractChannel.IsCompatible
    fullName: DotNetty.Transport.Channels.AbstractChannel.IsCompatible
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IEventLoop
    name: IEventLoop
    nameWithType: IEventLoop
    fullName: DotNetty.Transport.Channels.IEventLoop
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.IsCompatible(DotNetty.Transport.Channels.IEventLoop)
    name: IsCompatible
    nameWithType: AbstractChannel.IsCompatible
    fullName: DotNetty.Transport.Channels.AbstractChannel.IsCompatible
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IEventLoop
    name: IEventLoop
    nameWithType: IEventLoop
    fullName: DotNetty.Transport.Channels.IEventLoop
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible
  isExternal: false
  name: IsCompatible
  nameWithType: StreamSocketChannel.IsCompatible
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.IsCompatible
- uid: DotNetty.Transport.Channels.IEventLoop
  commentId: T:DotNetty.Transport.Channels.IEventLoop
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IEventLoop
  nameWithType: IEventLoop
  fullName: DotNetty.Transport.Channels.IEventLoop
- uid: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
  parent: DotNetty.Transport.Channels.AbstractChannel
  isExternal: true
  name: NewUnsafe()
  nameWithType: AbstractChannel.NewUnsafe()
  fullName: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
    name: NewUnsafe
    nameWithType: AbstractChannel.NewUnsafe
    fullName: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
    name: NewUnsafe
    nameWithType: AbstractChannel.NewUnsafe
    fullName: DotNetty.Transport.Channels.AbstractChannel.NewUnsafe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe
  isExternal: false
  name: NewUnsafe
  nameWithType: StreamSocketChannel.NewUnsafe
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.StreamSocketChannel.NewUnsafe
- uid: DotNetty.Transport.Channels.IChannelUnsafe
  commentId: T:DotNetty.Transport.Channels.IChannelUnsafe
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelUnsafe
  nameWithType: IChannelUnsafe
  fullName: DotNetty.Transport.Channels.IChannelUnsafe
