### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer
  commentId: T:Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer
  id: ExportImportDevice.PropertyContainer
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties
  - Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties
  langs:
  - csharp
  - vb
  name: ExportImportDevice.PropertyContainer
  nameWithType: ExportImportDevice.PropertyContainer
  fullName: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/ExportImportDevice.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: PropertyContainer
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/ExportImportDevice.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: public sealed class PropertyContainer
    content.vb: Public NotInheritable Class PropertyContainer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties
  commentId: P:Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties
  id: DesiredProperties
  parent: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer
  langs:
  - csharp
  - vb
  name: DesiredProperties
  nameWithType: ExportImportDevice.PropertyContainer.DesiredProperties
  fullName: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/ExportImportDevice.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DesiredProperties
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/ExportImportDevice.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "desired", NullValueHandling = NullValueHandling.Ignore)]

      public TwinCollection DesiredProperties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="desired", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property DesiredProperties As TwinCollection
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Shared.TwinCollection
  overload: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: desired
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties
  commentId: P:Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties
  id: ReportedProperties
  parent: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer
  langs:
  - csharp
  - vb
  name: ReportedProperties
  nameWithType: ExportImportDevice.PropertyContainer.ReportedProperties
  fullName: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/ExportImportDevice.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ReportedProperties
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/ExportImportDevice.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "reported", NullValueHandling = NullValueHandling.Ignore)]

      public TwinCollection ReportedProperties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="reported", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ReportedProperties As TwinCollection
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Shared.TwinCollection
  overload: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: reported
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties*
  commentId: Overload:Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties
  isExternal: false
  name: DesiredProperties
  nameWithType: ExportImportDevice.PropertyContainer.DesiredProperties
  fullName: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.DesiredProperties
- uid: Microsoft.Azure.Devices.Shared.TwinCollection
  commentId: T:Microsoft.Azure.Devices.Shared.TwinCollection
  parent: Microsoft.Azure.Devices.Shared
  isExternal: false
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: Microsoft.Azure.Devices.Shared.TwinCollection
- uid: Microsoft.Azure.Devices.Shared
  commentId: N:Microsoft.Azure.Devices.Shared
  isExternal: false
  name: Microsoft.Azure.Devices.Shared
  nameWithType: Microsoft.Azure.Devices.Shared
  fullName: Microsoft.Azure.Devices.Shared
- uid: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties*
  commentId: Overload:Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties
  isExternal: false
  name: ReportedProperties
  nameWithType: ExportImportDevice.PropertyContainer.ReportedProperties
  fullName: Microsoft.Azure.Devices.ExportImportDevice.PropertyContainer.ReportedProperties
