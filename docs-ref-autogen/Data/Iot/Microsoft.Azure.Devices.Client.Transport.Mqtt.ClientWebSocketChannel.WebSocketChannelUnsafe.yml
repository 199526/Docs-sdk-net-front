### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe
  id: ClientWebSocketChannel.WebSocketChannelUnsafe
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  children:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.#ctor(DotNetty.Transport.Channels.AbstractChannel)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0
  langs:
  - csharp
  - vb
  name: ClientWebSocketChannel.WebSocketChannelUnsafe
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: WebSocketChannelUnsafe
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: 'protected class WebSocketChannelUnsafe : AbstractChannel.AbstractUnsafe, IChannelUnsafe'
    content.vb: >-
      Protected Class WebSocketChannelUnsafe
          Inherits AbstractChannel.AbstractUnsafe
          Implements IChannelUnsafe
  inheritance:
  - System.Object
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  implements:
  - DotNetty.Transport.Channels.IChannelUnsafe
  inheritedMembers:
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.channel
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync(DotNetty.Transport.Channels.IEventLoop)
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync(System.Net.EndPoint)
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync(System.Object)
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen(DotNetty.Common.Concurrency.TaskCompletionSource)
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException(System.Exception,System.Net.EndPoint)
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RecvBufAllocHandle
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.OutboundBuffer
  - DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CanWrite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.#ctor(DotNetty.Transport.Channels.AbstractChannel)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.#ctor(DotNetty.Transport.Channels.AbstractChannel)
  id: '#ctor(DotNetty.Transport.Channels.AbstractChannel)'
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe
  langs:
  - csharp
  - vb
  name: WebSocketChannelUnsafe(AbstractChannel)
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe.WebSocketChannelUnsafe(AbstractChannel)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.WebSocketChannelUnsafe(DotNetty.Transport.Channels.AbstractChannel)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public WebSocketChannelUnsafe(AbstractChannel channel)
    parameters:
    - id: channel
      type: DotNetty.Transport.Channels.AbstractChannel
    content.vb: Public Sub New(channel As AbstractChannel)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  id: ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe
  langs:
  - csharp
  - vb
  name: ConnectAsync(EndPoint, EndPoint)
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync(EndPoint, EndPoint)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync(System.Net.EndPoint, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ConnectAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override Task ConnectAsync(EndPoint remoteAddress, EndPoint localAddress)
    parameters:
    - id: remoteAddress
      type: System.Net.EndPoint
    - id: localAddress
      type: System.Net.EndPoint
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function ConnectAsync(remoteAddress As EndPoint, localAddress As EndPoint) As Task
  overridden: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0
  id: Flush0
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe
  langs:
  - csharp
  - vb
  name: Flush0()
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Flush0
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void Flush0()
    content.vb: Protected Overrides Sub Flush0
  overridden: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt
  commentId: N:Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Transport.Mqtt
  nameWithType: Microsoft.Azure.Devices.Client.Transport.Mqtt
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  commentId: T:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: AbstractChannel.AbstractUnsafe
  nameWithType: AbstractChannel.AbstractUnsafe
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
- uid: DotNetty.Transport.Channels.IChannelUnsafe
  commentId: T:DotNetty.Transport.Channels.IChannelUnsafe
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelUnsafe
  nameWithType: IChannelUnsafe
  fullName: DotNetty.Transport.Channels.IChannelUnsafe
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.channel
  commentId: F:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.channel
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: channel
  nameWithType: AbstractChannel.AbstractUnsafe.channel
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.channel
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync(DotNetty.Transport.Channels.IEventLoop)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync(DotNetty.Transport.Channels.IEventLoop)
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: RegisterAsync(IEventLoop)
  nameWithType: AbstractChannel.AbstractUnsafe.RegisterAsync(IEventLoop)
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync(DotNetty.Transport.Channels.IEventLoop)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync(DotNetty.Transport.Channels.IEventLoop)
    name: RegisterAsync
    nameWithType: AbstractChannel.AbstractUnsafe.RegisterAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IEventLoop
    name: IEventLoop
    nameWithType: IEventLoop
    fullName: DotNetty.Transport.Channels.IEventLoop
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync(DotNetty.Transport.Channels.IEventLoop)
    name: RegisterAsync
    nameWithType: AbstractChannel.AbstractUnsafe.RegisterAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RegisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IEventLoop
    name: IEventLoop
    nameWithType: IEventLoop
    fullName: DotNetty.Transport.Channels.IEventLoop
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync(System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync(System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: BindAsync(EndPoint)
  nameWithType: AbstractChannel.AbstractUnsafe.BindAsync(EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync(System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync(System.Net.EndPoint)
    name: BindAsync
    nameWithType: AbstractChannel.AbstractUnsafe.BindAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync(System.Net.EndPoint)
    name: BindAsync
    nameWithType: AbstractChannel.AbstractUnsafe.BindAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: DisconnectAsync()
  nameWithType: AbstractChannel.AbstractUnsafe.DisconnectAsync()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
    name: DisconnectAsync
    nameWithType: AbstractChannel.AbstractUnsafe.DisconnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
    name: DisconnectAsync
    nameWithType: AbstractChannel.AbstractUnsafe.DisconnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: CloseAsync()
  nameWithType: AbstractChannel.AbstractUnsafe.CloseAsync()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
    name: CloseAsync
    nameWithType: AbstractChannel.AbstractUnsafe.CloseAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
    name: CloseAsync
    nameWithType: AbstractChannel.AbstractUnsafe.CloseAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: CloseForcibly()
  nameWithType: AbstractChannel.AbstractUnsafe.CloseForcibly()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
    name: CloseForcibly
    nameWithType: AbstractChannel.AbstractUnsafe.CloseForcibly
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
    name: CloseForcibly
    nameWithType: AbstractChannel.AbstractUnsafe.CloseForcibly
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseForcibly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: DeregisterAsync()
  nameWithType: AbstractChannel.AbstractUnsafe.DeregisterAsync()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
    name: DeregisterAsync
    nameWithType: AbstractChannel.AbstractUnsafe.DeregisterAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
    name: DeregisterAsync
    nameWithType: AbstractChannel.AbstractUnsafe.DeregisterAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: BeginRead()
  nameWithType: AbstractChannel.AbstractUnsafe.BeginRead()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
    name: BeginRead
    nameWithType: AbstractChannel.AbstractUnsafe.BeginRead
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
    name: BeginRead
    nameWithType: AbstractChannel.AbstractUnsafe.BeginRead
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync(System.Object)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync(System.Object)
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: WriteAsync(Object)
  nameWithType: AbstractChannel.AbstractUnsafe.WriteAsync(Object)
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync(System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync(System.Object)
    name: WriteAsync
    nameWithType: AbstractChannel.AbstractUnsafe.WriteAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync(System.Object)
    name: WriteAsync
    nameWithType: AbstractChannel.AbstractUnsafe.WriteAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: Flush()
  nameWithType: AbstractChannel.AbstractUnsafe.Flush()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
    name: Flush
    nameWithType: AbstractChannel.AbstractUnsafe.Flush
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
    name: Flush
    nameWithType: AbstractChannel.AbstractUnsafe.Flush
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen(DotNetty.Common.Concurrency.TaskCompletionSource)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen(DotNetty.Common.Concurrency.TaskCompletionSource)
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: EnsureOpen(TaskCompletionSource)
  nameWithType: AbstractChannel.AbstractUnsafe.EnsureOpen(TaskCompletionSource)
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen(DotNetty.Common.Concurrency.TaskCompletionSource)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen(DotNetty.Common.Concurrency.TaskCompletionSource)
    name: EnsureOpen
    nameWithType: AbstractChannel.AbstractUnsafe.EnsureOpen
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Concurrency.TaskCompletionSource
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: DotNetty.Common.Concurrency.TaskCompletionSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen(DotNetty.Common.Concurrency.TaskCompletionSource)
    name: EnsureOpen
    nameWithType: AbstractChannel.AbstractUnsafe.EnsureOpen
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.EnsureOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Common.Concurrency.TaskCompletionSource
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: DotNetty.Common.Concurrency.TaskCompletionSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: CreateClosedChannelExceptionTask()
  nameWithType: AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
    name: CreateClosedChannelExceptionTask
    nameWithType: AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
    name: CreateClosedChannelExceptionTask
    nameWithType: AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CreateClosedChannelExceptionTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: CloseIfClosed()
  nameWithType: AbstractChannel.AbstractUnsafe.CloseIfClosed()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
    name: CloseIfClosed
    nameWithType: AbstractChannel.AbstractUnsafe.CloseIfClosed
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
    name: CloseIfClosed
    nameWithType: AbstractChannel.AbstractUnsafe.CloseIfClosed
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CloseIfClosed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException(System.Exception,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException(System.Exception,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: AnnotateConnectException(Exception, EndPoint)
  nameWithType: AbstractChannel.AbstractUnsafe.AnnotateConnectException(Exception, EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException(System.Exception, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException(System.Exception,System.Net.EndPoint)
    name: AnnotateConnectException
    nameWithType: AbstractChannel.AbstractUnsafe.AnnotateConnectException
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException(System.Exception,System.Net.EndPoint)
    name: AnnotateConnectException
    nameWithType: AbstractChannel.AbstractUnsafe.AnnotateConnectException
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.AnnotateConnectException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: PrepareToClose()
  nameWithType: AbstractChannel.AbstractUnsafe.PrepareToClose()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
    name: PrepareToClose
    nameWithType: AbstractChannel.AbstractUnsafe.PrepareToClose
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
    name: PrepareToClose
    nameWithType: AbstractChannel.AbstractUnsafe.PrepareToClose
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.PrepareToClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RecvBufAllocHandle
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RecvBufAllocHandle
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: RecvBufAllocHandle
  nameWithType: AbstractChannel.AbstractUnsafe.RecvBufAllocHandle
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.RecvBufAllocHandle
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.OutboundBuffer
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.OutboundBuffer
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: OutboundBuffer
  nameWithType: AbstractChannel.AbstractUnsafe.OutboundBuffer
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.OutboundBuffer
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CanWrite
  commentId: P:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CanWrite
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: CanWrite
  nameWithType: AbstractChannel.AbstractUnsafe.CanWrite
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.CanWrite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: false
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.#ctor
  isExternal: false
  name: WebSocketChannelUnsafe
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe.WebSocketChannelUnsafe
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.WebSocketChannelUnsafe
- uid: DotNetty.Transport.Channels.AbstractChannel
  commentId: T:DotNetty.Transport.Channels.AbstractChannel
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: AbstractChannel
  nameWithType: AbstractChannel
  fullName: DotNetty.Transport.Channels.AbstractChannel
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: ConnectAsync(EndPoint, EndPoint)
  nameWithType: AbstractChannel.AbstractUnsafe.ConnectAsync(EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync(System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: AbstractChannel.AbstractUnsafe.ConnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync(System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: AbstractChannel.AbstractUnsafe.ConnectAsync
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync
  isExternal: false
  name: ConnectAsync
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.ConnectAsync
- uid: System.Net.EndPoint
  commentId: T:System.Net.EndPoint
  parent: System.Net
  isExternal: true
  name: EndPoint
  nameWithType: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
  commentId: M:DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
  parent: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe
  isExternal: true
  name: Flush0()
  nameWithType: AbstractChannel.AbstractUnsafe.Flush0()
  fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
    name: Flush0
    nameWithType: AbstractChannel.AbstractUnsafe.Flush0
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
    name: Flush0
    nameWithType: AbstractChannel.AbstractUnsafe.Flush0
    fullName: DotNetty.Transport.Channels.AbstractChannel.AbstractUnsafe.Flush0
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0
  isExternal: false
  name: Flush0
  nameWithType: ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.WebSocketChannelUnsafe.Flush0
