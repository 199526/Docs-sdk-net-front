### YamlMime:ManagedReference
items:
- uid: Microsoft.PowerBI.Security.Scopes
  commentId: T:Microsoft.PowerBI.Security.Scopes
  id: Scopes
  parent: Microsoft.PowerBI.Security
  children:
  - Microsoft.PowerBI.Security.Scopes.DatasetRead
  - Microsoft.PowerBI.Security.Scopes.DatasetReadWrite
  - Microsoft.PowerBI.Security.Scopes.DatasetWrite
  - Microsoft.PowerBI.Security.Scopes.ReportRead
  - Microsoft.PowerBI.Security.Scopes.ReportReadWrite
  - Microsoft.PowerBI.Security.Scopes.WorkspaceCopyReport
  - Microsoft.PowerBI.Security.Scopes.WorkspaceCreateReport
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: Scopes
  fullName: Microsoft.PowerBI.Security.Scopes
  type: Class
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Scopes
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 9
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe Power BI app token permission scopes definitions used with Power BI Embedded services\n"
  example: []
  syntax:
    content: public static class Scopes
    content.vb: Public Module Scopes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.PowerBI.Security.Scopes.DatasetRead
  commentId: F:Microsoft.PowerBI.Security.Scopes.DatasetRead
  id: DatasetRead
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: DatasetRead
  nameWithType: Scopes.DatasetRead
  fullName: Microsoft.PowerBI.Security.Scopes.DatasetRead
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: DatasetRead
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 14
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nDataset Read permission\n"
  example: []
  syntax:
    content: public const string DatasetRead = "Dataset.Read"
    return:
      type: System.String
    content.vb: Public Const DatasetRead As String = "Dataset.Read"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.Scopes.DatasetWrite
  commentId: F:Microsoft.PowerBI.Security.Scopes.DatasetWrite
  id: DatasetWrite
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: DatasetWrite
  nameWithType: Scopes.DatasetWrite
  fullName: Microsoft.PowerBI.Security.Scopes.DatasetWrite
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: DatasetWrite
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 19
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nDataset Write permission\n"
  example: []
  syntax:
    content: public const string DatasetWrite = "Dataset.Write"
    return:
      type: System.String
    content.vb: Public Const DatasetWrite As String = "Dataset.Write"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.Scopes.DatasetReadWrite
  commentId: F:Microsoft.PowerBI.Security.Scopes.DatasetReadWrite
  id: DatasetReadWrite
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: DatasetReadWrite
  nameWithType: Scopes.DatasetReadWrite
  fullName: Microsoft.PowerBI.Security.Scopes.DatasetReadWrite
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: DatasetReadWrite
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 24
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  syntax:
    content: public const string DatasetReadWrite = "Dataset.ReadWrite"
    return:
      type: System.String
    content.vb: Public Const DatasetReadWrite As String = "Dataset.ReadWrite"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.Scopes.ReportRead
  commentId: F:Microsoft.PowerBI.Security.Scopes.ReportRead
  id: ReportRead
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: ReportRead
  nameWithType: Scopes.ReportRead
  fullName: Microsoft.PowerBI.Security.Scopes.ReportRead
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: ReportRead
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 29
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nReport Read (View) permission\n"
  example: []
  syntax:
    content: public const string ReportRead = "Report.Read"
    return:
      type: System.String
    content.vb: Public Const ReportRead As String = "Report.Read"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.Scopes.ReportReadWrite
  commentId: F:Microsoft.PowerBI.Security.Scopes.ReportReadWrite
  id: ReportReadWrite
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: ReportReadWrite
  nameWithType: Scopes.ReportReadWrite
  fullName: Microsoft.PowerBI.Security.Scopes.ReportReadWrite
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: ReportReadWrite
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 34
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  syntax:
    content: public const string ReportReadWrite = "Report.ReadWrite"
    return:
      type: System.String
    content.vb: Public Const ReportReadWrite As String = "Report.ReadWrite"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.Scopes.WorkspaceCreateReport
  commentId: F:Microsoft.PowerBI.Security.Scopes.WorkspaceCreateReport
  id: WorkspaceCreateReport
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: WorkspaceCreateReport
  nameWithType: Scopes.WorkspaceCreateReport
  fullName: Microsoft.PowerBI.Security.Scopes.WorkspaceCreateReport
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: WorkspaceCreateReport
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 39
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreate new Report in Workspace permission\n"
  example: []
  syntax:
    content: public const string WorkspaceCreateReport = "Workspace.Report.Create"
    return:
      type: System.String
    content.vb: Public Const WorkspaceCreateReport As String = "Workspace.Report.Create"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.Scopes.WorkspaceCopyReport
  commentId: F:Microsoft.PowerBI.Security.Scopes.WorkspaceCopyReport
  id: WorkspaceCopyReport
  parent: Microsoft.PowerBI.Security.Scopes
  langs:
  - csharp
  - vb
  name: WorkspaceCopyReport
  nameWithType: Scopes.WorkspaceCopyReport
  fullName: Microsoft.PowerBI.Security.Scopes.WorkspaceCopyReport
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/Scopes.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: WorkspaceCopyReport
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/Scopes.cs
    startLine: 44
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCopy existing Report in Workspace permission\n"
  example: []
  syntax:
    content: public const string WorkspaceCopyReport = "Workspace.Report.Copy"
    return:
      type: System.String
    content.vb: Public Const WorkspaceCopyReport As String = "Workspace.Report.Copy"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.PowerBI.Security
  commentId: N:Microsoft.PowerBI.Security
  isExternal: false
  name: Microsoft.PowerBI.Security
  nameWithType: Microsoft.PowerBI.Security
  fullName: Microsoft.PowerBI.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
