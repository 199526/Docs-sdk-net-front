### YamlMime:ManagedReference
items:
- uid: Microsoft.PowerBI.Security.PowerBIToken
  commentId: T:Microsoft.PowerBI.Security.PowerBIToken
  id: PowerBIToken
  parent: Microsoft.PowerBI.Security
  children:
  - Microsoft.PowerBI.Security.PowerBIToken.#ctor
  - Microsoft.PowerBI.Security.PowerBIToken.AccessKey
  - Microsoft.PowerBI.Security.PowerBIToken.Audience
  - Microsoft.PowerBI.Security.PowerBIToken.Claims
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.PowerBI.Security.PowerBIToken.DatasetId
  - Microsoft.PowerBI.Security.PowerBIToken.Expiration
  - Microsoft.PowerBI.Security.PowerBIToken.Generate(System.String)
  - Microsoft.PowerBI.Security.PowerBIToken.Issuer
  - Microsoft.PowerBI.Security.PowerBIToken.ReportId
  - Microsoft.PowerBI.Security.PowerBIToken.ToString
  - Microsoft.PowerBI.Security.PowerBIToken.ToString(System.String)
  langs:
  - csharp
  - vb
  name: PowerBIToken
  nameWithType: PowerBIToken
  fullName: Microsoft.PowerBI.Security.PowerBIToken
  type: Class
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: PowerBIToken
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 12
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe Power BI app token used to authenticate with Power BI Embedded services\n"
  example: []
  syntax:
    content: public class PowerBIToken
    content.vb: Public Class PowerBIToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.PowerBI.Security.PowerBIToken.#ctor
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.#ctor
  id: '#ctor'
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: PowerBIToken()
  nameWithType: PowerBIToken.PowerBIToken()
  fullName: Microsoft.PowerBI.Security.PowerBIToken.PowerBIToken()
  type: Constructor
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: .ctor
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 73
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nRepresents an access token used to authenticate and authorize against Power BI Platform services\n"
  example: []
  syntax:
    content: public PowerBIToken()
    content.vb: Public Sub New
  overload: Microsoft.PowerBI.Security.PowerBIToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedToken(String, String, String, String, IEnumerable<String>, String)
  nameWithType: PowerBIToken.CreateReportEmbedToken(String, String, String, String, IEnumerable<String>, String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedToken
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 93
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedToken(string workspaceCollectionName, string workspaceId, string reportId, string username = null, IEnumerable<string> roles = null, string scopes = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: reportId
      type: System.String
      description: The report id
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopes
      type: System.String
      description: The permission scopes
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedToken(workspaceCollectionName As String, workspaceId As String, reportId As String, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopes As String = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken*
  nameWithType.vb: PowerBIToken.CreateReportEmbedToken(String, String, String, String, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: CreateReportEmbedToken(String, String, String, String, IEnumerable(Of String), String)
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedTokenForCreation(String, String, String, String, IEnumerable<String>, String)
  nameWithType: PowerBIToken.CreateReportEmbedTokenForCreation(String, String, String, String, IEnumerable<String>, String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedTokenForCreation
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 110
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedTokenForCreation(string workspaceCollectionName, string workspaceId, string datasetId, string username = null, IEnumerable<string> roles = null, string scopes = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: datasetId
      type: System.String
      description: The dataset id
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopes
      type: System.String
      description: The permission scopes
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedTokenForCreation(workspaceCollectionName As String, workspaceId As String, datasetId As String, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopes As String = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation*
  nameWithType.vb: PowerBIToken.CreateReportEmbedTokenForCreation(String, String, String, String, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: CreateReportEmbedTokenForCreation(String, String, String, String, IEnumerable(Of String), String)
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateReportEmbedTokenForCreation(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedTokenForCreation(String, String, String, TimeSpan, String, IEnumerable<String>, String)
  nameWithType: PowerBIToken.CreateReportEmbedTokenForCreation(String, String, String, TimeSpan, String, IEnumerable<String>, String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String, System.String, System.String, System.TimeSpan, System.String, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedTokenForCreation
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 127
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedTokenForCreation(string workspaceCollectionName, string workspaceId, string datasetId, TimeSpan slidingExpiration, string username = null, IEnumerable<string> roles = null, string scopes = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: datasetId
      type: System.String
      description: The dataset id
    - id: slidingExpiration
      type: System.TimeSpan
      description: The timespan to append to the current date/time
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopes
      type: System.String
      description: The permission scopes
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedTokenForCreation(workspaceCollectionName As String, workspaceId As String, datasetId As String, slidingExpiration As TimeSpan, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopes As String = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation*
  nameWithType.vb: PowerBIToken.CreateReportEmbedTokenForCreation(String, String, String, TimeSpan, String, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation(System.String, System.String, System.String, System.TimeSpan, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: CreateReportEmbedTokenForCreation(String, String, String, TimeSpan, String, IEnumerable(Of String), String)
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: CreateReportEmbedTokenWithScopes(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedTokenWithScopes(String, String, String, String, String, IEnumerable<String>, IEnumerable<String>)
  nameWithType: PowerBIToken.CreateReportEmbedTokenWithScopes(String, String, String, String, String, IEnumerable<String>, IEnumerable<String>)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedTokenWithScopes
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 144
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedTokenWithScopes(string workspaceCollectionName, string workspaceId, string reportId = null, string datasetId = null, string username = null, IEnumerable<string> roles = null, IEnumerable<string> scopesList = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: reportId
      type: System.String
      description: The report id
    - id: datasetId
      type: System.String
      description: The dataset id
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopesList
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The permission scopes list
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedTokenWithScopes(workspaceCollectionName As String, workspaceId As String, reportId As String = Nothing, datasetId As String = Nothing, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopesList As IEnumerable(Of String) = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes*
  nameWithType.vb: PowerBIToken.CreateReportEmbedTokenWithScopes(String, String, String, String, String, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes(System.String, System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CreateReportEmbedTokenWithScopes(String, String, String, String, String, IEnumerable(Of String), IEnumerable(Of String))
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateReportEmbedToken(System.String,System.String,System.String,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedToken(String, String, String, TimeSpan, String, IEnumerable<String>, String)
  nameWithType: PowerBIToken.CreateReportEmbedToken(String, String, String, TimeSpan, String, IEnumerable<String>, String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.TimeSpan, System.String, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedToken
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 162
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedToken(string workspaceCollectionName, string workspaceId, string reportId, TimeSpan slidingExpiration, string username = null, IEnumerable<string> roles = null, string scopes = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: reportId
      type: System.String
      description: The report id
    - id: slidingExpiration
      type: System.TimeSpan
      description: The timespan to append to the current date/time
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopes
      type: System.String
      description: The permission scopes
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedToken(workspaceCollectionName As String, workspaceId As String, reportId As String, slidingExpiration As TimeSpan, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopes As String = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken*
  nameWithType.vb: PowerBIToken.CreateReportEmbedToken(String, String, String, TimeSpan, String, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.TimeSpan, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: CreateReportEmbedToken(String, String, String, TimeSpan, String, IEnumerable(Of String), String)
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateReportEmbedToken(System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedToken(String, String, String, DateTime, String, IEnumerable<String>, String)
  nameWithType: PowerBIToken.CreateReportEmbedToken(String, String, String, DateTime, String, IEnumerable<String>, String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.DateTime, System.String, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedToken
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 179
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedToken(string workspaceCollectionName, string workspaceId, string reportId, DateTime expiration, string username = null, IEnumerable<string> roles = null, string scopes = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: reportId
      type: System.String
      description: The report id
    - id: expiration
      type: System.DateTime
      description: The token expiration date/time
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopes
      type: System.String
      description: The permission scopes
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedToken(workspaceCollectionName As String, workspaceId As String, reportId As String, expiration As Date, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopes As String = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken*
  nameWithType.vb: PowerBIToken.CreateReportEmbedToken(String, String, String, DateTime, String, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.DateTime, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: CreateReportEmbedToken(String, String, String, DateTime, String, IEnumerable(Of String), String)
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateReportEmbedToken(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: CreateReportEmbedToken(String, String, String, String, DateTime, String, IEnumerable<String>, String)
  nameWithType: PowerBIToken.CreateReportEmbedToken(String, String, String, String, DateTime, String, IEnumerable<String>, String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.String, System.DateTime, System.String, System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: CreateReportEmbedToken
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 196
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nCreates a embed token with default expiration used to embed Power BI components into your own applications\n"
  example: []
  syntax:
    content: public static PowerBIToken CreateReportEmbedToken(string workspaceCollectionName, string workspaceId, string reportId, string datasetId, DateTime expiration, string username = null, IEnumerable<string> roles = null, string scopes = null)
    parameters:
    - id: workspaceCollectionName
      type: System.String
      description: The workspace collection name
    - id: workspaceId
      type: System.String
      description: The workspace id
    - id: reportId
      type: System.String
      description: The report id
    - id: datasetId
      type: System.String
      description: The dataset id
    - id: expiration
      type: System.DateTime
      description: The token expiration date/time
    - id: username
      type: System.String
      description: The RLS username
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The RLS roles
    - id: scopes
      type: System.String
      description: The permission scopes
    return:
      type: Microsoft.PowerBI.Security.PowerBIToken
      description: The Power BI access token
    content.vb: Public Shared Function CreateReportEmbedToken(workspaceCollectionName As String, workspaceId As String, reportId As String, datasetId As String, expiration As Date, username As String = Nothing, roles As IEnumerable(Of String) = Nothing, scopes As String = Nothing) As PowerBIToken
  overload: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken*
  nameWithType.vb: PowerBIToken.CreateReportEmbedToken(String, String, String, String, DateTime, String, IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken(System.String, System.String, System.String, System.String, System.DateTime, System.String, System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: CreateReportEmbedToken(String, String, String, String, DateTime, String, IEnumerable(Of String), String)
- uid: Microsoft.PowerBI.Security.PowerBIToken.Issuer
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.Issuer
  id: Issuer
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: PowerBIToken.Issuer
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Issuer
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Issuer
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 256
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe token issuer\n"
  example: []
  syntax:
    content: public string Issuer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Issuer As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.Issuer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.Audience
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.Audience
  id: Audience
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: PowerBIToken.Audience
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Audience
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Audience
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 261
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe audience this token is valid for\n"
  example: []
  syntax:
    content: public string Audience { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Audience As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.Audience*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.ReportId
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.ReportId
  id: ReportId
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: ReportId
  nameWithType: PowerBIToken.ReportId
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ReportId
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: ReportId
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 266
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe report id this token is valid for\n"
  example: []
  syntax:
    content: public string ReportId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReportId As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.ReportId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.DatasetId
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.DatasetId
  id: DatasetId
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: DatasetId
  nameWithType: PowerBIToken.DatasetId
  fullName: Microsoft.PowerBI.Security.PowerBIToken.DatasetId
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: DatasetId
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 271
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe dataset id this token is valid for\n"
  example: []
  syntax:
    content: public string DatasetId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatasetId As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.DatasetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.Claims
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.Claims
  id: Claims
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: Claims
  nameWithType: PowerBIToken.Claims
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Claims
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Claims
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 276
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nGets or sets a collection of claims associated with this token\n"
  example: []
  syntax:
    content: public ICollection<Claim> Claims { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Security.Claims.Claim}
    content.vb: Public ReadOnly Property Claims As ICollection(Of Claim)
  overload: Microsoft.PowerBI.Security.PowerBIToken.Claims*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.PowerBI.Security.PowerBIToken.AccessKey
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.AccessKey
  id: AccessKey
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: AccessKey
  nameWithType: PowerBIToken.AccessKey
  fullName: Microsoft.PowerBI.Security.PowerBIToken.AccessKey
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: AccessKey
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 281
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nGets or set the access key used to sign the app token\n"
  example: []
  syntax:
    content: public string AccessKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccessKey As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.AccessKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.Expiration
  commentId: P:Microsoft.PowerBI.Security.PowerBIToken.Expiration
  id: Expiration
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: Expiration
  nameWithType: PowerBIToken.Expiration
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Expiration
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Expiration
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 286
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nGets or sets the token expiration.  Default expiration is 1 hour\n"
  example: []
  syntax:
    content: public DateTime? Expiration { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property Expiration As Date?
  overload: Microsoft.PowerBI.Security.PowerBIToken.Expiration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.Generate(System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.Generate(System.String)
  id: Generate(System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: Generate(String)
  nameWithType: PowerBIToken.Generate(String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Generate(System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Generate
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 294
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nGenerates an app token with the specified claims and signs it the the configured signing key.\n"
  example: []
  syntax:
    content: public string Generate(string accessKey = null)
    parameters:
    - id: accessKey
      type: System.String
      description: The access key used to sign the app token
    return:
      type: System.String
      description: ''
    content.vb: Public Function Generate(accessKey As String = Nothing) As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.Generate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Security.PowerBIToken.ToString
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.ToString
  id: ToString
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PowerBIToken.ToString()
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ToString()
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: ToString
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 319
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that represents the current object.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Microsoft.PowerBI.Security.PowerBIToken.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.PowerBI.Security.PowerBIToken.ToString(System.String)
  commentId: M:Microsoft.PowerBI.Security.PowerBIToken.ToString(System.String)
  id: ToString(System.String)
  parent: Microsoft.PowerBI.Security.PowerBIToken
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: PowerBIToken.ToString(String)
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ToString(System.String)
  type: Method
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: ToString
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 329
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nReturns a JWT token string that represents the current object\n"
  example: []
  syntax:
    content: public string ToString(string accessKey)
    parameters:
    - id: accessKey
      type: System.String
      description: The access key used to sign the app token
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToString(accessKey As String) As String
  overload: Microsoft.PowerBI.Security.PowerBIToken.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.PowerBI.Security
  commentId: N:Microsoft.PowerBI.Security
  isExternal: false
  name: Microsoft.PowerBI.Security
  nameWithType: Microsoft.PowerBI.Security
  fullName: Microsoft.PowerBI.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.PowerBI.Security.PowerBIToken.#ctor*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.#ctor
  isExternal: false
  name: PowerBIToken
  nameWithType: PowerBIToken.PowerBIToken
  fullName: Microsoft.PowerBI.Security.PowerBIToken.PowerBIToken
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken
  isExternal: false
  name: CreateReportEmbedToken
  nameWithType: PowerBIToken.CreateReportEmbedToken
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.PowerBI.Security.PowerBIToken
  commentId: T:Microsoft.PowerBI.Security.PowerBIToken
  parent: Microsoft.PowerBI.Security
  isExternal: false
  name: PowerBIToken
  nameWithType: PowerBIToken
  fullName: Microsoft.PowerBI.Security.PowerBIToken
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation
  isExternal: false
  name: CreateReportEmbedTokenForCreation
  nameWithType: PowerBIToken.CreateReportEmbedTokenForCreation
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenForCreation
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes
  isExternal: false
  name: CreateReportEmbedTokenWithScopes
  nameWithType: PowerBIToken.CreateReportEmbedTokenWithScopes
  fullName: Microsoft.PowerBI.Security.PowerBIToken.CreateReportEmbedTokenWithScopes
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.PowerBI.Security.PowerBIToken.Issuer*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.Issuer
  isExternal: false
  name: Issuer
  nameWithType: PowerBIToken.Issuer
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Issuer
- uid: Microsoft.PowerBI.Security.PowerBIToken.Audience*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.Audience
  isExternal: false
  name: Audience
  nameWithType: PowerBIToken.Audience
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Audience
- uid: Microsoft.PowerBI.Security.PowerBIToken.ReportId*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.ReportId
  isExternal: false
  name: ReportId
  nameWithType: PowerBIToken.ReportId
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ReportId
- uid: Microsoft.PowerBI.Security.PowerBIToken.DatasetId*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.DatasetId
  isExternal: false
  name: DatasetId
  nameWithType: PowerBIToken.DatasetId
  fullName: Microsoft.PowerBI.Security.PowerBIToken.DatasetId
- uid: Microsoft.PowerBI.Security.PowerBIToken.Claims*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.Claims
  isExternal: false
  name: Claims
  nameWithType: PowerBIToken.Claims
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Claims
- uid: System.Collections.Generic.ICollection{System.Security.Claims.Claim}
  commentId: T:System.Collections.Generic.ICollection{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Claim>
  nameWithType: ICollection<Claim>
  fullName: System.Collections.Generic.ICollection<System.Security.Claims.Claim>
  nameWithType.vb: ICollection(Of Claim)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Security.Claims.Claim)
  name.vb: ICollection(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.PowerBI.Security.PowerBIToken.AccessKey*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.AccessKey
  isExternal: false
  name: AccessKey
  nameWithType: PowerBIToken.AccessKey
  fullName: Microsoft.PowerBI.Security.PowerBIToken.AccessKey
- uid: Microsoft.PowerBI.Security.PowerBIToken.Expiration*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.Expiration
  isExternal: false
  name: Expiration
  nameWithType: PowerBIToken.Expiration
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Expiration
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.PowerBI.Security.PowerBIToken.Generate*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.Generate
  isExternal: false
  name: Generate
  nameWithType: PowerBIToken.Generate
  fullName: Microsoft.PowerBI.Security.PowerBIToken.Generate
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.PowerBI.Security.PowerBIToken.ToString*
  commentId: Overload:Microsoft.PowerBI.Security.PowerBIToken.ToString
  isExternal: false
  name: ToString
  nameWithType: PowerBIToken.ToString
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ToString
