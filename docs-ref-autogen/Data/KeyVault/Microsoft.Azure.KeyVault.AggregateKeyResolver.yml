### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.AggregateKeyResolver
  commentId: T:Microsoft.Azure.KeyVault.AggregateKeyResolver
  id: AggregateKeyResolver
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.AggregateKeyResolver.Add(IKeyResolver)
  - Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync(System.String,CancellationToken)
  langs:
  - csharp
  - vb
  name: AggregateKeyResolver
  nameWithType: AggregateKeyResolver
  fullName: Microsoft.Azure.KeyVault.AggregateKeyResolver
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/AggregateKeyResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AggregateKeyResolver
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Extensions/AggregateKeyResolver.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe collection of key resolvers that would iterate on a key id to resolve to <see cref=\"!:IKey\"></see>.\n"
  example: []
  syntax:
    content: 'public class AggregateKeyResolver : IKeyResolver'
    content.vb: >-
      Public Class AggregateKeyResolver
          Inherits IKeyResolver
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.AggregateKeyResolver.Add(IKeyResolver)
  commentId: M:Microsoft.Azure.KeyVault.AggregateKeyResolver.Add(IKeyResolver)
  id: Add(IKeyResolver)
  parent: Microsoft.Azure.KeyVault.AggregateKeyResolver
  langs:
  - csharp
  - vb
  name: Add(IKeyResolver)
  nameWithType: AggregateKeyResolver.Add(IKeyResolver)
  fullName: Microsoft.Azure.KeyVault.AggregateKeyResolver.Add(IKeyResolver)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/AggregateKeyResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Add
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Extensions/AggregateKeyResolver.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nAdds a key resolver to the collection of key resolvers.\n"
  example: []
  syntax:
    content: public AggregateKeyResolver Add(IKeyResolver resolver)
    parameters:
    - id: resolver
      type: IKeyResolver
      description: The key resolver to add to the collection
    return:
      type: Microsoft.Azure.KeyVault.AggregateKeyResolver
      description: ''
    content.vb: Public Function Add(resolver As IKeyResolver) As AggregateKeyResolver
  overload: Microsoft.Azure.KeyVault.AggregateKeyResolver.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync(System.String,CancellationToken)
  id: ResolveKeyAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.AggregateKeyResolver
  langs:
  - csharp
  - vb
  name: ResolveKeyAsync(String, CancellationToken)
  nameWithType: AggregateKeyResolver.ResolveKeyAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/AggregateKeyResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResolveKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Extensions/AggregateKeyResolver.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nResolve a key indicated by its ID to the corresponding <see cref=\"!:IKey\"></see>\n"
  example: []
  syntax:
    content: public Task<IKey> ResolveKeyAsync(string kid, CancellationToken token)
    parameters:
    - id: kid
      type: System.String
      description: 'the key identifier '
    - id: token
      type: CancellationToken
      description: 'the cancellation token '
    return:
      type: Task{IKey}
      description: task result of the <see cref="!:IKey"></see>
    content.vb: Public Function ResolveKeyAsync(kid As String, token As CancellationToken) As Task(Of IKey)
  overload: Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.AggregateKeyResolver.Add*
  commentId: Overload:Microsoft.Azure.KeyVault.AggregateKeyResolver.Add
  isExternal: false
  name: Add
  nameWithType: AggregateKeyResolver.Add
  fullName: Microsoft.Azure.KeyVault.AggregateKeyResolver.Add
- uid: IKeyResolver
  isExternal: true
  name: IKeyResolver
  nameWithType: IKeyResolver
  fullName: IKeyResolver
- uid: Microsoft.Azure.KeyVault.AggregateKeyResolver
  commentId: T:Microsoft.Azure.KeyVault.AggregateKeyResolver
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: AggregateKeyResolver
  nameWithType: AggregateKeyResolver
  fullName: Microsoft.Azure.KeyVault.AggregateKeyResolver
- uid: Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync
  isExternal: false
  name: ResolveKeyAsync
  nameWithType: AggregateKeyResolver.ResolveKeyAsync
  fullName: Microsoft.Azure.KeyVault.AggregateKeyResolver.ResolveKeyAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task{IKey}
  commentId: '!:Task{IKey}'
  definition: Task`1
  name: Task<IKey>
  nameWithType: Task<IKey>
  fullName: Task<IKey>
  nameWithType.vb: Task(Of IKey)
  fullName.vb: Task(Of IKey)
  name.vb: Task(Of IKey)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IKey
    name: IKey
    nameWithType: IKey
    fullName: IKey
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IKey
    name: IKey
    nameWithType: IKey
    fullName: IKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
