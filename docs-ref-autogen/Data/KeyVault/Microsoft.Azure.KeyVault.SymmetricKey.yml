### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.SymmetricKey
  commentId: T:Microsoft.Azure.KeyVault.SymmetricKey
  id: SymmetricKey
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)
  - Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  - Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  - Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  - Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  - Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  - Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  - Microsoft.Azure.KeyVault.SymmetricKey.Kid
  - Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SymmetricKey
  nameWithType: SymmetricKey
  fullName: Microsoft.Azure.KeyVault.SymmetricKey
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SymmetricKey
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  summary: "\nA simple Symmetric Key\n"
  example: []
  syntax:
    content: 'public class SymmetricKey : IKey'
    content.vb: >-
      Public Class SymmetricKey
          Inherits IKey
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  id: KeySize128
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize128
  nameWithType: SymmetricKey.KeySize128
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize128
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize128 = 16
    return:
      type: System.Int32
    content.vb: Public Const KeySize128 As Integer = 16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  id: KeySize192
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize192
  nameWithType: SymmetricKey.KeySize192
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize192
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize192 = 24
    return:
      type: System.Int32
    content.vb: Public Const KeySize192 As Integer = 24
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  id: KeySize256
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize256
  nameWithType: SymmetricKey.KeySize256
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize256
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize256 = 32
    return:
      type: System.Int32
    content.vb: Public Const KeySize256 As Integer = 32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  id: KeySize384
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize384
  nameWithType: SymmetricKey.KeySize384
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize384
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize384 = 48
    return:
      type: System.Int32
    content.vb: Public Const KeySize384 As Integer = 48
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  id: KeySize512
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize512
  nameWithType: SymmetricKey.KeySize512
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize512
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize512 = 64
    return:
      type: System.Int32
    content.vb: Public Const KeySize512 As Integer = 64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey()
  nameWithType: SymmetricKey.SymmetricKey()
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDefault constructor\n"
  example: []
  syntax:
    content: public SymmetricKey()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.SymmetricKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey(String)
  nameWithType: SymmetricKey.SymmetricKey(String)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public SymmetricKey(string kid)
    parameters:
    - id: kid
      type: System.String
      description: The key identifier to use
    content.vb: Public Sub New(kid As String)
  overload: Microsoft.Azure.KeyVault.SymmetricKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey(String, Int32)
  nameWithType: SymmetricKey.SymmetricKey(String, Int32)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public SymmetricKey(string kid, int keySize)
    parameters:
    - id: kid
      type: System.String
      description: The key identifier to use
    - id: keySize
      type: System.Int32
      description: The key size in bytes
    content.vb: Public Sub New(kid As String, keySize As Integer)
  overload: Microsoft.Azure.KeyVault.SymmetricKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey(String, Byte[])
  nameWithType: SymmetricKey.SymmetricKey(String, Byte[])
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public SymmetricKey(string kid, byte[] keyBytes)
    parameters:
    - id: kid
      type: System.String
      description: The key identifier
    - id: keyBytes
      type: System.Byte[]
      description: The key material
    content.vb: Public Sub New(kid As String, keyBytes As Byte())
  overload: Microsoft.Azure.KeyVault.SymmetricKey.#ctor*
  nameWithType.vb: SymmetricKey.SymmetricKey(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String, System.Byte())
  name.vb: SymmetricKey(String, Byte())
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Kid
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.Kid
  id: Kid
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Kid
  nameWithType: SymmetricKey.Kid
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Kid
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Kid
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string Kid { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Kid As String
  overload: Microsoft.Azure.KeyVault.SymmetricKey.Kid*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DefaultEncryptionAlgorithm
  nameWithType: SymmetricKey.DefaultEncryptionAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultEncryptionAlgorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string DefaultEncryptionAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DefaultEncryptionAlgorithm As String
  overload: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  id: DefaultKeyWrapAlgorithm
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DefaultKeyWrapAlgorithm
  nameWithType: SymmetricKey.DefaultKeyWrapAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultKeyWrapAlgorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string DefaultKeyWrapAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DefaultKeyWrapAlgorithm As String
  overload: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  id: DefaultSignatureAlgorithm
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DefaultSignatureAlgorithm
  nameWithType: SymmetricKey.DefaultSignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultSignatureAlgorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string DefaultSignatureAlgorithm { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DefaultSignatureAlgorithm As String
  overload: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  id: DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DecryptAsync(Byte[], Byte[], Byte[], Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.DecryptAsync(Byte[], Byte[], Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DecryptAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<byte[]> DecryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData = null, byte[] authenticationTag = null, string algorithm = null, CancellationToken token = null)
    parameters:
    - id: ciphertext
      type: System.Byte[]
    - id: iv
      type: System.Byte[]
    - id: authenticationData
      type: System.Byte[]
    - id: authenticationTag
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
    content.vb: Public Function DecryptAsync(ciphertext As Byte(), iv As Byte(), authenticationData As Byte() = Nothing, authenticationTag As Byte() = Nothing, algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Byte())
  overload: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync*
  nameWithType.vb: SymmetricKey.DecryptAsync(Byte(), Byte(), Byte(), Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: DecryptAsync(Byte(), Byte(), Byte(), Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  id: EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: EncryptAsync(Byte[], Byte[], Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.EncryptAsync(Byte[], Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[], System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<Tuple<byte[], byte[], string>> EncryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData = null, string algorithm = null, CancellationToken token = null)
    parameters:
    - id: plaintext
      type: System.Byte[]
    - id: iv
      type: System.Byte[]
    - id: authenticationData
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.Byte[],System.String}}
    content.vb: Public Function EncryptAsync(plaintext As Byte(), iv As Byte(), authenticationData As Byte() = Nothing, algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Tuple(Of Byte(), Byte(), String))
  overload: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync*
  nameWithType.vb: SymmetricKey.EncryptAsync(Byte(), Byte(), Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte(), System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: EncryptAsync(Byte(), Byte(), Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: WrapKeyAsync(Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.WrapKeyAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WrapKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 232
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<Tuple<byte[], string>> WrapKeyAsync(byte[] key, string algorithm = null, CancellationToken token = null)
    parameters:
    - id: key
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
    content.vb: Public Function WrapKeyAsync(key As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Tuple(Of Byte(), String))
  overload: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync*
  nameWithType.vb: SymmetricKey.WrapKeyAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: WrapKeyAsync(Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: UnwrapKeyAsync(Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.UnwrapKeyAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnwrapKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<byte[]> UnwrapKeyAsync(byte[] encryptedKey, string algorithm = null, CancellationToken token = null)
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
    content.vb: Public Function UnwrapKeyAsync(encryptedKey As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Byte())
  overload: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync*
  nameWithType.vb: SymmetricKey.UnwrapKeyAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: UnwrapKeyAsync(Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SignAsync(Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.SignAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SignAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 294
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<Tuple<byte[], string>> SignAsync(byte[] digest, string algorithm = null, CancellationToken token = null)
    parameters:
    - id: digest
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
    content.vb: Public Function SignAsync(digest As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Tuple(Of Byte(), String))
  overload: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync*
  nameWithType.vb: SymmetricKey.SignAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: SignAsync(Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  id: VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: VerifyAsync(Byte[], Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.VerifyAsync(Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VerifyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 299
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<bool> VerifyAsync(byte[] digest, byte[] signature, string algorithm = null, CancellationToken token = null)
    parameters:
    - id: digest
      type: System.Byte[]
    - id: signature
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function VerifyAsync(digest As Byte(), signature As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync*
  nameWithType.vb: SymmetricKey.VerifyAsync(Byte(), Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: VerifyAsync(Byte(), Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  id: Dispose
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SymmetricKey.Dispose()
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Dispose()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 306
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Azure.KeyVault.SymmetricKey.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SymmetricKey.Dispose(Boolean)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SymmetricKey.cs
    startLine: 312
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Microsoft.Azure.KeyVault.SymmetricKey.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  isExternal: false
  name: SymmetricKey
  nameWithType: SymmetricKey.SymmetricKey
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Kid*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.Kid
  isExternal: false
  name: Kid
  nameWithType: SymmetricKey.Kid
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Kid
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SymmetricKey.DefaultEncryptionAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  isExternal: false
  name: DefaultKeyWrapAlgorithm
  nameWithType: SymmetricKey.DefaultKeyWrapAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  isExternal: false
  name: DefaultSignatureAlgorithm
  nameWithType: SymmetricKey.DefaultSignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync
  isExternal: false
  name: DecryptAsync
  nameWithType: SymmetricKey.DecryptAsync
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync
  isExternal: false
  name: EncryptAsync
  nameWithType: SymmetricKey.EncryptAsync
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync
- uid: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.Byte[],System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.Byte[],System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Tuple<Byte[], Byte[], String>>
  nameWithType: Task<Tuple<Byte[], Byte[], String>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Byte[], System.Byte[], System.String>>
  nameWithType.vb: Task(Of Tuple(Of Byte(), Byte(), String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Byte(), System.Byte(), System.String))
  name.vb: Task(Of Tuple(Of Byte(), Byte(), String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync
  isExternal: false
  name: WrapKeyAsync
  nameWithType: SymmetricKey.WrapKeyAsync
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync
- uid: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Tuple<Byte[], String>>
  nameWithType: Task<Tuple<Byte[], String>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Byte[], System.String>>
  nameWithType.vb: Task(Of Tuple(Of Byte(), String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Byte(), System.String))
  name.vb: Task(Of Tuple(Of Byte(), String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync
  isExternal: false
  name: UnwrapKeyAsync
  nameWithType: SymmetricKey.UnwrapKeyAsync
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync
- uid: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.SignAsync
  isExternal: false
  name: SignAsync
  nameWithType: SymmetricKey.SignAsync
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync
- uid: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync
  isExternal: false
  name: VerifyAsync
  nameWithType: SymmetricKey.VerifyAsync
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Dispose*
  commentId: Overload:Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  isExternal: false
  name: Dispose
  nameWithType: SymmetricKey.Dispose
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
