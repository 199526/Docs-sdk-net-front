### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  commentId: T:Azure.Batch.Unit.Tests.ClientUnitTestCommon
  id: ClientUnitTestCommon
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountKey
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountName
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyBaseUrl
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyToken
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse``2(System.Func{``0,``1})
  - Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse``3(System.Func{``0,``1,``2})
  langs:
  - csharp
  - vb
  name: ClientUnitTestCommon
  nameWithType: ClientUnitTestCommon
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ClientUnitTestCommon
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 25
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static class ClientUnitTestCommon
    content.vb: Public Module ClientUnitTestCommon
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyBaseUrl
  commentId: F:Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyBaseUrl
  id: DummyBaseUrl
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: DummyBaseUrl
  nameWithType: ClientUnitTestCommon.DummyBaseUrl
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyBaseUrl
  type: Field
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DummyBaseUrl
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 27
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public const string DummyBaseUrl = "testbatch://batch-test.windows-int.net"
    content.vb: Public Const DummyBaseUrl As String = "testbatch://batch-test.windows-int.net"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountName
  commentId: F:Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountName
  id: DummyAccountName
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: DummyAccountName
  nameWithType: ClientUnitTestCommon.DummyAccountName
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountName
  type: Field
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DummyAccountName
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 28
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public const string DummyAccountName = "Dummy"
    content.vb: Public Const DummyAccountName As String = "Dummy"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountKey
  commentId: F:Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountKey
  id: DummyAccountKey
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: DummyAccountKey
  nameWithType: ClientUnitTestCommon.DummyAccountKey
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyAccountKey
  type: Field
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DummyAccountKey
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 29
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public const string DummyAccountKey = "ZmFrZQ=="
    content.vb: Public Const DummyAccountKey As String = "ZmFrZQ=="
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyToken
  commentId: F:Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyToken
  id: DummyToken
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: DummyToken
  nameWithType: ClientUnitTestCommon.DummyToken
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.DummyToken
  type: Field
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DummyToken
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 30
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public const string DummyToken = "ZmFrZQ=="
    content.vb: Public Const DummyToken As String = "ZmFrZQ=="
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential
  commentId: M:Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential
  id: CreateDummySharedKeyCredential
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: CreateDummySharedKeyCredential()
  nameWithType: ClientUnitTestCommon.CreateDummySharedKeyCredential()
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateDummySharedKeyCredential
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 32
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static BatchSharedKeyCredentials CreateDummySharedKeyCredential()
    content.vb: Public Shared Function CreateDummySharedKeyCredential As BatchSharedKeyCredentials
    return:
      type: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
  overload: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient
  commentId: M:Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient
  id: CreateDummyClient
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: CreateDummyClient()
  nameWithType: ClientUnitTestCommon.CreateDummyClient()
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateDummyClient
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 42
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static BatchClient CreateDummyClient()
    content.vb: Public Shared Function CreateDummyClient As BatchClient
    return:
      type: Microsoft.Azure.Batch.BatchClient
  overload: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse``2(System.Func{``0,``1})
  commentId: M:Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse``2(System.Func{``0,``1})
  id: SimulateServiceResponse``2(System.Func{``0,``1})
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: SimulateServiceResponse<TOptions, TResponse>(Func<TOptions, TResponse>)
  nameWithType: ClientUnitTestCommon.SimulateServiceResponse<TOptions, TResponse>(Func<TOptions, TResponse>)
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse<TOptions, TResponse>(System.Func<TOptions, TResponse>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SimulateServiceResponse
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 47
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: 'public static IList<BatchClientBehavior> SimulateServiceResponse<TOptions, TResponse>(Func<TOptions, TResponse> simulator)where TOptions : IOptions, new ()where TResponse : class, IAzureOperationResponse'
    content.vb: Public Shared Function SimulateServiceResponse(Of TOptions As {IOptions, New}, TResponse As {Class, IAzureOperationResponse})(simulator As Func(Of TOptions, TResponse)) As IList(Of BatchClientBehavior)
    parameters:
    - id: simulator
      type: System.Func{{TOptions},{TResponse}}
    typeParameters:
    - id: TOptions
    - id: TResponse
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse*
  nameWithType.vb: ClientUnitTestCommon.SimulateServiceResponse(Of TOptions, TResponse)(Func(Of TOptions, TResponse))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse(Of TOptions, TResponse)(System.Func(Of TOptions, TResponse))
  name.vb: SimulateServiceResponse(Of TOptions, TResponse)(Func(Of TOptions, TResponse))
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse``3(System.Func{``0,``1,``2})
  commentId: M:Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse``3(System.Func{``0,``1,``2})
  id: SimulateServiceResponse``3(System.Func{``0,``1,``2})
  parent: Azure.Batch.Unit.Tests.ClientUnitTestCommon
  langs:
  - csharp
  - vb
  name: SimulateServiceResponse<TParameters, TOptions, TResponse>(Func<TParameters, TOptions, TResponse>)
  nameWithType: ClientUnitTestCommon.SimulateServiceResponse<TParameters, TOptions, TResponse>(Func<TParameters, TOptions, TResponse>)
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse<TParameters, TOptions, TResponse>(System.Func<TParameters, TOptions, TResponse>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SimulateServiceResponse
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/ClientUnitTestCommon.cs
    startLine: 64
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: 'public static IList<BatchClientBehavior> SimulateServiceResponse<TParameters, TOptions, TResponse>(Func<TParameters, TOptions, TResponse> simulator)where TOptions : IOptions, new ()where TResponse : class, IAzureOperationResponse'
    content.vb: Public Shared Function SimulateServiceResponse(Of TParameters, TOptions As {IOptions, New}, TResponse As {Class, IAzureOperationResponse})(simulator As Func(Of TParameters, TOptions, TResponse)) As IList(Of BatchClientBehavior)
    parameters:
    - id: simulator
      type: System.Func{{TParameters},{TOptions},{TResponse}}
    typeParameters:
    - id: TParameters
    - id: TOptions
    - id: TResponse
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse*
  nameWithType.vb: ClientUnitTestCommon.SimulateServiceResponse(Of TParameters, TOptions, TResponse)(Func(Of TParameters, TOptions, TResponse))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse(Of TParameters, TOptions, TResponse)(System.Func(Of TParameters, TOptions, TResponse))
  name.vb: SimulateServiceResponse(Of TParameters, TOptions, TResponse)(Func(Of TParameters, TOptions, TResponse))
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential*
  commentId: Overload:Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential
  isExternal: false
  name: CreateDummySharedKeyCredential
  nameWithType: ClientUnitTestCommon.CreateDummySharedKeyCredential
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummySharedKeyCredential
- uid: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
  commentId: T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
  parent: Microsoft.Azure.Batch.Auth
  isExternal: false
  name: BatchSharedKeyCredentials
  nameWithType: BatchSharedKeyCredentials
  fullName: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
- uid: Microsoft.Azure.Batch.Auth
  commentId: N:Microsoft.Azure.Batch.Auth
  isExternal: false
  name: Microsoft.Azure.Batch.Auth
  nameWithType: Microsoft.Azure.Batch.Auth
  fullName: Microsoft.Azure.Batch.Auth
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient*
  commentId: Overload:Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient
  isExternal: false
  name: CreateDummyClient
  nameWithType: ClientUnitTestCommon.CreateDummyClient
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.CreateDummyClient
- uid: Microsoft.Azure.Batch.BatchClient
  commentId: T:Microsoft.Azure.Batch.BatchClient
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClient
  nameWithType: BatchClient
  fullName: Microsoft.Azure.Batch.BatchClient
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse*
  commentId: Overload:Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse
  isExternal: false
  name: SimulateServiceResponse
  nameWithType: ClientUnitTestCommon.SimulateServiceResponse
  fullName: Azure.Batch.Unit.Tests.ClientUnitTestCommon.SimulateServiceResponse
- uid: System.Func{{TOptions},{TResponse}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  name: Func<TOptions, TResponse>
  nameWithType: Func<TOptions, TResponse>
  fullName: System.Func<TOptions, TResponse>
  nameWithType.vb: Func(Of TOptions, TResponse)
  fullName.vb: System.Func(Of TOptions, TResponse)
  name.vb: Func(Of TOptions, TResponse)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func{{TParameters},{TOptions},{TResponse}}
  commentId: T:System.Func{``0,``1,``2}
  parent: System
  definition: System.Func`3
  name: Func<TParameters, TOptions, TResponse>
  nameWithType: Func<TParameters, TOptions, TResponse>
  fullName: System.Func<TParameters, TOptions, TResponse>
  nameWithType.vb: Func(Of TParameters, TOptions, TResponse)
  fullName.vb: System.Func(Of TParameters, TOptions, TResponse)
  name.vb: Func(Of TParameters, TOptions, TResponse)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
