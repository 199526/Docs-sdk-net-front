### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.OSDisk
  commentId: T:Microsoft.Azure.Batch.OSDisk
  id: OSDisk
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.OSDisk.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.CachingType})
  - Microsoft.Azure.Batch.OSDisk.Caching
  - Microsoft.Azure.Batch.OSDisk.ImageUris
  langs:
  - csharp
  - vb
  name: OSDisk
  nameWithType: OSDisk
  fullName: Microsoft.Azure.Batch.OSDisk
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OSDisk
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
    startLine: 22
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA reference to an OS disk image.\n"
  example: []
  syntax:
    content: 'public class OSDisk : ITransportObjectProvider<OSDisk>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class OSDisk
          Implements ITransportObjectProvider(Of OSDisk), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.OSDisk.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.CachingType})
  commentId: M:Microsoft.Azure.Batch.OSDisk.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.CachingType})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.CachingType})'
  parent: Microsoft.Azure.Batch.OSDisk
  langs:
  - csharp
  - vb
  name: OSDisk(IEnumerable<String>, Nullable<CachingType>)
  nameWithType: OSDisk.OSDisk(IEnumerable<String>, Nullable<CachingType>)
  fullName: Microsoft.Azure.Batch.OSDisk.OSDisk(System.Collections.Generic.IEnumerable<System.String>, System.Nullable<Microsoft.Azure.Batch.Common.CachingType>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
    startLine: 33
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.OSDisk\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OSDisk(IEnumerable<string> imageUris, CachingType? caching = null)
    content.vb: Public Sub New(imageUris As IEnumerable(Of String), caching As CachingType? = Nothing)
    parameters:
    - id: imageUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The collection of Virtual Hard Disk (VHD) URIs.
    - id: caching
      type: System.Nullable{Microsoft.Azure.Batch.Common.CachingType}
      description: The type of caching to enable for the OS disk.
  overload: Microsoft.Azure.Batch.OSDisk.#ctor*
  nameWithType.vb: OSDisk.OSDisk(IEnumerable(Of String), Nullable(Of CachingType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.OSDisk.OSDisk(System.Collections.Generic.IEnumerable(Of System.String), System.Nullable(Of Microsoft.Azure.Batch.Common.CachingType))
  name.vb: OSDisk(IEnumerable(Of String), Nullable(Of CachingType))
- uid: Microsoft.Azure.Batch.OSDisk.Caching
  commentId: P:Microsoft.Azure.Batch.OSDisk.Caching
  id: Caching
  parent: Microsoft.Azure.Batch.OSDisk
  langs:
  - csharp
  - vb
  name: Caching
  nameWithType: OSDisk.Caching
  fullName: Microsoft.Azure.Batch.OSDisk.Caching
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Caching
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
    startLine: 54
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the type of caching to enable for the OS disk.\n"
  example: []
  syntax:
    content: public CachingType? Caching { get; }
    content.vb: Public ReadOnly Property Caching As CachingType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.CachingType}
  overload: Microsoft.Azure.Batch.OSDisk.Caching*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.OSDisk.ImageUris
  commentId: P:Microsoft.Azure.Batch.OSDisk.ImageUris
  id: ImageUris
  parent: Microsoft.Azure.Batch.OSDisk
  langs:
  - csharp
  - vb
  name: ImageUris
  nameWithType: OSDisk.ImageUris
  fullName: Microsoft.Azure.Batch.OSDisk.ImageUris
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageUris
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/Generated/OSDisk.cs
    startLine: 69
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the collection of Virtual Hard Disk (VHD) URIs.\n"
  remarks: "\nAll the VHDs must be identical and must reside in an Azure Storage account within the same subscription and same \nregion as the Batch account. For best performance, it is recommended that each VHD resides in a separate Azure \nStorage account. Each VHD can serve upto 20 Windows compute nodes or 40 Linux compute nodes. You must supply \nenough VHD URIs to satisfy the 'targetDedicated' property of the pool. If you do not supply enough VHD URIs, \nthe pool will partially allocate compute nodes, and a resize error will occur.\n"
  example: []
  syntax:
    content: public IEnumerable<string> ImageUris { get; }
    content.vb: Public ReadOnly Property ImageUris As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  overload: Microsoft.Azure.Batch.OSDisk.ImageUris*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.OSDisk
  commentId: T:Microsoft.Azure.Batch.OSDisk
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: OSDisk
  nameWithType: OSDisk
  fullName: Microsoft.Azure.Batch.OSDisk
- uid: Microsoft.Azure.Batch.OSDisk.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.OSDisk.#ctor
  isExternal: false
  name: OSDisk
  nameWithType: OSDisk.OSDisk
  fullName: Microsoft.Azure.Batch.OSDisk.OSDisk
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Common.CachingType}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.CachingType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CachingType>
  nameWithType: Nullable<CachingType>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.CachingType>
  nameWithType.vb: Nullable(Of CachingType)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.CachingType)
  name.vb: Nullable(Of CachingType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.CachingType
    name: CachingType
    nameWithType: CachingType
    fullName: Microsoft.Azure.Batch.Common.CachingType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.CachingType
    name: CachingType
    nameWithType: CachingType
    fullName: Microsoft.Azure.Batch.Common.CachingType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.OSDisk.Caching*
  commentId: Overload:Microsoft.Azure.Batch.OSDisk.Caching
  isExternal: false
  name: Caching
  nameWithType: OSDisk.Caching
  fullName: Microsoft.Azure.Batch.OSDisk.Caching
- uid: Microsoft.Azure.Batch.OSDisk.ImageUris*
  commentId: Overload:Microsoft.Azure.Batch.OSDisk.ImageUris
  isExternal: false
  name: ImageUris
  nameWithType: OSDisk.ImageUris
  fullName: Microsoft.Azure.Batch.OSDisk.ImageUris
