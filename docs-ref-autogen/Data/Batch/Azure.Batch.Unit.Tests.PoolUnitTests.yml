### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.PoolUnitTests
  commentId: T:Azure.Batch.Unit.Tests.PoolUnitTests
  id: PoolUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError
  - Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest
  - Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask
  - Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties
  - Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes
  langs:
  - csharp
  - vb
  name: PoolUnitTests
  nameWithType: PoolUnitTests
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolUnitTests
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
    startLine: 32
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class PoolUnitTests
    content.vb: Public Class PoolUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest
  commentId: M:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest
  id: GetPoolsListTest
  parent: Azure.Batch.Unit.Tests.PoolUnitTests
  langs:
  - csharp
  - vb
  name: GetPoolsListTest()
  nameWithType: PoolUnitTests.GetPoolsListTest()
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPoolsListTest
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
    startLine: 34
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void GetPoolsListTest()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub GetPoolsListTest
  overload: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties
  commentId: M:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties
  id: GetPoolTestNonNullProperties
  parent: Azure.Batch.Unit.Tests.PoolUnitTests
  langs:
  - csharp
  - vb
  name: GetPoolTestNonNullProperties()
  nameWithType: PoolUnitTests.GetPoolTestNonNullProperties()
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPoolTestNonNullProperties
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
    startLine: 75
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void GetPoolTestNonNullProperties()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub GetPoolTestNonNullProperties
  overload: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError
  commentId: M:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError
  id: GetPoolResizeError
  parent: Azure.Batch.Unit.Tests.PoolUnitTests
  langs:
  - csharp
  - vb
  name: GetPoolResizeError()
  nameWithType: PoolUnitTests.GetPoolResizeError()
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPoolResizeError
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
    startLine: 171
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void GetPoolResizeError()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub GetPoolResizeError
  overload: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask
  commentId: M:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask
  id: GetPoolStartTask
  parent: Azure.Batch.Unit.Tests.PoolUnitTests
  langs:
  - csharp
  - vb
  name: GetPoolStartTask()
  nameWithType: PoolUnitTests.GetPoolStartTask()
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPoolStartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
    startLine: 228
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void GetPoolStartTask()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub GetPoolStartTask
  overload: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes
  commentId: M:Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes
  id: ListComputeNodes
  parent: Azure.Batch.Unit.Tests.PoolUnitTests
  langs:
  - csharp
  - vb
  name: ListComputeNodes()
  nameWithType: PoolUnitTests.ListComputeNodes()
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListComputeNodes
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/PoolUnitTests.cs
    startLine: 274
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ListComputeNodes()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ListComputeNodes
  overload: Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest*
  commentId: Overload:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest
  isExternal: false
  name: GetPoolsListTest
  nameWithType: PoolUnitTests.GetPoolsListTest
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolsListTest
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties*
  commentId: Overload:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties
  isExternal: false
  name: GetPoolTestNonNullProperties
  nameWithType: PoolUnitTests.GetPoolTestNonNullProperties
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolTestNonNullProperties
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError*
  commentId: Overload:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError
  isExternal: false
  name: GetPoolResizeError
  nameWithType: PoolUnitTests.GetPoolResizeError
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolResizeError
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask*
  commentId: Overload:Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask
  isExternal: false
  name: GetPoolStartTask
  nameWithType: PoolUnitTests.GetPoolStartTask
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.GetPoolStartTask
- uid: Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes*
  commentId: Overload:Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes
  isExternal: false
  name: ListComputeNodes
  nameWithType: PoolUnitTests.ListComputeNodes
  fullName: Azure.Batch.Unit.Tests.PoolUnitTests.ListComputeNodes
