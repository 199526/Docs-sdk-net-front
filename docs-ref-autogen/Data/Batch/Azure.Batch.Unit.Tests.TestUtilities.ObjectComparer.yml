### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer
  commentId: T:Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer
  id: ObjectComparer
  parent: Azure.Batch.Unit.Tests.TestUtilities
  children:
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule},System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping},System.Func{System.Exception,System.Boolean})
  - Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: ObjectComparer
  nameWithType: ObjectComparer
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectComparer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ObjectComparer
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectComparer.cs
    startLine: 22
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public class ObjectComparer
    content.vb: Public Class ObjectComparer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule},System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping},System.Func{System.Exception,System.Boolean})
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule},System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping},System.Func{System.Exception,System.Boolean})
  id: '#ctor(System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule},System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping},System.Func{System.Exception,System.Boolean})'
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer
  langs:
  - csharp
  - vb
  name: ObjectComparer(IList<ComparisonRule>, IList<ComparerPropertyMapping>, Func<Exception, Boolean>)
  nameWithType: ObjectComparer.ObjectComparer(IList<ComparisonRule>, IList<ComparerPropertyMapping>, Func<Exception, Boolean>)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.ObjectComparer(System.Collections.Generic.IList<Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule>, System.Collections.Generic.IList<Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping>, System.Func<System.Exception, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectComparer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectComparer.cs
    startLine: 28
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public ObjectComparer(IList<ComparisonRule> comparisonRules = null, IList<ComparerPropertyMapping> propertyMappings = null, Func<Exception, bool> shouldThrowOnPropertyReadException = null)
    content.vb: Public Sub New(comparisonRules As IList(Of ComparisonRule) = Nothing, propertyMappings As IList(Of ComparerPropertyMapping) = Nothing, shouldThrowOnPropertyReadException As Func(Of Exception, Boolean) = Nothing)
    parameters:
    - id: comparisonRules
      type: System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule}
    - id: propertyMappings
      type: System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping}
    - id: shouldThrowOnPropertyReadException
      type: System.Func{System.Exception,System.Boolean}
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.#ctor*
  nameWithType.vb: ObjectComparer.ObjectComparer(IList(Of ComparisonRule), IList(Of ComparerPropertyMapping), Func(Of Exception, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.ObjectComparer(System.Collections.Generic.IList(Of Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule), System.Collections.Generic.IList(Of Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping), System.Func(Of System.Exception, System.Boolean))
  name.vb: ObjectComparer(IList(Of ComparisonRule), IList(Of ComparerPropertyMapping), Func(Of Exception, Boolean))
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality(System.Object,System.Object)
  commentId: M:Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality(System.Object,System.Object)
  id: CheckEquality(System.Object,System.Object)
  parent: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer
  langs:
  - csharp
  - vb
  name: CheckEquality(Object, Object)
  nameWithType: ObjectComparer.CheckEquality(Object, Object)
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectComparer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckEquality
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TestUtilities/ObjectComparer.cs
    startLine: 58
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests.TestUtilities
  syntax:
    content: public ObjectComparer.CheckEqualityResult CheckEquality(object o1, object o2)
    content.vb: Public Function CheckEquality(o1 As Object, o2 As Object) As ObjectComparer.CheckEqualityResult
    parameters:
    - id: o1
      type: System.Object
    - id: o2
      type: System.Object
    return:
      type: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  overload: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests.TestUtilities
  commentId: N:Azure.Batch.Unit.Tests.TestUtilities
  isExternal: false
  name: Azure.Batch.Unit.Tests.TestUtilities
  nameWithType: Azure.Batch.Unit.Tests.TestUtilities
  fullName: Azure.Batch.Unit.Tests.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.#ctor*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.#ctor
  isExternal: false
  name: ObjectComparer
  nameWithType: ObjectComparer.ObjectComparer
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.ObjectComparer
- uid: System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule}
  commentId: T:System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ComparisonRule>
  nameWithType: IList<ComparisonRule>
  fullName: System.Collections.Generic.IList<Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule>
  nameWithType.vb: IList(Of ComparisonRule)
  fullName.vb: System.Collections.Generic.IList(Of Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule)
  name.vb: IList(Of ComparisonRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
    name: ComparisonRule
    nameWithType: ComparisonRule
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
    name: ComparisonRule
    nameWithType: ComparisonRule
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparisonRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping}
  commentId: T:System.Collections.Generic.IList{Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ComparerPropertyMapping>
  nameWithType: IList<ComparerPropertyMapping>
  fullName: System.Collections.Generic.IList<Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping>
  nameWithType.vb: IList(Of ComparerPropertyMapping)
  fullName.vb: System.Collections.Generic.IList(Of Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping)
  name.vb: IList(Of ComparerPropertyMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping
    name: ComparerPropertyMapping
    nameWithType: ComparerPropertyMapping
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping
    name: ComparerPropertyMapping
    nameWithType: ComparerPropertyMapping
    fullName: Azure.Batch.Unit.Tests.TestUtilities.ComparerPropertyMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Exception,System.Boolean}
  commentId: T:System.Func{System.Exception,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<Exception, Boolean>
  nameWithType: Func<Exception, Boolean>
  fullName: System.Func<System.Exception, System.Boolean>
  nameWithType.vb: Func(Of Exception, Boolean)
  fullName.vb: System.Func(Of System.Exception, System.Boolean)
  name.vb: Func(Of Exception, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality*
  commentId: Overload:Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality
  isExternal: false
  name: CheckEquality
  nameWithType: ObjectComparer.CheckEquality
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEquality
- uid: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  commentId: T:Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
  parent: Azure.Batch.Unit.Tests.TestUtilities
  isExternal: false
  name: ObjectComparer.CheckEqualityResult
  nameWithType: ObjectComparer.CheckEqualityResult
  fullName: Azure.Batch.Unit.Tests.TestUtilities.ObjectComparer.CheckEqualityResult
