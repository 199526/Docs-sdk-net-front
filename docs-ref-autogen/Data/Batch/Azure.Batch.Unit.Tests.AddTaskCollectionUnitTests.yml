### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  commentId: T:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  id: AddTaskCollectionUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException(System.Int32)
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  - Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  langs:
  - csharp
  - vb
  name: AddTaskCollectionUnitTests
  nameWithType: AddTaskCollectionUnitTests
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTaskCollectionUnitTests
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 29
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class AddTaskCollectionUnitTests
    content.vb: Public Class AddTaskCollectionUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper)'
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: AddTaskCollectionUnitTests(ITestOutputHelper)
  nameWithType: AddTaskCollectionUnitTests.AddTaskCollectionUnitTests(ITestOutputHelper)
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionUnitTests(Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 33
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public AddTaskCollectionUnitTests(ITestOutputHelper testOutputHelper)
    content.vb: Public Sub New(testOutputHelper As ITestOutputHelper)
    parameters:
    - id: testOutputHelper
      type: Xunit.Abstractions.ITestOutputHelper
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows
  id: AddTaskCollectionNoHandlerThrows
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: AddTaskCollectionNoHandlerThrows()
  nameWithType: AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows()
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTaskCollectionNoHandlerThrows
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 38
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task AddTaskCollectionNoHandlerThrows()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function AddTaskCollectionNoHandlerThrows As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows
  id: AddTaskCollectionNullTaskThrows
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: AddTaskCollectionNullTaskThrows()
  nameWithType: AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows()
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTaskCollectionNullTaskThrows
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 56
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task AddTaskCollectionNullTaskThrows()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function AddTaskCollectionNullTaskThrows As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException(System.Int32)
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException(System.Int32)
  id: ExceptionOnRestOperationIsWrappedInParallelOperationsException(System.Int32)
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: ExceptionOnRestOperationIsWrappedInParallelOperationsException(Int32)
  nameWithType: AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException(Int32)
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException(System.Int32)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExceptionOnRestOperationIsWrappedInParallelOperationsException
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 69
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{1})]

      [InlineData(new object[]{2})]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExceptionOnRestOperationIsWrappedInParallelOperationsException(int operationCount)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {1})>

      <InlineData(New Object() {2})>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExceptionOnRestOperationIsWrappedInParallelOperationsException(operationCount As Integer) As Task
    parameters:
    - id: operationCount
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  id: OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: OperationCanceledExceptionRestOperations_OnlyOneIsSeen()
  nameWithType: AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen()
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OperationCanceledExceptionRestOperations_OnlyOneIsSeen
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 85
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task OperationCanceledExceptionRestOperations_OnlyOneIsSeen()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function OperationCanceledExceptionRestOperations_OnlyOneIsSeen As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  id: ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException()
  nameWithType: AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException()
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 96
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails
  commentId: M:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails
  id: ExceptionOnClientError_ResultingExceptionContainsDetails
  parent: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests
  langs:
  - csharp
  - vb
  name: ExceptionOnClientError_ResultingExceptionContainsDetails()
  nameWithType: AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails()
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExceptionOnClientError_ResultingExceptionContainsDetails
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/AddTaskCollectionUnitTests.cs
    startLine: 124
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task ExceptionOnClientError_ResultingExceptionContainsDetails()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function ExceptionOnClientError_ResultingExceptionContainsDetails As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.#ctor*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.#ctor
  isExternal: false
  name: AddTaskCollectionUnitTests
  nameWithType: AddTaskCollectionUnitTests.AddTaskCollectionUnitTests
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionUnitTests
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows
  isExternal: false
  name: AddTaskCollectionNoHandlerThrows
  nameWithType: AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNoHandlerThrows
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows
  isExternal: false
  name: AddTaskCollectionNullTaskThrows
  nameWithType: AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.AddTaskCollectionNullTaskThrows
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException
  isExternal: false
  name: ExceptionOnRestOperationIsWrappedInParallelOperationsException
  nameWithType: AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnRestOperationIsWrappedInParallelOperationsException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  isExternal: false
  name: OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  nameWithType: AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.OperationCanceledExceptionRestOperations_OnlyOneIsSeen
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  isExternal: false
  name: ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  nameWithType: AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException
- uid: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails*
  commentId: Overload:Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails
  isExternal: false
  name: ExceptionOnClientError_ResultingExceptionContainsDetails
  nameWithType: AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails
  fullName: Azure.Batch.Unit.Tests.AddTaskCollectionUnitTests.ExceptionOnClientError_ResultingExceptionContainsDetails
