### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  id: NetworkConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor(System.String)
  - Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId
  langs:
  - csharp
  - vb
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
    startLine: 15
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nThe network configuration for a pool.\n"
  example: []
  syntax:
    content: public class NetworkConfiguration
    content.vb: Public Class NetworkConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: NetworkConfiguration()
  nameWithType: NetworkConfiguration.NetworkConfiguration()
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.NetworkConfiguration()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
    startLine: 20
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the NetworkConfiguration class.\n"
  example: []
  syntax:
    content: public NetworkConfiguration()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor(System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: NetworkConfiguration(String)
  nameWithType: NetworkConfiguration.NetworkConfiguration(String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.NetworkConfiguration(System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
    startLine: 29
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the NetworkConfiguration class.\n"
  example: []
  syntax:
    content: public NetworkConfiguration(string subnetId = null)
    parameters:
    - id: subnetId
      type: System.String
      description: >-
        The ARM resource identifier of the virtual

        network subnet which the compute nodes of the pool will join. This

        is of the form

        /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
    content.vb: Public Sub New(subnetId As String = Nothing)
  overload: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId
  id: SubnetId
  parent: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: SubnetId
  nameWithType: NetworkConfiguration.SubnetId
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubnetId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/NetworkConfiguration.cs
    startLine: 57
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the ARM resource identifier of the virtual network\nsubnet which the compute nodes of the pool will join. This is of\nthe form\n/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\n"
  remarks: "\nThe virtual network must be in the same region and subscription as\nthe Azure Batch account. The specified subnet should have enough\nfree IP addresses to accommodate the number of nodes in the pool.\nIf the subnet doesn't have enough free IP addresses, the pool will\npartially allocate compute nodes, and a resize error will occur.\nThe 'MicrosoftAzureBatch' service principal must have the 'Classic\nVirtual Machine Contributor' Role-Based Access Control (RBAC) role\nfor the specified VNet. The specified subnet must allow\ncommunication from the Azure Batch service to be able to schedule\ntasks on the compute nodes. This can be verified by checking if the\nspecified VNet has any associated Network Security Groups (NSG). If\ncommunication to the compute nodes in the specified subnet is\ndenied by an NSG, then the Batch service will set the state of the\ncompute nodes to unusable. This property can only be specified for\npools created with a cloudServiceConfiguration.\n"
  example: []
  syntax:
    content: public string SubnetId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SubnetId As String
  overload: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor
  isExternal: false
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.NetworkConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId
  isExternal: false
  name: SubnetId
  nameWithType: NetworkConfiguration.SubnetId
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId
