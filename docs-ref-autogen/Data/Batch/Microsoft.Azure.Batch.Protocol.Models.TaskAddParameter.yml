### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  id: TaskAddParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.UserIdentity,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate
  langs:
  - csharp
  - vb
  name: TaskAddParameter
  nameWithType: TaskAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskAddParameter
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 15
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nAn Azure Batch task to add.\n"
  example: []
  syntax:
    content: public class TaskAddParameter
    content.vb: Public Class TaskAddParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: TaskAddParameter()
  nameWithType: TaskAddParameter.TaskAddParameter()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.TaskAddParameter()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 20
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskAddParameter class.\n"
  example: []
  syntax:
    content: public TaskAddParameter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.UserIdentity,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.UserIdentity,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  id: '#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.UserIdentity,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: TaskAddParameter(String, String, String, ExitConditions, IList<ResourceFile>, IList<EnvironmentSetting>, AffinityInformation, TaskConstraints, UserIdentity, MultiInstanceSettings, TaskDependencies, IList<ApplicationPackageReference>, AuthenticationTokenSettings)
  nameWithType: TaskAddParameter.TaskAddParameter(String, String, String, ExitConditions, IList<ResourceFile>, IList<EnvironmentSetting>, AffinityInformation, TaskConstraints, UserIdentity, MultiInstanceSettings, TaskDependencies, IList<ApplicationPackageReference>, AuthenticationTokenSettings)
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.TaskAddParameter(System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.ExitConditions, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, Microsoft.Azure.Batch.Protocol.Models.AffinityInformation, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, Microsoft.Azure.Batch.Protocol.Models.UserIdentity, Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings, Microsoft.Azure.Batch.Protocol.Models.TaskDependencies, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>, Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 54
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskAddParameter class.\n"
  example: []
  syntax:
    content: public TaskAddParameter(string id, string commandLine, string displayName = null, ExitConditions exitConditions = null, IList<ResourceFile> resourceFiles = null, IList<EnvironmentSetting> environmentSettings = null, AffinityInformation affinityInfo = null, TaskConstraints constraints = null, UserIdentity userIdentity = null, MultiInstanceSettings multiInstanceSettings = null, TaskDependencies dependsOn = null, IList<ApplicationPackageReference> applicationPackageReferences = null, AuthenticationTokenSettings authenticationTokenSettings = null)
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the task within

        the job.
    - id: commandLine
      type: System.String
      description: The command line of the task.
    - id: displayName
      type: System.String
      description: A display name for the task.
    - id: exitConditions
      type: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
      description: >-
        How the Batch service should respond

        when the task completes.
    - id: resourceFiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
      description: >-
        A list of files that the Batch service

        will download to the compute node before running the command

        line.
    - id: environmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        A list of environment variable

        settings for the task.
    - id: affinityInfo
      type: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
      description: >-
        A locality hint that can be used by the

        Batch service to select a compute node on which to start the new

        task.
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
      description: >-
        The execution constraints that apply to

        this task.
    - id: userIdentity
      type: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
      description: >-
        The user identity under which the task

        runs.
    - id: multiInstanceSettings
      type: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
      description: >-
        An object that indicates that

        the task is a multi-instance task, and contains information about

        how to run the multi-instance task.
    - id: dependsOn
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
      description: >-
        The tasks that this task depends

        on.
    - id: applicationPackageReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
      description: >-
        A list of application

        packages that the Batch service will deploy to the compute node

        before running the command line.
    - id: authenticationTokenSettings
      type: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
      description: >-
        The settings for an

        authentication token that the task can use to perform Batch service

        operations.
    content.vb: Public Sub New(id As String, commandLine As String, displayName As String = Nothing, exitConditions As ExitConditions = Nothing, resourceFiles As IList(Of ResourceFile) = Nothing, environmentSettings As IList(Of EnvironmentSetting) = Nothing, affinityInfo As AffinityInformation = Nothing, constraints As TaskConstraints = Nothing, userIdentity As UserIdentity = Nothing, multiInstanceSettings As MultiInstanceSettings = Nothing, dependsOn As TaskDependencies = Nothing, applicationPackageReferences As IList(Of ApplicationPackageReference) = Nothing, authenticationTokenSettings As AuthenticationTokenSettings = Nothing)
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor*
  nameWithType.vb: TaskAddParameter.TaskAddParameter(String, String, String, ExitConditions, IList(Of ResourceFile), IList(Of EnvironmentSetting), AffinityInformation, TaskConstraints, UserIdentity, MultiInstanceSettings, TaskDependencies, IList(Of ApplicationPackageReference), AuthenticationTokenSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.TaskAddParameter(System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.ExitConditions, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), Microsoft.Azure.Batch.Protocol.Models.AffinityInformation, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, Microsoft.Azure.Batch.Protocol.Models.UserIdentity, Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings, Microsoft.Azure.Batch.Protocol.Models.TaskDependencies, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference), Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  name.vb: TaskAddParameter(String, String, String, ExitConditions, IList(Of ResourceFile), IList(Of EnvironmentSetting), AffinityInformation, TaskConstraints, UserIdentity, MultiInstanceSettings, TaskDependencies, IList(Of ApplicationPackageReference), AuthenticationTokenSettings)
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TaskAddParameter.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 82
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the task within the\njob.\n"
  remarks: "\nThe ID can contain any combination of alphanumeric characters\nincluding hyphens and underscores, and cannot contain more than 64\ncharacters. The ID is case-preserving and case-insensitive (that\nis, you may not have two IDs within a job that differ only by\ncase).\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: TaskAddParameter.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 92
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a display name for the task.\n"
  remarks: "\nThe display name need not be unique and can contain any Unicode\ncharacters up to a maximum length of 1024.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: TaskAddParameter.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 108
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the command line of the task.\n"
  remarks: "\nFor multi-instance tasks, the command line is executed as the\nprimary task, after the primary task and all subtasks have finished\nexecuting the coordination command line. The command line does not\nrun under a shell, and therefore cannot take advantage of shell\nfeatures such as environment variable expansion. If you want to\ntake advantage of such features, you should invoke the shell in the\ncommand line, for example using \"cmd /c MyCommand\" in Windows or\n\"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: public string CommandLine { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CommandLine As String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions
  id: ExitConditions
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: ExitConditions
  nameWithType: TaskAddParameter.ExitConditions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitConditions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 115
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets how the Batch service should respond when the task\ncompletes.\n"
  example: []
  syntax:
    content: public ExitConditions ExitConditions { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
    content.vb: Public Property ExitConditions As ExitConditions
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: TaskAddParameter.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 127
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of files that the Batch service will download\nto the compute node before running the command line.\n"
  remarks: "\nFor multi-instance tasks, the resource files will only be\ndownloaded to the compute node on which the primary task is\nexecuted.\n"
  example: []
  syntax:
    content: public IList<ResourceFile> ResourceFiles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
    content.vb: Public Property ResourceFiles As IList(Of ResourceFile)
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: TaskAddParameter.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 133
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of environment variable settings for the task.\n"
  example: []
  syntax:
    content: public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
    content.vb: Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo
  id: AffinityInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: AffinityInfo
  nameWithType: TaskAddParameter.AffinityInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AffinityInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 140
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a locality hint that can be used by the Batch service\nto select a compute node on which to start the new task.\n"
  example: []
  syntax:
    content: public AffinityInformation AffinityInfo { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
    content.vb: Public Property AffinityInfo As AffinityInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: TaskAddParameter.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 151
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the execution constraints that apply to this task.\n"
  remarks: "\nIf you do not specify constraints, the maxTaskRetryCount is the\nmaxTaskRetryCount specified for the job, and the maxWallClockTime\nand retentionTime are infinite.\n"
  example: []
  syntax:
    content: public TaskConstraints Constraints { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
    content.vb: Public Property Constraints As TaskConstraints
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity
  id: UserIdentity
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: UserIdentity
  nameWithType: TaskAddParameter.UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UserIdentity
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 161
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the user identity under which the task runs.\n"
  remarks: "\nIf omitted, the task runs as a non-administrative user unique to\nthe task.\n"
  example: []
  syntax:
    content: public UserIdentity UserIdentity { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
    content.vb: Public Property UserIdentity As UserIdentity
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings
  id: MultiInstanceSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: MultiInstanceSettings
  nameWithType: TaskAddParameter.MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MultiInstanceSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 169
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets an object that indicates that the task is a\nmulti-instance task, and contains information about how to run the\nmulti-instance task.\n"
  example: []
  syntax:
    content: public MultiInstanceSettings MultiInstanceSettings { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
    content.vb: Public Property MultiInstanceSettings As MultiInstanceSettings
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn
  id: DependsOn
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: DependsOn
  nameWithType: TaskAddParameter.DependsOn
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DependsOn
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 183
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the tasks that this task depends on.\n"
  remarks: "\nThis task will not be scheduled until all tasks that it depends on\nhave completed successfully. If any of those tasks fail and exhaust\ntheir retry counts, this task will never be scheduled. If the job\ndoes not have usesTaskDependencies set to true, and this element is\npresent, the request fails with error code\nTaskDependenciesNotSpecifiedOnJob.\n"
  example: []
  syntax:
    content: public TaskDependencies DependsOn { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
    content.vb: Public Property DependsOn As TaskDependencies
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: TaskAddParameter.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 190
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of application packages that the Batch service\nwill deploy to the compute node before running the command line.\n"
  example: []
  syntax:
    content: public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
    content.vb: Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings
  id: AuthenticationTokenSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: AuthenticationTokenSettings
  nameWithType: TaskAddParameter.AuthenticationTokenSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AuthenticationTokenSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 207
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the settings for an authentication token that the task\ncan use to perform Batch service operations.\n"
  remarks: "\nIf this property is set, the Batch service provides the task with\nan authentication token which can be used to authenticate Batch\nservice operations without requiring an account access key. The\ntoken is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\nvariable. The operations that the task can carry out using the\ntoken depend on the settings. For example, a task can request job\npermissions in order to add other tasks to the job, or check the\nstatus of the job or of other tasks under the job.\n"
  example: []
  syntax:
    content: public AuthenticationTokenSettings AuthenticationTokenSettings { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
    content.vb: Public Property AuthenticationTokenSettings As AuthenticationTokenSettings
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: TaskAddParameter.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/TaskAddParameter.cs
    startLine: 216
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor
  isExternal: false
  name: TaskAddParameter
  nameWithType: TaskAddParameter.TaskAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.TaskAddParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ExitConditions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ExitConditions
  nameWithType: ExitConditions
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: AffinityInformation
  nameWithType: AffinityInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
- uid: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: UserIdentity
  nameWithType: UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
- uid: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: MultiInstanceSettings
  nameWithType: MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskDependencies
  nameWithType: TaskDependencies
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: AuthenticationTokenSettings
  nameWithType: AuthenticationTokenSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id
  isExternal: false
  name: Id
  nameWithType: TaskAddParameter.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: TaskAddParameter.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: TaskAddParameter.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions
  isExternal: false
  name: ExitConditions
  nameWithType: TaskAddParameter.ExitConditions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ExitConditions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: TaskAddParameter.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: TaskAddParameter.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo
  isExternal: false
  name: AffinityInfo
  nameWithType: TaskAddParameter.AffinityInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints
  isExternal: false
  name: Constraints
  nameWithType: TaskAddParameter.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity
  isExternal: false
  name: UserIdentity
  nameWithType: TaskAddParameter.UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.UserIdentity
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings
  isExternal: false
  name: MultiInstanceSettings
  nameWithType: TaskAddParameter.MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn
  isExternal: false
  name: DependsOn
  nameWithType: TaskAddParameter.DependsOn
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: TaskAddParameter.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ApplicationPackageReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings
  isExternal: false
  name: AuthenticationTokenSettings
  nameWithType: TaskAddParameter.AuthenticationTokenSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AuthenticationTokenSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate
  isExternal: false
  name: Validate
  nameWithType: TaskAddParameter.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate
