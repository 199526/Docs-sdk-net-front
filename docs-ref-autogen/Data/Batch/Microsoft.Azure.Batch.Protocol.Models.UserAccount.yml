### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.UserAccount
  id: UserAccount
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel},System.String)
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey
  - Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate
  langs:
  - csharp
  - vb
  name: UserAccount
  nameWithType: UserAccount
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UserAccount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 15
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nProperties used to create a user on an Azure Batch node.\n"
  example: []
  syntax:
    content: public class UserAccount
    content.vb: Public Class UserAccount
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: UserAccount()
  nameWithType: UserAccount.UserAccount()
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.UserAccount()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 20
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the UserAccount class.\n"
  example: []
  syntax:
    content: public UserAccount()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel},System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel},System.String)
  id: '#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel},System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: UserAccount(String, String, Nullable<ElevationLevel>, String)
  nameWithType: UserAccount.UserAccount(String, String, Nullable<ElevationLevel>, String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.UserAccount(System.String, System.String, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.ElevationLevel>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 31
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the UserAccount class.\n"
  example: []
  syntax:
    content: public UserAccount(string name, string password, ElevationLevel? elevationLevel = null, string sshPrivateKey = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the user account.
    - id: password
      type: System.String
      description: The password for the user account.
    - id: elevationLevel
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
      description: >-
        The elevation level of the user

        account.
    - id: sshPrivateKey
      type: System.String
      description: >-
        The SSH private key for the user

        account.
    content.vb: Public Sub New(name As String, password As String, elevationLevel As ElevationLevel? = Nothing, sshPrivateKey As String = Nothing)
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor*
  nameWithType.vb: UserAccount.UserAccount(String, String, Nullable(Of ElevationLevel), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.UserAccount.UserAccount(System.String, System.String, System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.ElevationLevel), System.String)
  name.vb: UserAccount(String, String, Nullable(Of ElevationLevel), String)
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name
  id: Name
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UserAccount.Name
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 42
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the name of the user account.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password
  id: Password
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: UserAccount.Password
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 48
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the password for the user account.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel
  id: ElevationLevel
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: ElevationLevel
  nameWithType: UserAccount.ElevationLevel
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ElevationLevel
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 60
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the elevation level of the user account.\n"
  remarks: "\nnonAdmin - The auto user is a standard user without elevated\naccess. admin - The auto user is a user with elevated access and\noperates with full Administrator permissions. The default value is\nnonAdmin. Possible values include: 'nonAdmin', 'admin'\n"
  example: []
  syntax:
    content: public ElevationLevel? ElevationLevel { get; set; }
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
    content.vb: Public Property ElevationLevel As ElevationLevel?
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey
  id: SshPrivateKey
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: SshPrivateKey
  nameWithType: UserAccount.SshPrivateKey
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SshPrivateKey
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 71
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the SSH private key for the user account.\n"
  remarks: "\nThe SSH private key establishes password-less SSH between nodes in\na Linux pool when the pool's enableInterNodeCommunication property\nis true. This property will be ignored in a Windows pool.\n"
  example: []
  syntax:
    content: public string SshPrivateKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SshPrivateKey As String
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.UserAccount
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: UserAccount.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/UserAccount.cs
    startLine: 80
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.UserAccount.#ctor
  isExternal: false
  name: UserAccount
  nameWithType: UserAccount.UserAccount
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.UserAccount
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ElevationLevel>
  nameWithType: Nullable<ElevationLevel>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.ElevationLevel>
  nameWithType.vb: Nullable(Of ElevationLevel)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.ElevationLevel)
  name.vb: Nullable(Of ElevationLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
    name: ElevationLevel
    nameWithType: ElevationLevel
    fullName: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
    name: ElevationLevel
    nameWithType: ElevationLevel
    fullName: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name
  isExternal: false
  name: Name
  nameWithType: UserAccount.Name
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Name
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password
  isExternal: false
  name: Password
  nameWithType: UserAccount.Password
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Password
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel
  isExternal: false
  name: ElevationLevel
  nameWithType: UserAccount.ElevationLevel
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.ElevationLevel
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey
  isExternal: false
  name: SshPrivateKey
  nameWithType: UserAccount.SshPrivateKey
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.SshPrivateKey
- uid: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate
  isExternal: false
  name: Validate
  nameWithType: UserAccount.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserAccount.Validate
