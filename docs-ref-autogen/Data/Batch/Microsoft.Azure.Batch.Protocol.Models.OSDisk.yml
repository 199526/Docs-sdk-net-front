### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.OSDisk
  id: OSDisk
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType})
  - Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching
  - Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris
  - Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate
  langs:
  - csharp
  - vb
  name: OSDisk
  nameWithType: OSDisk
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OSDisk
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
    startLine: 15
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA reference to an OS disk image.\n"
  example: []
  syntax:
    content: public class OSDisk
    content.vb: Public Class OSDisk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  langs:
  - csharp
  - vb
  name: OSDisk()
  nameWithType: OSDisk.OSDisk()
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.OSDisk()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
    startLine: 20
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the OSDisk class.\n"
  example: []
  syntax:
    content: public OSDisk()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType})
  id: '#ctor(System.Collections.Generic.IList{System.String},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType})'
  parent: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  langs:
  - csharp
  - vb
  name: OSDisk(IList<String>, Nullable<CachingType>)
  nameWithType: OSDisk.OSDisk(IList<String>, Nullable<CachingType>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.OSDisk(System.Collections.Generic.IList<System.String>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CachingType>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
    startLine: 29
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the OSDisk class.\n"
  example: []
  syntax:
    content: public OSDisk(IList<string> imageUris, CachingType? caching = null)
    content.vb: Public Sub New(imageUris As IList(Of String), caching As CachingType? = Nothing)
    parameters:
    - id: imageUris
      type: System.Collections.Generic.IList{System.String}
      description: >-
        The collection of Virtual Hard Disk (VHD)

        URIs.
    - id: caching
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType}
      description: >-
        The type of caching to enable for the OS

        disk.
  overload: Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor*
  nameWithType.vb: OSDisk.OSDisk(IList(Of String), Nullable(Of CachingType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.OSDisk.OSDisk(System.Collections.Generic.IList(Of System.String), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CachingType))
  name.vb: OSDisk(IList(Of String), Nullable(Of CachingType))
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris
  id: ImageUris
  parent: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  langs:
  - csharp
  - vb
  name: ImageUris
  nameWithType: OSDisk.ImageUris
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageUris
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
    startLine: 48
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the collection of Virtual Hard Disk (VHD) URIs.\n"
  remarks: "\nAll the VHDs must be identical and must reside in an Azure Storage\naccount within the same subscription and same region as the Batch\naccount. For best performance, it is recommended that each VHD\nresides in a separate Azure Storage account. Each VHD can serve\nupto 20 Windows compute nodes or 40 Linux compute nodes. You must\nsupply enough VHD URIs to satisfy the 'targetDedicated' property of\nthe pool. If you do not supply enough VHD URIs, the pool will\npartially allocate compute nodes, and a resize error will occur.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "imageUris")]

      public IList<string> ImageUris { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="imageUris")>

      Public Property ImageUris As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: imageUris
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching
  id: Caching
  parent: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  langs:
  - csharp
  - vb
  name: Caching
  nameWithType: OSDisk.Caching
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Caching
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
    startLine: 62
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the type of caching to enable for the OS disk.\n"
  remarks: "\nnone - The caching mode for the disk is not enabled. readOnly - The\ncaching mode for the disk is read only. readWrite - The caching\nmode for the disk is read and write. The default value for caching\nis none. For information about the caching options see:\nhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\nPossible values include: 'none', 'readOnly', 'readWrite'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "caching")]

      public CachingType? Caching { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="caching")>

      Public Property Caching As CachingType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType}
  overload: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: caching
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.OSDisk
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: OSDisk.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/OSDisk.cs
    startLine: 71
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.OSDisk.#ctor
  isExternal: false
  name: OSDisk
  nameWithType: OSDisk.OSDisk
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.OSDisk
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CachingType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CachingType>
  nameWithType: Nullable<CachingType>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CachingType>
  nameWithType.vb: Nullable(Of CachingType)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CachingType)
  name.vb: Nullable(Of CachingType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CachingType
    name: CachingType
    nameWithType: CachingType
    fullName: Microsoft.Azure.Batch.Protocol.Models.CachingType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CachingType
    name: CachingType
    nameWithType: CachingType
    fullName: Microsoft.Azure.Batch.Protocol.Models.CachingType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris
  isExternal: false
  name: ImageUris
  nameWithType: OSDisk.ImageUris
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.ImageUris
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching
  isExternal: false
  name: Caching
  nameWithType: OSDisk.Caching
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Caching
- uid: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate
  isExternal: false
  name: Validate
  nameWithType: OSDisk.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.OSDisk.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
