### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.FakeClient
  commentId: T:Azure.Batch.Unit.Tests.FakeClient
  id: FakeClient
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.FakeClient.Create(System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}})
  - Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode,System.Func{System.Net.Http.HttpMethod,System.Uri,System.String})
  - Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode,System.Func{System.Uri,System.String})
  langs:
  - csharp
  - vb
  name: FakeClient
  nameWithType: FakeClient
  fullName: Azure.Batch.Unit.Tests.FakeClient
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FakeClient
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
    startLine: 26
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static class FakeClient
    content.vb: Public Module FakeClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Azure.Batch.Unit.Tests.FakeClient.Create(System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}})
  commentId: M:Azure.Batch.Unit.Tests.FakeClient.Create(System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}})
  id: Create(System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}})
  parent: Azure.Batch.Unit.Tests.FakeClient
  langs:
  - csharp
  - vb
  name: Create(Func<HttpMethod, Uri, Tuple<HttpStatusCode, String>>)
  nameWithType: FakeClient.Create(Func<HttpMethod, Uri, Tuple<HttpStatusCode, String>>)
  fullName: Azure.Batch.Unit.Tests.FakeClient.Create(System.Func<System.Net.Http.HttpMethod, System.Uri, System.Tuple<System.Net.HttpStatusCode, System.String>>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
    startLine: 28
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static BatchServiceClient Create(Func<HttpMethod, Uri, Tuple<HttpStatusCode, string>> handler)
    content.vb: Public Shared Function Create(handler As Func(Of HttpMethod, Uri, Tuple(Of HttpStatusCode, String))) As BatchServiceClient
    parameters:
    - id: handler
      type: System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}}
    return:
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
  overload: Azure.Batch.Unit.Tests.FakeClient.Create*
  nameWithType.vb: FakeClient.Create(Func(Of HttpMethod, Uri, Tuple(Of HttpStatusCode, String)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.FakeClient.Create(System.Func(Of System.Net.Http.HttpMethod, System.Uri, System.Tuple(Of System.Net.HttpStatusCode, System.String)))
  name.vb: Create(Func(Of HttpMethod, Uri, Tuple(Of HttpStatusCode, String)))
- uid: Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode,System.Func{System.Net.Http.HttpMethod,System.Uri,System.String})
  commentId: M:Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode,System.Func{System.Net.Http.HttpMethod,System.Uri,System.String})
  id: Create(System.Net.HttpStatusCode,System.Func{System.Net.Http.HttpMethod,System.Uri,System.String})
  parent: Azure.Batch.Unit.Tests.FakeClient
  langs:
  - csharp
  - vb
  name: Create(HttpStatusCode, Func<HttpMethod, Uri, String>)
  nameWithType: FakeClient.Create(HttpStatusCode, Func<HttpMethod, Uri, String>)
  fullName: Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode, System.Func<System.Net.Http.HttpMethod, System.Uri, System.String>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
    startLine: 33
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static BatchServiceClient Create(HttpStatusCode responseCode, Func<HttpMethod, Uri, string> bodyCreator)
    content.vb: Public Shared Function Create(responseCode As HttpStatusCode, bodyCreator As Func(Of HttpMethod, Uri, String)) As BatchServiceClient
    parameters:
    - id: responseCode
      type: System.Net.HttpStatusCode
    - id: bodyCreator
      type: System.Func{System.Net.Http.HttpMethod,System.Uri,System.String}
    return:
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
  overload: Azure.Batch.Unit.Tests.FakeClient.Create*
  nameWithType.vb: FakeClient.Create(HttpStatusCode, Func(Of HttpMethod, Uri, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode, System.Func(Of System.Net.Http.HttpMethod, System.Uri, System.String))
  name.vb: Create(HttpStatusCode, Func(Of HttpMethod, Uri, String))
- uid: Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode,System.Func{System.Uri,System.String})
  commentId: M:Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode,System.Func{System.Uri,System.String})
  id: Create(System.Net.HttpStatusCode,System.Func{System.Uri,System.String})
  parent: Azure.Batch.Unit.Tests.FakeClient
  langs:
  - csharp
  - vb
  name: Create(HttpStatusCode, Func<Uri, String>)
  nameWithType: FakeClient.Create(HttpStatusCode, Func<Uri, String>)
  fullName: Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode, System.Func<System.Uri, System.String>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/FakeClient.cs
    startLine: 38
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public static BatchServiceClient Create(HttpStatusCode responseCode, Func<Uri, string> bodyCreator)
    content.vb: Public Shared Function Create(responseCode As HttpStatusCode, bodyCreator As Func(Of Uri, String)) As BatchServiceClient
    parameters:
    - id: responseCode
      type: System.Net.HttpStatusCode
    - id: bodyCreator
      type: System.Func{System.Uri,System.String}
    return:
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
  overload: Azure.Batch.Unit.Tests.FakeClient.Create*
  nameWithType.vb: FakeClient.Create(HttpStatusCode, Func(Of Uri, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Azure.Batch.Unit.Tests.FakeClient.Create(System.Net.HttpStatusCode, System.Func(Of System.Uri, System.String))
  name.vb: Create(HttpStatusCode, Func(Of Uri, String))
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.FakeClient.Create*
  commentId: Overload:Azure.Batch.Unit.Tests.FakeClient.Create
  isExternal: false
  name: Create
  nameWithType: FakeClient.Create
  fullName: Azure.Batch.Unit.Tests.FakeClient.Create
- uid: System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}}
  commentId: T:System.Func{System.Net.Http.HttpMethod,System.Uri,System.Tuple{System.Net.HttpStatusCode,System.String}}
  parent: System
  definition: System.Func`3
  name: Func<HttpMethod, Uri, Tuple<HttpStatusCode, String>>
  nameWithType: Func<HttpMethod, Uri, Tuple<HttpStatusCode, String>>
  fullName: System.Func<System.Net.Http.HttpMethod, System.Uri, System.Tuple<System.Net.HttpStatusCode, System.String>>
  nameWithType.vb: Func(Of HttpMethod, Uri, Tuple(Of HttpStatusCode, String))
  fullName.vb: System.Func(Of System.Net.Http.HttpMethod, System.Uri, System.Tuple(Of System.Net.HttpStatusCode, System.String))
  name.vb: Func(Of HttpMethod, Uri, Tuple(Of HttpStatusCode, String))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.BatchServiceClient
  commentId: T:Microsoft.Azure.Batch.Protocol.BatchServiceClient
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: BatchServiceClient
  nameWithType: BatchServiceClient
  fullName: Microsoft.Azure.Batch.Protocol.BatchServiceClient
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Func{System.Net.Http.HttpMethod,System.Uri,System.String}
  commentId: T:System.Func{System.Net.Http.HttpMethod,System.Uri,System.String}
  parent: System
  definition: System.Func`3
  name: Func<HttpMethod, Uri, String>
  nameWithType: Func<HttpMethod, Uri, String>
  fullName: System.Func<System.Net.Http.HttpMethod, System.Uri, System.String>
  nameWithType.vb: Func(Of HttpMethod, Uri, String)
  fullName.vb: System.Func(Of System.Net.Http.HttpMethod, System.Uri, System.String)
  name.vb: Func(Of HttpMethod, Uri, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpMethod
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: System.Net.Http.HttpMethod
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Func{System.Uri,System.String}
  commentId: T:System.Func{System.Uri,System.String}
  parent: System
  definition: System.Func`2
  name: Func<Uri, String>
  nameWithType: Func<Uri, String>
  fullName: System.Func<System.Uri, System.String>
  nameWithType.vb: Func(Of Uri, String)
  fullName.vb: System.Func(Of System.Uri, System.String)
  name.vb: Func(Of Uri, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
