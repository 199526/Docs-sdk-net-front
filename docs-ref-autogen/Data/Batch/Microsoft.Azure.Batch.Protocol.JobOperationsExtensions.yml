### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  commentId: T:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  id: JobOperationsExtensions
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)
  - Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: JobOperationsExtensions
  nameWithType: JobOperationsExtensions
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobOperationsExtensions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 16
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nExtension methods for JobOperations.\n"
  example: []
  syntax:
    content: public static class JobOperationsExtensions
    content.vb: Public Module JobOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)
  id: GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAllLifetimeStatistics(IJobOperations, JobGetAllLifetimeStatisticsOptions)
  nameWithType: JobOperationsExtensions.GetAllLifetimeStatistics(IJobOperations, JobGetAllLifetimeStatisticsOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations, Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAllLifetimeStatistics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 32
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets lifetime summary statistics for all of the jobs in the specified\naccount.\n"
  remarks: "\nStatistics are aggregated across all jobs that have ever existed in the\naccount, from account creation to the last update time of the statistics.\n"
  example: []
  syntax:
    content: public static JobStatistics GetAllLifetimeStatistics(this IJobOperations operations, JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobGetAllLifetimeStatisticsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllLifetimeStatistics(operations As IJobOperations, jobGetAllLifetimeStatisticsOptions As JobGetAllLifetimeStatisticsOptions = Nothing) As JobStatistics
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)
  id: GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAllLifetimeStatisticsAsync(IJobOperations, JobGetAllLifetimeStatisticsOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.GetAllLifetimeStatisticsAsync(IJobOperations, JobGetAllLifetimeStatisticsOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAllLifetimeStatisticsAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 54
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets lifetime summary statistics for all of the jobs in the specified\naccount.\n"
  remarks: "\nStatistics are aggregated across all jobs that have ever existed in the\naccount, from account creation to the last update time of the statistics.\n"
  example: []
  syntax:
    content: public static Task<JobStatistics> GetAllLifetimeStatisticsAsync(this IJobOperations operations, JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobGetAllLifetimeStatisticsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobStatistics}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllLifetimeStatisticsAsync(operations As IJobOperations, jobGetAllLifetimeStatisticsOptions As JobGetAllLifetimeStatisticsOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobStatistics)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)
  id: Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IJobOperations, String, JobDeleteOptions)
  nameWithType: JobOperationsExtensions.Delete(IJobOperations, String, JobDeleteOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 81
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a job.\n"
  remarks: "\nDeleting a job also deletes all tasks that are part of that job, and all\njob statistics. This also overrides the retention period for task data;\nthat is, if the job contains tasks which are still retained on compute\nnodes, the Batch services deletes those tasks' working directories and all\ntheir contents.\n"
  example: []
  syntax:
    content: public static JobDeleteHeaders Delete(this IJobOperations operations, string jobId, JobDeleteOptions jobDeleteOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to delete.\n"
    - id: jobDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IJobOperations, jobId As String, jobDeleteOptions As JobDeleteOptions = Nothing) As JobDeleteHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IJobOperations, String, JobDeleteOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.DeleteAsync(IJobOperations, String, JobDeleteOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 108
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a job.\n"
  remarks: "\nDeleting a job also deletes all tasks that are part of that job, and all\njob statistics. This also overrides the retention period for task data;\nthat is, if the job contains tasks which are still retained on compute\nnodes, the Batch services deletes those tasks' working directories and all\ntheir contents.\n"
  example: []
  syntax:
    content: public static Task<JobDeleteHeaders> DeleteAsync(this IJobOperations operations, string jobId, JobDeleteOptions jobDeleteOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to delete.\n"
    - id: jobDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IJobOperations, jobId As String, jobDeleteOptions As JobDeleteOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobDeleteHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)
  id: Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IJobOperations, String, JobGetOptions)
  nameWithType: JobOperationsExtensions.Get(IJobOperations, String, JobGetOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 128
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified job.\n"
  example: []
  syntax:
    content: public static CloudJob Get(this IJobOperations operations, string jobId, JobGetOptions jobGetOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job.\n"
    - id: jobGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobGetOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IJobOperations, jobId As String, jobGetOptions As JobGetOptions = Nothing) As CloudJob
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IJobOperations, String, JobGetOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.GetAsync(IJobOperations, String, JobGetOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobGetOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 148
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified job.\n"
  example: []
  syntax:
    content: public static Task<CloudJob> GetAsync(this IJobOperations operations, string jobId, JobGetOptions jobGetOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job.\n"
    - id: jobGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobGetOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IJobOperations, jobId As String, jobGetOptions As JobGetOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CloudJob)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)
  id: Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Patch(IJobOperations, String, JobPatchParameter, JobPatchOptions)
  nameWithType: JobOperationsExtensions.Patch(IJobOperations, String, JobPatchParameter, JobPatchOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter, Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Patch
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 176
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of the specified job.\n"
  remarks: "\nThis replaces only the job properties specified in the request. For\nexample, if the job has constraints, and a request does not specify the\nconstraints element, then the job keeps the existing constraints.\n"
  example: []
  syntax:
    content: public static JobPatchHeaders Patch(this IJobOperations operations, string jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job whose properties you want to update.\n"
    - id: jobPatchParameter
      type: Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter
      description: "\nThe parameters for the request.\n"
    - id: jobPatchOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Patch(operations As IJobOperations, jobId As String, jobPatchParameter As JobPatchParameter, jobPatchOptions As JobPatchOptions = Nothing) As JobPatchHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)
  id: PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: PatchAsync(IJobOperations, String, JobPatchParameter, JobPatchOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.PatchAsync(IJobOperations, String, JobPatchParameter, JobPatchOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter, Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PatchAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 204
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of the specified job.\n"
  remarks: "\nThis replaces only the job properties specified in the request. For\nexample, if the job has constraints, and a request does not specify the\nconstraints element, then the job keeps the existing constraints.\n"
  example: []
  syntax:
    content: public static Task<JobPatchHeaders> PatchAsync(this IJobOperations operations, string jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job whose properties you want to update.\n"
    - id: jobPatchParameter
      type: Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter
      description: "\nThe parameters for the request.\n"
    - id: jobPatchOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchAsync(operations As IJobOperations, jobId As String, jobPatchParameter As JobPatchParameter, jobPatchOptions As JobPatchOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobPatchHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)
  id: Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IJobOperations, String, JobUpdateParameter, JobUpdateOptions)
  nameWithType: JobOperationsExtensions.Update(IJobOperations, String, JobUpdateParameter, JobUpdateOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter, Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Update
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 233
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of the specified job.\n"
  remarks: "\nThis fully replaces all the updateable properties of the job. For example,\nif the job has constraints associated with it and if constraints is not\nspecified with this request, then the Batch service will remove the\nexisting constraints.\n"
  example: []
  syntax:
    content: public static JobUpdateHeaders Update(this IJobOperations operations, string jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job whose properties you want to update.\n"
    - id: jobUpdateParameter
      type: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
      description: "\nThe parameters for the request.\n"
    - id: jobUpdateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As IJobOperations, jobId As String, jobUpdateParameter As JobUpdateParameter, jobUpdateOptions As JobUpdateOptions = Nothing) As JobUpdateHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IJobOperations, String, JobUpdateParameter, JobUpdateOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.UpdateAsync(IJobOperations, String, JobUpdateParameter, JobUpdateOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter, Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 262
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of the specified job.\n"
  remarks: "\nThis fully replaces all the updateable properties of the job. For example,\nif the job has constraints associated with it and if constraints is not\nspecified with this request, then the Batch service will remove the\nexisting constraints.\n"
  example: []
  syntax:
    content: public static Task<JobUpdateHeaders> UpdateAsync(this IJobOperations operations, string jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job whose properties you want to update.\n"
    - id: jobUpdateParameter
      type: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
      description: "\nThe parameters for the request.\n"
    - id: jobUpdateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As IJobOperations, jobId As String, jobUpdateParameter As JobUpdateParameter, jobUpdateOptions As JobUpdateOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobUpdateHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)
  id: Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Disable(IJobOperations, String, DisableJobOption, JobDisableOptions)
  nameWithType: JobOperationsExtensions.Disable(IJobOperations, String, DisableJobOption, JobDisableOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.DisableJobOption, Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Disable
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 299
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDisables the specified job, preventing new tasks from running.\n"
  remarks: "\nThe Batch Service immediately moves the job to the disabling state. Batch\nthen uses the disableTasks parameter to determine what to do with the\ncurrently running tasks of the job. The job remains in the disabling state\nuntil the disable operation is completed and all tasks have been dealt with\naccording to the disableTasks option; the job then moves to the disabled\nstate. No new tasks are started under the job until it moves back to active\nstate. If you try to disable a job that is in any state other than active,\ndisabling, or disabled, the request fails with status code 409.\n"
  example: []
  syntax:
    content: public static JobDisableHeaders Disable(this IJobOperations operations, string jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to disable.\n"
    - id: disableTasks
      type: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
      description: "\nWhat to do with active tasks associated with the job. requeue - Terminate\nrunning tasks and requeue them. The tasks will run again when the job is\nenabled. terminate - Terminate running tasks. The tasks will not run again.\nwait - Allow currently running tasks to complete. Possible values include:\n'requeue', 'terminate', 'wait'\n"
    - id: jobDisableOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Disable(operations As IJobOperations, jobId As String, disableTasks As DisableJobOption, jobDisableOptions As JobDisableOptions = Nothing) As JobDisableHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)
  id: DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: DisableAsync(IJobOperations, String, DisableJobOption, JobDisableOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.DisableAsync(IJobOperations, String, DisableJobOption, JobDisableOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.DisableJobOption, Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 336
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDisables the specified job, preventing new tasks from running.\n"
  remarks: "\nThe Batch Service immediately moves the job to the disabling state. Batch\nthen uses the disableTasks parameter to determine what to do with the\ncurrently running tasks of the job. The job remains in the disabling state\nuntil the disable operation is completed and all tasks have been dealt with\naccording to the disableTasks option; the job then moves to the disabled\nstate. No new tasks are started under the job until it moves back to active\nstate. If you try to disable a job that is in any state other than active,\ndisabling, or disabled, the request fails with status code 409.\n"
  example: []
  syntax:
    content: public static Task<JobDisableHeaders> DisableAsync(this IJobOperations operations, string jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to disable.\n"
    - id: disableTasks
      type: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
      description: "\nWhat to do with active tasks associated with the job. requeue - Terminate\nrunning tasks and requeue them. The tasks will run again when the job is\nenabled. terminate - Terminate running tasks. The tasks will not run again.\nwait - Allow currently running tasks to complete. Possible values include:\n'requeue', 'terminate', 'wait'\n"
    - id: jobDisableOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisableAsync(operations As IJobOperations, jobId As String, disableTasks As DisableJobOption, jobDisableOptions As JobDisableOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobDisableHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)
  id: Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Enable(IJobOperations, String, JobEnableOptions)
  nameWithType: JobOperationsExtensions.Enable(IJobOperations, String, JobEnableOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Enable
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 364
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nEnables the specified job, allowing new tasks to run.\n"
  remarks: "\nWhen you call this API, the Batch service sets a disabled job to the\nenabling state. After the this operation is completed, the job moves to the\nactive state, and scheduling of new tasks under the job resumes. The Batch\nservice does not allow a task to remain in the active state for more than 7\ndays. Therefore, if you enable a job containing active tasks which were\nadded more than 7 days ago, those tasks will not run.\n"
  example: []
  syntax:
    content: public static JobEnableHeaders Enable(this IJobOperations operations, string jobId, JobEnableOptions jobEnableOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to enable.\n"
    - id: jobEnableOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Enable(operations As IJobOperations, jobId As String, jobEnableOptions As JobEnableOptions = Nothing) As JobEnableHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)
  id: EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: EnableAsync(IJobOperations, String, JobEnableOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.EnableAsync(IJobOperations, String, JobEnableOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 392
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nEnables the specified job, allowing new tasks to run.\n"
  remarks: "\nWhen you call this API, the Batch service sets a disabled job to the\nenabling state. After the this operation is completed, the job moves to the\nactive state, and scheduling of new tasks under the job resumes. The Batch\nservice does not allow a task to remain in the active state for more than 7\ndays. Therefore, if you enable a job containing active tasks which were\nadded more than 7 days ago, those tasks will not run.\n"
  example: []
  syntax:
    content: public static Task<JobEnableHeaders> EnableAsync(this IJobOperations operations, string jobId, JobEnableOptions jobEnableOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to enable.\n"
    - id: jobEnableOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnableAsync(operations As IJobOperations, jobId As String, jobEnableOptions As JobEnableOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobEnableHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)
  id: Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Terminate(IJobOperations, String, String, JobTerminateOptions)
  nameWithType: JobOperationsExtensions.Terminate(IJobOperations, String, String, JobTerminateOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Terminate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 422
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nTerminates the specified job, marking it as completed.\n"
  remarks: "\nWhen a Terminate Job request is received, the Batch service sets the job to\nthe terminating state. The Batch service then terminates any active or\nrunning tasks associated with the job, and runs any required Job Release\ntasks. The job then moves into the completed state.\n"
  example: []
  syntax:
    content: public static JobTerminateHeaders Terminate(this IJobOperations operations, string jobId, string terminateReason = null, JobTerminateOptions jobTerminateOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to terminate.\n"
    - id: terminateReason
      type: System.String
      description: "\nThe text you want to appear as the job's TerminateReason. The default is\n'UserTerminate'.\n"
    - id: jobTerminateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Terminate(operations As IJobOperations, jobId As String, terminateReason As String = Nothing, jobTerminateOptions As JobTerminateOptions = Nothing) As JobTerminateHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)
  id: TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: TerminateAsync(IJobOperations, String, String, JobTerminateOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.TerminateAsync(IJobOperations, String, String, JobTerminateOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TerminateAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 452
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nTerminates the specified job, marking it as completed.\n"
  remarks: "\nWhen a Terminate Job request is received, the Batch service sets the job to\nthe terminating state. The Batch service then terminates any active or\nrunning tasks associated with the job, and runs any required Job Release\ntasks. The job then moves into the completed state.\n"
  example: []
  syntax:
    content: public static Task<JobTerminateHeaders> TerminateAsync(this IJobOperations operations, string jobId, string terminateReason = null, JobTerminateOptions jobTerminateOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job to terminate.\n"
    - id: terminateReason
      type: System.String
      description: "\nThe text you want to appear as the job's TerminateReason. The default is\n'UserTerminate'.\n"
    - id: jobTerminateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TerminateAsync(operations As IJobOperations, jobId As String, terminateReason As String = Nothing, jobTerminateOptions As JobTerminateOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobTerminateHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)
  id: Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: Add(IJobOperations, JobAddParameter, JobAddOptions)
  nameWithType: JobOperationsExtensions.Add(IJobOperations, JobAddParameter, JobAddOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations, Microsoft.Azure.Batch.Protocol.Models.JobAddParameter, Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Add
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 483
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a job to the specified account.\n"
  remarks: "\nThe Batch service supports two ways to control the work done as part of a\njob. In the first approach, the user specifies a Job Manager task. The\nBatch service launches this task when it is ready to start the job. The Job\nManager task controls all other tasks that run under this job, by using the\nTask APIs. In the second approach, the user directly controls the execution\nof tasks under an active job, by using the Task APIs. Also note: when\nnaming jobs, avoid including sensitive information such as user names or\nsecret project names. This information may appear in telemetry logs\naccessible to Microsoft Support engineers.\n"
  example: []
  syntax:
    content: public static JobAddHeaders Add(this IJobOperations operations, JobAddParameter job, JobAddOptions jobAddOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: job
      type: Microsoft.Azure.Batch.Protocol.Models.JobAddParameter
      description: "\nThe job to be added.\n"
    - id: jobAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobAddOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Add(operations As IJobOperations, job As JobAddParameter, jobAddOptions As JobAddOptions = Nothing) As JobAddHeaders
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)
  id: AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddAsync(IJobOperations, JobAddParameter, JobAddOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.AddAsync(IJobOperations, JobAddParameter, JobAddOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, Microsoft.Azure.Batch.Protocol.Models.JobAddParameter, Microsoft.Azure.Batch.Protocol.Models.JobAddOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 514
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a job to the specified account.\n"
  remarks: "\nThe Batch service supports two ways to control the work done as part of a\njob. In the first approach, the user specifies a Job Manager task. The\nBatch service launches this task when it is ready to start the job. The Job\nManager task controls all other tasks that run under this job, by using the\nTask APIs. In the second approach, the user directly controls the execution\nof tasks under an active job, by using the Task APIs. Also note: when\nnaming jobs, avoid including sensitive information such as user names or\nsecret project names. This information may appear in telemetry logs\naccessible to Microsoft Support engineers.\n"
  example: []
  syntax:
    content: public static Task<JobAddHeaders> AddAsync(this IJobOperations operations, JobAddParameter job, JobAddOptions jobAddOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: job
      type: Microsoft.Azure.Batch.Protocol.Models.JobAddParameter
      description: "\nThe job to be added.\n"
    - id: jobAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobAddOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAsync(operations As IJobOperations, job As JobAddParameter, jobAddOptions As JobAddOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of JobAddHeaders)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)
  id: List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IJobOperations, JobListOptions)
  nameWithType: JobOperationsExtensions.List(IJobOperations, JobListOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations, Microsoft.Azure.Batch.Protocol.Models.JobListOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 531
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the jobs in the specified account.\n"
  example: []
  syntax:
    content: public static IPage<CloudJob> List(this IJobOperations operations, JobListOptions jobListOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IJobOperations, jobListOptions As JobListOptions = Nothing) As IPage(Of CloudJob)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IJobOperations, JobListOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.ListAsync(IJobOperations, JobListOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, Microsoft.Azure.Batch.Protocol.Models.JobListOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 548
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the jobs in the specified account.\n"
  example: []
  syntax:
    content: public static Task<IPage<CloudJob>> ListAsync(this IJobOperations operations, JobListOptions jobListOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IJobOperations, jobListOptions As JobListOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CloudJob))
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)
  id: ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromJobSchedule(IJobOperations, String, JobListFromJobScheduleOptions)
  nameWithType: JobOperationsExtensions.ListFromJobSchedule(IJobOperations, String, JobListFromJobScheduleOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 568
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the jobs that have been created under the specified job schedule.\n"
  example: []
  syntax:
    content: public static IPage<CloudJob> ListFromJobSchedule(this IJobOperations operations, string jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobScheduleId
      type: System.String
      description: "\nThe ID of the job schedule from which you want to get a list of jobs.\n"
    - id: jobListFromJobScheduleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromJobSchedule(operations As IJobOperations, jobScheduleId As String, jobListFromJobScheduleOptions As JobListFromJobScheduleOptions = Nothing) As IPage(Of CloudJob)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)
  id: ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromJobScheduleAsync(IJobOperations, String, JobListFromJobScheduleOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.ListFromJobScheduleAsync(IJobOperations, String, JobListFromJobScheduleOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromJobScheduleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 588
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the jobs that have been created under the specified job schedule.\n"
  example: []
  syntax:
    content: public static Task<IPage<CloudJob>> ListFromJobScheduleAsync(this IJobOperations operations, string jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobScheduleId
      type: System.String
      description: "\nThe ID of the job schedule from which you want to get a list of jobs.\n"
    - id: jobListFromJobScheduleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromJobScheduleAsync(operations As IJobOperations, jobScheduleId As String, jobListFromJobScheduleOptions As JobListFromJobScheduleOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CloudJob))
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)
  id: ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPreparationAndReleaseTaskStatus(IJobOperations, String, JobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(IJobOperations, String, JobListPreparationAndReleaseTaskStatusOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPreparationAndReleaseTaskStatus
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 614
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the execution status of the Job Preparation and Job Release task for\nthe specified job across the compute nodes where the job has run.\n"
  remarks: "\nThis API returns the Job Preparation and Job Release task status on all\ncompute nodes that have run the Job Preparation or Job Release task. This\nincludes nodes which have since been removed from the pool.\n"
  example: []
  syntax:
    content: public static IPage<JobPreparationAndReleaseTaskExecutionInformation> ListPreparationAndReleaseTaskStatus(this IJobOperations operations, string jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job.\n"
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPreparationAndReleaseTaskStatus(operations As IJobOperations, jobId As String, jobListPreparationAndReleaseTaskStatusOptions As JobListPreparationAndReleaseTaskStatusOptions = Nothing) As IPage(Of JobPreparationAndReleaseTaskExecutionInformation)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)
  id: ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPreparationAndReleaseTaskStatusAsync(IJobOperations, String, JobListPreparationAndReleaseTaskStatusOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(IJobOperations, String, JobListPreparationAndReleaseTaskStatusOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPreparationAndReleaseTaskStatusAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 640
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the execution status of the Job Preparation and Job Release task for\nthe specified job across the compute nodes where the job has run.\n"
  remarks: "\nThis API returns the Job Preparation and Job Release task status on all\ncompute nodes that have run the Job Preparation or Job Release task. This\nincludes nodes which have since been removed from the pool.\n"
  example: []
  syntax:
    content: public static Task<IPage<JobPreparationAndReleaseTaskExecutionInformation>> ListPreparationAndReleaseTaskStatusAsync(this IJobOperations operations, string jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe ID of the job.\n"
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPreparationAndReleaseTaskStatusAsync(operations As IJobOperations, jobId As String, jobListPreparationAndReleaseTaskStatusOptions As JobListPreparationAndReleaseTaskStatusOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of JobPreparationAndReleaseTaskExecutionInformation))
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)
  id: ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IJobOperations, String, JobListNextOptions)
  nameWithType: JobOperationsExtensions.ListNext(IJobOperations, String, JobListNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 660
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the jobs in the specified account.\n"
  example: []
  syntax:
    content: public static IPage<CloudJob> ListNext(this IJobOperations operations, string nextPageLink, JobListNextOptions jobListNextOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: jobListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IJobOperations, nextPageLink As String, jobListNextOptions As JobListNextOptions = Nothing) As IPage(Of CloudJob)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IJobOperations, String, JobListNextOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.ListNextAsync(IJobOperations, String, JobListNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 680
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the jobs in the specified account.\n"
  example: []
  syntax:
    content: public static Task<IPage<CloudJob>> ListNextAsync(this IJobOperations operations, string nextPageLink, JobListNextOptions jobListNextOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: jobListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IJobOperations, nextPageLink As String, jobListNextOptions As JobListNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CloudJob))
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)
  id: ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromJobScheduleNext(IJobOperations, String, JobListFromJobScheduleNextOptions)
  nameWithType: JobOperationsExtensions.ListFromJobScheduleNext(IJobOperations, String, JobListFromJobScheduleNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromJobScheduleNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 700
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the jobs that have been created under the specified job schedule.\n"
  example: []
  syntax:
    content: public static IPage<CloudJob> ListFromJobScheduleNext(this IJobOperations operations, string nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: jobListFromJobScheduleNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromJobScheduleNext(operations As IJobOperations, nextPageLink As String, jobListFromJobScheduleNextOptions As JobListFromJobScheduleNextOptions = Nothing) As IPage(Of CloudJob)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)
  id: ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromJobScheduleNextAsync(IJobOperations, String, JobListFromJobScheduleNextOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.ListFromJobScheduleNextAsync(IJobOperations, String, JobListFromJobScheduleNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromJobScheduleNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 720
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the jobs that have been created under the specified job schedule.\n"
  example: []
  syntax:
    content: public static Task<IPage<CloudJob>> ListFromJobScheduleNextAsync(this IJobOperations operations, string nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: jobListFromJobScheduleNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromJobScheduleNextAsync(operations As IJobOperations, nextPageLink As String, jobListFromJobScheduleNextOptions As JobListFromJobScheduleNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CloudJob))
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)
  id: ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPreparationAndReleaseTaskStatusNext(IJobOperations, String, JobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(IJobOperations, String, JobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPreparationAndReleaseTaskStatusNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 746
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the execution status of the Job Preparation and Job Release task for\nthe specified job across the compute nodes where the job has run.\n"
  remarks: "\nThis API returns the Job Preparation and Job Release task status on all\ncompute nodes that have run the Job Preparation or Job Release task. This\nincludes nodes which have since been removed from the pool.\n"
  example: []
  syntax:
    content: public static IPage<JobPreparationAndReleaseTaskExecutionInformation> ListPreparationAndReleaseTaskStatusNext(this IJobOperations operations, string nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPreparationAndReleaseTaskStatusNext(operations As IJobOperations, nextPageLink As String, jobListPreparationAndReleaseTaskStatusNextOptions As JobListPreparationAndReleaseTaskStatusNextOptions = Nothing) As IPage(Of JobPreparationAndReleaseTaskExecutionInformation)
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)
  id: ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPreparationAndReleaseTaskStatusNextAsync(IJobOperations, String, JobListPreparationAndReleaseTaskStatusNextOptions, CancellationToken)
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(IJobOperations, String, JobListPreparationAndReleaseTaskStatusNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPreparationAndReleaseTaskStatusNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/JobOperationsExtensions.cs
    startLine: 772
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the execution status of the Job Preparation and Job Release task for\nthe specified job across the compute nodes where the job has run.\n"
  remarks: "\nThis API returns the Job Preparation and Job Release task status on all\ncompute nodes that have run the Job Preparation or Job Release task. This\nincludes nodes which have since been removed from the pool.\n"
  example: []
  syntax:
    content: public static Task<IPage<JobPreparationAndReleaseTaskExecutionInformation>> ListPreparationAndReleaseTaskStatusNextAsync(this IJobOperations operations, string nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions = null, CancellationToken cancellationToken = null)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPreparationAndReleaseTaskStatusNextAsync(operations As IJobOperations, nextPageLink As String, jobListPreparationAndReleaseTaskStatusNextOptions As JobListPreparationAndReleaseTaskStatusNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of JobPreparationAndReleaseTaskExecutionInformation))
  overload: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics
  isExternal: false
  name: GetAllLifetimeStatistics
  nameWithType: JobOperationsExtensions.GetAllLifetimeStatistics
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics
- uid: Microsoft.Azure.Batch.Protocol.IJobOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IJobOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IJobOperations
  nameWithType: IJobOperations
  fullName: Microsoft.Azure.Batch.Protocol.IJobOperations
- uid: Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobGetAllLifetimeStatisticsOptions
  nameWithType: JobGetAllLifetimeStatisticsOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync
  isExternal: false
  name: GetAllLifetimeStatisticsAsync
  nameWithType: JobOperationsExtensions.GetAllLifetimeStatisticsAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobStatistics}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobStatistics}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobStatistics>
  nameWithType: Task<JobStatistics>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobStatistics>
  nameWithType.vb: Task(Of JobStatistics)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobStatistics)
  name.vb: Task(Of JobStatistics)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
    name: JobStatistics
    nameWithType: JobStatistics
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
    name: JobStatistics
    nameWithType: JobStatistics
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: JobOperationsExtensions.Delete
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobDeleteOptions
  nameWithType: JobDeleteOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobDeleteHeaders
  nameWithType: JobDeleteHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: JobOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobDeleteHeaders>
  nameWithType: Task<JobDeleteHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders>
  nameWithType.vb: Task(Of JobDeleteHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders)
  name.vb: Task(Of JobDeleteHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
    name: JobDeleteHeaders
    nameWithType: JobDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
    name: JobDeleteHeaders
    nameWithType: JobDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: JobOperationsExtensions.Get
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get
- uid: Microsoft.Azure.Batch.Protocol.Models.JobGetOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobGetOptions
  nameWithType: JobGetOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobGetOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudJob
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CloudJob
  nameWithType: CloudJob
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: JobOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudJob>
  nameWithType: Task<CloudJob>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CloudJob>
  nameWithType.vb: Task(Of CloudJob)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CloudJob)
  name.vb: Task(Of CloudJob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch
  isExternal: false
  name: Patch
  nameWithType: JobOperationsExtensions.Patch
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobPatchParameter
  nameWithType: JobPatchParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobPatchOptions
  nameWithType: JobPatchOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobPatchHeaders
  nameWithType: JobPatchHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync
  isExternal: false
  name: PatchAsync
  nameWithType: JobOperationsExtensions.PatchAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobPatchHeaders>
  nameWithType: Task<JobPatchHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders>
  nameWithType.vb: Task(Of JobPatchHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders)
  name.vb: Task(Of JobPatchHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
    name: JobPatchHeaders
    nameWithType: JobPatchHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
    name: JobPatchHeaders
    nameWithType: JobPatchHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update
  isExternal: false
  name: Update
  nameWithType: JobOperationsExtensions.Update
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobUpdateParameter
  nameWithType: JobUpdateParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobUpdateOptions
  nameWithType: JobUpdateOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobUpdateHeaders
  nameWithType: JobUpdateHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: JobOperationsExtensions.UpdateAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobUpdateHeaders>
  nameWithType: Task<JobUpdateHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders>
  nameWithType.vb: Task(Of JobUpdateHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders)
  name.vb: Task(Of JobUpdateHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
    name: JobUpdateHeaders
    nameWithType: JobUpdateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
    name: JobUpdateHeaders
    nameWithType: JobUpdateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable
  isExternal: false
  name: Disable
  nameWithType: JobOperationsExtensions.Disable
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable
- uid: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobDisableOptions
  nameWithType: JobDisableOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobDisableHeaders
  nameWithType: JobDisableHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync
  isExternal: false
  name: DisableAsync
  nameWithType: JobOperationsExtensions.DisableAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobDisableHeaders>
  nameWithType: Task<JobDisableHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders>
  nameWithType.vb: Task(Of JobDisableHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders)
  name.vb: Task(Of JobDisableHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
    name: JobDisableHeaders
    nameWithType: JobDisableHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
    name: JobDisableHeaders
    nameWithType: JobDisableHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable
  isExternal: false
  name: Enable
  nameWithType: JobOperationsExtensions.Enable
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable
- uid: Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobEnableOptions
  nameWithType: JobEnableOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobEnableHeaders
  nameWithType: JobEnableHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync
  isExternal: false
  name: EnableAsync
  nameWithType: JobOperationsExtensions.EnableAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobEnableHeaders>
  nameWithType: Task<JobEnableHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders>
  nameWithType.vb: Task(Of JobEnableHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders)
  name.vb: Task(Of JobEnableHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
    name: JobEnableHeaders
    nameWithType: JobEnableHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
    name: JobEnableHeaders
    nameWithType: JobEnableHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate
  isExternal: false
  name: Terminate
  nameWithType: JobOperationsExtensions.Terminate
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate
- uid: Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobTerminateOptions
  nameWithType: JobTerminateOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobTerminateHeaders
  nameWithType: JobTerminateHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync
  isExternal: false
  name: TerminateAsync
  nameWithType: JobOperationsExtensions.TerminateAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobTerminateHeaders>
  nameWithType: Task<JobTerminateHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders>
  nameWithType.vb: Task(Of JobTerminateHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders)
  name.vb: Task(Of JobTerminateHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
    name: JobTerminateHeaders
    nameWithType: JobTerminateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
    name: JobTerminateHeaders
    nameWithType: JobTerminateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add
  isExternal: false
  name: Add
  nameWithType: JobOperationsExtensions.Add
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add
- uid: Microsoft.Azure.Batch.Protocol.Models.JobAddParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobAddParameter
  nameWithType: JobAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobAddParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.JobAddOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobAddOptions
  nameWithType: JobAddOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobAddOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobAddHeaders
  nameWithType: JobAddHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync
  isExternal: false
  name: AddAsync
  nameWithType: JobOperationsExtensions.AddAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JobAddHeaders>
  nameWithType: Task<JobAddHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders>
  nameWithType.vb: Task(Of JobAddHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders)
  name.vb: Task(Of JobAddHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
    name: JobAddHeaders
    nameWithType: JobAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
    name: JobAddHeaders
    nameWithType: JobAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: JobOperationsExtensions.List
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List
- uid: Microsoft.Azure.Batch.Protocol.Models.JobListOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobListOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobListOptions
  nameWithType: JobListOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobListOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<CloudJob>
  nameWithType: IPage<CloudJob>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.CloudJob>
  nameWithType.vb: IPage(Of CloudJob)
  fullName.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.CloudJob)
  name.vb: IPage(Of CloudJob)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullName.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: JobOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudJob}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<CloudJob>>
  nameWithType: Task<IPage<CloudJob>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.CloudJob>>
  nameWithType.vb: Task(Of IPage(Of CloudJob))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.CloudJob))
  name.vb: Task(Of IPage(Of CloudJob))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule
  isExternal: false
  name: ListFromJobSchedule
  nameWithType: JobOperationsExtensions.ListFromJobSchedule
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule
- uid: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobListFromJobScheduleOptions
  nameWithType: JobListFromJobScheduleOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync
  isExternal: false
  name: ListFromJobScheduleAsync
  nameWithType: JobOperationsExtensions.ListFromJobScheduleAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus
  isExternal: false
  name: ListPreparationAndReleaseTaskStatus
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatus
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus
- uid: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobListPreparationAndReleaseTaskStatusOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<JobPreparationAndReleaseTaskExecutionInformation>
  nameWithType: IPage<JobPreparationAndReleaseTaskExecutionInformation>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation>
  nameWithType.vb: IPage(Of JobPreparationAndReleaseTaskExecutionInformation)
  fullName.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation)
  name.vb: IPage(Of JobPreparationAndReleaseTaskExecutionInformation)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    nameWithType: JobPreparationAndReleaseTaskExecutionInformation
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    nameWithType: JobPreparationAndReleaseTaskExecutionInformation
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync
  isExternal: false
  name: ListPreparationAndReleaseTaskStatusAsync
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<JobPreparationAndReleaseTaskExecutionInformation>>
  nameWithType: Task<IPage<JobPreparationAndReleaseTaskExecutionInformation>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation>>
  nameWithType.vb: Task(Of IPage(Of JobPreparationAndReleaseTaskExecutionInformation))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation))
  name.vb: Task(Of IPage(Of JobPreparationAndReleaseTaskExecutionInformation))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    nameWithType: JobPreparationAndReleaseTaskExecutionInformation
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    nameWithType: JobPreparationAndReleaseTaskExecutionInformation
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: JobOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext
- uid: Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobListNextOptions
  nameWithType: JobListNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: JobOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext
  isExternal: false
  name: ListFromJobScheduleNext
  nameWithType: JobOperationsExtensions.ListFromJobScheduleNext
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext
- uid: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobListFromJobScheduleNextOptions
  nameWithType: JobListFromJobScheduleNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync
  isExternal: false
  name: ListFromJobScheduleNextAsync
  nameWithType: JobOperationsExtensions.ListFromJobScheduleNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext
  isExternal: false
  name: ListPreparationAndReleaseTaskStatusNext
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext
- uid: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobListPreparationAndReleaseTaskStatusNextOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions
- uid: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync
  isExternal: false
  name: ListPreparationAndReleaseTaskStatusNextAsync
  nameWithType: JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync
