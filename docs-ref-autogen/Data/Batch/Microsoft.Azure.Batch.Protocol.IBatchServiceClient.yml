### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  commentId: T:Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  id: IBatchServiceClient
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings
  - Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task
  langs:
  - csharp
  - vb
  name: IBatchServiceClient
  nameWithType: IBatchServiceClient
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  type: Interface
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IBatchServiceClient
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 17
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nA client for issuing REST requests to the Azure Batch service.\n"
  example: []
  syntax:
    content: 'public interface IBatchServiceClient : IDisposable'
    content.vb: >-
      Public Interface IBatchServiceClient
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: IBatchServiceClient.BaseUri
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BaseUri
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 22
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nThe base URI of the service.\n"
  example: []
  syntax:
    content: Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Property BaseUri As Uri
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings
  id: SerializationSettings
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: SerializationSettings
  nameWithType: IBatchServiceClient.SerializationSettings
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SerializationSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 27
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets or sets json serialization settings.\n"
  example: []
  syntax:
    content: Newtonsoft.Json.JsonSerializerSettings SerializationSettings { get; }
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
    content.vb: ReadOnly Property SerializationSettings As Newtonsoft.Json.JsonSerializerSettings
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings
  id: DeserializationSettings
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: DeserializationSettings
  nameWithType: IBatchServiceClient.DeserializationSettings
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeserializationSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 32
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets or sets json deserialization settings.\n"
  example: []
  syntax:
    content: Newtonsoft.Json.JsonSerializerSettings DeserializationSettings { get; }
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
    content.vb: ReadOnly Property DeserializationSettings As Newtonsoft.Json.JsonSerializerSettings
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: IBatchServiceClient.Credentials
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Credentials
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 37
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nCredentials needed for the client to connect to Azure.\n"
  example: []
  syntax:
    content: Rest.ServiceClientCredentials Credentials { get; }
    parameters: []
    return:
      type: Microsoft.Rest.ServiceClientCredentials
    content.vb: ReadOnly Property Credentials As Rest.ServiceClientCredentials
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  nameWithType: IBatchServiceClient.ApiVersion
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApiVersion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 42
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nClient API Version.\n"
  example: []
  syntax:
    content: string ApiVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ApiVersion As String
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage
  id: AcceptLanguage
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: AcceptLanguage
  nameWithType: IBatchServiceClient.AcceptLanguage
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AcceptLanguage
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 47
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets or sets the preferred language for the response.\n"
  example: []
  syntax:
    content: string AcceptLanguage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property AcceptLanguage As String
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  nameWithType: IBatchServiceClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LongRunningOperationRetryTimeout
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 53
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets or sets the retry timeout in seconds for Long Running\nOperations. Default value is 30.\n"
  example: []
  syntax:
    content: int ? LongRunningOperationRetryTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Property LongRunningOperationRetryTimeout As Integer?
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId
  id: GenerateClientRequestId
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: GenerateClientRequestId
  nameWithType: IBatchServiceClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GenerateClientRequestId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 59
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nWhen set to true a unique x-ms-client-request-id value is generated\nand included in each request. Default is true.\n"
  example: []
  syntax:
    content: bool ? GenerateClientRequestId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Property GenerateClientRequestId As Boolean?
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application
  id: Application
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: IBatchServiceClient.Application
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Application
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 65
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IApplicationOperations.\n"
  example: []
  syntax:
    content: IApplicationOperations Application { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IApplicationOperations
    content.vb: ReadOnly Property Application As IApplicationOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool
  id: Pool
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Pool
  nameWithType: IBatchServiceClient.Pool
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Pool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 70
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IPoolOperations.\n"
  example: []
  syntax:
    content: IPoolOperations Pool { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
    content.vb: ReadOnly Property Pool As IPoolOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account
  id: Account
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: IBatchServiceClient.Account
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Account
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 75
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IAccountOperations.\n"
  example: []
  syntax:
    content: IAccountOperations Account { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IAccountOperations
    content.vb: ReadOnly Property Account As IAccountOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job
  id: Job
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Job
  nameWithType: IBatchServiceClient.Job
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Job
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 80
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IJobOperations.\n"
  example: []
  syntax:
    content: IJobOperations Job { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IJobOperations
    content.vb: ReadOnly Property Job As IJobOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate
  id: Certificate
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: IBatchServiceClient.Certificate
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Certificate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 85
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the ICertificateOperations.\n"
  example: []
  syntax:
    content: ICertificateOperations Certificate { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
    content.vb: ReadOnly Property Certificate As ICertificateOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File
  id: File
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: File
  nameWithType: IBatchServiceClient.File
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: File
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 90
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IFileOperations.\n"
  example: []
  syntax:
    content: IFileOperations File { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
    content.vb: ReadOnly Property File As IFileOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule
  id: JobSchedule
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: JobSchedule
  nameWithType: IBatchServiceClient.JobSchedule
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 95
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IJobScheduleOperations.\n"
  example: []
  syntax:
    content: IJobScheduleOperations JobSchedule { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IJobScheduleOperations
    content.vb: ReadOnly Property JobSchedule As IJobScheduleOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task
  id: Task
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: IBatchServiceClient.Task
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Task
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 100
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the ITaskOperations.\n"
  example: []
  syntax:
    content: ITaskOperations Task { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
    content.vb: ReadOnly Property Task As ITaskOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode
  commentId: P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode
  id: ComputeNode
  parent: Microsoft.Azure.Batch.Protocol.IBatchServiceClient
  langs:
  - csharp
  - vb
  name: ComputeNode
  nameWithType: IBatchServiceClient.ComputeNode
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/IBatchServiceClient.cs
    startLine: 105
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the IComputeNodeOperations.\n"
  example: []
  syntax:
    content: IComputeNodeOperations ComputeNode { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.IComputeNodeOperations
    content.vb: ReadOnly Property ComputeNode As IComputeNodeOperations
  overload: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: IBatchServiceClient.BaseUri
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings
  isExternal: false
  name: SerializationSettings
  nameWithType: IBatchServiceClient.SerializationSettings
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings
- uid: Newtonsoft.Json.JsonSerializerSettings
  isExternal: true
  name: Newtonsoft.Json.JsonSerializerSettings
  nameWithType: Newtonsoft.Json.JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings
  isExternal: false
  name: DeserializationSettings
  nameWithType: IBatchServiceClient.DeserializationSettings
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials
  isExternal: false
  name: Credentials
  nameWithType: IBatchServiceClient.Credentials
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials
- uid: Microsoft.Rest.ServiceClientCredentials
  isExternal: true
  name: Rest.ServiceClientCredentials
  nameWithType: Rest.ServiceClientCredentials
  fullName: Microsoft.Rest.ServiceClientCredentials
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion
  isExternal: false
  name: ApiVersion
  nameWithType: IBatchServiceClient.ApiVersion
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage
  isExternal: false
  name: AcceptLanguage
  nameWithType: IBatchServiceClient.AcceptLanguage
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: IBatchServiceClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: IBatchServiceClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application
  isExternal: false
  name: Application
  nameWithType: IBatchServiceClient.Application
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application
- uid: Microsoft.Azure.Batch.Protocol.IApplicationOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IApplicationOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IApplicationOperations
  nameWithType: IApplicationOperations
  fullName: Microsoft.Azure.Batch.Protocol.IApplicationOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool
  isExternal: false
  name: Pool
  nameWithType: IBatchServiceClient.Pool
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool
- uid: Microsoft.Azure.Batch.Protocol.IPoolOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IPoolOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IPoolOperations
  nameWithType: IPoolOperations
  fullName: Microsoft.Azure.Batch.Protocol.IPoolOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account
  isExternal: false
  name: Account
  nameWithType: IBatchServiceClient.Account
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account
- uid: Microsoft.Azure.Batch.Protocol.IAccountOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IAccountOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IAccountOperations
  nameWithType: IAccountOperations
  fullName: Microsoft.Azure.Batch.Protocol.IAccountOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job
  isExternal: false
  name: Job
  nameWithType: IBatchServiceClient.Job
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job
- uid: Microsoft.Azure.Batch.Protocol.IJobOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IJobOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IJobOperations
  nameWithType: IJobOperations
  fullName: Microsoft.Azure.Batch.Protocol.IJobOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate
  isExternal: false
  name: Certificate
  nameWithType: IBatchServiceClient.Certificate
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate
- uid: Microsoft.Azure.Batch.Protocol.ICertificateOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.ICertificateOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: ICertificateOperations
  nameWithType: ICertificateOperations
  fullName: Microsoft.Azure.Batch.Protocol.ICertificateOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File
  isExternal: false
  name: File
  nameWithType: IBatchServiceClient.File
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File
- uid: Microsoft.Azure.Batch.Protocol.IFileOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IFileOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IFileOperations
  nameWithType: IFileOperations
  fullName: Microsoft.Azure.Batch.Protocol.IFileOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule
  isExternal: false
  name: JobSchedule
  nameWithType: IBatchServiceClient.JobSchedule
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule
- uid: Microsoft.Azure.Batch.Protocol.IJobScheduleOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IJobScheduleOperations
  nameWithType: IJobScheduleOperations
  fullName: Microsoft.Azure.Batch.Protocol.IJobScheduleOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task
  isExternal: false
  name: Task
  nameWithType: IBatchServiceClient.Task
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task
- uid: Microsoft.Azure.Batch.Protocol.ITaskOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.ITaskOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: ITaskOperations
  nameWithType: ITaskOperations
  fullName: Microsoft.Azure.Batch.Protocol.ITaskOperations
- uid: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode
  isExternal: false
  name: ComputeNode
  nameWithType: IBatchServiceClient.ComputeNode
  fullName: Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode
- uid: Microsoft.Azure.Batch.Protocol.IComputeNodeOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IComputeNodeOperations
  nameWithType: IComputeNodeOperations
  fullName: Microsoft.Azure.Batch.Protocol.IComputeNodeOperations
