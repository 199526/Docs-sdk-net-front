### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  commentId: T:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  id: TaskDependenciesUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  - Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  langs:
  - csharp
  - vb
  name: TaskDependenciesUnitTests
  nameWithType: TaskDependenciesUnitTests
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskDependenciesUnitTests
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 32
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class TaskDependenciesUnitTests
    content.vb: Public Class TaskDependenciesUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob
  id: CannotSetUsesTaskDependenciesFromABoundCloudJob
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: CannotSetUsesTaskDependenciesFromABoundCloudJob()
  nameWithType: TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CannotSetUsesTaskDependenciesFromABoundCloudJob
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 34
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CannotSetUsesTaskDependenciesFromABoundCloudJob()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CannotSetUsesTaskDependenciesFromABoundCloudJob
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  id: CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest()
  nameWithType: TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 66
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  id: CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted()
  nameWithType: TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 97
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  id: WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy()
  nameWithType: TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 129
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  id: WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly()
  nameWithType: TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 170
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask
  id: CannotModifyDependenciesOfABoundTask
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: CannotModifyDependenciesOfABoundTask()
  nameWithType: TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CannotModifyDependenciesOfABoundTask
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 204
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void CannotModifyDependenciesOfABoundTask()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub CannotModifyDependenciesOfABoundTask
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds
  id: TaskDependenciesCanSuccessfullyStoreTaskIds
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: TaskDependenciesCanSuccessfullyStoreTaskIds()
  nameWithType: TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskDependenciesCanSuccessfullyStoreTaskIds
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 232
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void TaskDependenciesCanSuccessfullyStoreTaskIds()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub TaskDependenciesCanSuccessfullyStoreTaskIds
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  id: TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: TaskDependenciesCanSuccessfullyStoreTaskIdRanges()
  nameWithType: TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskDependenciesCanSuccessfullyStoreTaskIdRanges
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 245
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void TaskDependenciesCanSuccessfullyStoreTaskIdRanges()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList
  id: ANullListOfIdsIsTreatedAsAnEmptyList
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ANullListOfIdsIsTreatedAsAnEmptyList()
  nameWithType: TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ANullListOfIdsIsTreatedAsAnEmptyList
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 264
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ANullListOfIdsIsTreatedAsAnEmptyList()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ANullListOfIdsIsTreatedAsAnEmptyList
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList
  id: ANullListOfRangesIsTreatedAsAnEmptyList
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ANullListOfRangesIsTreatedAsAnEmptyList()
  nameWithType: TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ANullListOfRangesIsTreatedAsAnEmptyList
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 273
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ANullListOfRangesIsTreatedAsAnEmptyList()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ANullListOfRangesIsTreatedAsAnEmptyList
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  id: ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 282
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  id: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 294
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  id: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 308
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  id: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 322
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  id: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 336
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  id: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 353
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  id: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 367
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  id: ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod()
  nameWithType: TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 381
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol
  commentId: M:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol
  id: TaskDependenciesWithNullPropertiesFromProtocol
  parent: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests
  langs:
  - csharp
  - vb
  name: TaskDependenciesWithNullPropertiesFromProtocol()
  nameWithType: TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol()
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskDependenciesWithNullPropertiesFromProtocol
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/TaskDependenciesUnitTests.cs
    startLine: 394
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public void TaskDependenciesWithNullPropertiesFromProtocol()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Sub TaskDependenciesWithNullPropertiesFromProtocol
  overload: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob
  isExternal: false
  name: CannotSetUsesTaskDependenciesFromABoundCloudJob
  nameWithType: TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotSetUsesTaskDependenciesFromABoundCloudJob
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  isExternal: false
  name: CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  nameWithType: TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  isExternal: false
  name: CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  nameWithType: TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  isExternal: false
  name: WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  nameWithType: TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  isExternal: false
  name: WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  nameWithType: TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask
  isExternal: false
  name: CannotModifyDependenciesOfABoundTask
  nameWithType: TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.CannotModifyDependenciesOfABoundTask
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds
  isExternal: false
  name: TaskDependenciesCanSuccessfullyStoreTaskIds
  nameWithType: TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIds
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  isExternal: false
  name: TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  nameWithType: TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesCanSuccessfullyStoreTaskIdRanges
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList
  isExternal: false
  name: ANullListOfIdsIsTreatedAsAnEmptyList
  nameWithType: TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfIdsIsTreatedAsAnEmptyList
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList
  isExternal: false
  name: ANullListOfRangesIsTreatedAsAnEmptyList
  nameWithType: TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ANullListOfRangesIsTreatedAsAnEmptyList
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  isExternal: false
  name: ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  nameWithType: TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdCanBeExpressedUsingAFactoryMethod
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  isExternal: false
  name: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  isExternal: false
  name: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  isExternal: false
  name: ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  isExternal: false
  name: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  isExternal: false
  name: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  isExternal: false
  name: ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  nameWithType: TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  isExternal: false
  name: ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  nameWithType: TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod
- uid: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol*
  commentId: Overload:Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol
  isExternal: false
  name: TaskDependenciesWithNullPropertiesFromProtocol
  nameWithType: TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol
  fullName: Azure.Batch.Unit.Tests.TaskDependenciesUnitTests.TaskDependenciesWithNullPropertiesFromProtocol
