### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  id: JobManagerTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity
  - Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate
  langs:
  - csharp
  - vb
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobManagerTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 25
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nSpecifies details of a Job Manager task.\n"
  example: []
  syntax:
    content: public class JobManagerTask
    content.vb: Public Class JobManagerTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: JobManagerTask()
  nameWithType: JobManagerTask.JobManagerTask()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.JobManagerTask()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 30
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobManagerTask class.\n"
  example: []
  syntax:
    content: public JobManagerTask()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: JobManagerTask(String, String, String, IList<ResourceFile>, IList<EnvironmentSetting>, TaskConstraints, Nullable<Boolean>, UserIdentity, Nullable<Boolean>, IList<ApplicationPackageReference>, AuthenticationTokenSettings)
  nameWithType: JobManagerTask.JobManagerTask(String, String, String, IList<ResourceFile>, IList<EnvironmentSetting>, TaskConstraints, Nullable<Boolean>, UserIdentity, Nullable<Boolean>, IList<ApplicationPackageReference>, AuthenticationTokenSettings)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.JobManagerTask(System.String, System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.UserIdentity, System.Nullable<System.Boolean>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>, Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 60
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobManagerTask class.\n"
  example: []
  syntax:
    content: public JobManagerTask(string id, string commandLine, string displayName = null, IList<ResourceFile> resourceFiles = null, IList<EnvironmentSetting> environmentSettings = null, TaskConstraints constraints = null, bool ? killJobOnCompletion = null, UserIdentity userIdentity = null, bool ? runExclusive = null, IList<ApplicationPackageReference> applicationPackageReferences = null, AuthenticationTokenSettings authenticationTokenSettings = null)
    content.vb: Public Sub New(id As String, commandLine As String, displayName As String = Nothing, resourceFiles As IList(Of ResourceFile) = Nothing, environmentSettings As IList(Of EnvironmentSetting) = Nothing, constraints As TaskConstraints = Nothing, killJobOnCompletion As Boolean? = Nothing, userIdentity As UserIdentity = Nothing, runExclusive As Boolean? = Nothing, applicationPackageReferences As IList(Of ApplicationPackageReference) = Nothing, authenticationTokenSettings As AuthenticationTokenSettings = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the Job Manager

        taskwithin the job.
    - id: commandLine
      type: System.String
      description: >-
        The command line of the Job Manager

        task.
    - id: displayName
      type: System.String
      description: >-
        The display name of the Job Manager

        task.
    - id: resourceFiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
      description: >-
        A list of files that the Batch service

        will download to the compute node before running the command

        line.
    - id: environmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        A list of environment variable

        settings for the Job Manager task.
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
      description: >-
        Constraints that apply to the Job Manager

        task.
    - id: killJobOnCompletion
      type: System.Nullable{System.Boolean}
      description: >-
        Whether completion of the Job

        Manager task signifies completion of the entire job.
    - id: userIdentity
      type: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
      description: >-
        The user identity under which the Job

        Manager task runs.
    - id: runExclusive
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the Job Manager task requires

        exclusive use of the compute node where it runs.
    - id: applicationPackageReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
      description: >-
        A list of application

        packages that the Batch service will deploy to the compute node

        before running the command line.
    - id: authenticationTokenSettings
      type: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
      description: >-
        The settings for an

        authentication token that the task can use to perform Batch service

        operations.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor*
  nameWithType.vb: JobManagerTask.JobManagerTask(String, String, String, IList(Of ResourceFile), IList(Of EnvironmentSetting), TaskConstraints, Nullable(Of Boolean), UserIdentity, Nullable(Of Boolean), IList(Of ApplicationPackageReference), AuthenticationTokenSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.JobManagerTask(System.String, System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.UserIdentity, System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference), Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings)
  name.vb: JobManagerTask(String, String, String, IList(Of ResourceFile), IList(Of EnvironmentSetting), TaskConstraints, Nullable(Of Boolean), UserIdentity, Nullable(Of Boolean), IList(Of ApplicationPackageReference), AuthenticationTokenSettings)
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: JobManagerTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 84
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the Job Manager\ntaskwithin the job.\n"
  remarks: "\nThe id can contain any combination of alphanumeric characters\nincluding hyphens and underscores and cannot contain more than 64\ncharacters.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: JobManagerTask.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 94
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the display name of the Job Manager task.\n"
  remarks: "\nIt need not be unique and can contain any Unicode characters up to\na maximum length of 1024.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: JobManagerTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 107
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the command line of the Job Manager task.\n"
  remarks: "\nThe command line does not run under a shell, and therefore cannot\ntake advantage of shell features such as environment variable\nexpansion. If you want to take advantage of such features, you\nshould invoke the shell in the command line, for example using \"cmd\n/c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "commandLine")]

      public string CommandLine { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="commandLine")>

      Public Property CommandLine As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: commandLine
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: JobManagerTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 118
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of files that the Batch service will download\nto the compute node before running the command line.\n"
  remarks: "\nFiles listed under this element are located in the task's working\ndirectory.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceFiles")]

      public IList<ResourceFile> ResourceFiles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceFiles")>

      Public Property ResourceFiles As IList(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceFiles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: JobManagerTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 125
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of environment variable settings for the Job\nManager task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "environmentSettings")]

      public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="environmentSettings")>

      Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: environmentSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: JobManagerTask.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 131
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets constraints that apply to the Job Manager task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "constraints")]

      public TaskConstraints Constraints { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="constraints")>

      Public Property Constraints As TaskConstraints
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: constraints
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion
  id: KillJobOnCompletion
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: KillJobOnCompletion
  nameWithType: JobManagerTask.KillJobOnCompletion
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KillJobOnCompletion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 153
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether completion of the Job Manager task signifies\ncompletion of the entire job.\n"
  remarks: "\nIf true, when the Job Manager task completes, the Batch service\nmarks the job as complete. If any tasks are still running at this\ntime (other than Job Release), those tasks are terminated. If\nfalse, the completion of the Job Manager task does not affect the\njob status. In this case, you should either use the\nonAllTasksComplete attribute to terminate the job, or have a client\nor user terminate the job explicitly. An example of this is if the\nJob Manager creates a set of tasks but then takes no further role\nin their execution. The default value is true. If you are using the\nonAllTasksComplete and onTaskFailure attributes to control job\nlifetime, and using the Job Manager task only to create the tasks\nfor the job (not to monitor progress), then it is important to set\nkillJobOnCompletion to false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "killJobOnCompletion")]

      public bool ? KillJobOnCompletion { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="killJobOnCompletion")>

      Public Property KillJobOnCompletion As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: killJobOnCompletion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity
  id: UserIdentity
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: UserIdentity
  nameWithType: JobManagerTask.UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UserIdentity
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 164
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the user identity under which the Job Manager task\nruns.\n"
  remarks: "\nIf omitted, the task runs as a non-administrative user unique to\nthe task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "userIdentity")]

      public UserIdentity UserIdentity { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="userIdentity")>

      Public Property UserIdentity As UserIdentity
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: userIdentity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive
  id: RunExclusive
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: RunExclusive
  nameWithType: JobManagerTask.RunExclusive
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunExclusive
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 179
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the Job Manager task requires exclusive use of\nthe compute node where it runs.\n"
  remarks: "\nIf true, no other tasks will run on the same compute node for as\nlong as the Job Manager is running. If false, other tasks can run\nsimultaneously with the Job Manager on a compute node. The Job\nManager task counts normally against the node's concurrent task\nlimit, so this is only relevant if the node allows multiple\nconcurrent tasks. The default value is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "runExclusive")]

      public bool ? RunExclusive { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="runExclusive")>

      Public Property RunExclusive As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: runExclusive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: JobManagerTask.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 199
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of application packages that the Batch service\nwill deploy to the compute node before running the command line.\n"
  remarks: "\nApplication packages are downloaded and deployed to a shared\ndirectory, not the task directory. Therefore, if a referenced\npackage is already on the compute node, and is up to date, then it\nis not re-downloaded; the existing copy on the compute node is\nused. If a referenced application package cannot be installed, for\nexample because the package has been deleted or because download\nfailed, the task fails with a scheduling error. This property is\ncurrently not supported on jobs running on pools created using the\nvirtualMachineConfiguration (IaaS) property. If a task specifying\napplicationPackageReferences runs on such a pool, it fails with a\nscheduling error with code TaskSchedulingConstraintFailed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "applicationPackageReferences")]

      public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="applicationPackageReferences")>

      Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: applicationPackageReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings
  id: AuthenticationTokenSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: AuthenticationTokenSettings
  nameWithType: JobManagerTask.AuthenticationTokenSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AuthenticationTokenSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 216
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the settings for an authentication token that the task\ncan use to perform Batch service operations.\n"
  remarks: "\nIf this property is set, the Batch service provides the task with\nan authentication token which can be used to authenticate Batch\nservice operations without requiring an account access key. The\ntoken is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\nvariable. The operations that the task can carry out using the\ntoken depend on the settings. For example, a task can request job\npermissions in order to add other tasks to the job, or check the\nstatus of the job or of other tasks under the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "authenticationTokenSettings")]

      public AuthenticationTokenSettings AuthenticationTokenSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="authenticationTokenSettings")>

      Public Property AuthenticationTokenSettings As AuthenticationTokenSettings
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: authenticationTokenSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobManagerTask.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobManagerTask.cs
    startLine: 225
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor
  isExternal: false
  name: JobManagerTask
  nameWithType: JobManagerTask.JobManagerTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.JobManagerTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: UserIdentity
  nameWithType: UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: AuthenticationTokenSettings
  nameWithType: AuthenticationTokenSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.AuthenticationTokenSettings
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id
  isExternal: false
  name: Id
  nameWithType: JobManagerTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: JobManagerTask.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: JobManagerTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: JobManagerTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: JobManagerTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints
  isExternal: false
  name: Constraints
  nameWithType: JobManagerTask.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion
  isExternal: false
  name: KillJobOnCompletion
  nameWithType: JobManagerTask.KillJobOnCompletion
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity
  isExternal: false
  name: UserIdentity
  nameWithType: JobManagerTask.UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.UserIdentity
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive
  isExternal: false
  name: RunExclusive
  nameWithType: JobManagerTask.RunExclusive
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: JobManagerTask.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ApplicationPackageReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings
  isExternal: false
  name: AuthenticationTokenSettings
  nameWithType: JobManagerTask.AuthenticationTokenSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.AuthenticationTokenSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate
  isExternal: false
  name: Validate
  nameWithType: JobManagerTask.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
