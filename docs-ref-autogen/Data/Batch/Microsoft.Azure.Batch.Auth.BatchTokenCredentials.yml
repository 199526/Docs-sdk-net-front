### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  commentId: T:Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  id: BatchTokenCredentials
  parent: Microsoft.Azure.Batch.Auth
  children:
  - Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.Func{System.Threading.Tasks.Task{System.String}})
  - Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.String)
  - Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider
  langs:
  - csharp
  - vb
  name: BatchTokenCredentials
  nameWithType: BatchTokenCredentials
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchTokenCredentials
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Auth
  summary: "\nAzure Active Directory token credentials for an Azure Batch account.\n"
  example: []
  syntax:
    content: 'public class BatchTokenCredentials : BatchCredentials'
    content.vb: >-
      Public Class BatchTokenCredentials
          Inherits BatchCredentials
  inheritance:
  - System.Object
  - Microsoft.Azure.Batch.Auth.BatchCredentials
  inheritedMembers:
  - Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider
  commentId: P:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider
  id: TokenProvider
  parent: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  langs:
  - csharp
  - vb
  name: TokenProvider
  nameWithType: BatchTokenCredentials.TokenProvider
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TokenProvider
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Auth
  summary: "\nGets a function which returns an authentication token.\n"
  example: []
  syntax:
    content: public Func<Task<string>> TokenProvider { get; }
    content.vb: Public ReadOnly Property TokenProvider As Func(Of Task(Of String))
    parameters: []
    return:
      type: System.Func{System.Threading.Tasks.Task{System.String}}
  overload: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  langs:
  - csharp
  - vb
  name: BatchTokenCredentials(String, String)
  nameWithType: BatchTokenCredentials.BatchTokenCredentials(String, String)
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.BatchTokenCredentials(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Auth
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.Auth.BatchTokenCredentials\" data-throw-if-not-resolved=\"false\"></xref> class with the specified Batch service endpoint and authentication token.\n"
  example: []
  syntax:
    content: public BatchTokenCredentials(string baseUrl, string token)
    content.vb: Public Sub New(baseUrl As String, token As String)
    parameters:
    - id: baseUrl
      type: System.String
      description: The Batch service endpoint.
    - id: token
      type: System.String
      description: An authentication token provided by Azure Active Directory.
  overload: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.Func{System.Threading.Tasks.Task{System.String}})
  commentId: M:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor(System.String,System.Func{System.Threading.Tasks.Task{System.String}})
  id: '#ctor(System.String,System.Func{System.Threading.Tasks.Task{System.String}})'
  parent: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  langs:
  - csharp
  - vb
  name: BatchTokenCredentials(String, Func<Task<String>>)
  nameWithType: BatchTokenCredentials.BatchTokenCredentials(String, Func<Task<String>>)
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.BatchTokenCredentials(System.String, System.Func<System.Threading.Tasks.Task<System.String>>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Auth/BatchTokenCredentials.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Auth
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.Auth.BatchTokenCredentials\" data-throw-if-not-resolved=\"false\"></xref> class with the specified Batch service endpoint and authentication token provider function.\n"
  example: []
  syntax:
    content: public BatchTokenCredentials(string baseUrl, Func<Task<string>> tokenProvider)
    content.vb: Public Sub New(baseUrl As String, tokenProvider As Func(Of Task(Of String)))
    parameters:
    - id: baseUrl
      type: System.String
      description: The Batch service endpoint.
    - id: tokenProvider
      type: System.Func{System.Threading.Tasks.Task{System.String}}
      description: A function which returns an authentication token.
  overload: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor*
  nameWithType.vb: BatchTokenCredentials.BatchTokenCredentials(String, Func(Of Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.BatchTokenCredentials(System.String, System.Func(Of System.Threading.Tasks.Task(Of System.String)))
  name.vb: BatchTokenCredentials(String, Func(Of Task(Of String)))
references:
- uid: Microsoft.Azure.Batch.Auth
  commentId: N:Microsoft.Azure.Batch.Auth
  isExternal: false
  name: Microsoft.Azure.Batch.Auth
  nameWithType: Microsoft.Azure.Batch.Auth
  fullName: Microsoft.Azure.Batch.Auth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.Auth.BatchCredentials
  commentId: T:Microsoft.Azure.Batch.Auth.BatchCredentials
  parent: Microsoft.Azure.Batch.Auth
  isExternal: false
  name: BatchCredentials
  nameWithType: BatchCredentials
  fullName: Microsoft.Azure.Batch.Auth.BatchCredentials
- uid: Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl
  commentId: P:Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl
  parent: Microsoft.Azure.Batch.Auth.BatchCredentials
  isExternal: false
  name: BaseUrl
  nameWithType: BatchCredentials.BaseUrl
  fullName: Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider*
  commentId: Overload:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider
  isExternal: false
  name: TokenProvider
  nameWithType: BatchTokenCredentials.TokenProvider
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.TokenProvider
- uid: System.Func{System.Threading.Tasks.Task{System.String}}
  commentId: T:System.Func{System.Threading.Tasks.Task{System.String}}
  parent: System
  definition: System.Func`1
  name: Func<Task<String>>
  nameWithType: Func<Task<String>>
  fullName: System.Func<System.Threading.Tasks.Task<System.String>>
  nameWithType.vb: Func(Of Task(Of String))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of System.String))
  name.vb: Func(Of Task(Of String))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  commentId: T:Microsoft.Azure.Batch.Auth.BatchTokenCredentials
  parent: Microsoft.Azure.Batch.Auth
  isExternal: false
  name: BatchTokenCredentials
  nameWithType: BatchTokenCredentials
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials
- uid: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Auth.BatchTokenCredentials.#ctor
  isExternal: false
  name: BatchTokenCredentials
  nameWithType: BatchTokenCredentials.BatchTokenCredentials
  fullName: Microsoft.Azure.Batch.Auth.BatchTokenCredentials.BatchTokenCredentials
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
