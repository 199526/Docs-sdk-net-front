### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  id: AutoUserSpecification
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel})
  - Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel
  - Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope
  langs:
  - csharp
  - vb
  name: AutoUserSpecification
  nameWithType: AutoUserSpecification
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoUserSpecification
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nSpecifies the parameters for the auto user that runs a task on the\nBatch service.\n"
  example: []
  syntax:
    content: public class AutoUserSpecification
    content.vb: Public Class AutoUserSpecification
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  langs:
  - csharp
  - vb
  name: AutoUserSpecification()
  nameWithType: AutoUserSpecification.AutoUserSpecification()
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.AutoUserSpecification()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the AutoUserSpecification class.\n"
  example: []
  syntax:
    content: public AutoUserSpecification()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel})
  id: '#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel})'
  parent: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  langs:
  - csharp
  - vb
  name: AutoUserSpecification(Nullable<AutoUserScope>, Nullable<ElevationLevel>)
  nameWithType: AutoUserSpecification.AutoUserSpecification(Nullable<AutoUserScope>, Nullable<ElevationLevel>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.AutoUserSpecification(System.Nullable<Microsoft.Azure.Batch.Protocol.Models.AutoUserScope>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.ElevationLevel>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the AutoUserSpecification class.\n"
  example: []
  syntax:
    content: public AutoUserSpecification(AutoUserScope? scope = null, ElevationLevel? elevationLevel = null)
    content.vb: Public Sub New(scope As AutoUserScope? = Nothing, elevationLevel As ElevationLevel? = Nothing)
    parameters:
    - id: scope
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope}
      description: The scope for the auto user
    - id: elevationLevel
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
      description: >-
        The elevation level of the auto

        user.
  overload: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor*
  nameWithType.vb: AutoUserSpecification.AutoUserSpecification(Nullable(Of AutoUserScope), Nullable(Of ElevationLevel))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.AutoUserSpecification(System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.AutoUserScope), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.ElevationLevel))
  name.vb: AutoUserSpecification(Nullable(Of AutoUserScope), Nullable(Of ElevationLevel))
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope
  id: Scope
  parent: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: AutoUserSpecification.Scope
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Scope
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the scope for the auto user\n"
  remarks: "\npool - specifies that the task runs as the common auto user account\nwhich is created on every node in a pool. task - specifies that the\nservice should create a new user for the task. The default value is\ntask. Possible values include: 'task', 'pool'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "scope")]

      public AutoUserScope? Scope { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="scope")>

      Public Property Scope As AutoUserScope?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope}
  overload: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: scope
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel
  id: ElevationLevel
  parent: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification
  langs:
  - csharp
  - vb
  name: ElevationLevel
  nameWithType: AutoUserSpecification.ElevationLevel
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ElevationLevel
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/AutoUserSpecification.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the elevation level of the auto user.\n"
  remarks: "\nnonAdmin - The auto user is a standard user without elevated\naccess. admin - The auto user is a user with elevated access and\noperates with full Administrator permissions. The default value is\nnonAdmin. Possible values include: 'nonAdmin', 'admin'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "elevationLevel")]

      public ElevationLevel? ElevationLevel { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="elevationLevel")>

      Public Property ElevationLevel As ElevationLevel?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
  overload: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: elevationLevel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.#ctor
  isExternal: false
  name: AutoUserSpecification
  nameWithType: AutoUserSpecification.AutoUserSpecification
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.AutoUserSpecification
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AutoUserScope}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AutoUserScope>
  nameWithType: Nullable<AutoUserScope>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.AutoUserScope>
  nameWithType.vb: Nullable(Of AutoUserScope)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.AutoUserScope)
  name.vb: Nullable(Of AutoUserScope)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserScope
    name: AutoUserScope
    nameWithType: AutoUserScope
    fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserScope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserScope
    name: AutoUserScope
    nameWithType: AutoUserScope
    fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserScope
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ElevationLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ElevationLevel>
  nameWithType: Nullable<ElevationLevel>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.ElevationLevel>
  nameWithType.vb: Nullable(Of ElevationLevel)
  fullName.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.ElevationLevel)
  name.vb: Nullable(Of ElevationLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
    name: ElevationLevel
    nameWithType: ElevationLevel
    fullName: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
    name: ElevationLevel
    nameWithType: ElevationLevel
    fullName: Microsoft.Azure.Batch.Protocol.Models.ElevationLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope
  isExternal: false
  name: Scope
  nameWithType: AutoUserSpecification.Scope
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.Scope
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel
  isExternal: false
  name: ElevationLevel
  nameWithType: AutoUserSpecification.ElevationLevel
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoUserSpecification.ElevationLevel
