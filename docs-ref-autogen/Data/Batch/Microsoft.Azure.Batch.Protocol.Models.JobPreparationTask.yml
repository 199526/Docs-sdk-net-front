### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  id: JobPreparationTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean})
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess
  langs:
  - csharp
  - vb
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 16
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA Job Preparation task to run before any tasks of the job on any given\ncompute node.\n"
  example: []
  syntax:
    content: public class JobPreparationTask
    content.vb: Public Class JobPreparationTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: JobPreparationTask()
  nameWithType: JobPreparationTask.JobPreparationTask()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.JobPreparationTask()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 21
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobPreparationTask class.\n"
  example: []
  syntax:
    content: public JobPreparationTask()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.UserIdentity,System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: JobPreparationTask(String, String, IList<ResourceFile>, IList<EnvironmentSetting>, TaskConstraints, Nullable<Boolean>, UserIdentity, Nullable<Boolean>)
  nameWithType: JobPreparationTask.JobPreparationTask(String, String, IList<ResourceFile>, IList<EnvironmentSetting>, TaskConstraints, Nullable<Boolean>, UserIdentity, Nullable<Boolean>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.JobPreparationTask(System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.UserIdentity, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 45
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobPreparationTask class.\n"
  example: []
  syntax:
    content: public JobPreparationTask(string commandLine, string id = null, IList<ResourceFile> resourceFiles = null, IList<EnvironmentSetting> environmentSettings = null, TaskConstraints constraints = null, bool ? waitForSuccess = null, UserIdentity userIdentity = null, bool ? rerunOnNodeRebootAfterSuccess = null)
    parameters:
    - id: commandLine
      type: System.String
      description: >-
        The command line of the Job Preparation

        task.
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the Job

        Preparation task within the job.
    - id: resourceFiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
      description: >-
        A list of files that the Batch service

        will download to the compute node before running the command

        line.
    - id: environmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        A list of environment variable

        settings for the Job Preparation task.
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
      description: >-
        Constraints that apply to the Job

        Preparation task.
    - id: waitForSuccess
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the Batch service should wait

        for the Job Preparation task to complete successfully before

        scheduling any other tasks of the job on the compute node.
    - id: userIdentity
      type: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
      description: >-
        The user identity under which the Job

        Preparation task runs.
    - id: rerunOnNodeRebootAfterSuccess
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the Batch

        service should rerun the Job Preparation task after a compute node

        reboots.
    content.vb: Public Sub New(commandLine As String, id As String = Nothing, resourceFiles As IList(Of ResourceFile) = Nothing, environmentSettings As IList(Of EnvironmentSetting) = Nothing, constraints As TaskConstraints = Nothing, waitForSuccess As Boolean? = Nothing, userIdentity As UserIdentity = Nothing, rerunOnNodeRebootAfterSuccess As Boolean? = Nothing)
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor*
  nameWithType.vb: JobPreparationTask.JobPreparationTask(String, String, IList(Of ResourceFile), IList(Of EnvironmentSetting), TaskConstraints, Nullable(Of Boolean), UserIdentity, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.JobPreparationTask(System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.UserIdentity, System.Nullable(Of System.Boolean))
  name.vb: JobPreparationTask(String, String, IList(Of ResourceFile), IList(Of EnvironmentSetting), TaskConstraints, Nullable(Of Boolean), UserIdentity, Nullable(Of Boolean))
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: JobPreparationTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 72
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the Job Preparation\ntask within the job.\n"
  remarks: "\nThe ID can contain any combination of alphanumeric characters\nincluding hyphens and underscores and cannot contain more than 64\ncharacters. If you do not specify this property, the Batch service\nassigns a default value of 'jobpreparation'. No other task in the\njob can have the same id as the Job Preparation task. If you try to\nsubmit a task with the same id, the Batch service rejects the\nrequest with error code TaskIdSameAsJobPreparationTask; if you are\ncalling the REST API directly, the HTTP status code is 409\n(Conflict).\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: JobPreparationTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 85
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the command line of the Job Preparation task.\n"
  remarks: "\nThe command line does not run under a shell, and therefore cannot\ntake advantage of shell features such as environment variable\nexpansion. If you want to take advantage of such features, you\nshould invoke the shell in the command line, for example using \"cmd\n/c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: public string CommandLine { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CommandLine As String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: JobPreparationTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 96
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of files that the Batch service will download\nto the compute node before running the command line.\n"
  remarks: "\nFiles listed under this element are located in the task's working\ndirectory.\n"
  example: []
  syntax:
    content: public IList<ResourceFile> ResourceFiles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
    content.vb: Public Property ResourceFiles As IList(Of ResourceFile)
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: JobPreparationTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 103
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of environment variable settings for the Job\nPreparation task.\n"
  example: []
  syntax:
    content: public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
    content.vb: Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: JobPreparationTask.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 109
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets constraints that apply to the Job Preparation task.\n"
  example: []
  syntax:
    content: public TaskConstraints Constraints { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
    content.vb: Public Property Constraints As TaskConstraints
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess
  id: WaitForSuccess
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: WaitForSuccess
  nameWithType: JobPreparationTask.WaitForSuccess
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WaitForSuccess
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 131
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the Batch service should wait for the Job\nPreparation task to complete successfully before scheduling any\nother tasks of the job on the compute node.\n"
  remarks: "\nIf true and the Job Preparation task fails on a compute node, the\nBatch service retries the Job Preparation task up to its maximum\nretry count (as specified in the constraints element). If the task\nhas still not completed successfully after all retries, then the\nBatch service will not schedule tasks of the job to the compute\nnode. The compute node remains active and eligible to run tasks of\nother jobs. If false, the Batch service will not wait for the Job\nPreparation task to complete. In this case, other tasks of the job\ncan start executing on the compute node while the Job Preparation\ntask is still running; and even if the Job Preparation task fails,\nnew tasks will continue to be scheduled on the node. The default\nvalue is true.\n"
  example: []
  syntax:
    content: public bool ? WaitForSuccess { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property WaitForSuccess As Boolean?
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity
  id: UserIdentity
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: UserIdentity
  nameWithType: JobPreparationTask.UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UserIdentity
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 142
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the user identity under which the Job Preparation task\nruns.\n"
  remarks: "\nIf omitted, the task runs as a non-administrative user unique to\nthe task.\n"
  example: []
  syntax:
    content: public UserIdentity UserIdentity { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
    content.vb: Public Property UserIdentity As UserIdentity
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess
  id: RerunOnNodeRebootAfterSuccess
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: RerunOnNodeRebootAfterSuccess
  nameWithType: JobPreparationTask.RerunOnNodeRebootAfterSuccess
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RerunOnNodeRebootAfterSuccess
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 157
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the Batch service should rerun the Job\nPreparation task after a compute node reboots.\n"
  remarks: "\nThe Job Preparation task is always rerun if a compute node is\nreimaged, or if the Job Preparation task did not complete (e.g.\nbecause the reboot occurred while the task was running). Therefore,\nyou should always write a Job Preparation task to be idempotent and\nto behave correctly if run multiple times. The default value is\ntrue.\n"
  example: []
  syntax:
    content: public bool ? RerunOnNodeRebootAfterSuccess { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property RerunOnNodeRebootAfterSuccess As Boolean?
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobPreparationTask.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Azure.Batch/GeneratedProtocol/Models/JobPreparationTask.cs
    startLine: 166
  assemblies:
  - Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor
  isExternal: false
  name: JobPreparationTask
  nameWithType: JobPreparationTask.JobPreparationTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.JobPreparationTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.UserIdentity
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: UserIdentity
  nameWithType: UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.UserIdentity
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id
  isExternal: false
  name: Id
  nameWithType: JobPreparationTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: JobPreparationTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: JobPreparationTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: JobPreparationTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints
  isExternal: false
  name: Constraints
  nameWithType: JobPreparationTask.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess
  isExternal: false
  name: WaitForSuccess
  nameWithType: JobPreparationTask.WaitForSuccess
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity
  isExternal: false
  name: UserIdentity
  nameWithType: JobPreparationTask.UserIdentity
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.UserIdentity
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess
  isExternal: false
  name: RerunOnNodeRebootAfterSuccess
  nameWithType: JobPreparationTask.RerunOnNodeRebootAfterSuccess
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate
  isExternal: false
  name: Validate
  nameWithType: JobPreparationTask.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Validate
