### YamlMime:ManagedReference
items:
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests
  commentId: T:Azure.Batch.Unit.Tests.InterceptorUnitTests
  id: InterceptorUnitTests
  parent: Azure.Batch.Unit.Tests
  children:
  - Azure.Batch.Unit.Tests.InterceptorUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  - Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter
  - Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect
  - Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout
  langs:
  - csharp
  - vb
  name: InterceptorUnitTests
  nameWithType: InterceptorUnitTests
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests
  type: Class
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InterceptorUnitTests
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
    startLine: 29
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public class InterceptorUnitTests
    content.vb: Public Class InterceptorUnitTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  commentId: M:Azure.Batch.Unit.Tests.InterceptorUnitTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper)'
  parent: Azure.Batch.Unit.Tests.InterceptorUnitTests
  langs:
  - csharp
  - vb
  name: InterceptorUnitTests(ITestOutputHelper)
  nameWithType: InterceptorUnitTests.InterceptorUnitTests(ITestOutputHelper)
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.InterceptorUnitTests(Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
    startLine: 35
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: public InterceptorUnitTests(ITestOutputHelper testOutputHelper)
    content.vb: Public Sub New(testOutputHelper As ITestOutputHelper)
    parameters:
    - id: testOutputHelper
      type: Xunit.Abstractions.ITestOutputHelper
  overload: Azure.Batch.Unit.Tests.InterceptorUnitTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout
  commentId: M:Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout
  id: TestSetBatchRequestServerTimeout
  parent: Azure.Batch.Unit.Tests.InterceptorUnitTests
  langs:
  - csharp
  - vb
  name: TestSetBatchRequestServerTimeout()
  nameWithType: InterceptorUnitTests.TestSetBatchRequestServerTimeout()
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TestSetBatchRequestServerTimeout
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
    startLine: 42
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task TestSetBatchRequestServerTimeout()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function TestSetBatchRequestServerTimeout As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter
  commentId: M:Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter
  id: TestRequestWhichDoesntSupportFilter
  parent: Azure.Batch.Unit.Tests.InterceptorUnitTests
  langs:
  - csharp
  - vb
  name: TestRequestWhichDoesntSupportFilter()
  nameWithType: InterceptorUnitTests.TestRequestWhichDoesntSupportFilter()
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TestRequestWhichDoesntSupportFilter
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
    startLine: 66
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task TestRequestWhichDoesntSupportFilter()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function TestRequestWhichDoesntSupportFilter As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect
  commentId: M:Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect
  id: TestRequestWhichDoesSupportSelect
  parent: Azure.Batch.Unit.Tests.InterceptorUnitTests
  langs:
  - csharp
  - vb
  name: TestRequestWhichDoesSupportSelect()
  nameWithType: InterceptorUnitTests.TestRequestWhichDoesSupportSelect()
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TestRequestWhichDoesSupportSelect
    path: src/azure-sdk-for-net/src/Batch/Client/Tests/ObjectModel/Azure.Batch.Unit.Tests/InterceptorUnitTests.cs
    startLine: 88
  assemblies:
  - Azure.Batch.Unit.Tests
  namespace: Azure.Batch.Unit.Tests
  syntax:
    content: >-
      [Fact]

      [Trait("Duration", "Very Short Duration (< 1 second)")]

      public Task TestRequestWhichDoesSupportSelect()
    content.vb: >-
      <Fact>

      <Trait("Duration", "Very Short Duration (< 1 second)")>

      Public Function TestRequestWhichDoesSupportSelect As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Xunit.TraitAttribute
    ctor: Xunit.TraitAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Duration
    - type: System.String
      value: Very Short Duration (< 1 second)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Azure.Batch.Unit.Tests
  commentId: N:Azure.Batch.Unit.Tests
  isExternal: false
  name: Azure.Batch.Unit.Tests
  nameWithType: Azure.Batch.Unit.Tests
  fullName: Azure.Batch.Unit.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.#ctor*
  commentId: Overload:Azure.Batch.Unit.Tests.InterceptorUnitTests.#ctor
  isExternal: false
  name: InterceptorUnitTests
  nameWithType: InterceptorUnitTests.InterceptorUnitTests
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.InterceptorUnitTests
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout*
  commentId: Overload:Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout
  isExternal: false
  name: TestSetBatchRequestServerTimeout
  nameWithType: InterceptorUnitTests.TestSetBatchRequestServerTimeout
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestSetBatchRequestServerTimeout
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter*
  commentId: Overload:Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter
  isExternal: false
  name: TestRequestWhichDoesntSupportFilter
  nameWithType: InterceptorUnitTests.TestRequestWhichDoesntSupportFilter
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesntSupportFilter
- uid: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect*
  commentId: Overload:Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect
  isExternal: false
  name: TestRequestWhichDoesSupportSelect
  nameWithType: InterceptorUnitTests.TestRequestWhichDoesSupportSelect
  fullName: Azure.Batch.Unit.Tests.InterceptorUnitTests.TestRequestWhichDoesSupportSelect
