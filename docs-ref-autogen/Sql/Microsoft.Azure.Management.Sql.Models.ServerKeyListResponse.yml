### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse
  commentId: T:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse
  id: ServerKeyListResponse
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.#ctor
  - Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator
  - Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys
  langs:
  - csharp
  - vb
  name: ServerKeyListResponse
  nameWithType: ServerKeyListResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ServerKeyListResponse
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nRepresents the response to a List Azure Sql Server Key request.\n"
  example: []
  syntax:
    content: 'public class ServerKeyListResponse : AzureOperationResponse, IEnumerable<ServerKey>'
    content.vb: >-
      Public Class ServerKeyListResponse
          Inherits AzureOperationResponse
          Implements IEnumerable(Of ServerKey)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys
  id: ServerKeys
  parent: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse
  langs:
  - csharp
  - vb
  name: ServerKeys
  nameWithType: ServerKeyListResponse.ServerKeys
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ServerKeys
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the list of Azure Sql Server Key.\n"
  example: []
  syntax:
    content: public IList<ServerKey> ServerKeys { get; set; }
    content.vb: Public Property ServerKeys As IList(Of ServerKey)
    parameters: []
    return:
      type: IList{Microsoft.Azure.Management.Sql.Models.ServerKey}
  overload: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse
  langs:
  - csharp
  - vb
  name: ServerKeyListResponse()
  nameWithType: ServerKeyListResponse.ServerKeyListResponse()
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeyListResponse()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nInitializes a new instance of the ServerKeyListResponse class.\n"
  example: []
  syntax:
    content: public ServerKeyListResponse()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator
  commentId: M:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ServerKeyListResponse.GetEnumerator()
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetEnumerator
    path: src/azure-sdk-for-net-master/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerKeyListResponse.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\nGets the sequence of ServerKeys.\n"
  example: []
  syntax:
    content: public IEnumerator<ServerKey> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of ServerKey)
    return:
      type: IEnumerator{Microsoft.Azure.Management.Sql.Models.ServerKey}
  overload: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  commentId: N:Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  nameWithType: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys
  isExternal: false
  name: ServerKeys
  nameWithType: ServerKeyListResponse.ServerKeys
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeys
- uid: IList{Microsoft.Azure.Management.Sql.Models.ServerKey}
  commentId: '!:IList{Microsoft.Azure.Management.Sql.Models.ServerKey}'
  definition: IList`1
  name: IList<ServerKey>
  nameWithType: IList<ServerKey>
  fullName: IList<Microsoft.Azure.Management.Sql.Models.ServerKey>
  nameWithType.vb: IList(Of ServerKey)
  fullName.vb: IList(Of Microsoft.Azure.Management.Sql.Models.ServerKey)
  name.vb: IList(Of ServerKey)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ServerKey
    name: ServerKey
    nameWithType: ServerKey
    fullName: Microsoft.Azure.Management.Sql.Models.ServerKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ServerKey
    name: ServerKey
    nameWithType: ServerKey
    fullName: Microsoft.Azure.Management.Sql.Models.ServerKey
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.#ctor
  isExternal: false
  name: ServerKeyListResponse
  nameWithType: ServerKeyListResponse.ServerKeyListResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.ServerKeyListResponse
- uid: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator*
  commentId: Overload:Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ServerKeyListResponse.GetEnumerator
  fullName: Microsoft.Azure.Management.Sql.Models.ServerKeyListResponse.GetEnumerator
- uid: IEnumerator{Microsoft.Azure.Management.Sql.Models.ServerKey}
  commentId: '!:IEnumerator{Microsoft.Azure.Management.Sql.Models.ServerKey}'
  definition: IEnumerator`1
  name: IEnumerator<ServerKey>
  nameWithType: IEnumerator<ServerKey>
  fullName: IEnumerator<Microsoft.Azure.Management.Sql.Models.ServerKey>
  nameWithType.vb: IEnumerator(Of ServerKey)
  fullName.vb: IEnumerator(Of Microsoft.Azure.Management.Sql.Models.ServerKey)
  name.vb: IEnumerator(Of ServerKey)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ServerKey
    name: ServerKey
    nameWithType: ServerKey
    fullName: Microsoft.Azure.Management.Sql.Models.ServerKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ServerKey
    name: ServerKey
    nameWithType: ServerKey
    fullName: Microsoft.Azure.Management.Sql.Models.ServerKey
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
