### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  commentId: T:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  id: SegmentTransferStatus
  parent: Microsoft.Azure.Management.DataLake.Store
  children:
  - Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Complete
  - Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Failed
  - Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.InProgress
  - Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Pending
  langs:
  - csharp
  - vb
  name: SegmentTransferStatus
  nameWithType: SegmentTransferStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  type: Enum
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SegmentTransferStatus
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nDefines various states that a segment transfer can have\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (StringEnumConverter))]

      public enum SegmentTransferStatus
    content.vb: >-
      <JsonConverter(GetType(StringEnumConverter))>

      Public Enum SegmentTransferStatus
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Pending
  commentId: F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Pending
  id: Pending
  parent: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  langs:
  - csharp
  - vb
  name: Pending
  nameWithType: SegmentTransferStatus.Pending
  fullName: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Pending
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Pending
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nIndicates that the segment is currently scheduled for transfer.\n"
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "Pending")]

      Pending = 0
    content.vb: >-
      <EnumMember(Value:="Pending")>

      Pending = 0
    return:
      type: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: Pending
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.InProgress
  commentId: F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.InProgress
  id: InProgress
  parent: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  langs:
  - csharp
  - vb
  name: InProgress
  nameWithType: SegmentTransferStatus.InProgress
  fullName: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.InProgress
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InProgress
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nIndicates that the segment is currently being transferred.\n"
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "InProgress")]

      InProgress = 1
    content.vb: >-
      <EnumMember(Value:="InProgress")>

      InProgress = 1
    return:
      type: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: InProgress
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Failed
  commentId: F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Failed
  id: Failed
  parent: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  langs:
  - csharp
  - vb
  name: Failed
  nameWithType: SegmentTransferStatus.Failed
  fullName: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Failed
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Failed
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nIndicates that the segment was not transferred successfully.\n"
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "Failed")]

      Failed = 2
    content.vb: >-
      <EnumMember(Value:="Failed")>

      Failed = 2
    return:
      type: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: Failed
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Complete
  commentId: F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Complete
  id: Complete
  parent: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  langs:
  - csharp
  - vb
  name: Complete
  nameWithType: SegmentTransferStatus.Complete
  fullName: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Complete
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Complete
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/Common/SegmentTransferStatus.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nIndicates that the segment was successfully transferred.\n"
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "Complete")]

      Complete = 3
    content.vb: >-
      <EnumMember(Value:="Complete")>

      Complete = 3
    return:
      type: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: Complete
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.DataLake.Store
  commentId: N:Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store
  nameWithType: Microsoft.Azure.Management.DataLake.Store
  fullName: Microsoft.Azure.Management.DataLake.Store
- uid: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  commentId: T:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
  parent: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: SegmentTransferStatus
  nameWithType: SegmentTransferStatus
  fullName: Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus
