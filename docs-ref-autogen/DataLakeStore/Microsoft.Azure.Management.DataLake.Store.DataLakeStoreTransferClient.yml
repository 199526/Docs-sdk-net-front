### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  commentId: T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  id: DataLakeStoreTransferClient
  parent: Microsoft.Azure.Management.DataLake.Store
  children:
  - Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})
  - Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})
  - Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute
  - Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.MaxAllowedThreadsPerFile
  - Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.OnFileTransferThreadFailProgressUpdate
  - Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters
  langs:
  - csharp
  - vb
  name: DataLakeStoreTransferClient
  nameWithType: DataLakeStoreTransferClient
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeStoreTransferClient
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRepresents a general purpose file transfer client into a Data Lake Store. Supports the efficient transfer of large files.\n"
  example: []
  syntax:
    content: public sealed class DataLakeStoreTransferClient
    content.vb: Public NotInheritable Class DataLakeStoreTransferClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.MaxAllowedThreadsPerFile
  commentId: F:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.MaxAllowedThreadsPerFile
  id: MaxAllowedThreadsPerFile
  parent: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  langs:
  - csharp
  - vb
  name: MaxAllowedThreadsPerFile
  nameWithType: DataLakeStoreTransferClient.MaxAllowedThreadsPerFile
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.MaxAllowedThreadsPerFile
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxAllowedThreadsPerFile
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nThe maximum number of parallel threads to allow. \n"
  example: []
  syntax:
    content: public const int MaxAllowedThreadsPerFile = 1024
    return:
      type: System.Int32
    content.vb: Public Const MaxAllowedThreadsPerFile As Integer = 1024
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.OnFileTransferThreadFailProgressUpdate
  commentId: E:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.OnFileTransferThreadFailProgressUpdate
  id: OnFileTransferThreadFailProgressUpdate
  parent: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  langs:
  - csharp
  - vb
  name: OnFileTransferThreadFailProgressUpdate
  nameWithType: DataLakeStoreTransferClient.OnFileTransferThreadFailProgressUpdate
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.OnFileTransferThreadFailProgressUpdate
  type: Event
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnFileTransferThreadFailProgressUpdate
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAn event that is registered to progress tracking to ensure that, in the event of an unexpected transfer failure,\nprogress is properly updated.\n"
  example: []
  syntax:
    content: public event FileTransferThreadFailProgressUpdate OnFileTransferThreadFailProgressUpdate
    return:
      type: Microsoft.Azure.Management.DataLake.Store.FileTransferThreadFailProgressUpdate
    content.vb: Public Event OnFileTransferThreadFailProgressUpdate As FileTransferThreadFailProgressUpdate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})
  id: '#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})'
  parent: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  langs:
  - csharp
  - vb
  name: DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, IProgress<TransferProgress>, IProgress<TransferFolderProgress>)
  nameWithType: DataLakeStoreTransferClient.DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, IProgress<TransferProgress>, IProgress<TransferFolderProgress>)
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DataLakeStoreTransferClient(Microsoft.Azure.Management.DataLake.Store.TransferParameters, Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter, System.IProgress<Microsoft.Azure.Management.DataLake.Store.TransferProgress>, System.IProgress<Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a new instance of the DataLakeStoreTransferClient class, by specifying a pointer to the FrontEnd to use for the transfer.\n"
  example: []
  syntax:
    content: public DataLakeStoreTransferClient(TransferParameters transferParameters, IFrontEndAdapter frontEnd, IProgress<TransferProgress> progressTracker = null, IProgress<TransferFolderProgress> folderProgressTracker = null)
    parameters:
    - id: transferParameters
      type: Microsoft.Azure.Management.DataLake.Store.TransferParameters
      description: The transfer parameters to use.
    - id: frontEnd
      type: Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter
      description: A pointer to the FrontEnd interface to use for the transfer.
    - id: progressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress}
      description: (Optional) A tracker that reports progress on the transfer.
    - id: folderProgressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress}
      description: (Optional) The folder progress tracker.
    content.vb: Public Sub New(transferParameters As TransferParameters, frontEnd As IFrontEndAdapter, progressTracker As IProgress(Of TransferProgress) = Nothing, folderProgressTracker As IProgress(Of TransferFolderProgress) = Nothing)
  overload: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor*
  nameWithType.vb: DataLakeStoreTransferClient.DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, IProgress(Of TransferProgress), IProgress(Of TransferFolderProgress))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DataLakeStoreTransferClient(Microsoft.Azure.Management.DataLake.Store.TransferParameters, Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter, System.IProgress(Of Microsoft.Azure.Management.DataLake.Store.TransferProgress), System.IProgress(Of Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress))
  name.vb: DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, IProgress(Of TransferProgress), IProgress(Of TransferFolderProgress))
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})
  id: '#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})'
  parent: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  langs:
  - csharp
  - vb
  name: DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, CancellationToken, IProgress<TransferProgress>, IProgress<TransferFolderProgress>)
  nameWithType: DataLakeStoreTransferClient.DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, CancellationToken, IProgress<TransferProgress>, IProgress<TransferFolderProgress>)
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DataLakeStoreTransferClient(Microsoft.Azure.Management.DataLake.Store.TransferParameters, Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter, System.Threading.CancellationToken, System.IProgress<Microsoft.Azure.Management.DataLake.Store.TransferProgress>, System.IProgress<Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a new instance of the DataLakeStoreTransferClient class, by specifying a pointer to the FrontEnd to use for the transfer.\n"
  example: []
  syntax:
    content: public DataLakeStoreTransferClient(TransferParameters transferParameters, IFrontEndAdapter frontEnd, CancellationToken token, IProgress<TransferProgress> progressTracker = null, IProgress<TransferFolderProgress> folderProgressTracker = null)
    parameters:
    - id: transferParameters
      type: Microsoft.Azure.Management.DataLake.Store.TransferParameters
      description: The transfer Parameters to use.
    - id: frontEnd
      type: Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter
      description: A pointer to the FrontEnd interface to use for the transfer.
    - id: token
      type: System.Threading.CancellationToken
      description: The token.
    - id: progressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress}
      description: (Optional) A tracker that reports progress on the transfer.
    - id: folderProgressTracker
      type: System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress}
      description: (Optional) The folder progress tracker.
    content.vb: Public Sub New(transferParameters As TransferParameters, frontEnd As IFrontEndAdapter, token As CancellationToken, progressTracker As IProgress(Of TransferProgress) = Nothing, folderProgressTracker As IProgress(Of TransferFolderProgress) = Nothing)
  overload: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor*
  nameWithType.vb: DataLakeStoreTransferClient.DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, CancellationToken, IProgress(Of TransferProgress), IProgress(Of TransferFolderProgress))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DataLakeStoreTransferClient(Microsoft.Azure.Management.DataLake.Store.TransferParameters, Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter, System.Threading.CancellationToken, System.IProgress(Of Microsoft.Azure.Management.DataLake.Store.TransferProgress), System.IProgress(Of Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress))
  name.vb: DataLakeStoreTransferClient(TransferParameters, IFrontEndAdapter, CancellationToken, IProgress(Of TransferProgress), IProgress(Of TransferFolderProgress))
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters
  commentId: P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters
  id: Parameters
  parent: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: DataLakeStoreTransferClient.Parameters
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Parameters
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets the parameters to use for this transfer.\n"
  example: []
  syntax:
    content: public TransferParameters Parameters { get; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataLake.Store.TransferParameters
    content.vb: Public ReadOnly Property Parameters As TransferParameters
  overload: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute
  commentId: M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute
  id: Execute
  parent: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: DataLakeStoreTransferClient.Execute()
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Execute
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/DataTransfer/DataLakeStoreTransferClient.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nExecutes the transfer as defined by the input parameters.\n"
  example: []
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute
  overload: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.Store
  commentId: N:Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store
  nameWithType: Microsoft.Azure.Management.DataLake.Store
  fullName: Microsoft.Azure.Management.DataLake.Store
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.DataLake.Store.FileTransferThreadFailProgressUpdate
  commentId: T:Microsoft.Azure.Management.DataLake.Store.FileTransferThreadFailProgressUpdate
  parent: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: FileTransferThreadFailProgressUpdate
  nameWithType: FileTransferThreadFailProgressUpdate
  fullName: Microsoft.Azure.Management.DataLake.Store.FileTransferThreadFailProgressUpdate
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor
  isExternal: false
  name: DataLakeStoreTransferClient
  nameWithType: DataLakeStoreTransferClient.DataLakeStoreTransferClient
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DataLakeStoreTransferClient
- uid: Microsoft.Azure.Management.DataLake.Store.TransferParameters
  commentId: T:Microsoft.Azure.Management.DataLake.Store.TransferParameters
  parent: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: TransferParameters
  nameWithType: TransferParameters
  fullName: Microsoft.Azure.Management.DataLake.Store.TransferParameters
- uid: Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter
  commentId: T:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter
  parent: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: IFrontEndAdapter
  nameWithType: IFrontEndAdapter
  fullName: Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter
- uid: System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress}
  commentId: T:System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress}
  parent: System
  definition: System.IProgress`1
  name: IProgress<TransferProgress>
  nameWithType: IProgress<TransferProgress>
  fullName: System.IProgress<Microsoft.Azure.Management.DataLake.Store.TransferProgress>
  nameWithType.vb: IProgress(Of TransferProgress)
  fullName.vb: System.IProgress(Of Microsoft.Azure.Management.DataLake.Store.TransferProgress)
  name.vb: IProgress(Of TransferProgress)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.TransferProgress
    name: TransferProgress
    nameWithType: TransferProgress
    fullName: Microsoft.Azure.Management.DataLake.Store.TransferProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.TransferProgress
    name: TransferProgress
    nameWithType: TransferProgress
    fullName: Microsoft.Azure.Management.DataLake.Store.TransferProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress}
  commentId: T:System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress}
  parent: System
  definition: System.IProgress`1
  name: IProgress<TransferFolderProgress>
  nameWithType: IProgress<TransferFolderProgress>
  fullName: System.IProgress<Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress>
  nameWithType.vb: IProgress(Of TransferFolderProgress)
  fullName.vb: System.IProgress(Of Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress)
  name.vb: IProgress(Of TransferFolderProgress)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress
    name: TransferFolderProgress
    nameWithType: TransferFolderProgress
    fullName: Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress
    name: TransferFolderProgress
    nameWithType: TransferFolderProgress
    fullName: Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
  name: IProgress<T>
  nameWithType: IProgress<T>
  fullName: System.IProgress<T>
  nameWithType.vb: IProgress(Of T)
  fullName.vb: System.IProgress(Of T)
  name.vb: IProgress(Of T)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters
  isExternal: false
  name: Parameters
  nameWithType: DataLakeStoreTransferClient.Parameters
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters
- uid: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute
  isExternal: false
  name: Execute
  nameWithType: DataLakeStoreTransferClient.Execute
  fullName: Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute
