### YamlMime:ManagedReference
items:
- uid: DMLibTest.CloudAppendBlobExtensions
  commentId: T:DMLibTest.CloudAppendBlobExtensions
  id: CloudAppendBlobExtensions
  parent: DMLibTest
  children:
  - DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudAppendBlobExtensions.UploadFromFile(CloudAppendBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudAppendBlobExtensions.UploadFromStream(CloudAppendBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  langs:
  - csharp
  - vb
  name: CloudAppendBlobExtensions
  nameWithType: CloudAppendBlobExtensions
  fullName: DMLibTest.CloudAppendBlobExtensions
  type: Class
  source:
    remote:
      path: netcore/DMLibTest/CloudAppendBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CloudAppendBlobExtensions
    path: src/storage-data-movement/netcore/DMLibTest/CloudAppendBlobExtensions.cs
    startLine: 6
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public static class CloudAppendBlobExtensions : object'
    content.vb: >-
      Public Module CloudAppendBlobExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromByteArray(CloudAppendBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudAppendBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromByteArray(CloudAppendBlob, Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob, Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob, System.Byte[], System.Int32, System.Int32, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudAppendBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromByteArray
    path: src/storage-data-movement/netcore/DMLibTest/CloudAppendBlobExtensions.cs
    startLine: 8
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromByteArray(this CloudAppendBlob cloudBlob, byte[] buffer, int index, int count, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromByteArray(cloudBlob As CloudAppendBlob, buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: cloudBlob
      type: CloudAppendBlob
    - id: buffer
      type: System.Byte[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray*
  nameWithType.vb: CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob, Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray(CloudAppendBlob, System.Byte(), System.Int32, System.Int32, AccessCondition, BlobRequestOptions, OperationContext)
  name.vb: UploadFromByteArray(CloudAppendBlob, Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: DMLibTest.CloudAppendBlobExtensions.UploadFromFile(CloudAppendBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudAppendBlobExtensions.UploadFromFile(CloudAppendBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromFile(CloudAppendBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudAppendBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromFile(CloudAppendBlob, String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudAppendBlobExtensions.UploadFromFile(CloudAppendBlob, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudAppendBlobExtensions.UploadFromFile(CloudAppendBlob, System.String, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudAppendBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromFile
    path: src/storage-data-movement/netcore/DMLibTest/CloudAppendBlobExtensions.cs
    startLine: 13
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromFile(this CloudAppendBlob cloudBlob, string path, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromFile(cloudBlob As CloudAppendBlob, path As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: cloudBlob
      type: CloudAppendBlob
    - id: path
      type: System.String
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudAppendBlobExtensions.UploadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudAppendBlobExtensions.UploadFromStream(CloudAppendBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudAppendBlobExtensions.UploadFromStream(CloudAppendBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromStream(CloudAppendBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudAppendBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromStream(CloudAppendBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudAppendBlobExtensions.UploadFromStream(CloudAppendBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudAppendBlobExtensions.UploadFromStream(CloudAppendBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudAppendBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromStream
    path: src/storage-data-movement/netcore/DMLibTest/CloudAppendBlobExtensions.cs
    startLine: 18
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromStream(this CloudAppendBlob cloudBlob, Stream source, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromStream(cloudBlob As CloudAppendBlob, source As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: cloudBlob
      type: CloudAppendBlob
    - id: source
      type: Stream
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudAppendBlobExtensions.UploadFromStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray*
  commentId: Overload:DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray
  isExternal: false
  name: UploadFromByteArray
  nameWithType: CloudAppendBlobExtensions.UploadFromByteArray
  fullName: DMLibTest.CloudAppendBlobExtensions.UploadFromByteArray
- uid: CloudAppendBlob
  isExternal: true
  name: CloudAppendBlob
  nameWithType: CloudAppendBlob
  fullName: CloudAppendBlob
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: AccessCondition
- uid: BlobRequestOptions
  isExternal: true
  name: BlobRequestOptions
  nameWithType: BlobRequestOptions
  fullName: BlobRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  nameWithType: OperationContext
  fullName: OperationContext
- uid: DMLibTest.CloudAppendBlobExtensions.UploadFromFile*
  commentId: Overload:DMLibTest.CloudAppendBlobExtensions.UploadFromFile
  isExternal: false
  name: UploadFromFile
  nameWithType: CloudAppendBlobExtensions.UploadFromFile
  fullName: DMLibTest.CloudAppendBlobExtensions.UploadFromFile
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DMLibTest.CloudAppendBlobExtensions.UploadFromStream*
  commentId: Overload:DMLibTest.CloudAppendBlobExtensions.UploadFromStream
  isExternal: false
  name: UploadFromStream
  nameWithType: CloudAppendBlobExtensions.UploadFromStream
  fullName: DMLibTest.CloudAppendBlobExtensions.UploadFromStream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
