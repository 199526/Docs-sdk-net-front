### YamlMime:ManagedReference
items:
- uid: DMLibTest.CloudFileHelper
  commentId: T:DMLibTest.CloudFileHelper
  id: CloudFileHelper
  parent: DMLibTest
  children:
  - DMLibTest.CloudFileHelper.#ctor(CloudStorageAccount)
  - DMLibTest.CloudFileHelper.Account
  - DMLibTest.CloudFileHelper.AllowedCharactersInShareName
  - DMLibTest.CloudFileHelper.CalculateMD5ByDownloading(CloudFile,System.Boolean)
  - DMLibTest.CloudFileHelper.CleanupFileDirectory(CloudFileDirectory)
  - DMLibTest.CloudFileHelper.CleanupFileDirectory(System.String,System.String)
  - DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt(System.String)
  - DMLibTest.CloudFileHelper.CleanupShare(System.String)
  - DMLibTest.CloudFileHelper.CleanupShareByRecreateIt(System.String)
  - DMLibTest.CloudFileHelper.ClearSASPolicyofShare(System.String)
  - DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(CloudFile,System.String)
  - DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(System.String,System.String,System.String)
  - DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(CloudFileDirectory,System.String)
  - DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(System.String,System.String,System.String)
  - DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName(System.String)
  - DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName(System.String)
  - DMLibTest.CloudFileHelper.CreateFileDirectory(System.String,System.String)
  - DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist(CloudFileDirectory,System.String)
  - DMLibTest.CloudFileHelper.CreateShare(System.String)
  - DMLibTest.CloudFileHelper.DeleteFile(System.String,System.String)
  - DMLibTest.CloudFileHelper.DeleteFileDirectory(CloudFileDirectory)
  - DMLibTest.CloudFileHelper.DeleteFileDirectory(System.String,System.String)
  - DMLibTest.CloudFileHelper.DeleteShare(System.String)
  - DMLibTest.CloudFileHelper.DownloadFile(System.String,System.String,System.String)
  - DMLibTest.CloudFileHelper.EnumerateDirectories(CloudFileDirectory,System.Boolean)
  - DMLibTest.CloudFileHelper.EnumerateDirectories(System.String,System.String,System.Boolean)
  - DMLibTest.CloudFileHelper.EnumerateFiles(CloudFileDirectory,System.Boolean)
  - DMLibTest.CloudFileHelper.EnumerateFiles(System.String,System.String,System.Boolean)
  - DMLibTest.CloudFileHelper.Exists(System.String)
  - DMLibTest.CloudFileHelper.FileClient
  - DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile,List{System.Int32},List{System.Int32})
  - DMLibTest.CloudFileHelper.GetDirReference(System.String,System.String)
  - DMLibTest.CloudFileHelper.GetFileDirectoryName(System.String)
  - DMLibTest.CloudFileHelper.GetFileReference(System.String,System.String)
  - DMLibTest.CloudFileHelper.GetSASofShare(System.String,SharedAccessFilePermissions,System.Int32,System.Boolean,System.String)
  - DMLibTest.CloudFileHelper.InvalidCharactersInDirOrFileName
  - DMLibTest.CloudFileHelper.MaxDirOrFileNameLength
  - DMLibTest.CloudFileHelper.MaxShareNameLength
  - DMLibTest.CloudFileHelper.MinDirOrFileNameLength
  - DMLibTest.CloudFileHelper.MinShareNameLength
  - DMLibTest.CloudFileHelper.QueryFile(System.String,System.String)
  - DMLibTest.CloudFileHelper.QueryFileDirectory(System.String,System.String)
  - DMLibTest.CloudFileHelper.UploadDirectory(DirectoryInfo,CloudFileDirectory,System.Boolean)
  - DMLibTest.CloudFileHelper.UploadDirectory(System.String,System.String,System.String,System.Boolean)
  - DMLibTest.CloudFileHelper.UploadFile(CloudFile,System.String)
  - DMLibTest.CloudFileHelper.UploadFile(System.String,System.String,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: CloudFileHelper
  nameWithType: CloudFileHelper
  fullName: DMLibTest.CloudFileHelper
  type: Class
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CloudFileHelper
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1522
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public class CloudFileHelper : object'
    content.vb: >-
      Public Class CloudFileHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DMLibTest.CloudFileHelper.AllowedCharactersInShareName
  commentId: F:DMLibTest.CloudFileHelper.AllowedCharactersInShareName
  id: AllowedCharactersInShareName
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: AllowedCharactersInShareName
  nameWithType: CloudFileHelper.AllowedCharactersInShareName
  fullName: DMLibTest.CloudFileHelper.AllowedCharactersInShareName
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AllowedCharactersInShareName
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1524
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string AllowedCharactersInShareName = null
    content.vb: Public Const AllowedCharactersInShareName As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudFileHelper.InvalidCharactersInDirOrFileName
  commentId: F:DMLibTest.CloudFileHelper.InvalidCharactersInDirOrFileName
  id: InvalidCharactersInDirOrFileName
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: InvalidCharactersInDirOrFileName
  nameWithType: CloudFileHelper.InvalidCharactersInDirOrFileName
  fullName: DMLibTest.CloudFileHelper.InvalidCharactersInDirOrFileName
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: InvalidCharactersInDirOrFileName
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1525
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const string InvalidCharactersInDirOrFileName = null
    content.vb: Public Const InvalidCharactersInDirOrFileName As String = Nothing
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudFileHelper.MinShareNameLength
  commentId: F:DMLibTest.CloudFileHelper.MinShareNameLength
  id: MinShareNameLength
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: MinShareNameLength
  nameWithType: CloudFileHelper.MinShareNameLength
  fullName: DMLibTest.CloudFileHelper.MinShareNameLength
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MinShareNameLength
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1526
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const int MinShareNameLength = null
    content.vb: Public Const MinShareNameLength As Integer = Nothing
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudFileHelper.MaxShareNameLength
  commentId: F:DMLibTest.CloudFileHelper.MaxShareNameLength
  id: MaxShareNameLength
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: MaxShareNameLength
  nameWithType: CloudFileHelper.MaxShareNameLength
  fullName: DMLibTest.CloudFileHelper.MaxShareNameLength
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MaxShareNameLength
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1527
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const int MaxShareNameLength = null
    content.vb: Public Const MaxShareNameLength As Integer = Nothing
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudFileHelper.MinDirOrFileNameLength
  commentId: F:DMLibTest.CloudFileHelper.MinDirOrFileNameLength
  id: MinDirOrFileNameLength
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: MinDirOrFileNameLength
  nameWithType: CloudFileHelper.MinDirOrFileNameLength
  fullName: DMLibTest.CloudFileHelper.MinDirOrFileNameLength
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MinDirOrFileNameLength
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1528
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const int MinDirOrFileNameLength = null
    content.vb: Public Const MinDirOrFileNameLength As Integer = Nothing
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudFileHelper.MaxDirOrFileNameLength
  commentId: F:DMLibTest.CloudFileHelper.MaxDirOrFileNameLength
  id: MaxDirOrFileNameLength
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: MaxDirOrFileNameLength
  nameWithType: CloudFileHelper.MaxDirOrFileNameLength
  fullName: DMLibTest.CloudFileHelper.MaxDirOrFileNameLength
  type: Field
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: MaxDirOrFileNameLength
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1529
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public const int MaxDirOrFileNameLength = null
    content.vb: Public Const MaxDirOrFileNameLength As Integer = Nothing
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DMLibTest.CloudFileHelper.Account
  commentId: P:DMLibTest.CloudFileHelper.Account
  id: Account
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: CloudFileHelper.Account
  fullName: DMLibTest.CloudFileHelper.Account
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Account
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1531
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudStorageAccount Account { get; }
    content.vb: Public ReadOnly Property Account As CloudStorageAccount
    parameters: []
    return:
      type: CloudStorageAccount
  overload: DMLibTest.CloudFileHelper.Account*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.CloudFileHelper.FileClient
  commentId: P:DMLibTest.CloudFileHelper.FileClient
  id: FileClient
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: FileClient
  nameWithType: CloudFileHelper.FileClient
  fullName: DMLibTest.CloudFileHelper.FileClient
  type: Property
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: FileClient
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1537
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudFileClient FileClient { get; }
    content.vb: Public ReadOnly Property FileClient As CloudFileClient
    parameters: []
    return:
      type: CloudFileClient
  overload: DMLibTest.CloudFileHelper.FileClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DMLibTest.CloudFileHelper.#ctor(CloudStorageAccount)
  commentId: M:DMLibTest.CloudFileHelper.#ctor(CloudStorageAccount)
  id: '#ctor(CloudStorageAccount)'
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CloudFileHelper(CloudStorageAccount)
  nameWithType: CloudFileHelper.CloudFileHelper(CloudStorageAccount)
  fullName: DMLibTest.CloudFileHelper.CloudFileHelper(CloudStorageAccount)
  type: Constructor
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1543
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudFileHelper(CloudStorageAccount account)
    content.vb: Public Sub New(account As CloudStorageAccount)
    parameters:
    - id: account
      type: CloudStorageAccount
  overload: DMLibTest.CloudFileHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.Exists(System.String)
  commentId: M:DMLibTest.CloudFileHelper.Exists(System.String)
  id: Exists(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: Exists(String)
  nameWithType: CloudFileHelper.Exists(String)
  fullName: DMLibTest.CloudFileHelper.Exists(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Exists
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1550
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool Exists(string shareName)
    content.vb: Public Function Exists(shareName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.Exists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CreateShare(System.String)
  commentId: M:DMLibTest.CloudFileHelper.CreateShare(System.String)
  id: CreateShare(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CreateShare(String)
  nameWithType: CloudFileHelper.CreateShare(String)
  fullName: DMLibTest.CloudFileHelper.CreateShare(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateShare
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1556
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CreateShare(string shareName)
    content.vb: Public Function CreateShare(shareName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CreateShare*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CleanupShare(System.String)
  commentId: M:DMLibTest.CloudFileHelper.CleanupShare(System.String)
  id: CleanupShare(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CleanupShare(String)
  nameWithType: CloudFileHelper.CleanupShare(String)
  fullName: DMLibTest.CloudFileHelper.CleanupShare(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupShare
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1562
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CleanupShare(string shareName)
    content.vb: Public Function CleanupShare(shareName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CleanupShare*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CleanupShareByRecreateIt(System.String)
  commentId: M:DMLibTest.CloudFileHelper.CleanupShareByRecreateIt(System.String)
  id: CleanupShareByRecreateIt(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CleanupShareByRecreateIt(String)
  nameWithType: CloudFileHelper.CleanupShareByRecreateIt(String)
  fullName: DMLibTest.CloudFileHelper.CleanupShareByRecreateIt(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupShareByRecreateIt
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1567
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CleanupShareByRecreateIt(string shareName)
    content.vb: Public Function CleanupShareByRecreateIt(shareName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CleanupShareByRecreateIt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.DeleteShare(System.String)
  commentId: M:DMLibTest.CloudFileHelper.DeleteShare(System.String)
  id: DeleteShare(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: DeleteShare(String)
  nameWithType: CloudFileHelper.DeleteShare(String)
  fullName: DMLibTest.CloudFileHelper.DeleteShare(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteShare
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1617
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool DeleteShare(string shareName)
    content.vb: Public Function DeleteShare(shareName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.DeleteShare*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.DownloadFile(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.DownloadFile(System.String,System.String,System.String)
  id: DownloadFile(System.String,System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: DownloadFile(String, String, String)
  nameWithType: CloudFileHelper.DownloadFile(String, String, String)
  fullName: DMLibTest.CloudFileHelper.DownloadFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DownloadFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1623
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool DownloadFile(string shareName, string fileName, string filePath)
    content.vb: Public Function DownloadFile(shareName As String, fileName As String, filePath As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileName
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.DownloadFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.UploadFile(System.String,System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.UploadFile(System.String,System.String,System.String,System.Boolean)
  id: UploadFile(System.String,System.String,System.String,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: UploadFile(String, String, String, Boolean)
  nameWithType: CloudFileHelper.UploadFile(String, String, String, Boolean)
  fullName: DMLibTest.CloudFileHelper.UploadFile(System.String, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1654
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool UploadFile(string shareName, string fileName, string filePath, bool createParentIfNotExist = true)
    content.vb: Public Function UploadFile(shareName As String, fileName As String, filePath As String, createParentIfNotExist As Boolean = True) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileName
      type: System.String
    - id: filePath
      type: System.String
    - id: createParentIfNotExist
      type: System.Boolean
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.UploadFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.UploadFile(CloudFile,System.String)
  commentId: M:DMLibTest.CloudFileHelper.UploadFile(CloudFile,System.String)
  id: UploadFile(CloudFile,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: UploadFile(CloudFile, String)
  nameWithType: CloudFileHelper.UploadFile(CloudFile, String)
  fullName: DMLibTest.CloudFileHelper.UploadFile(CloudFile, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1693
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool UploadFile(CloudFile destFile, string sourceFile)
    content.vb: Public Shared Function UploadFile(destFile As CloudFile, sourceFile As String) As Boolean
    parameters:
    - id: destFile
      type: CloudFile
    - id: sourceFile
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.UploadFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile,List{System.Int32},List{System.Int32})
  commentId: M:DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile,List{System.Int32},List{System.Int32})
  id: GenerateCloudFileWithRangedData(CloudFile,List{System.Int32},List{System.Int32})
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: GenerateCloudFileWithRangedData(CloudFile, List<Int32>, List<Int32>)
  nameWithType: CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile, List<Int32>, List<Int32>)
  fullName: DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile, List<System.Int32>, List<System.Int32>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateCloudFileWithRangedData
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1740
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void GenerateCloudFileWithRangedData(CloudFile cloudFile, List<int> ranges, List<int> gaps)
    content.vb: Public Shared Sub GenerateCloudFileWithRangedData(cloudFile As CloudFile, ranges As List(Of Integer), gaps As List(Of Integer))
    parameters:
    - id: cloudFile
      type: CloudFile
    - id: ranges
      type: List{System.Int32}
    - id: gaps
      type: List{System.Int32}
  overload: DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData*
  nameWithType.vb: CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile, List(Of Int32), List(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData(CloudFile, List(Of System.Int32), List(Of System.Int32))
  name.vb: GenerateCloudFileWithRangedData(CloudFile, List(Of Int32), List(Of Int32))
- uid: DMLibTest.CloudFileHelper.QueryFile(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.QueryFile(System.String,System.String)
  id: QueryFile(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: QueryFile(String, String)
  nameWithType: CloudFileHelper.QueryFile(String, String)
  fullName: DMLibTest.CloudFileHelper.QueryFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: QueryFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1762
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudFile QueryFile(string shareName, string fileName)
    content.vb: Public Function QueryFile(shareName As String, fileName As String) As CloudFile
    parameters:
    - id: shareName
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: CloudFile
  overload: DMLibTest.CloudFileHelper.QueryFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.DeleteFile(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.DeleteFile(System.String,System.String)
  id: DeleteFile(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: DeleteFile(String, String)
  nameWithType: CloudFileHelper.DeleteFile(String, String)
  fullName: DMLibTest.CloudFileHelper.DeleteFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1786
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool DeleteFile(string shareName, string fileName)
    content.vb: Public Function DeleteFile(shareName As String, fileName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.DeleteFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.DeleteFileDirectory(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.DeleteFileDirectory(System.String,System.String)
  id: DeleteFileDirectory(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: DeleteFileDirectory(String, String)
  nameWithType: CloudFileHelper.DeleteFileDirectory(String, String)
  fullName: DMLibTest.CloudFileHelper.DeleteFileDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1800
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool DeleteFileDirectory(string shareName, string fileDirectoryName)
    content.vb: Public Function DeleteFileDirectory(shareName As String, fileDirectoryName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileDirectoryName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.DeleteFileDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.QueryFileDirectory(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.QueryFileDirectory(System.String,System.String)
  id: QueryFileDirectory(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: QueryFileDirectory(String, String)
  nameWithType: CloudFileHelper.QueryFileDirectory(String, String)
  fullName: DMLibTest.CloudFileHelper.QueryFileDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: QueryFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1827
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudFileDirectory QueryFileDirectory(string shareName, string fileDirectoryName)
    content.vb: Public Function QueryFileDirectory(shareName As String, fileDirectoryName As String) As CloudFileDirectory
    parameters:
    - id: shareName
      type: System.String
    - id: fileDirectoryName
      type: System.String
    return:
      type: CloudFileDirectory
  overload: DMLibTest.CloudFileHelper.QueryFileDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CreateFileDirectory(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CreateFileDirectory(System.String,System.String)
  id: CreateFileDirectory(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CreateFileDirectory(String, String)
  nameWithType: CloudFileHelper.CreateFileDirectory(String, String)
  fullName: DMLibTest.CloudFileHelper.CreateFileDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1850
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CreateFileDirectory(string shareName, string fileDirectoryName)
    content.vb: Public Function CreateFileDirectory(shareName As String, fileDirectoryName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileDirectoryName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CreateFileDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist(CloudFileDirectory,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist(CloudFileDirectory,System.String)
  id: CreateFileDirectoryIfNotExist(CloudFileDirectory,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CreateFileDirectoryIfNotExist(CloudFileDirectory, String)
  nameWithType: CloudFileHelper.CreateFileDirectoryIfNotExist(CloudFileDirectory, String)
  fullName: DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist(CloudFileDirectory, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CreateFileDirectoryIfNotExist
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1875
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static CloudFileDirectory CreateFileDirectoryIfNotExist(CloudFileDirectory parent, string fileDirectoryName)
    content.vb: Public Shared Function CreateFileDirectoryIfNotExist(parent As CloudFileDirectory, fileDirectoryName As String) As CloudFileDirectory
    parameters:
    - id: parent
      type: CloudFileDirectory
    - id: fileDirectoryName
      type: System.String
    return:
      type: CloudFileDirectory
  overload: DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.UploadDirectory(System.String,System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.UploadDirectory(System.String,System.String,System.String,System.Boolean)
  id: UploadDirectory(System.String,System.String,System.String,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: UploadDirectory(String, String, String, Boolean)
  nameWithType: CloudFileHelper.UploadDirectory(String, String, String, Boolean)
  fullName: DMLibTest.CloudFileHelper.UploadDirectory(System.String, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1884
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public void UploadDirectory(string localDirName, string shareName, string fileDirName, bool recursive)
    content.vb: Public Sub UploadDirectory(localDirName As String, shareName As String, fileDirName As String, recursive As Boolean)
    parameters:
    - id: localDirName
      type: System.String
    - id: shareName
      type: System.String
    - id: fileDirName
      type: System.String
    - id: recursive
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.UploadDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.UploadDirectory(DirectoryInfo,CloudFileDirectory,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.UploadDirectory(DirectoryInfo,CloudFileDirectory,System.Boolean)
  id: UploadDirectory(DirectoryInfo,CloudFileDirectory,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: UploadDirectory(DirectoryInfo, CloudFileDirectory, Boolean)
  nameWithType: CloudFileHelper.UploadDirectory(DirectoryInfo, CloudFileDirectory, Boolean)
  fullName: DMLibTest.CloudFileHelper.UploadDirectory(DirectoryInfo, CloudFileDirectory, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1898
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadDirectory(DirectoryInfo sourceDir, CloudFileDirectory destDir, bool recursive)
    content.vb: Public Shared Sub UploadDirectory(sourceDir As DirectoryInfo, destDir As CloudFileDirectory, recursive As Boolean)
    parameters:
    - id: sourceDir
      type: DirectoryInfo
    - id: destDir
      type: CloudFileDirectory
    - id: recursive
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.UploadDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(System.String,System.String,System.String)
  id: CompareCloudFileDirAndLocalDir(System.String,System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CompareCloudFileDirAndLocalDir(String, String, String)
  nameWithType: CloudFileHelper.CompareCloudFileDirAndLocalDir(String, String, String)
  fullName: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudFileDirAndLocalDir
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1930
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CompareCloudFileDirAndLocalDir(string shareName, string fileDirName, string localDirName)
    content.vb: Public Function CompareCloudFileDirAndLocalDir(shareName As String, fileDirName As String, localDirName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileDirName
      type: System.String
    - id: localDirName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(CloudFileDirectory,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(CloudFileDirectory,System.String)
  id: CompareCloudFileDirAndLocalDir(CloudFileDirectory,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CompareCloudFileDirAndLocalDir(CloudFileDirectory, String)
  nameWithType: CloudFileHelper.CompareCloudFileDirAndLocalDir(CloudFileDirectory, String)
  fullName: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir(CloudFileDirectory, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudFileDirAndLocalDir
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 1948
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareCloudFileDirAndLocalDir(CloudFileDirectory dir, string localDirName)
    content.vb: Public Shared Function CompareCloudFileDirAndLocalDir(dir As CloudFileDirectory, localDirName As String) As Boolean
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: localDirName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(System.String,System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(System.String,System.String,System.String)
  id: CompareCloudFileAndLocalFile(System.String,System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CompareCloudFileAndLocalFile(String, String, String)
  nameWithType: CloudFileHelper.CompareCloudFileAndLocalFile(String, String, String)
  fullName: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudFileAndLocalFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2009
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CompareCloudFileAndLocalFile(string shareName, string fileName, string localFileName)
    content.vb: Public Function CompareCloudFileAndLocalFile(shareName As String, fileName As String, localFileName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileName
      type: System.String
    - id: localFileName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(CloudFile,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(CloudFile,System.String)
  id: CompareCloudFileAndLocalFile(CloudFile,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CompareCloudFileAndLocalFile(CloudFile, String)
  nameWithType: CloudFileHelper.CompareCloudFileAndLocalFile(CloudFile, String)
  fullName: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile(CloudFile, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CompareCloudFileAndLocalFile
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2020
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool CompareCloudFileAndLocalFile(CloudFile file, string localFileName)
    content.vb: Public Shared Function CompareCloudFileAndLocalFile(file As CloudFile, localFileName As String) As Boolean
    parameters:
    - id: file
      type: CloudFile
    - id: localFileName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.CalculateMD5ByDownloading(CloudFile,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.CalculateMD5ByDownloading(CloudFile,System.Boolean)
  id: CalculateMD5ByDownloading(CloudFile,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CalculateMD5ByDownloading(CloudFile, Boolean)
  nameWithType: CloudFileHelper.CalculateMD5ByDownloading(CloudFile, Boolean)
  fullName: DMLibTest.CloudFileHelper.CalculateMD5ByDownloading(CloudFile, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CalculateMD5ByDownloading
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2031
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string CalculateMD5ByDownloading(CloudFile cloudFile, bool disableMD5Check = false)
    content.vb: Public Shared Function CalculateMD5ByDownloading(cloudFile As CloudFile, disableMD5Check As Boolean = False) As String
    parameters:
    - id: cloudFile
      type: CloudFile
    - id: disableMD5Check
      type: System.Boolean
    return:
      type: System.String
  overload: DMLibTest.CloudFileHelper.CalculateMD5ByDownloading*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.GetFileReference(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.GetFileReference(System.String,System.String)
  id: GetFileReference(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: GetFileReference(String, String)
  nameWithType: CloudFileHelper.GetFileReference(String, String)
  fullName: DMLibTest.CloudFileHelper.GetFileReference(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetFileReference
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2074
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudFile GetFileReference(string shareName, string cloudFileName)
    content.vb: Public Function GetFileReference(shareName As String, cloudFileName As String) As CloudFile
    parameters:
    - id: shareName
      type: System.String
    - id: cloudFileName
      type: System.String
    return:
      type: CloudFile
  overload: DMLibTest.CloudFileHelper.GetFileReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.GetDirReference(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.GetDirReference(System.String,System.String)
  id: GetDirReference(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: GetDirReference(String, String)
  nameWithType: CloudFileHelper.GetDirReference(String, String)
  fullName: DMLibTest.CloudFileHelper.GetDirReference(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetDirReference
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2081
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public CloudFileDirectory GetDirReference(string shareName, string cloudDirName)
    content.vb: Public Function GetDirReference(shareName As String, cloudDirName As String) As CloudFileDirectory
    parameters:
    - id: shareName
      type: System.String
    - id: cloudDirName
      type: System.String
    return:
      type: CloudFileDirectory
  overload: DMLibTest.CloudFileHelper.GetDirReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.EnumerateFiles(System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.EnumerateFiles(System.String,System.String,System.Boolean)
  id: EnumerateFiles(System.String,System.String,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: EnumerateFiles(String, String, Boolean)
  nameWithType: CloudFileHelper.EnumerateFiles(String, String, Boolean)
  fullName: DMLibTest.CloudFileHelper.EnumerateFiles(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: EnumerateFiles
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2098
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public IEnumerable<string> EnumerateFiles(string shareName, string dirName, bool recursive)
    content.vb: Public Function EnumerateFiles(shareName As String, dirName As String, recursive As Boolean) As IEnumerable(Of String)
    parameters:
    - id: shareName
      type: System.String
    - id: dirName
      type: System.String
    - id: recursive
      type: System.Boolean
    return:
      type: IEnumerable{System.String}
  overload: DMLibTest.CloudFileHelper.EnumerateFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.EnumerateFiles(CloudFileDirectory,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.EnumerateFiles(CloudFileDirectory,System.Boolean)
  id: EnumerateFiles(CloudFileDirectory,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: EnumerateFiles(CloudFileDirectory, Boolean)
  nameWithType: CloudFileHelper.EnumerateFiles(CloudFileDirectory, Boolean)
  fullName: DMLibTest.CloudFileHelper.EnumerateFiles(CloudFileDirectory, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: EnumerateFiles
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2111
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static IEnumerable<string> EnumerateFiles(CloudFileDirectory dir, bool recursive)
    content.vb: Public Shared Function EnumerateFiles(dir As CloudFileDirectory, recursive As Boolean) As IEnumerable(Of String)
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: recursive
      type: System.Boolean
    return:
      type: IEnumerable{System.String}
  overload: DMLibTest.CloudFileHelper.EnumerateFiles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.EnumerateDirectories(System.String,System.String,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.EnumerateDirectories(System.String,System.String,System.Boolean)
  id: EnumerateDirectories(System.String,System.String,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: EnumerateDirectories(String, String, Boolean)
  nameWithType: CloudFileHelper.EnumerateDirectories(String, String, Boolean)
  fullName: DMLibTest.CloudFileHelper.EnumerateDirectories(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: EnumerateDirectories
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2144
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public IEnumerable<string> EnumerateDirectories(string shareName, string dirName, bool recursive)
    content.vb: Public Function EnumerateDirectories(shareName As String, dirName As String, recursive As Boolean) As IEnumerable(Of String)
    parameters:
    - id: shareName
      type: System.String
    - id: dirName
      type: System.String
    - id: recursive
      type: System.Boolean
    return:
      type: IEnumerable{System.String}
  overload: DMLibTest.CloudFileHelper.EnumerateDirectories*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.EnumerateDirectories(CloudFileDirectory,System.Boolean)
  commentId: M:DMLibTest.CloudFileHelper.EnumerateDirectories(CloudFileDirectory,System.Boolean)
  id: EnumerateDirectories(CloudFileDirectory,System.Boolean)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: EnumerateDirectories(CloudFileDirectory, Boolean)
  nameWithType: CloudFileHelper.EnumerateDirectories(CloudFileDirectory, Boolean)
  fullName: DMLibTest.CloudFileHelper.EnumerateDirectories(CloudFileDirectory, System.Boolean)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: EnumerateDirectories
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2157
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static IEnumerable<string> EnumerateDirectories(CloudFileDirectory dir, bool recursive)
    content.vb: Public Shared Function EnumerateDirectories(dir As CloudFileDirectory, recursive As Boolean) As IEnumerable(Of String)
    parameters:
    - id: dir
      type: CloudFileDirectory
    - id: recursive
      type: System.Boolean
    return:
      type: IEnumerable{System.String}
  overload: DMLibTest.CloudFileHelper.EnumerateDirectories*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName(System.String)
  commentId: M:DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName(System.String)
  id: ConvertCloudFileNameToLocalFileName(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: ConvertCloudFileNameToLocalFileName(String)
  nameWithType: CloudFileHelper.ConvertCloudFileNameToLocalFileName(String)
  fullName: DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ConvertCloudFileNameToLocalFileName
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2181
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string ConvertCloudFileNameToLocalFileName(string fileName)
    content.vb: Public Shared Function ConvertCloudFileNameToLocalFileName(fileName As String) As String
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName(System.String)
  commentId: M:DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName(System.String)
  id: ConvertLocalFileNameToCloudFileName(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: ConvertLocalFileNameToCloudFileName(String)
  nameWithType: CloudFileHelper.ConvertLocalFileNameToCloudFileName(String)
  fullName: DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ConvertLocalFileNameToCloudFileName
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2192
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string ConvertLocalFileNameToCloudFileName(string fileName)
    content.vb: Public Shared Function ConvertLocalFileNameToCloudFileName(fileName As String) As String
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.GetFileDirectoryName(System.String)
  commentId: M:DMLibTest.CloudFileHelper.GetFileDirectoryName(System.String)
  id: GetFileDirectoryName(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: GetFileDirectoryName(String)
  nameWithType: CloudFileHelper.GetFileDirectoryName(String)
  fullName: DMLibTest.CloudFileHelper.GetFileDirectoryName(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetFileDirectoryName
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2202
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string GetFileDirectoryName(string fileName)
    content.vb: Public Shared Function GetFileDirectoryName(fileName As String) As String
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.CloudFileHelper.GetFileDirectoryName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.CleanupFileDirectory(System.String,System.String)
  commentId: M:DMLibTest.CloudFileHelper.CleanupFileDirectory(System.String,System.String)
  id: CleanupFileDirectory(System.String,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CleanupFileDirectory(String, String)
  nameWithType: CloudFileHelper.CleanupFileDirectory(String, String)
  fullName: DMLibTest.CloudFileHelper.CleanupFileDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2214
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CleanupFileDirectory(string shareName, string fileDirectoryName)
    content.vb: Public Function CleanupFileDirectory(shareName As String, fileDirectoryName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    - id: fileDirectoryName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CleanupFileDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.CleanupFileDirectory(CloudFileDirectory)
  commentId: M:DMLibTest.CloudFileHelper.CleanupFileDirectory(CloudFileDirectory)
  id: CleanupFileDirectory(CloudFileDirectory)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CleanupFileDirectory(CloudFileDirectory)
  nameWithType: CloudFileHelper.CleanupFileDirectory(CloudFileDirectory)
  fullName: DMLibTest.CloudFileHelper.CleanupFileDirectory(CloudFileDirectory)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2237
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void CleanupFileDirectory(CloudFileDirectory cloudDirectory)
    content.vb: Public Shared Sub CleanupFileDirectory(cloudDirectory As CloudFileDirectory)
    parameters:
    - id: cloudDirectory
      type: CloudFileDirectory
  overload: DMLibTest.CloudFileHelper.CleanupFileDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt(System.String)
  commentId: M:DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt(System.String)
  id: CleanupFileShareByRecreateIt(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: CleanupFileShareByRecreateIt(String)
  nameWithType: CloudFileHelper.CleanupFileShareByRecreateIt(String)
  fullName: DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CleanupFileShareByRecreateIt
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2253
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public bool CleanupFileShareByRecreateIt(string shareName)
    content.vb: Public Function CleanupFileShareByRecreateIt(shareName As String) As Boolean
    parameters:
    - id: shareName
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.DeleteFileDirectory(CloudFileDirectory)
  commentId: M:DMLibTest.CloudFileHelper.DeleteFileDirectory(CloudFileDirectory)
  id: DeleteFileDirectory(CloudFileDirectory)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: DeleteFileDirectory(CloudFileDirectory)
  nameWithType: CloudFileHelper.DeleteFileDirectory(CloudFileDirectory)
  fullName: DMLibTest.CloudFileHelper.DeleteFileDirectory(CloudFileDirectory)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DeleteFileDirectory
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2301
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void DeleteFileDirectory(CloudFileDirectory cloudDirectory)
    content.vb: Public Shared Sub DeleteFileDirectory(cloudDirectory As CloudFileDirectory)
    parameters:
    - id: cloudDirectory
      type: CloudFileDirectory
  overload: DMLibTest.CloudFileHelper.DeleteFileDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudFileHelper.GetSASofShare(System.String,SharedAccessFilePermissions,System.Int32,System.Boolean,System.String)
  commentId: M:DMLibTest.CloudFileHelper.GetSASofShare(System.String,SharedAccessFilePermissions,System.Int32,System.Boolean,System.String)
  id: GetSASofShare(System.String,SharedAccessFilePermissions,System.Int32,System.Boolean,System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: GetSASofShare(String, SharedAccessFilePermissions, Int32, Boolean, String)
  nameWithType: CloudFileHelper.GetSASofShare(String, SharedAccessFilePermissions, Int32, Boolean, String)
  fullName: DMLibTest.CloudFileHelper.GetSASofShare(System.String, SharedAccessFilePermissions, System.Int32, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetSASofShare
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2314
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nGet SAS of a share with specific permission and period.\n"
  example: []
  syntax:
    content: public string GetSASofShare(string shareName, SharedAccessFilePermissions permissions, int validatePeriod, bool UseSavedPolicy = true, string policySignedIdentifier = "PolicyIdentifier")
    content.vb: Public Function GetSASofShare(shareName As String, permissions As SharedAccessFilePermissions, validatePeriod As Integer, UseSavedPolicy As Boolean = True, policySignedIdentifier As String = "PolicyIdentifier") As String
    parameters:
    - id: shareName
      type: System.String
      description: The name of the share.
    - id: permissions
      type: SharedAccessFilePermissions
    - id: validatePeriod
      type: System.Int32
      description: How long the SAS will be valid before expire, in second
    - id: UseSavedPolicy
      type: System.Boolean
    - id: policySignedIdentifier
      type: System.String
    return:
      type: System.String
      description: the SAS
  overload: DMLibTest.CloudFileHelper.GetSASofShare*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DMLibTest.CloudFileHelper.ClearSASPolicyofShare(System.String)
  commentId: M:DMLibTest.CloudFileHelper.ClearSASPolicyofShare(System.String)
  id: ClearSASPolicyofShare(System.String)
  parent: DMLibTest.CloudFileHelper
  langs:
  - csharp
  - vb
  name: ClearSASPolicyofShare(String)
  nameWithType: CloudFileHelper.ClearSASPolicyofShare(String)
  fullName: DMLibTest.CloudFileHelper.ClearSASPolicyofShare(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/Helpers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ClearSASPolicyofShare
    path: src/storage-data-movement/test/DMLibTest/Util/Helpers.cs
    startLine: 2349
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nClears the SAS policy set to a container, used to revoke the SAS.\n"
  example: []
  syntax:
    content: public void ClearSASPolicyofShare(string shareName)
    content.vb: Public Sub ClearSASPolicyofShare(shareName As String)
    parameters:
    - id: shareName
      type: System.String
      description: The name of the share.
  overload: DMLibTest.CloudFileHelper.ClearSASPolicyofShare*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DMLibTest.CloudFileHelper.Account*
  commentId: Overload:DMLibTest.CloudFileHelper.Account
  isExternal: false
  name: Account
  nameWithType: CloudFileHelper.Account
  fullName: DMLibTest.CloudFileHelper.Account
- uid: CloudStorageAccount
  isExternal: true
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount
  fullName: CloudStorageAccount
- uid: DMLibTest.CloudFileHelper.FileClient*
  commentId: Overload:DMLibTest.CloudFileHelper.FileClient
  isExternal: false
  name: FileClient
  nameWithType: CloudFileHelper.FileClient
  fullName: DMLibTest.CloudFileHelper.FileClient
- uid: CloudFileClient
  commentId: '!:CloudFileClient'
  isExternal: true
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: CloudFileClient
- uid: DMLibTest.CloudFileHelper.#ctor*
  commentId: Overload:DMLibTest.CloudFileHelper.#ctor
  isExternal: false
  name: CloudFileHelper
  nameWithType: CloudFileHelper.CloudFileHelper
  fullName: DMLibTest.CloudFileHelper.CloudFileHelper
- uid: DMLibTest.CloudFileHelper.Exists*
  commentId: Overload:DMLibTest.CloudFileHelper.Exists
  isExternal: false
  name: Exists
  nameWithType: CloudFileHelper.Exists
  fullName: DMLibTest.CloudFileHelper.Exists
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DMLibTest.CloudFileHelper.CreateShare*
  commentId: Overload:DMLibTest.CloudFileHelper.CreateShare
  isExternal: false
  name: CreateShare
  nameWithType: CloudFileHelper.CreateShare
  fullName: DMLibTest.CloudFileHelper.CreateShare
- uid: DMLibTest.CloudFileHelper.CleanupShare*
  commentId: Overload:DMLibTest.CloudFileHelper.CleanupShare
  isExternal: false
  name: CleanupShare
  nameWithType: CloudFileHelper.CleanupShare
  fullName: DMLibTest.CloudFileHelper.CleanupShare
- uid: DMLibTest.CloudFileHelper.CleanupShareByRecreateIt*
  commentId: Overload:DMLibTest.CloudFileHelper.CleanupShareByRecreateIt
  isExternal: false
  name: CleanupShareByRecreateIt
  nameWithType: CloudFileHelper.CleanupShareByRecreateIt
  fullName: DMLibTest.CloudFileHelper.CleanupShareByRecreateIt
- uid: DMLibTest.CloudFileHelper.DeleteShare*
  commentId: Overload:DMLibTest.CloudFileHelper.DeleteShare
  isExternal: false
  name: DeleteShare
  nameWithType: CloudFileHelper.DeleteShare
  fullName: DMLibTest.CloudFileHelper.DeleteShare
- uid: DMLibTest.CloudFileHelper.DownloadFile*
  commentId: Overload:DMLibTest.CloudFileHelper.DownloadFile
  isExternal: false
  name: DownloadFile
  nameWithType: CloudFileHelper.DownloadFile
  fullName: DMLibTest.CloudFileHelper.DownloadFile
- uid: DMLibTest.CloudFileHelper.UploadFile*
  commentId: Overload:DMLibTest.CloudFileHelper.UploadFile
  isExternal: false
  name: UploadFile
  nameWithType: CloudFileHelper.UploadFile
  fullName: DMLibTest.CloudFileHelper.UploadFile
- uid: CloudFile
  isExternal: true
  name: CloudFile
  nameWithType: CloudFile
  fullName: CloudFile
- uid: DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData*
  commentId: Overload:DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData
  isExternal: false
  name: GenerateCloudFileWithRangedData
  nameWithType: CloudFileHelper.GenerateCloudFileWithRangedData
  fullName: DMLibTest.CloudFileHelper.GenerateCloudFileWithRangedData
- uid: List{System.Int32}
  commentId: '!:List{System.Int32}'
  definition: List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullname.vb: List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.CloudFileHelper.QueryFile*
  commentId: Overload:DMLibTest.CloudFileHelper.QueryFile
  isExternal: false
  name: QueryFile
  nameWithType: CloudFileHelper.QueryFile
  fullName: DMLibTest.CloudFileHelper.QueryFile
- uid: DMLibTest.CloudFileHelper.DeleteFile*
  commentId: Overload:DMLibTest.CloudFileHelper.DeleteFile
  isExternal: false
  name: DeleteFile
  nameWithType: CloudFileHelper.DeleteFile
  fullName: DMLibTest.CloudFileHelper.DeleteFile
- uid: DMLibTest.CloudFileHelper.DeleteFileDirectory*
  commentId: Overload:DMLibTest.CloudFileHelper.DeleteFileDirectory
  isExternal: false
  name: DeleteFileDirectory
  nameWithType: CloudFileHelper.DeleteFileDirectory
  fullName: DMLibTest.CloudFileHelper.DeleteFileDirectory
- uid: DMLibTest.CloudFileHelper.QueryFileDirectory*
  commentId: Overload:DMLibTest.CloudFileHelper.QueryFileDirectory
  isExternal: false
  name: QueryFileDirectory
  nameWithType: CloudFileHelper.QueryFileDirectory
  fullName: DMLibTest.CloudFileHelper.QueryFileDirectory
- uid: CloudFileDirectory
  isExternal: true
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: CloudFileDirectory
- uid: DMLibTest.CloudFileHelper.CreateFileDirectory*
  commentId: Overload:DMLibTest.CloudFileHelper.CreateFileDirectory
  isExternal: false
  name: CreateFileDirectory
  nameWithType: CloudFileHelper.CreateFileDirectory
  fullName: DMLibTest.CloudFileHelper.CreateFileDirectory
- uid: DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist*
  commentId: Overload:DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist
  isExternal: false
  name: CreateFileDirectoryIfNotExist
  nameWithType: CloudFileHelper.CreateFileDirectoryIfNotExist
  fullName: DMLibTest.CloudFileHelper.CreateFileDirectoryIfNotExist
- uid: DMLibTest.CloudFileHelper.UploadDirectory*
  commentId: Overload:DMLibTest.CloudFileHelper.UploadDirectory
  isExternal: false
  name: UploadDirectory
  nameWithType: CloudFileHelper.UploadDirectory
  fullName: DMLibTest.CloudFileHelper.UploadDirectory
- uid: DirectoryInfo
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: DirectoryInfo
- uid: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir*
  commentId: Overload:DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir
  isExternal: false
  name: CompareCloudFileDirAndLocalDir
  nameWithType: CloudFileHelper.CompareCloudFileDirAndLocalDir
  fullName: DMLibTest.CloudFileHelper.CompareCloudFileDirAndLocalDir
- uid: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile*
  commentId: Overload:DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile
  isExternal: false
  name: CompareCloudFileAndLocalFile
  nameWithType: CloudFileHelper.CompareCloudFileAndLocalFile
  fullName: DMLibTest.CloudFileHelper.CompareCloudFileAndLocalFile
- uid: DMLibTest.CloudFileHelper.CalculateMD5ByDownloading*
  commentId: Overload:DMLibTest.CloudFileHelper.CalculateMD5ByDownloading
  isExternal: false
  name: CalculateMD5ByDownloading
  nameWithType: CloudFileHelper.CalculateMD5ByDownloading
  fullName: DMLibTest.CloudFileHelper.CalculateMD5ByDownloading
- uid: DMLibTest.CloudFileHelper.GetFileReference*
  commentId: Overload:DMLibTest.CloudFileHelper.GetFileReference
  isExternal: false
  name: GetFileReference
  nameWithType: CloudFileHelper.GetFileReference
  fullName: DMLibTest.CloudFileHelper.GetFileReference
- uid: DMLibTest.CloudFileHelper.GetDirReference*
  commentId: Overload:DMLibTest.CloudFileHelper.GetDirReference
  isExternal: false
  name: GetDirReference
  nameWithType: CloudFileHelper.GetDirReference
  fullName: DMLibTest.CloudFileHelper.GetDirReference
- uid: DMLibTest.CloudFileHelper.EnumerateFiles*
  commentId: Overload:DMLibTest.CloudFileHelper.EnumerateFiles
  isExternal: false
  name: EnumerateFiles
  nameWithType: CloudFileHelper.EnumerateFiles
  fullName: DMLibTest.CloudFileHelper.EnumerateFiles
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.CloudFileHelper.EnumerateDirectories*
  commentId: Overload:DMLibTest.CloudFileHelper.EnumerateDirectories
  isExternal: false
  name: EnumerateDirectories
  nameWithType: CloudFileHelper.EnumerateDirectories
  fullName: DMLibTest.CloudFileHelper.EnumerateDirectories
- uid: DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName*
  commentId: Overload:DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName
  isExternal: false
  name: ConvertCloudFileNameToLocalFileName
  nameWithType: CloudFileHelper.ConvertCloudFileNameToLocalFileName
  fullName: DMLibTest.CloudFileHelper.ConvertCloudFileNameToLocalFileName
- uid: DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName*
  commentId: Overload:DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName
  isExternal: false
  name: ConvertLocalFileNameToCloudFileName
  nameWithType: CloudFileHelper.ConvertLocalFileNameToCloudFileName
  fullName: DMLibTest.CloudFileHelper.ConvertLocalFileNameToCloudFileName
- uid: DMLibTest.CloudFileHelper.GetFileDirectoryName*
  commentId: Overload:DMLibTest.CloudFileHelper.GetFileDirectoryName
  isExternal: false
  name: GetFileDirectoryName
  nameWithType: CloudFileHelper.GetFileDirectoryName
  fullName: DMLibTest.CloudFileHelper.GetFileDirectoryName
- uid: DMLibTest.CloudFileHelper.CleanupFileDirectory*
  commentId: Overload:DMLibTest.CloudFileHelper.CleanupFileDirectory
  isExternal: false
  name: CleanupFileDirectory
  nameWithType: CloudFileHelper.CleanupFileDirectory
  fullName: DMLibTest.CloudFileHelper.CleanupFileDirectory
- uid: DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt*
  commentId: Overload:DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt
  isExternal: false
  name: CleanupFileShareByRecreateIt
  nameWithType: CloudFileHelper.CleanupFileShareByRecreateIt
  fullName: DMLibTest.CloudFileHelper.CleanupFileShareByRecreateIt
- uid: DMLibTest.CloudFileHelper.GetSASofShare*
  commentId: Overload:DMLibTest.CloudFileHelper.GetSASofShare
  isExternal: false
  name: GetSASofShare
  nameWithType: CloudFileHelper.GetSASofShare
  fullName: DMLibTest.CloudFileHelper.GetSASofShare
- uid: SharedAccessFilePermissions
  isExternal: true
  name: SharedAccessFilePermissions
  nameWithType: SharedAccessFilePermissions
  fullName: SharedAccessFilePermissions
- uid: DMLibTest.CloudFileHelper.ClearSASPolicyofShare*
  commentId: Overload:DMLibTest.CloudFileHelper.ClearSASPolicyofShare
  isExternal: false
  name: ClearSASPolicyofShare
  nameWithType: CloudFileHelper.ClearSASPolicyofShare
  fullName: DMLibTest.CloudFileHelper.ClearSASPolicyofShare
