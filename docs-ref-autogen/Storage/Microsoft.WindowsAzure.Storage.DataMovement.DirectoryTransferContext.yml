### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  id: DirectoryTransferContext
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor(Stream)
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback
  langs:
  - csharp
  - vb
  name: DirectoryTransferContext
  nameWithType: DirectoryTransferContext
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  type: Class
  source:
    remote:
      path: lib/DirectoryTransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DirectoryTransferContext
    path: src/storage-data-movement/lib/DirectoryTransferContext.cs
    startLine: 13
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nRepresents the context for a directory transfer, and provides additional runtime information about its execution.\n"
  example: []
  syntax:
    content: 'public class DirectoryTransferContext : TransferContext'
    content.vb: >-
      Public Class DirectoryTransferContext
          Inherits TransferContext
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object,System.Object)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ShouldOverwriteCallback
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.SetAttributesCallback
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  langs:
  - csharp
  - vb
  name: DirectoryTransferContext()
  nameWithType: DirectoryTransferContext.DirectoryTransferContext()
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.DirectoryTransferContext()
  type: Constructor
  source:
    remote:
      path: lib/DirectoryTransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/lib/DirectoryTransferContext.cs
    startLine: 18
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DirectoryTransferContext()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  id: '#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  langs:
  - csharp
  - vb
  name: DirectoryTransferContext(TransferCheckpoint)
  nameWithType: DirectoryTransferContext.DirectoryTransferContext(TransferCheckpoint)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.DirectoryTransferContext(Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint)
  type: Constructor
  source:
    remote:
      path: lib/DirectoryTransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/lib/DirectoryTransferContext.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DirectoryTransferContext(TransferCheckpoint checkpoint)
    content.vb: Public Sub New(checkpoint As TransferCheckpoint)
    parameters:
    - id: checkpoint
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
      description: An <xref href="Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint" data-throw-if-not-resolved="false"></xref> object representing the last checkpoint from which the transfer continues on.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor(Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor(Stream)
  id: '#ctor(Stream)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  langs:
  - csharp
  - vb
  name: DirectoryTransferContext(Stream)
  nameWithType: DirectoryTransferContext.DirectoryTransferContext(Stream)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.DirectoryTransferContext(Stream)
  type: Constructor
  source:
    remote:
      path: lib/DirectoryTransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: src/storage-data-movement/lib/DirectoryTransferContext.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DirectoryTransferContext(Stream journalStream)
    content.vb: Public Sub New(journalStream As Stream)
    parameters:
    - id: journalStream
      type: Stream
      description: "The stream into which the transfer journal info will be written into. \nIt can resume the previours paused transfer from its journal stream."
  overload: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback
  id: ShouldTransferCallback
  parent: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  langs:
  - csharp
  - vb
  name: ShouldTransferCallback
  nameWithType: DirectoryTransferContext.ShouldTransferCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback
  type: Property
  source:
    remote:
      path: lib/DirectoryTransferContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ShouldTransferCallback
    path: src/storage-data-movement/lib/DirectoryTransferContext.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets the callback invoked to tell whether a transfer should be done.\n"
  example: []
  syntax:
    content: public ShouldTransferCallback ShouldTransferCallback { get; set; }
    content.vb: Public Property ShouldTransferCallback As ShouldTransferCallback
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.DataMovement.ShouldTransferCallback
  overload: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  commentId: N:Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  nameWithType: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferContext
  nameWithType: TransferContext
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object,System.Object)
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: true
  name: ForceOverwrite(Object, Object)
  nameWithType: TransferContext.ForceOverwrite(Object, Object)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object,System.Object)
    name: ForceOverwrite
    nameWithType: TransferContext.ForceOverwrite
    fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object,System.Object)
    name: ForceOverwrite
    nameWithType: TransferContext.ForceOverwrite
    fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ForceOverwrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: ClientRequestId
  nameWithType: TransferContext.ClientRequestId
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ClientRequestId
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: LogLevel
  nameWithType: TransferContext.LogLevel
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LogLevel
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: LastCheckpoint
  nameWithType: TransferContext.LastCheckpoint
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.LastCheckpoint
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ShouldOverwriteCallback
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ShouldOverwriteCallback
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: ShouldOverwriteCallback
  nameWithType: TransferContext.ShouldOverwriteCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ShouldOverwriteCallback
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.SetAttributesCallback
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.SetAttributesCallback
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: SetAttributesCallback
  nameWithType: TransferContext.SetAttributesCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.SetAttributesCallback
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: ProgressHandler
  nameWithType: TransferContext.ProgressHandler
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.ProgressHandler
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  commentId: E:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: FileTransferred
  nameWithType: TransferContext.FileTransferred
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileTransferred
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  commentId: E:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: FileSkipped
  nameWithType: TransferContext.FileSkipped
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileSkipped
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  commentId: E:Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext
  isExternal: false
  name: FileFailed
  nameWithType: TransferContext.FileFailed
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferContext.FileFailed
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: DirectoryTransferContext
  nameWithType: DirectoryTransferContext
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.#ctor
  isExternal: false
  name: DirectoryTransferContext
  nameWithType: DirectoryTransferContext.DirectoryTransferContext
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.DirectoryTransferContext
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferCheckpoint
  nameWithType: TransferCheckpoint
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferCheckpoint
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback
  isExternal: false
  name: ShouldTransferCallback
  nameWithType: DirectoryTransferContext.ShouldTransferCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallback
- uid: Microsoft.WindowsAzure.Storage.DataMovement.ShouldTransferCallback
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.ShouldTransferCallback
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: ShouldTransferCallback
  nameWithType: ShouldTransferCallback
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.ShouldTransferCallback
