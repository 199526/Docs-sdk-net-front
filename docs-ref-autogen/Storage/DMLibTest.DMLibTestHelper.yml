### YamlMime:ManagedReference
items:
- uid: DMLibTest.DMLibTestHelper
  commentId: T:DMLibTest.DMLibTestHelper
  id: DMLibTestHelper
  parent: DMLibTest
  children:
  - DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName(System.String,System.Nullable{DateTimeOffset})
  - DMLibTest.DMLibTestHelper.ContainsIgnoreCase(System.String,System.String)
  - DMLibTest.DMLibTestHelper.DisableHttps
  - DMLibTest.DMLibTestHelper.EscapeInvalidCharacters(System.String)
  - DMLibTest.DMLibTestHelper.GenerateFileWithAttributes(System.String,System.String,System.Int32,List{FileAttributes},List{FileAttributes},System.Int32,DMLibTest.FileSizeUnit)
  - DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter(System.String)
  - DMLibTest.DMLibTestHelper.GetTestAgainst
  - DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail(System.String[])
  - DMLibTest.DMLibTestHelper.PrepareLocalFile(System.String,System.Int64,DMLibTest.FileSizeUnit)
  - DMLibTest.DMLibTestHelper.RandomContainerName
  - DMLibTest.DMLibTestHelper.RandomizeCase(System.String)
  - DMLibTest.DMLibTestHelper.RandomNameSuffix
  - DMLibTest.DMLibTestHelper.RandomProtocol
  - DMLibTest.DMLibTestHelper.RandomReloadCheckpoint(TransferCheckpoint)
  - DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint(TransferCheckpoint)
  - DMLibTest.DMLibTestHelper.TransferInstanceToString(System.Object)
  - DMLibTest.DMLibTestHelper.UploadFromByteArray(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.Byte[])
  - DMLibTest.DMLibTestHelper.UploadFromFile(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.String,AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,OperationContext)
  - DMLibTest.DMLibTestHelper.UploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,Stream)
  - DMLibTest.DMLibTestHelper.WaitForACLTakeEffect
  - DMLibTest.DMLibTestHelper.WaitForProcessExit(Process,System.Int32)
  langs:
  - csharp
  - vb
  name: DMLibTestHelper
  nameWithType: DMLibTestHelper
  fullName: DMLibTest.DMLibTestHelper
  type: Class
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DMLibTestHelper
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 79
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public static class DMLibTestHelper : object'
    content.vb: >-
      Public Module DMLibTestHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint(TransferCheckpoint)
  commentId: M:DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint(TransferCheckpoint)
  id: SaveAndReloadCheckpoint(TransferCheckpoint)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: SaveAndReloadCheckpoint(TransferCheckpoint)
  nameWithType: DMLibTestHelper.SaveAndReloadCheckpoint(TransferCheckpoint)
  fullName: DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint(TransferCheckpoint)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SaveAndReloadCheckpoint
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 85
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static TransferCheckpoint SaveAndReloadCheckpoint(TransferCheckpoint checkpoint)
    content.vb: Public Shared Function SaveAndReloadCheckpoint(checkpoint As TransferCheckpoint) As TransferCheckpoint
    parameters:
    - id: checkpoint
      type: TransferCheckpoint
    return:
      type: TransferCheckpoint
  overload: DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.RandomReloadCheckpoint(TransferCheckpoint)
  commentId: M:DMLibTest.DMLibTestHelper.RandomReloadCheckpoint(TransferCheckpoint)
  id: RandomReloadCheckpoint(TransferCheckpoint)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: RandomReloadCheckpoint(TransferCheckpoint)
  nameWithType: DMLibTestHelper.RandomReloadCheckpoint(TransferCheckpoint)
  fullName: DMLibTest.DMLibTestHelper.RandomReloadCheckpoint(TransferCheckpoint)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomReloadCheckpoint
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 113
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static TransferCheckpoint RandomReloadCheckpoint(TransferCheckpoint checkpoint)
    content.vb: Public Shared Function RandomReloadCheckpoint(checkpoint As TransferCheckpoint) As TransferCheckpoint
    parameters:
    - id: checkpoint
      type: TransferCheckpoint
    return:
      type: TransferCheckpoint
  overload: DMLibTest.DMLibTestHelper.RandomReloadCheckpoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail(System.String[])
  commentId: M:DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail(System.String[])
  id: KeepFilesWhenCaseFail(System.String[])
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: KeepFilesWhenCaseFail(String[])
  nameWithType: DMLibTestHelper.KeepFilesWhenCaseFail(String[])
  fullName: DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail(System.String[])
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: KeepFilesWhenCaseFail
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 124
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void KeepFilesWhenCaseFail(params string[] filesToKeep)
    content.vb: Public Shared Sub KeepFilesWhenCaseFail(ParamArray filesToKeep As String())
    parameters:
    - id: filesToKeep
      type: System.String[]
  overload: DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail*
  nameWithType.vb: DMLibTestHelper.KeepFilesWhenCaseFail(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail(System.String())
  name.vb: KeepFilesWhenCaseFail(String())
- uid: DMLibTest.DMLibTestHelper.RandomContainerName
  commentId: M:DMLibTest.DMLibTestHelper.RandomContainerName
  id: RandomContainerName
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: RandomContainerName()
  nameWithType: DMLibTestHelper.RandomContainerName()
  fullName: DMLibTest.DMLibTestHelper.RandomContainerName()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomContainerName
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 145
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string RandomContainerName()
    content.vb: Public Shared Function RandomContainerName As String
    return:
      type: System.String
  overload: DMLibTest.DMLibTestHelper.RandomContainerName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.RandomNameSuffix
  commentId: M:DMLibTest.DMLibTestHelper.RandomNameSuffix
  id: RandomNameSuffix
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: RandomNameSuffix()
  nameWithType: DMLibTestHelper.RandomNameSuffix()
  fullName: DMLibTest.DMLibTestHelper.RandomNameSuffix()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomNameSuffix
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 150
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string RandomNameSuffix()
    content.vb: Public Shared Function RandomNameSuffix As String
    return:
      type: System.String
  overload: DMLibTest.DMLibTestHelper.RandomNameSuffix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.WaitForProcessExit(Process,System.Int32)
  commentId: M:DMLibTest.DMLibTestHelper.WaitForProcessExit(Process,System.Int32)
  id: WaitForProcessExit(Process,System.Int32)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: WaitForProcessExit(Process, Int32)
  nameWithType: DMLibTestHelper.WaitForProcessExit(Process, Int32)
  fullName: DMLibTest.DMLibTestHelper.WaitForProcessExit(Process, System.Int32)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: WaitForProcessExit
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 155
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool WaitForProcessExit(Process p, int timeoutInSecond)
    content.vb: Public Shared Function WaitForProcessExit(p As Process, timeoutInSecond As Integer) As Boolean
    parameters:
    - id: p
      type: Process
    - id: timeoutInSecond
      type: System.Int32
    return:
      type: System.Boolean
  overload: DMLibTest.DMLibTestHelper.WaitForProcessExit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.RandomizeCase(System.String)
  commentId: M:DMLibTest.DMLibTestHelper.RandomizeCase(System.String)
  id: RandomizeCase(System.String)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: RandomizeCase(String)
  nameWithType: DMLibTestHelper.RandomizeCase(String)
  fullName: DMLibTest.DMLibTestHelper.RandomizeCase(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomizeCase
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 168
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string RandomizeCase(string value)
    content.vb: Public Shared Function RandomizeCase(value As String) As String
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.DMLibTestHelper.RandomizeCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.UploadFromByteArray(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.Byte[])
  commentId: M:DMLibTest.DMLibTestHelper.UploadFromByteArray(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.Byte[])
  id: UploadFromByteArray(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.Byte[])
  isExtensionMethod: true
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: UploadFromByteArray(WindowsAzure.Storage.Blob.CloudBlob, Byte[])
  nameWithType: DMLibTestHelper.UploadFromByteArray(WindowsAzure.Storage.Blob.CloudBlob, Byte[])
  fullName: DMLibTest.DMLibTestHelper.UploadFromByteArray(Microsoft.WindowsAzure.Storage.Blob.CloudBlob, System.Byte[])
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromByteArray
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 173
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromByteArray(this WindowsAzure.Storage.Blob.CloudBlob cloudBlob, byte[] randomData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromByteArray(cloudBlob As WindowsAzure.Storage.Blob.CloudBlob, randomData As Byte())
    parameters:
    - id: cloudBlob
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
    - id: randomData
      type: System.Byte[]
  overload: DMLibTest.DMLibTestHelper.UploadFromByteArray*
  nameWithType.vb: DMLibTestHelper.UploadFromByteArray(WindowsAzure.Storage.Blob.CloudBlob, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.DMLibTestHelper.UploadFromByteArray(Microsoft.WindowsAzure.Storage.Blob.CloudBlob, System.Byte())
  name.vb: UploadFromByteArray(WindowsAzure.Storage.Blob.CloudBlob, Byte())
- uid: DMLibTest.DMLibTestHelper.UploadFromFile(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.String,AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.DMLibTestHelper.UploadFromFile(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.String,AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,OperationContext)
  id: UploadFromFile(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,System.String,AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: UploadFromFile(WindowsAzure.Storage.Blob.CloudBlob, String, AccessCondition, WindowsAzure.Storage.Blob.BlobRequestOptions, OperationContext)
  nameWithType: DMLibTestHelper.UploadFromFile(WindowsAzure.Storage.Blob.CloudBlob, String, AccessCondition, WindowsAzure.Storage.Blob.BlobRequestOptions, OperationContext)
  fullName: DMLibTest.DMLibTestHelper.UploadFromFile(Microsoft.WindowsAzure.Storage.Blob.CloudBlob, System.String, AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromFile
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 193
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromFile(this WindowsAzure.Storage.Blob.CloudBlob cloudBlob, string path, AccessCondition accessCondition = null, WindowsAzure.Storage.Blob.BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromFile(cloudBlob As WindowsAzure.Storage.Blob.CloudBlob, path As String, accessCondition As AccessCondition = Nothing, options As WindowsAzure.Storage.Blob.BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: cloudBlob
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
    - id: path
      type: System.String
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.DMLibTestHelper.UploadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.UploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,Stream)
  commentId: M:DMLibTest.DMLibTestHelper.UploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,Stream)
  id: UploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlob,Stream)
  isExtensionMethod: true
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: UploadFromStream(WindowsAzure.Storage.Blob.CloudBlob, Stream)
  nameWithType: DMLibTestHelper.UploadFromStream(WindowsAzure.Storage.Blob.CloudBlob, Stream)
  fullName: DMLibTest.DMLibTestHelper.UploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlob, Stream)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromStream
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 217
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromStream(this WindowsAzure.Storage.Blob.CloudBlob cloudBlob, Stream source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromStream(cloudBlob As WindowsAzure.Storage.Blob.CloudBlob, source As Stream)
    parameters:
    - id: cloudBlob
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
    - id: source
      type: Stream
  overload: DMLibTest.DMLibTestHelper.UploadFromStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.WaitForACLTakeEffect
  commentId: M:DMLibTest.DMLibTestHelper.WaitForACLTakeEffect
  id: WaitForACLTakeEffect
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: WaitForACLTakeEffect()
  nameWithType: DMLibTestHelper.WaitForACLTakeEffect()
  fullName: DMLibTest.DMLibTestHelper.WaitForACLTakeEffect()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: WaitForACLTakeEffect
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 237
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void WaitForACLTakeEffect()
    content.vb: Public Shared Sub WaitForACLTakeEffect
  overload: DMLibTest.DMLibTestHelper.WaitForACLTakeEffect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.RandomProtocol
  commentId: M:DMLibTest.DMLibTestHelper.RandomProtocol
  id: RandomProtocol
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: RandomProtocol()
  nameWithType: DMLibTestHelper.RandomProtocol()
  fullName: DMLibTest.DMLibTestHelper.RandomProtocol()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: RandomProtocol
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 246
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string RandomProtocol()
    content.vb: Public Shared Function RandomProtocol As String
    return:
      type: System.String
  overload: DMLibTest.DMLibTestHelper.RandomProtocol*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.DisableHttps
  commentId: M:DMLibTest.DMLibTestHelper.DisableHttps
  id: DisableHttps
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: DisableHttps()
  nameWithType: DMLibTestHelper.DisableHttps()
  fullName: DMLibTest.DMLibTestHelper.DisableHttps()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DisableHttps
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 256
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool DisableHttps()
    content.vb: Public Shared Function DisableHttps As Boolean
    return:
      type: System.Boolean
  overload: DMLibTest.DMLibTestHelper.DisableHttps*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.GetTestAgainst
  commentId: M:DMLibTest.DMLibTestHelper.GetTestAgainst
  id: GetTestAgainst
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: GetTestAgainst()
  nameWithType: DMLibTestHelper.GetTestAgainst()
  fullName: DMLibTest.DMLibTestHelper.GetTestAgainst()
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetTestAgainst
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 266
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static TestAgainst GetTestAgainst()
    content.vb: Public Shared Function GetTestAgainst As TestAgainst
    return:
      type: DMLibTest.TestAgainst
  overload: DMLibTest.DMLibTestHelper.GetTestAgainst*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter(System.String)
  commentId: M:DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter(System.String)
  id: GetFileAttributesFromParameter(System.String)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: GetFileAttributesFromParameter(String)
  nameWithType: DMLibTestHelper.GetFileAttributesFromParameter(String)
  fullName: DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetFileAttributesFromParameter
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 294
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static List<FileAttributes> GetFileAttributesFromParameter(string s)
    content.vb: Public Shared Function GetFileAttributesFromParameter(s As String) As List(Of FileAttributes)
    parameters:
    - id: s
      type: System.String
    return:
      type: List{FileAttributes}
  overload: DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.GenerateFileWithAttributes(System.String,System.String,System.Int32,List{FileAttributes},List{FileAttributes},System.Int32,DMLibTest.FileSizeUnit)
  commentId: M:DMLibTest.DMLibTestHelper.GenerateFileWithAttributes(System.String,System.String,System.Int32,List{FileAttributes},List{FileAttributes},System.Int32,DMLibTest.FileSizeUnit)
  id: GenerateFileWithAttributes(System.String,System.String,System.Int32,List{FileAttributes},List{FileAttributes},System.Int32,DMLibTest.FileSizeUnit)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: GenerateFileWithAttributes(String, String, Int32, List<FileAttributes>, List<FileAttributes>, Int32, FileSizeUnit)
  nameWithType: DMLibTestHelper.GenerateFileWithAttributes(String, String, Int32, List<FileAttributes>, List<FileAttributes>, Int32, FileSizeUnit)
  fullName: DMLibTest.DMLibTestHelper.GenerateFileWithAttributes(System.String, System.String, System.Int32, List<FileAttributes>, List<FileAttributes>, System.Int32, DMLibTest.FileSizeUnit)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GenerateFileWithAttributes
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 354
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static List<string> GenerateFileWithAttributes(string folder, string filePrefix, int number, List<FileAttributes> includeAttributes, List<FileAttributes> excludeAttributes, int fileSizeInUnit = 1, FileSizeUnit unit = FileSizeUnit.KB)
    content.vb: Public Shared Function GenerateFileWithAttributes(folder As String, filePrefix As String, number As Integer, includeAttributes As List(Of FileAttributes), excludeAttributes As List(Of FileAttributes), fileSizeInUnit As Integer = 1, unit As FileSizeUnit = FileSizeUnit.KB) As List(Of String)
    parameters:
    - id: folder
      type: System.String
    - id: filePrefix
      type: System.String
    - id: number
      type: System.Int32
    - id: includeAttributes
      type: List{FileAttributes}
    - id: excludeAttributes
      type: List{FileAttributes}
    - id: fileSizeInUnit
      type: System.Int32
    - id: unit
      type: DMLibTest.FileSizeUnit
    return:
      type: List{System.String}
  overload: DMLibTest.DMLibTestHelper.GenerateFileWithAttributes*
  nameWithType.vb: DMLibTestHelper.GenerateFileWithAttributes(String, String, Int32, List(Of FileAttributes), List(Of FileAttributes), Int32, FileSizeUnit)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.DMLibTestHelper.GenerateFileWithAttributes(System.String, System.String, System.Int32, List(Of FileAttributes), List(Of FileAttributes), System.Int32, DMLibTest.FileSizeUnit)
  name.vb: GenerateFileWithAttributes(String, String, Int32, List(Of FileAttributes), List(Of FileAttributes), Int32, FileSizeUnit)
- uid: DMLibTest.DMLibTestHelper.PrepareLocalFile(System.String,System.Int64,DMLibTest.FileSizeUnit)
  commentId: M:DMLibTest.DMLibTestHelper.PrepareLocalFile(System.String,System.Int64,DMLibTest.FileSizeUnit)
  id: PrepareLocalFile(System.String,System.Int64,DMLibTest.FileSizeUnit)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: PrepareLocalFile(String, Int64, FileSizeUnit)
  nameWithType: DMLibTestHelper.PrepareLocalFile(String, Int64, FileSizeUnit)
  fullName: DMLibTest.DMLibTestHelper.PrepareLocalFile(System.String, System.Int64, DMLibTest.FileSizeUnit)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: PrepareLocalFile
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 384
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void PrepareLocalFile(string filePath, long fileSizeInUnit, FileSizeUnit fileSizeUnit)
    content.vb: Public Shared Sub PrepareLocalFile(filePath As String, fileSizeInUnit As Long, fileSizeUnit As FileSizeUnit)
    parameters:
    - id: filePath
      type: System.String
    - id: fileSizeInUnit
      type: System.Int64
    - id: fileSizeUnit
      type: DMLibTest.FileSizeUnit
  overload: DMLibTest.DMLibTestHelper.PrepareLocalFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.ContainsIgnoreCase(System.String,System.String)
  commentId: M:DMLibTest.DMLibTestHelper.ContainsIgnoreCase(System.String,System.String)
  id: ContainsIgnoreCase(System.String,System.String)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: ContainsIgnoreCase(String, String)
  nameWithType: DMLibTestHelper.ContainsIgnoreCase(String, String)
  fullName: DMLibTest.DMLibTestHelper.ContainsIgnoreCase(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ContainsIgnoreCase
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 404
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static bool ContainsIgnoreCase(string baseString, string subString)
    content.vb: Public Shared Function ContainsIgnoreCase(baseString As String, subString As String) As Boolean
    parameters:
    - id: baseString
      type: System.String
    - id: subString
      type: System.String
    return:
      type: System.Boolean
  overload: DMLibTest.DMLibTestHelper.ContainsIgnoreCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName(System.String,System.Nullable{DateTimeOffset})
  commentId: M:DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName(System.String,System.Nullable{DateTimeOffset})
  id: AppendSnapShotTimeToFileName(System.String,System.Nullable{DateTimeOffset})
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: AppendSnapShotTimeToFileName(String, Nullable<DateTimeOffset>)
  nameWithType: DMLibTestHelper.AppendSnapShotTimeToFileName(String, Nullable<DateTimeOffset>)
  fullName: DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName(System.String, System.Nullable<DateTimeOffset>)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AppendSnapShotTimeToFileName
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 431
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  summary: "\nAppend snapshot time to a file name.\n"
  example: []
  syntax:
    content: public static string AppendSnapShotTimeToFileName(string fileName, DateTimeOffset? snapshotTime)
    content.vb: Public Shared Function AppendSnapShotTimeToFileName(fileName As String, snapshotTime As DateTimeOffset?) As String
    parameters:
    - id: fileName
      type: System.String
      description: Original file name.
    - id: snapshotTime
      type: System.Nullable{DateTimeOffset}
      description: Snapshot time to append.
    return:
      type: System.String
      description: A file name with appended snapshot time.
  overload: DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName*
  nameWithType.vb: DMLibTestHelper.AppendSnapShotTimeToFileName(String, Nullable(Of DateTimeOffset))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName(System.String, System.Nullable(Of DateTimeOffset))
  name.vb: AppendSnapShotTimeToFileName(String, Nullable(Of DateTimeOffset))
- uid: DMLibTest.DMLibTestHelper.EscapeInvalidCharacters(System.String)
  commentId: M:DMLibTest.DMLibTestHelper.EscapeInvalidCharacters(System.String)
  id: EscapeInvalidCharacters(System.String)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: EscapeInvalidCharacters(String)
  nameWithType: DMLibTestHelper.EscapeInvalidCharacters(String)
  fullName: DMLibTest.DMLibTestHelper.EscapeInvalidCharacters(System.String)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: EscapeInvalidCharacters
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 475
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string EscapeInvalidCharacters(string fileName)
    content.vb: Public Shared Function EscapeInvalidCharacters(fileName As String) As String
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
  overload: DMLibTest.DMLibTestHelper.EscapeInvalidCharacters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.DMLibTestHelper.TransferInstanceToString(System.Object)
  commentId: M:DMLibTest.DMLibTestHelper.TransferInstanceToString(System.Object)
  id: TransferInstanceToString(System.Object)
  parent: DMLibTest.DMLibTestHelper
  langs:
  - csharp
  - vb
  name: TransferInstanceToString(Object)
  nameWithType: DMLibTestHelper.TransferInstanceToString(Object)
  fullName: DMLibTest.DMLibTestHelper.TransferInstanceToString(System.Object)
  type: Method
  source:
    remote:
      path: test/DMLibTest/Util/DMLibTestHelper.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferInstanceToString
    path: src/storage-data-movement/test/DMLibTest/Util/DMLibTestHelper.cs
    startLine: 487
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static string TransferInstanceToString(object transferInstance)
    content.vb: Public Shared Function TransferInstanceToString(transferInstance As Object) As String
    parameters:
    - id: transferInstance
      type: System.Object
    return:
      type: System.String
  overload: DMLibTest.DMLibTestHelper.TransferInstanceToString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint*
  commentId: Overload:DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint
  isExternal: false
  name: SaveAndReloadCheckpoint
  nameWithType: DMLibTestHelper.SaveAndReloadCheckpoint
  fullName: DMLibTest.DMLibTestHelper.SaveAndReloadCheckpoint
- uid: TransferCheckpoint
  isExternal: true
  name: TransferCheckpoint
  nameWithType: TransferCheckpoint
  fullName: TransferCheckpoint
- uid: DMLibTest.DMLibTestHelper.RandomReloadCheckpoint*
  commentId: Overload:DMLibTest.DMLibTestHelper.RandomReloadCheckpoint
  isExternal: false
  name: RandomReloadCheckpoint
  nameWithType: DMLibTestHelper.RandomReloadCheckpoint
  fullName: DMLibTest.DMLibTestHelper.RandomReloadCheckpoint
- uid: DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail*
  commentId: Overload:DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail
  isExternal: false
  name: KeepFilesWhenCaseFail
  nameWithType: DMLibTestHelper.KeepFilesWhenCaseFail
  fullName: DMLibTest.DMLibTestHelper.KeepFilesWhenCaseFail
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DMLibTest.DMLibTestHelper.RandomContainerName*
  commentId: Overload:DMLibTest.DMLibTestHelper.RandomContainerName
  isExternal: false
  name: RandomContainerName
  nameWithType: DMLibTestHelper.RandomContainerName
  fullName: DMLibTest.DMLibTestHelper.RandomContainerName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DMLibTest.DMLibTestHelper.RandomNameSuffix*
  commentId: Overload:DMLibTest.DMLibTestHelper.RandomNameSuffix
  isExternal: false
  name: RandomNameSuffix
  nameWithType: DMLibTestHelper.RandomNameSuffix
  fullName: DMLibTest.DMLibTestHelper.RandomNameSuffix
- uid: DMLibTest.DMLibTestHelper.WaitForProcessExit*
  commentId: Overload:DMLibTest.DMLibTestHelper.WaitForProcessExit
  isExternal: false
  name: WaitForProcessExit
  nameWithType: DMLibTestHelper.WaitForProcessExit
  fullName: DMLibTest.DMLibTestHelper.WaitForProcessExit
- uid: Process
  isExternal: true
  name: Process
  nameWithType: Process
  fullName: Process
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DMLibTest.DMLibTestHelper.RandomizeCase*
  commentId: Overload:DMLibTest.DMLibTestHelper.RandomizeCase
  isExternal: false
  name: RandomizeCase
  nameWithType: DMLibTestHelper.RandomizeCase
  fullName: DMLibTest.DMLibTestHelper.RandomizeCase
- uid: DMLibTest.DMLibTestHelper.UploadFromByteArray*
  commentId: Overload:DMLibTest.DMLibTestHelper.UploadFromByteArray
  isExternal: false
  name: UploadFromByteArray
  nameWithType: DMLibTestHelper.UploadFromByteArray
  fullName: DMLibTest.DMLibTestHelper.UploadFromByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: WindowsAzure.Storage.Blob.CloudBlob
  nameWithType: WindowsAzure.Storage.Blob.CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DMLibTest.DMLibTestHelper.UploadFromFile*
  commentId: Overload:DMLibTest.DMLibTestHelper.UploadFromFile
  isExternal: false
  name: UploadFromFile
  nameWithType: DMLibTestHelper.UploadFromFile
  fullName: DMLibTest.DMLibTestHelper.UploadFromFile
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: AccessCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  commentId: '!:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions'
  isExternal: true
  name: WindowsAzure.Storage.Blob.BlobRequestOptions
  nameWithType: WindowsAzure.Storage.Blob.BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  nameWithType: OperationContext
  fullName: OperationContext
- uid: DMLibTest.DMLibTestHelper.UploadFromStream*
  commentId: Overload:DMLibTest.DMLibTestHelper.UploadFromStream
  isExternal: false
  name: UploadFromStream
  nameWithType: DMLibTestHelper.UploadFromStream
  fullName: DMLibTest.DMLibTestHelper.UploadFromStream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: DMLibTest.DMLibTestHelper.WaitForACLTakeEffect*
  commentId: Overload:DMLibTest.DMLibTestHelper.WaitForACLTakeEffect
  isExternal: false
  name: WaitForACLTakeEffect
  nameWithType: DMLibTestHelper.WaitForACLTakeEffect
  fullName: DMLibTest.DMLibTestHelper.WaitForACLTakeEffect
- uid: DMLibTest.DMLibTestHelper.RandomProtocol*
  commentId: Overload:DMLibTest.DMLibTestHelper.RandomProtocol
  isExternal: false
  name: RandomProtocol
  nameWithType: DMLibTestHelper.RandomProtocol
  fullName: DMLibTest.DMLibTestHelper.RandomProtocol
- uid: DMLibTest.DMLibTestHelper.DisableHttps*
  commentId: Overload:DMLibTest.DMLibTestHelper.DisableHttps
  isExternal: false
  name: DisableHttps
  nameWithType: DMLibTestHelper.DisableHttps
  fullName: DMLibTest.DMLibTestHelper.DisableHttps
- uid: DMLibTest.DMLibTestHelper.GetTestAgainst*
  commentId: Overload:DMLibTest.DMLibTestHelper.GetTestAgainst
  isExternal: false
  name: GetTestAgainst
  nameWithType: DMLibTestHelper.GetTestAgainst
  fullName: DMLibTest.DMLibTestHelper.GetTestAgainst
- uid: DMLibTest.TestAgainst
  commentId: T:DMLibTest.TestAgainst
  parent: DMLibTest
  isExternal: false
  name: TestAgainst
  nameWithType: TestAgainst
  fullName: DMLibTest.TestAgainst
- uid: DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter*
  commentId: Overload:DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter
  isExternal: false
  name: GetFileAttributesFromParameter
  nameWithType: DMLibTestHelper.GetFileAttributesFromParameter
  fullName: DMLibTest.DMLibTestHelper.GetFileAttributesFromParameter
- uid: List{FileAttributes}
  commentId: '!:List{FileAttributes}'
  definition: List`1
  name: List<FileAttributes>
  nameWithType: List<FileAttributes>
  fullName: List<FileAttributes>
  nameWithType.vb: List(Of FileAttributes)
  fullname.vb: List(Of FileAttributes)
  name.vb: List(Of FileAttributes)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FileAttributes
    name: FileAttributes
    nameWithType: FileAttributes
    fullName: FileAttributes
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FileAttributes
    name: FileAttributes
    nameWithType: FileAttributes
    fullName: FileAttributes
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DMLibTestHelper.GenerateFileWithAttributes*
  commentId: Overload:DMLibTest.DMLibTestHelper.GenerateFileWithAttributes
  isExternal: false
  name: GenerateFileWithAttributes
  nameWithType: DMLibTestHelper.GenerateFileWithAttributes
  fullName: DMLibTest.DMLibTestHelper.GenerateFileWithAttributes
- uid: DMLibTest.FileSizeUnit
  commentId: T:DMLibTest.FileSizeUnit
  parent: DMLibTest
  isExternal: false
  name: FileSizeUnit
  nameWithType: FileSizeUnit
  fullName: DMLibTest.FileSizeUnit
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DMLibTestHelper.PrepareLocalFile*
  commentId: Overload:DMLibTest.DMLibTestHelper.PrepareLocalFile
  isExternal: false
  name: PrepareLocalFile
  nameWithType: DMLibTestHelper.PrepareLocalFile
  fullName: DMLibTest.DMLibTestHelper.PrepareLocalFile
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: DMLibTest.DMLibTestHelper.ContainsIgnoreCase*
  commentId: Overload:DMLibTest.DMLibTestHelper.ContainsIgnoreCase
  isExternal: false
  name: ContainsIgnoreCase
  nameWithType: DMLibTestHelper.ContainsIgnoreCase
  fullName: DMLibTest.DMLibTestHelper.ContainsIgnoreCase
- uid: DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName*
  commentId: Overload:DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName
  isExternal: false
  name: AppendSnapShotTimeToFileName
  nameWithType: DMLibTestHelper.AppendSnapShotTimeToFileName
  fullName: DMLibTest.DMLibTestHelper.AppendSnapShotTimeToFileName
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.DMLibTestHelper.EscapeInvalidCharacters*
  commentId: Overload:DMLibTest.DMLibTestHelper.EscapeInvalidCharacters
  isExternal: false
  name: EscapeInvalidCharacters
  nameWithType: DMLibTestHelper.EscapeInvalidCharacters
  fullName: DMLibTest.DMLibTestHelper.EscapeInvalidCharacters
- uid: DMLibTest.DMLibTestHelper.TransferInstanceToString*
  commentId: Overload:DMLibTest.DMLibTestHelper.TransferInstanceToString
  isExternal: false
  name: TransferInstanceToString
  nameWithType: DMLibTestHelper.TransferInstanceToString
  fullName: DMLibTest.DMLibTestHelper.TransferInstanceToString
