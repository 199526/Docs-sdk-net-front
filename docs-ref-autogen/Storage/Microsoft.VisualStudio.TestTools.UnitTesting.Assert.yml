### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  commentId: T:Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  id: Assert
  parent: Microsoft.VisualStudio.TestTools.UnitTesting
  children:
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String)
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])
  - Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(Action,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: Assert
  nameWithType: Assert
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  type: Class
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Assert
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 5
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: 'public static class Assert : object'
    content.vb: >-
      Public Module Assert
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object)
  id: AreEqual(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Object, Object)
  nameWithType: Assert.AreEqual(Object, Object)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 7
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(object expected, object actual)
    content.vb: Public Shared Sub AreEqual(expected As Object, actual As Object)
    parameters:
    - id: expected
      type: System.Object
    - id: actual
      type: System.Object
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean)
  id: AreEqual(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean)
  nameWithType: Assert.AreEqual(String, String, Boolean)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 35
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean)
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double)
  id: AreEqual(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Double, Double, Double)
  nameWithType: Assert.AreEqual(Double, Double, Double)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 40
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(double expected, double actual, double delta)
    content.vb: Public Shared Sub AreEqual(expected As Double, actual As Double, delta As Double)
    parameters:
    - id: expected
      type: System.Double
    - id: actual
      type: System.Double
    - id: delta
      type: System.Double
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single)
  id: AreEqual(System.Single,System.Single,System.Single)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Single, Single, Single)
  nameWithType: Assert.AreEqual(Single, Single, Single)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 45
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(float expected, float actual, float delta)
    content.vb: Public Shared Sub AreEqual(expected As Single, actual As Single, delta As Single)
    parameters:
    - id: expected
      type: System.Single
    - id: actual
      type: System.Single
    - id: delta
      type: System.Single
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String)
  id: AreEqual(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Object, Object, String)
  nameWithType: Assert.AreEqual(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 50
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(object expected, object actual, string message)
    content.vb: Public Shared Sub AreEqual(expected As Object, actual As Object, message As String)
    parameters:
    - id: expected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)
  id: AreEqual(System.Single,System.Single,System.Single,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Single, Single, Single, String)
  nameWithType: Assert.AreEqual(Single, Single, Single, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single, System.Single, System.Single, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 55
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(float expected, float actual, float delta, string message)
    content.vb: Public Shared Sub AreEqual(expected As Single, actual As Single, delta As Single, message As String)
    parameters:
    - id: expected
      type: System.Single
    - id: actual
      type: System.Single
    - id: delta
      type: System.Single
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)
  id: AreEqual(System.Double,System.Double,System.Double,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Double, Double, Double, String)
  nameWithType: Assert.AreEqual(Double, Double, Double, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double, System.Double, System.Double, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 60
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(double expected, double actual, double delta, string message)
    content.vb: Public Shared Sub AreEqual(expected As Double, actual As Double, delta As Double, message As String)
    parameters:
    - id: expected
      type: System.Double
    - id: actual
      type: System.Double
    - id: delta
      type: System.Double
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  id: AreEqual(System.String,System.String,System.Boolean,CultureInfo)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, CultureInfo)
  nameWithType: Assert.AreEqual(String, String, Boolean, CultureInfo)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 65
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, CultureInfo culture)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo)
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: culture
      type: CultureInfo
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)
  id: AreEqual(System.String,System.String,System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, String)
  nameWithType: Assert.AreEqual(String, String, Boolean, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 76
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, string message)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, message As String)
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])
  id: AreEqual(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Object, Object, String, Object[])
  nameWithType: Assert.AreEqual(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 81
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(object expected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(Object, Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object, System.Object, System.String, System.Object())
  name.vb: AreEqual(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  id: AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, CultureInfo, String)
  nameWithType: Assert.AreEqual(String, String, Boolean, CultureInfo, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 86
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, CultureInfo culture, string message)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String)
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: culture
      type: CultureInfo
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  id: AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Double, Double, Double, String, Object[])
  nameWithType: Assert.AreEqual(Double, Double, Double, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double, System.Double, System.Double, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 91
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(double expected, double actual, double delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As Double, actual As Double, delta As Double, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Double
    - id: actual
      type: System.Double
    - id: delta
      type: System.Double
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(Double, Double, Double, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double, System.Double, System.Double, System.String, System.Object())
  name.vb: AreEqual(Double, Double, Double, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  id: AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, String, Object[])
  nameWithType: Assert.AreEqual(String, String, Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 96
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(String, String, Boolean, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, System.String, System.Object())
  name.vb: AreEqual(String, String, Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  id: AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(Single, Single, Single, String, Object[])
  nameWithType: Assert.AreEqual(Single, Single, Single, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single, System.Single, System.Single, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 101
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(float expected, float actual, float delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As Single, actual As Single, delta As Single, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Single
    - id: actual
      type: System.Single
    - id: delta
      type: System.Single
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(Single, Single, Single, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single, System.Single, System.Single, System.String, System.Object())
  name.vb: AreEqual(Single, Single, Single, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  id: AreEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual(String, String, Boolean, CultureInfo, String, Object[])
  nameWithType: Assert.AreEqual(String, String, Boolean, CultureInfo, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 106
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual(string expected, string actual, bool ignoreCase, CultureInfo culture, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(expected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: culture
      type: CultureInfo
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(String, String, Boolean, CultureInfo, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object())
  name.vb: AreEqual(String, String, Boolean, CultureInfo, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0)
  id: AreEqual``1(``0,``0)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual<T>(T, T)
  nameWithType: Assert.AreEqual<T>(T, T)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual<T>(T, T)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 111
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual<T>(T expected, T actual)
    content.vb: Public Shared Sub AreEqual(Of T)(expected As T, actual As T)
    parameters:
    - id: expected
      type: '{T}'
    - id: actual
      type: '{T}'
    typeParameters:
    - id: T
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(Of T)(T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(Of T)(T, T)
  name.vb: AreEqual(Of T)(T, T)
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String)
  id: AreEqual``1(``0,``0,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual<T>(T, T, String)
  nameWithType: Assert.AreEqual<T>(T, T, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual<T>(T, T, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 116
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual<T>(T expected, T actual, string message)
    content.vb: Public Shared Sub AreEqual(Of T)(expected As T, actual As T, message As String)
    parameters:
    - id: expected
      type: '{T}'
    - id: actual
      type: '{T}'
    - id: message
      type: System.String
    typeParameters:
    - id: T
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(Of T)(T, T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(Of T)(T, T, System.String)
  name.vb: AreEqual(Of T)(T, T, String)
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])
  id: AreEqual``1(``0,``0,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreEqual<T>(T, T, String, Object[])
  nameWithType: Assert.AreEqual<T>(T, T, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual<T>(T, T, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 121
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreEqual<T>(T expected, T actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreEqual(Of T)(expected As T, actual As T, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: '{T}'
    - id: actual
      type: '{T}'
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  nameWithType.vb: Assert.AreEqual(Of T)(T, T, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(Of T)(T, T, System.String, System.Object())
  name.vb: AreEqual(Of T)(T, T, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object)
  id: AreNotEqual(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Object, Object)
  nameWithType: Assert.AreNotEqual(Object, Object)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 126
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(object notExpected, object actual)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Object, actual As Object)
    parameters:
    - id: notExpected
      type: System.Object
    - id: actual
      type: System.Object
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single)
  id: AreNotEqual(System.Single,System.Single,System.Single)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Single, Single, Single)
  nameWithType: Assert.AreNotEqual(Single, Single, Single)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 131
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(float notExpected, float actual, float delta)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Single, actual As Single, delta As Single)
    parameters:
    - id: notExpected
      type: System.Single
    - id: actual
      type: System.Single
    - id: delta
      type: System.Single
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean)
  id: AreNotEqual(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean)
  nameWithType: Assert.AreNotEqual(String, String, Boolean)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 136
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean)
    parameters:
    - id: notExpected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double)
  id: AreNotEqual(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Double, Double, Double)
  nameWithType: Assert.AreNotEqual(Double, Double, Double)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 148
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(double notExpected, double actual, double delta)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Double, actual As Double, delta As Double)
    parameters:
    - id: notExpected
      type: System.Double
    - id: actual
      type: System.Double
    - id: delta
      type: System.Double
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String)
  id: AreNotEqual(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Object, Object, String)
  nameWithType: Assert.AreNotEqual(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 153
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(object notExpected, object actual, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Object, actual As Object, message As String)
    parameters:
    - id: notExpected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)
  id: AreNotEqual(System.Double,System.Double,System.Double,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Double, Double, Double, String)
  nameWithType: Assert.AreNotEqual(Double, Double, Double, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double, System.Double, System.Double, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 158
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(double notExpected, double actual, double delta, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Double, actual As Double, delta As Double, message As String)
    parameters:
    - id: notExpected
      type: System.Double
    - id: actual
      type: System.Double
    - id: delta
      type: System.Double
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)
  id: AreNotEqual(System.String,System.String,System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, String)
  nameWithType: Assert.AreNotEqual(String, String, Boolean, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 163
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, message As String)
    parameters:
    - id: notExpected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  id: AreNotEqual(System.String,System.String,System.Boolean,CultureInfo)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, CultureInfo)
  nameWithType: Assert.AreNotEqual(String, String, Boolean, CultureInfo)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 175
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, CultureInfo culture)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo)
    parameters:
    - id: notExpected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: culture
      type: CultureInfo
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)
  id: AreNotEqual(System.Single,System.Single,System.Single,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Single, Single, Single, String)
  nameWithType: Assert.AreNotEqual(Single, Single, Single, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single, System.Single, System.Single, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 186
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(float notExpected, float actual, float delta, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Single, actual As Single, delta As Single, message As String)
    parameters:
    - id: notExpected
      type: System.Single
    - id: actual
      type: System.Single
    - id: delta
      type: System.Single
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  id: AreNotEqual(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Object, Object, String, Object[])
  nameWithType: Assert.AreNotEqual(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 191
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(object notExpected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(Object, Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object, System.Object, System.String, System.Object())
  name.vb: AreNotEqual(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  id: AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, CultureInfo, String)
  nameWithType: Assert.AreNotEqual(String, String, Boolean, CultureInfo, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 196
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, CultureInfo culture, string message)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String)
    parameters:
    - id: notExpected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: culture
      type: CultureInfo
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  id: AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, String, Object[])
  nameWithType: Assert.AreNotEqual(String, String, Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 201
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(String, String, Boolean, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, System.String, System.Object())
  name.vb: AreNotEqual(String, String, Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  id: AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Double, Double, Double, String, Object[])
  nameWithType: Assert.AreNotEqual(Double, Double, Double, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double, System.Double, System.Double, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 206
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(double notExpected, double actual, double delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Double, actual As Double, delta As Double, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Double
    - id: actual
      type: System.Double
    - id: delta
      type: System.Double
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(Double, Double, Double, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double, System.Double, System.Double, System.String, System.Object())
  name.vb: AreNotEqual(Double, Double, Double, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  id: AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(Single, Single, Single, String, Object[])
  nameWithType: Assert.AreNotEqual(Single, Single, Single, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single, System.Single, System.Single, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 211
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(float notExpected, float actual, float delta, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As Single, actual As Single, delta As Single, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Single
    - id: actual
      type: System.Single
    - id: delta
      type: System.Single
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(Single, Single, Single, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single, System.Single, System.Single, System.String, System.Object())
  name.vb: AreNotEqual(Single, Single, Single, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  id: AreNotEqual(System.String,System.String,System.Boolean,CultureInfo,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual(String, String, Boolean, CultureInfo, String, Object[])
  nameWithType: Assert.AreNotEqual(String, String, Boolean, CultureInfo, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 216
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual(string notExpected, string actual, bool ignoreCase, CultureInfo culture, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(notExpected As String, actual As String, ignoreCase As Boolean, culture As CultureInfo, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.String
    - id: actual
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: culture
      type: CultureInfo
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(String, String, Boolean, CultureInfo, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String, System.String, System.Boolean, CultureInfo, System.String, System.Object())
  name.vb: AreNotEqual(String, String, Boolean, CultureInfo, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0)
  id: AreNotEqual``1(``0,``0)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual<T>(T, T)
  nameWithType: Assert.AreNotEqual<T>(T, T)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual<T>(T, T)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 221
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual<T>(T notExpected, T actual)
    content.vb: Public Shared Sub AreNotEqual(Of T)(notExpected As T, actual As T)
    parameters:
    - id: notExpected
      type: '{T}'
    - id: actual
      type: '{T}'
    typeParameters:
    - id: T
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(Of T)(T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(Of T)(T, T)
  name.vb: AreNotEqual(Of T)(T, T)
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String)
  id: AreNotEqual``1(``0,``0,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual<T>(T, T, String)
  nameWithType: Assert.AreNotEqual<T>(T, T, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual<T>(T, T, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 226
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual<T>(T notExpected, T actual, string message)
    content.vb: Public Shared Sub AreNotEqual(Of T)(notExpected As T, actual As T, message As String)
    parameters:
    - id: notExpected
      type: '{T}'
    - id: actual
      type: '{T}'
    - id: message
      type: System.String
    typeParameters:
    - id: T
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(Of T)(T, T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(Of T)(T, T, System.String)
  name.vb: AreNotEqual(Of T)(T, T, String)
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])
  id: AreNotEqual``1(``0,``0,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotEqual<T>(T, T, String, Object[])
  nameWithType: Assert.AreNotEqual<T>(T, T, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual<T>(T, T, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotEqual
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 231
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotEqual<T>(T notExpected, T actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotEqual(Of T)(notExpected As T, actual As T, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: '{T}'
    - id: actual
      type: '{T}'
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
    typeParameters:
    - id: T
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  nameWithType.vb: Assert.AreNotEqual(Of T)(T, T, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(Of T)(T, T, System.String, System.Object())
  name.vb: AreNotEqual(Of T)(T, T, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object)
  id: AreNotSame(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotSame(Object, Object)
  nameWithType: Assert.AreNotSame(Object, Object)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotSame
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 236
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotSame(object notExpected, object actual)
    content.vb: Public Shared Sub AreNotSame(notExpected As Object, actual As Object)
    parameters:
    - id: notExpected
      type: System.Object
    - id: actual
      type: System.Object
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String)
  id: AreNotSame(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotSame(Object, Object, String)
  nameWithType: Assert.AreNotSame(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotSame
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 241
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotSame(object notExpected, object actual, string message)
    content.vb: Public Shared Sub AreNotSame(notExpected As Object, actual As Object, message As String)
    parameters:
    - id: notExpected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])
  id: AreNotSame(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreNotSame(Object, Object, String, Object[])
  nameWithType: Assert.AreNotSame(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreNotSame
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 246
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreNotSame(object notExpected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreNotSame(notExpected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: notExpected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame*
  nameWithType.vb: Assert.AreNotSame(Object, Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object, System.Object, System.String, System.Object())
  name.vb: AreNotSame(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object)
  id: AreSame(System.Object,System.Object)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreSame(Object, Object)
  nameWithType: Assert.AreSame(Object, Object)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreSame
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 251
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreSame(object expected, object actual)
    content.vb: Public Shared Sub AreSame(expected As Object, actual As Object)
    parameters:
    - id: expected
      type: System.Object
    - id: actual
      type: System.Object
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String)
  id: AreSame(System.Object,System.Object,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreSame(Object, Object, String)
  nameWithType: Assert.AreSame(Object, Object, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object, System.Object, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreSame
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 256
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreSame(object expected, object actual, string message)
    content.vb: Public Shared Sub AreSame(expected As Object, actual As Object, message As String)
    parameters:
    - id: expected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])
  id: AreSame(System.Object,System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: AreSame(Object, Object, String, Object[])
  nameWithType: Assert.AreSame(Object, Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object, System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: AreSame
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 261
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void AreSame(object expected, object actual, string message, params object[] parameters)
    content.vb: Public Shared Sub AreSame(expected As Object, actual As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: expected
      type: System.Object
    - id: actual
      type: System.Object
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame*
  nameWithType.vb: Assert.AreSame(Object, Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object, System.Object, System.String, System.Object())
  name.vb: AreSame(Object, Object, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail
  id: Fail
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: Fail()
  nameWithType: Assert.Fail()
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail()
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Fail
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 266
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void Fail()
    content.vb: Public Shared Sub Fail
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)
  id: Fail(System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: Fail(String)
  nameWithType: Assert.Fail(String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Fail
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 271
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void Fail(string message)
    content.vb: Public Shared Sub Fail(message As String)
    parameters:
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])
  id: Fail(System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: Fail(String, Object[])
  nameWithType: Assert.Fail(String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Fail
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 276
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void Fail(string message, params object[] parameters)
    content.vb: Public Shared Sub Fail(message As String, ParamArray parameters As Object())
    parameters:
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail*
  nameWithType.vb: Assert.Fail(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String, System.Object())
  name.vb: Fail(String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive
  id: Inconclusive
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: Inconclusive()
  nameWithType: Assert.Inconclusive()
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive()
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Inconclusive
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 281
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void Inconclusive()
    content.vb: Public Shared Sub Inconclusive
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)
  id: Inconclusive(System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: Inconclusive(String)
  nameWithType: Assert.Inconclusive(String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Inconclusive
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 286
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void Inconclusive(string message)
    content.vb: Public Shared Sub Inconclusive(message As String)
    parameters:
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])
  id: Inconclusive(System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: Inconclusive(String, Object[])
  nameWithType: Assert.Inconclusive(String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Inconclusive
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 291
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void Inconclusive(string message, params object[] parameters)
    content.vb: Public Shared Sub Inconclusive(message As String, ParamArray parameters As Object())
    parameters:
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive*
  nameWithType.vb: Assert.Inconclusive(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String, System.Object())
  name.vb: Inconclusive(String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)
  id: IsFalse(System.Boolean)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsFalse(Boolean)
  nameWithType: Assert.IsFalse(Boolean)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsFalse
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 296
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsFalse(bool condition)
    content.vb: Public Shared Sub IsFalse(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String)
  id: IsFalse(System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsFalse(Boolean, String)
  nameWithType: Assert.IsFalse(Boolean, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsFalse
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 301
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsFalse(bool condition, string message)
    content.vb: Public Shared Sub IsFalse(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])
  id: IsFalse(System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsFalse(Boolean, String, Object[])
  nameWithType: Assert.IsFalse(Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsFalse
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 306
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsFalse(bool condition, string message, params object[] parameters)
    content.vb: Public Shared Sub IsFalse(condition As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse*
  nameWithType.vb: Assert.IsFalse(Boolean, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean, System.String, System.Object())
  name.vb: IsFalse(Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type)
  id: IsInstanceOfType(System.Object,Type)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsInstanceOfType(Object, Type)
  nameWithType: Assert.IsInstanceOfType(Object, Type)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object, Type)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsInstanceOfType
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 311
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsInstanceOfType(object value, Type expectedType)
    content.vb: Public Shared Sub IsInstanceOfType(value As Object, expectedType As Type)
    parameters:
    - id: value
      type: System.Object
    - id: expectedType
      type: Type
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type,System.String)
  id: IsInstanceOfType(System.Object,Type,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsInstanceOfType(Object, Type, String)
  nameWithType: Assert.IsInstanceOfType(Object, Type, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object, Type, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsInstanceOfType
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 316
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsInstanceOfType(object value, Type expectedType, string message)
    content.vb: Public Shared Sub IsInstanceOfType(value As Object, expectedType As Type, message As String)
    parameters:
    - id: value
      type: System.Object
    - id: expectedType
      type: Type
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  id: IsInstanceOfType(System.Object,Type,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsInstanceOfType(Object, Type, String, Object[])
  nameWithType: Assert.IsInstanceOfType(Object, Type, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object, Type, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsInstanceOfType
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 321
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsInstanceOfType(object value, Type expectedType, string message, params object[] parameters)
    content.vb: Public Shared Sub IsInstanceOfType(value As Object, expectedType As Type, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
    - id: expectedType
      type: Type
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType*
  nameWithType.vb: Assert.IsInstanceOfType(Object, Type, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object, Type, System.String, System.Object())
  name.vb: IsInstanceOfType(Object, Type, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type)
  id: IsNotInstanceOfType(System.Object,Type)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNotInstanceOfType(Object, Type)
  nameWithType: Assert.IsNotInstanceOfType(Object, Type)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object, Type)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotInstanceOfType
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 326
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNotInstanceOfType(object value, Type wrongType)
    content.vb: Public Shared Sub IsNotInstanceOfType(value As Object, wrongType As Type)
    parameters:
    - id: value
      type: System.Object
    - id: wrongType
      type: Type
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type,System.String)
  id: IsNotInstanceOfType(System.Object,Type,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNotInstanceOfType(Object, Type, String)
  nameWithType: Assert.IsNotInstanceOfType(Object, Type, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object, Type, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotInstanceOfType
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 338
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNotInstanceOfType(object value, Type wrongType, string message)
    content.vb: Public Shared Sub IsNotInstanceOfType(value As Object, wrongType As Type, message As String)
    parameters:
    - id: value
      type: System.Object
    - id: wrongType
      type: Type
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  id: IsNotInstanceOfType(System.Object,Type,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNotInstanceOfType(Object, Type, String, Object[])
  nameWithType: Assert.IsNotInstanceOfType(Object, Type, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object, Type, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotInstanceOfType
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 343
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNotInstanceOfType(object value, Type wrongType, string message, params object[] parameters)
    content.vb: Public Shared Sub IsNotInstanceOfType(value As Object, wrongType As Type, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
    - id: wrongType
      type: Type
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType*
  nameWithType.vb: Assert.IsNotInstanceOfType(Object, Type, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object, Type, System.String, System.Object())
  name.vb: IsNotInstanceOfType(Object, Type, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)
  id: IsNotNull(System.Object)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNotNull(Object)
  nameWithType: Assert.IsNotNull(Object)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotNull
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 348
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNotNull(object value)
    content.vb: Public Shared Sub IsNotNull(value As Object)
    parameters:
    - id: value
      type: System.Object
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String)
  id: IsNotNull(System.Object,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNotNull(Object, String)
  nameWithType: Assert.IsNotNull(Object, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotNull
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 353
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNotNull(object value, string message)
    content.vb: Public Shared Sub IsNotNull(value As Object, message As String)
    parameters:
    - id: value
      type: System.Object
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String,System.Object[])
  id: IsNotNull(System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNotNull(Object, String, Object[])
  nameWithType: Assert.IsNotNull(Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNotNull
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 358
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNotNull(object value, string message, params object[] parameters)
    content.vb: Public Shared Sub IsNotNull(value As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull*
  nameWithType.vb: Assert.IsNotNull(Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object, System.String, System.Object())
  name.vb: IsNotNull(Object, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)
  id: IsNull(System.Object)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNull(Object)
  nameWithType: Assert.IsNull(Object)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNull
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 363
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNull(object value)
    content.vb: Public Shared Sub IsNull(value As Object)
    parameters:
    - id: value
      type: System.Object
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String)
  id: IsNull(System.Object,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNull(Object, String)
  nameWithType: Assert.IsNull(Object, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNull
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 368
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNull(object value, string message)
    content.vb: Public Shared Sub IsNull(value As Object, message As String)
    parameters:
    - id: value
      type: System.Object
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String,System.Object[])
  id: IsNull(System.Object,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsNull(Object, String, Object[])
  nameWithType: Assert.IsNull(Object, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsNull
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 373
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsNull(object value, string message, params object[] parameters)
    content.vb: Public Shared Sub IsNull(value As Object, message As String, ParamArray parameters As Object())
    parameters:
    - id: value
      type: System.Object
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull*
  nameWithType.vb: Assert.IsNull(Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object, System.String, System.Object())
  name.vb: IsNull(Object, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)
  id: IsTrue(System.Boolean)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsTrue(Boolean)
  nameWithType: Assert.IsTrue(Boolean)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsTrue
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 378
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsTrue(bool condition)
    content.vb: Public Shared Sub IsTrue(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String)
  id: IsTrue(System.Boolean,System.String)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsTrue(Boolean, String)
  nameWithType: Assert.IsTrue(Boolean, String)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsTrue
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 383
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsTrue(bool condition, string message)
    content.vb: Public Shared Sub IsTrue(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])
  id: IsTrue(System.Boolean,System.String,System.Object[])
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: IsTrue(Boolean, String, Object[])
  nameWithType: Assert.IsTrue(Boolean, String, Object[])
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IsTrue
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 388
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void IsTrue(bool condition, string message, params object[] parameters)
    content.vb: Public Shared Sub IsTrue(condition As Boolean, message As String, ParamArray parameters As Object())
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
    - id: parameters
      type: System.Object[]
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue*
  nameWithType.vb: Assert.IsTrue(Boolean, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean, System.String, System.Object())
  name.vb: IsTrue(Boolean, String, Object())
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(Action,System.String,System.Boolean)
  commentId: M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(Action,System.String,System.Boolean)
  id: ThrowsException``1(Action,System.String,System.Boolean)
  parent: Microsoft.VisualStudio.TestTools.UnitTesting.Assert
  langs:
  - csharp
  - vb
  name: ThrowsException<TException>(Action, String, Boolean)
  nameWithType: Assert.ThrowsException<TException>(Action, String, Boolean)
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException<TException>(Action, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/XunitWrapper/Assert.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ThrowsException
    path: src/storage-data-movement/netcore/DMLibTest/XunitWrapper/Assert.cs
    startLine: 393
  assemblies:
  - DMLibTest
  namespace: Microsoft.VisualStudio.TestTools.UnitTesting
  syntax:
    content: public static void ThrowsException<TException>(Action action, string message, bool allowDerivedTypes = true)
    content.vb: Public Shared Sub ThrowsException(Of TException)(action As Action, message As String, allowDerivedTypes As Boolean = True)
    parameters:
    - id: action
      type: Action
    - id: message
      type: System.String
    - id: allowDerivedTypes
      type: System.Boolean
    typeParameters:
    - id: TException
  overload: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException*
  nameWithType.vb: Assert.ThrowsException(Of TException)(Action, String, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException(Of TException)(Action, System.String, System.Boolean)
  name.vb: ThrowsException(Of TException)(Action, String, Boolean)
references:
- uid: Microsoft.VisualStudio.TestTools.UnitTesting
  commentId: N:Microsoft.VisualStudio.TestTools.UnitTesting
  isExternal: false
  name: Microsoft.VisualStudio.TestTools.UnitTesting
  nameWithType: Microsoft.VisualStudio.TestTools.UnitTesting
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual
  isExternal: false
  name: AreEqual
  nameWithType: Assert.AreEqual
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual
  isExternal: false
  name: AreNotEqual
  nameWithType: Assert.AreNotEqual
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame
  isExternal: false
  name: AreNotSame
  nameWithType: Assert.AreNotSame
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame
  isExternal: false
  name: AreSame
  nameWithType: Assert.AreSame
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail
  isExternal: false
  name: Fail
  nameWithType: Assert.Fail
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive
  isExternal: false
  name: Inconclusive
  nameWithType: Assert.Inconclusive
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse
  isExternal: false
  name: IsFalse
  nameWithType: Assert.IsFalse
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType
  isExternal: false
  name: IsInstanceOfType
  nameWithType: Assert.IsInstanceOfType
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType
  isExternal: false
  name: IsNotInstanceOfType
  nameWithType: Assert.IsNotInstanceOfType
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull
  isExternal: false
  name: IsNotNull
  nameWithType: Assert.IsNotNull
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull
  isExternal: false
  name: IsNull
  nameWithType: Assert.IsNull
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue
  isExternal: false
  name: IsTrue
  nameWithType: Assert.IsTrue
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue
- uid: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException*
  commentId: Overload:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException
  isExternal: false
  name: ThrowsException
  nameWithType: Assert.ThrowsException
  fullName: Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
