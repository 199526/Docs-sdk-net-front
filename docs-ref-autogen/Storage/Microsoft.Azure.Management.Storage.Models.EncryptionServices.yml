### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  commentId: T:Microsoft.Azure.Management.Storage.Models.EncryptionServices
  id: EncryptionServices
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor
  - Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService)
  - Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob
  - Microsoft.Azure.Management.Storage.Models.EncryptionServices.File
  - Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue
  - Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table
  langs:
  - csharp
  - vb
  name: EncryptionServices
  nameWithType: EncryptionServices
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionServices
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nA list of services that support encryption.\n"
  example: []
  syntax:
    content: public class EncryptionServices
    content.vb: Public Class EncryptionServices
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  langs:
  - csharp
  - vb
  name: EncryptionServices()
  nameWithType: EncryptionServices.EncryptionServices()
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.EncryptionServices()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the EncryptionServices class.\n"
  example: []
  syntax:
    content: public EncryptionServices()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService)
  commentId: M:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService)
  id: '#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService)'
  parent: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  langs:
  - csharp
  - vb
  name: EncryptionServices(EncryptionService, EncryptionService, EncryptionService, EncryptionService)
  nameWithType: EncryptionServices.EncryptionServices(EncryptionService, EncryptionService, EncryptionService, EncryptionService)
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.EncryptionServices(Microsoft.Azure.Management.Storage.Models.EncryptionService, Microsoft.Azure.Management.Storage.Models.EncryptionService, Microsoft.Azure.Management.Storage.Models.EncryptionService, Microsoft.Azure.Management.Storage.Models.EncryptionService)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the EncryptionServices class.\n"
  example: []
  syntax:
    content: public EncryptionServices(EncryptionService blob = null, EncryptionService file = null, EncryptionService table = null, EncryptionService queue = null)
    parameters:
    - id: blob
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
      description: >-
        The encryption function of the blob storage

        service.
    - id: file
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
      description: >-
        The encryption function of the file storage

        service.
    - id: table
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
      description: >-
        The encryption function of the table storage

        service.
    - id: queue
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
      description: >-
        The encryption function of the queue storage

        service.
    content.vb: Public Sub New(blob As EncryptionService = Nothing, file As EncryptionService = Nothing, table As EncryptionService = Nothing, queue As EncryptionService = Nothing)
  overload: Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob
  commentId: P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob
  id: Blob
  parent: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  langs:
  - csharp
  - vb
  name: Blob
  nameWithType: EncryptionServices.Blob
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Blob
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets the encryption function of the blob storage service.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blob")]

      public EncryptionService Blob { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
    content.vb: >-
      <JsonProperty(PropertyName:="blob")>

      Public Property Blob As EncryptionService
  overload: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blob
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.File
  commentId: P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.File
  id: File
  parent: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  langs:
  - csharp
  - vb
  name: File
  nameWithType: EncryptionServices.File
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.File
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: File
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets the encryption function of the file storage service.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "file")]

      public EncryptionService File { get; set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
    content.vb: >-
      <JsonProperty(PropertyName:="file")>

      Public Property File As EncryptionService
  overload: Microsoft.Azure.Management.Storage.Models.EncryptionServices.File*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: file
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table
  commentId: P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table
  id: Table
  parent: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  langs:
  - csharp
  - vb
  name: Table
  nameWithType: EncryptionServices.Table
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Table
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the encryption function of the table storage service.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "table")]

      public EncryptionService Table { get; protected set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
    content.vb: >-
      <JsonProperty(PropertyName:="table")>

      Public Property Table As EncryptionService
  overload: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: table
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue
  commentId: P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue
  id: Queue
  parent: Microsoft.Azure.Management.Storage.Models.EncryptionServices
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: EncryptionServices.Queue
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Queue
    path: src/azure-sdk-for-net/src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/EncryptionServices.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the encryption function of the queue storage service.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "queue")]

      public EncryptionService Queue { get; protected set; }
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.EncryptionService
    content.vb: >-
      <JsonProperty(PropertyName:="queue")>

      Public Property Queue As EncryptionService
  overload: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: queue
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Microsoft.Azure.Management.Storage.Models
  commentId: N:Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  nameWithType: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor
  isExternal: false
  name: EncryptionServices
  nameWithType: EncryptionServices.EncryptionServices
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.EncryptionServices
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionService
  commentId: T:Microsoft.Azure.Management.Storage.Models.EncryptionService
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: EncryptionService
  nameWithType: EncryptionService
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionService
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob
  isExternal: false
  name: Blob
  nameWithType: EncryptionServices.Blob
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.File*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.EncryptionServices.File
  isExternal: false
  name: File
  nameWithType: EncryptionServices.File
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.File
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table
  isExternal: false
  name: Table
  nameWithType: EncryptionServices.Table
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table
- uid: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue*
  commentId: Overload:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue
  isExternal: false
  name: Queue
  nameWithType: EncryptionServices.Queue
  fullName: Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue
