### YamlMime:ManagedReference
items:
- uid: DMLibTest.CloudPageBlobExtensions
  commentId: T:DMLibTest.CloudPageBlobExtensions
  id: CloudPageBlobExtensions
  parent: DMLibTest
  children:
  - DMLibTest.CloudPageBlobExtensions.Create(CloudPageBlob,System.Int64,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudPageBlobExtensions.GetPageRanges(CloudPageBlob,System.Nullable{System.Int64},System.Nullable{System.Int64},AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudPageBlobExtensions.UploadFromFile(CloudPageBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudPageBlobExtensions.UploadFromStream(CloudPageBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  - DMLibTest.CloudPageBlobExtensions.WritePages(CloudPageBlob,Stream,System.Int64,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  langs:
  - csharp
  - vb
  name: CloudPageBlobExtensions
  nameWithType: CloudPageBlobExtensions
  fullName: DMLibTest.CloudPageBlobExtensions
  type: Class
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CloudPageBlobExtensions
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 7
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: 'public static class CloudPageBlobExtensions : object'
    content.vb: >-
      Public Module CloudPageBlobExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DMLibTest.CloudPageBlobExtensions.Create(CloudPageBlob,System.Int64,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudPageBlobExtensions.Create(CloudPageBlob,System.Int64,AccessCondition,BlobRequestOptions,OperationContext)
  id: Create(CloudPageBlob,System.Int64,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudPageBlobExtensions
  langs:
  - csharp
  - vb
  name: Create(CloudPageBlob, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudPageBlobExtensions.Create(CloudPageBlob, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudPageBlobExtensions.Create(CloudPageBlob, System.Int64, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: Create
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 9
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void Create(this CloudPageBlob blob, long size, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Create(blob As CloudPageBlob, size As Long, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudPageBlob
    - id: size
      type: System.Int64
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudPageBlobExtensions.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudPageBlobExtensions.GetPageRanges(CloudPageBlob,System.Nullable{System.Int64},System.Nullable{System.Int64},AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudPageBlobExtensions.GetPageRanges(CloudPageBlob,System.Nullable{System.Int64},System.Nullable{System.Int64},AccessCondition,BlobRequestOptions,OperationContext)
  id: GetPageRanges(CloudPageBlob,System.Nullable{System.Int64},System.Nullable{System.Int64},AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudPageBlobExtensions
  langs:
  - csharp
  - vb
  name: GetPageRanges(CloudPageBlob, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudPageBlobExtensions.GetPageRanges(CloudPageBlob, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudPageBlobExtensions.GetPageRanges(CloudPageBlob, System.Nullable<System.Int64>, System.Nullable<System.Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: GetPageRanges
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 14
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static IEnumerable<PageRange> GetPageRanges(this CloudPageBlob blob, long ? offset = null, long ? length = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPageRanges(blob As CloudPageBlob, offset As Long? = Nothing, length As Long? = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of PageRange)
    parameters:
    - id: blob
      type: CloudPageBlob
    - id: offset
      type: System.Nullable{System.Int64}
    - id: length
      type: System.Nullable{System.Int64}
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
    return:
      type: IEnumerable{PageRange}
  overload: DMLibTest.CloudPageBlobExtensions.GetPageRanges*
  nameWithType.vb: CloudPageBlobExtensions.GetPageRanges(CloudPageBlob, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudPageBlobExtensions.GetPageRanges(CloudPageBlob, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), AccessCondition, BlobRequestOptions, OperationContext)
  name.vb: GetPageRanges(CloudPageBlob, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: DMLibTest.CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromByteArray(CloudPageBlob,System.Byte[],System.Int32,System.Int32,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudPageBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromByteArray(CloudPageBlob, Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob, Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob, System.Byte[], System.Int32, System.Int32, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromByteArray
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 19
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromByteArray(this CloudPageBlob blob, byte[] buffer, int index, int count, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromByteArray(blob As CloudPageBlob, buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudPageBlob
    - id: buffer
      type: System.Byte[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudPageBlobExtensions.UploadFromByteArray*
  nameWithType.vb: CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob, Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DMLibTest.CloudPageBlobExtensions.UploadFromByteArray(CloudPageBlob, System.Byte(), System.Int32, System.Int32, AccessCondition, BlobRequestOptions, OperationContext)
  name.vb: UploadFromByteArray(CloudPageBlob, Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: DMLibTest.CloudPageBlobExtensions.UploadFromFile(CloudPageBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudPageBlobExtensions.UploadFromFile(CloudPageBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromFile(CloudPageBlob,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudPageBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromFile(CloudPageBlob, String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudPageBlobExtensions.UploadFromFile(CloudPageBlob, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudPageBlobExtensions.UploadFromFile(CloudPageBlob, System.String, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromFile
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 24
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromFile(this CloudPageBlob blob, string path, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromFile(blob As CloudPageBlob, path As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudPageBlob
    - id: path
      type: System.String
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudPageBlobExtensions.UploadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudPageBlobExtensions.UploadFromStream(CloudPageBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudPageBlobExtensions.UploadFromStream(CloudPageBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  id: UploadFromStream(CloudPageBlob,Stream,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudPageBlobExtensions
  langs:
  - csharp
  - vb
  name: UploadFromStream(CloudPageBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudPageBlobExtensions.UploadFromStream(CloudPageBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudPageBlobExtensions.UploadFromStream(CloudPageBlob, Stream, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: UploadFromStream
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 29
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void UploadFromStream(this CloudPageBlob blob, Stream source, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UploadFromStream(blob As CloudPageBlob, source As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudPageBlob
    - id: source
      type: Stream
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudPageBlobExtensions.UploadFromStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DMLibTest.CloudPageBlobExtensions.WritePages(CloudPageBlob,Stream,System.Int64,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  commentId: M:DMLibTest.CloudPageBlobExtensions.WritePages(CloudPageBlob,Stream,System.Int64,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  id: WritePages(CloudPageBlob,Stream,System.Int64,System.String,AccessCondition,BlobRequestOptions,OperationContext)
  isExtensionMethod: true
  parent: DMLibTest.CloudPageBlobExtensions
  langs:
  - csharp
  - vb
  name: WritePages(CloudPageBlob, Stream, Int64, String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: CloudPageBlobExtensions.WritePages(CloudPageBlob, Stream, Int64, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: DMLibTest.CloudPageBlobExtensions.WritePages(CloudPageBlob, Stream, System.Int64, System.String, AccessCondition, BlobRequestOptions, OperationContext)
  type: Method
  source:
    remote:
      path: netcore/DMLibTest/CloudPageBlobExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: WritePages
    path: src/storage-data-movement/netcore/DMLibTest/CloudPageBlobExtensions.cs
    startLine: 34
  assemblies:
  - DMLibTest
  namespace: DMLibTest
  syntax:
    content: public static void WritePages(this CloudPageBlob blob, Stream pageData, long startOffset, string contentMD5 = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WritePages(blob As CloudPageBlob, pageData As Stream, startOffset As Long, contentMD5 As String = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: blob
      type: CloudPageBlob
    - id: pageData
      type: Stream
    - id: startOffset
      type: System.Int64
    - id: contentMD5
      type: System.String
    - id: accessCondition
      type: AccessCondition
    - id: options
      type: BlobRequestOptions
    - id: operationContext
      type: OperationContext
  overload: DMLibTest.CloudPageBlobExtensions.WritePages*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DMLibTest
  commentId: N:DMLibTest
  isExternal: false
  name: DMLibTest
  nameWithType: DMLibTest
  fullName: DMLibTest
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DMLibTest.CloudPageBlobExtensions.Create*
  commentId: Overload:DMLibTest.CloudPageBlobExtensions.Create
  isExternal: false
  name: Create
  nameWithType: CloudPageBlobExtensions.Create
  fullName: DMLibTest.CloudPageBlobExtensions.Create
- uid: CloudPageBlob
  isExternal: true
  name: CloudPageBlob
  nameWithType: CloudPageBlob
  fullName: CloudPageBlob
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: AccessCondition
  isExternal: true
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: AccessCondition
- uid: BlobRequestOptions
  isExternal: true
  name: BlobRequestOptions
  nameWithType: BlobRequestOptions
  fullName: BlobRequestOptions
- uid: OperationContext
  isExternal: true
  name: OperationContext
  nameWithType: OperationContext
  fullName: OperationContext
- uid: DMLibTest.CloudPageBlobExtensions.GetPageRanges*
  commentId: Overload:DMLibTest.CloudPageBlobExtensions.GetPageRanges
  isExternal: false
  name: GetPageRanges
  nameWithType: CloudPageBlobExtensions.GetPageRanges
  fullName: DMLibTest.CloudPageBlobExtensions.GetPageRanges
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{PageRange}
  commentId: '!:IEnumerable{PageRange}'
  definition: IEnumerable`1
  name: IEnumerable<PageRange>
  nameWithType: IEnumerable<PageRange>
  fullName: IEnumerable<PageRange>
  nameWithType.vb: IEnumerable(Of PageRange)
  fullname.vb: IEnumerable(Of PageRange)
  name.vb: IEnumerable(Of PageRange)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PageRange
    name: PageRange
    nameWithType: PageRange
    fullName: PageRange
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PageRange
    name: PageRange
    nameWithType: PageRange
    fullName: PageRange
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DMLibTest.CloudPageBlobExtensions.UploadFromByteArray*
  commentId: Overload:DMLibTest.CloudPageBlobExtensions.UploadFromByteArray
  isExternal: false
  name: UploadFromByteArray
  nameWithType: CloudPageBlobExtensions.UploadFromByteArray
  fullName: DMLibTest.CloudPageBlobExtensions.UploadFromByteArray
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DMLibTest.CloudPageBlobExtensions.UploadFromFile*
  commentId: Overload:DMLibTest.CloudPageBlobExtensions.UploadFromFile
  isExternal: false
  name: UploadFromFile
  nameWithType: CloudPageBlobExtensions.UploadFromFile
  fullName: DMLibTest.CloudPageBlobExtensions.UploadFromFile
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DMLibTest.CloudPageBlobExtensions.UploadFromStream*
  commentId: Overload:DMLibTest.CloudPageBlobExtensions.UploadFromStream
  isExternal: false
  name: UploadFromStream
  nameWithType: CloudPageBlobExtensions.UploadFromStream
  fullName: DMLibTest.CloudPageBlobExtensions.UploadFromStream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: DMLibTest.CloudPageBlobExtensions.WritePages*
  commentId: Overload:DMLibTest.CloudPageBlobExtensions.WritePages
  isExternal: false
  name: WritePages
  nameWithType: CloudPageBlobExtensions.WritePages
  fullName: DMLibTest.CloudPageBlobExtensions.WritePages
