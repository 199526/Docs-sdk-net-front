items:
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  id: ResourceOperationsExtensions
  parent: Microsoft.Azure.Management.Resources
  children:
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMoving(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMovingAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistence(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Delete(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Get(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.List(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListAsync(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNext(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResources(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  - Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResourcesAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  langs:
  - csharp
  - vb
  name: ResourceOperationsExtensions
  nameWithType: ResourceOperationsExtensions
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ResourceOperationsExtensions
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  syntax:
    content: 'public class ResourceOperationsExtensions : object'
    content.vb: >-
      Public Class ResourceOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMoving(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMoving(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  id: BeginMoving(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginMoving(IResourceOperations, String, ResourcesMoveInfo)
  nameWithType: ResourceOperationsExtensions.BeginMoving(IResourceOperations, String, ResourcesMoveInfo)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMoving(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginMoving
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nBegin moving resources.To determine whether the operation has\nfinished processing the request, call\nGetLongRunningOperationStatus.\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginMoving(this IResourceOperations operations, string sourceResourceGroupName, ResourcesMoveInfo parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginMoving(operations As IResourceOperations, sourceResourceGroupName As String, parameters As ResourcesMoveInfo) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: sourceResourceGroupName
      type: System.String
      description: "\nRequired. Source resource group name.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
      description: "\nRequired. move resources' parameters.\n"
    return:
      type: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
      description: "\nA standard service response for long running operations.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMovingAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMovingAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  id: BeginMovingAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginMovingAsync(IResourceOperations, String, ResourcesMoveInfo)
  nameWithType: ResourceOperationsExtensions.BeginMovingAsync(IResourceOperations, String, ResourcesMoveInfo)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.BeginMovingAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginMovingAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nBegin moving resources.To determine whether the operation has\nfinished processing the request, call\nGetLongRunningOperationStatus.\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginMovingAsync(this IResourceOperations operations, string sourceResourceGroupName, ResourcesMoveInfo parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginMovingAsync(operations As IResourceOperations, sourceResourceGroupName As String, parameters As ResourcesMoveInfo) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: sourceResourceGroupName
      type: System.String
      description: "\nRequired. Source resource group name.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
      description: "\nRequired. move resources' parameters.\n"
    return:
      type: Task{Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse}
      description: "\nA standard service response for long running operations.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistence(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistence(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  id: CheckExistence(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckExistence(IResourceOperations, String, ResourceIdentity)
  nameWithType: ResourceOperationsExtensions.CheckExistence(IResourceOperations, String, ResourceIdentity)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistence(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CheckExistence
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nChecks whether resource exists.\n"
  example: []
  syntax:
    content: public static ResourceExistsResult CheckExistence(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckExistence(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity) As ResourceExistsResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    return:
      type: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
      description: "\nResource group information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  id: CheckExistenceAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckExistenceAsync(IResourceOperations, String, ResourceIdentity)
  nameWithType: ResourceOperationsExtensions.CheckExistenceAsync(IResourceOperations, String, ResourceIdentity)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CheckExistenceAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nChecks whether resource exists.\n"
  example: []
  syntax:
    content: public static Task<ResourceExistsResult> CheckExistenceAsync(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckExistenceAsync(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity) As Task(Of ResourceExistsResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    return:
      type: Task{Microsoft.Azure.Management.Resources.Models.ResourceExistsResult}
      description: "\nResource group information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  id: CreateOrUpdate(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IResourceOperations, String, ResourceIdentity, GenericResource)
  nameWithType: ResourceOperationsExtensions.CreateOrUpdate(IResourceOperations, String, ResourceIdentity, GenericResource)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity, Microsoft.Azure.Management.Resources.Models.GenericResource)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nCreate a resource.\n"
  example: []
  syntax:
    content: public static ResourceCreateOrUpdateResult CreateOrUpdate(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity, GenericResource parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity, parameters As GenericResource) As ResourceCreateOrUpdateResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.GenericResource
      description: "\nRequired. Create or update resource parameters.\n"
    return:
      type: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
      description: "\nResource information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity,Microsoft.Azure.Management.Resources.Models.GenericResource)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IResourceOperations, String, ResourceIdentity, GenericResource)
  nameWithType: ResourceOperationsExtensions.CreateOrUpdateAsync(IResourceOperations, String, ResourceIdentity, GenericResource)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity, Microsoft.Azure.Management.Resources.Models.GenericResource)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nCreate a resource.\n"
  example: []
  syntax:
    content: public static Task<ResourceCreateOrUpdateResult> CreateOrUpdateAsync(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity, GenericResource parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity, parameters As GenericResource) As Task(Of ResourceCreateOrUpdateResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.GenericResource
      description: "\nRequired. Create or update resource parameters.\n"
    return:
      type: Task{Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult}
      description: "\nResource information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Delete(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Delete(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  id: Delete(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IResourceOperations, String, ResourceIdentity)
  nameWithType: ResourceOperationsExtensions.Delete(IResourceOperations, String, ResourceIdentity)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Delete(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nDelete resource and all of its resources.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Delete(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  id: DeleteAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IResourceOperations, String, ResourceIdentity)
  nameWithType: ResourceOperationsExtensions.DeleteAsync(IResourceOperations, String, ResourceIdentity)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 230
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nDelete resource and all of its resources.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DeleteAsync(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Get(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Get(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  id: Get(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IResourceOperations, String, ResourceIdentity)
  nameWithType: ResourceOperationsExtensions.Get(IResourceOperations, String, ResourceIdentity)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.Get(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 252
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nReturns a resource belonging to a resource group.\n"
  example: []
  syntax:
    content: public static ResourceGetResult Get(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity) As ResourceGetResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    return:
      type: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
      description: "\nResource information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  id: GetAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,ResourceIdentity)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IResourceOperations, String, ResourceIdentity)
  nameWithType: ResourceOperationsExtensions.GetAsync(IResourceOperations, String, ResourceIdentity)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, ResourceIdentity)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 278
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nReturns a resource belonging to a resource group.\n"
  example: []
  syntax:
    content: public static Task<ResourceGetResult> GetAsync(this IResourceOperations operations, string resourceGroupName, ResourceIdentity identity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IResourceOperations, resourceGroupName As String, identity As ResourceIdentity) As Task(Of ResourceGetResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resource group. The name is case\ninsensitive.\n"
    - id: identity
      type: ResourceIdentity
      description: "\nRequired. Resource identity.\n"
    return:
      type: Task{Microsoft.Azure.Management.Resources.Models.ResourceGetResult}
      description: "\nResource information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.List(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.List(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  id: List(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IResourceOperations, ResourceListParameters)
  nameWithType: ResourceOperationsExtensions.List(IResourceOperations, ResourceListParameters)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.List(Microsoft.Azure.Management.Resources.IResourceOperations, Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nGet all of the resources under a subscription.\n"
  example: []
  syntax:
    content: public static ResourceListResult List(this IResourceOperations operations, ResourceListParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IResourceOperations, parameters As ResourceListParameters) As ResourceListResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.ResourceListParameters
      description: "\nOptional. Query parameters. If null is passed returns all resource\ngroups.\n"
    return:
      type: Microsoft.Azure.Management.Resources.Models.ResourceListResult
      description: "\nList of resource groups.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListAsync(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListAsync(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  id: ListAsync(Microsoft.Azure.Management.Resources.IResourceOperations,Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IResourceOperations, ResourceListParameters)
  nameWithType: ResourceOperationsExtensions.ListAsync(IResourceOperations, ResourceListParameters)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListAsync(Microsoft.Azure.Management.Resources.IResourceOperations, Microsoft.Azure.Management.Resources.Models.ResourceListParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 320
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nGet all of the resources under a subscription.\n"
  example: []
  syntax:
    content: public static Task<ResourceListResult> ListAsync(this IResourceOperations operations, ResourceListParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IResourceOperations, parameters As ResourceListParameters) As Task(Of ResourceListResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.ResourceListParameters
      description: "\nOptional. Query parameters. If null is passed returns all resource\ngroups.\n"
    return:
      type: Task{Microsoft.Azure.Management.Resources.Models.ResourceListResult}
      description: "\nList of resource groups.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNext(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNext(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IResourceOperations, String)
  nameWithType: ResourceOperationsExtensions.ListNext(IResourceOperations, String)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNext(Microsoft.Azure.Management.Resources.IResourceOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 339
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nGet a list of resources.\n"
  example: []
  syntax:
    content: public static ResourceListResult ListNext(this IResourceOperations operations, string nextLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IResourceOperations, nextLink As String) As ResourceListResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: nextLink
      type: System.String
      description: "\nRequired. NextLink from the previous successful call to List\noperation.\n"
    return:
      type: Microsoft.Azure.Management.Resources.Models.ResourceListResult
      description: "\nList of resource groups.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  id: ListNextAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IResourceOperations, String)
  nameWithType: ResourceOperationsExtensions.ListNextAsync(IResourceOperations, String)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 362
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nGet a list of resources.\n"
  example: []
  syntax:
    content: public static Task<ResourceListResult> ListNextAsync(this IResourceOperations operations, string nextLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IResourceOperations, nextLink As String) As Task(Of ResourceListResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: nextLink
      type: System.String
      description: "\nRequired. NextLink from the previous successful call to List\noperation.\n"
    return:
      type: Task{Microsoft.Azure.Management.Resources.Models.ResourceListResult}
      description: "\nList of resource groups.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResources(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResources(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  id: MoveResources(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: MoveResources(IResourceOperations, String, ResourcesMoveInfo)
  nameWithType: ResourceOperationsExtensions.MoveResources(IResourceOperations, String, ResourcesMoveInfo)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResources(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MoveResources
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 384
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nMove resources within or across subscriptions.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse MoveResources(this IResourceOperations operations, string sourceResourceGroupName, ResourcesMoveInfo parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MoveResources(operations As IResourceOperations, sourceResourceGroupName As String, parameters As ResourcesMoveInfo) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: sourceResourceGroupName
      type: System.String
      description: "\nRequired. Source resource group name.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
      description: "\nRequired. move resources' parameters.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResourcesAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  commentId: M:Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResourcesAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  id: MoveResourcesAsync(Microsoft.Azure.Management.Resources.IResourceOperations,System.String,Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions
  langs:
  - csharp
  - vb
  name: MoveResourcesAsync(IResourceOperations, String, ResourcesMoveInfo)
  nameWithType: ResourceOperationsExtensions.MoveResourcesAsync(IResourceOperations, String, ResourcesMoveInfo)
  fullName: Microsoft.Azure.Management.Resources.ResourceOperationsExtensions.MoveResourcesAsync(Microsoft.Azure.Management.Resources.IResourceOperations, System.String, Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MoveResourcesAsync
    path: src/ResourceManagement/Resource/ResourceManagement/Generated/ResourceOperationsExtensions.cs
    startLine: 410
  assemblies:
  - Microsoft.Azure.ResourceManager
  namespace: Microsoft.Azure.Management.Resources
  summary: "\nMove resources within or across subscriptions.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> MoveResourcesAsync(this IResourceOperations operations, string sourceResourceGroupName, ResourcesMoveInfo parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MoveResourcesAsync(operations As IResourceOperations, sourceResourceGroupName As String, parameters As ResourcesMoveInfo) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Resources.IResourceOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.Resources.IResourceOperations.\n"
    - id: sourceResourceGroupName
      type: System.String
      description: "\nRequired. Source resource group name.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
      description: "\nRequired. move resources' parameters.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Resources
  commentId: N:Microsoft.Azure.Management.Resources
  isExternal: false
  name: Microsoft.Azure.Management.Resources
  nameWithType: Microsoft.Azure.Management.Resources
  fullName: Microsoft.Azure.Management.Resources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.Azure.Management.Resources.IResourceOperations
  commentId: T:Microsoft.Azure.Management.Resources.IResourceOperations
  parent: Microsoft.Azure.Management.Resources
  isExternal: false
  name: IResourceOperations
  nameWithType: IResourceOperations
  fullName: Microsoft.Azure.Management.Resources.IResourceOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
  commentId: T:Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: ResourcesMoveInfo
  nameWithType: ResourcesMoveInfo
  fullName: Microsoft.Azure.Management.Resources.Models.ResourcesMoveInfo
- uid: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
  commentId: T:Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: LongRunningOperationResponse
  nameWithType: LongRunningOperationResponse
  fullName: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
- uid: Microsoft.Azure.Management.Resources.Models
  commentId: N:Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: Microsoft.Azure.Management.Resources.Models
  nameWithType: Microsoft.Azure.Management.Resources.Models
  fullName: Microsoft.Azure.Management.Resources.Models
- uid: Task{Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse}
  commentId: '!:Task{Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse}'
  definition: Task`1
  name: Task<LongRunningOperationResponse>
  nameWithType: Task<LongRunningOperationResponse>
  fullName: Task<Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse>
  nameWithType.vb: Task(Of LongRunningOperationResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    nameWithType: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    nameWithType: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Resources.Models.LongRunningOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: ResourceIdentity
  isExternal: true
  name: ResourceIdentity
  nameWithType: ResourceIdentity
  fullName: ResourceIdentity
- uid: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
  commentId: T:Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: ResourceExistsResult
  nameWithType: ResourceExistsResult
  fullName: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
- uid: Task{Microsoft.Azure.Management.Resources.Models.ResourceExistsResult}
  commentId: '!:Task{Microsoft.Azure.Management.Resources.Models.ResourceExistsResult}'
  definition: Task`1
  name: Task<ResourceExistsResult>
  nameWithType: Task<ResourceExistsResult>
  fullName: Task<Microsoft.Azure.Management.Resources.Models.ResourceExistsResult>
  nameWithType.vb: Task(Of ResourceExistsResult)
  fullname.vb: Task(Of Microsoft.Azure.Management.Resources.Models.ResourceExistsResult)
  name.vb: Task(Of ResourceExistsResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
    name: ResourceExistsResult
    nameWithType: ResourceExistsResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
    name: ResourceExistsResult
    nameWithType: ResourceExistsResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceExistsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Resources.Models.GenericResource
  commentId: T:Microsoft.Azure.Management.Resources.Models.GenericResource
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: GenericResource
  nameWithType: GenericResource
  fullName: Microsoft.Azure.Management.Resources.Models.GenericResource
- uid: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
  commentId: T:Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: ResourceCreateOrUpdateResult
  nameWithType: ResourceCreateOrUpdateResult
  fullName: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
- uid: Task{Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult}
  commentId: '!:Task{Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult}'
  definition: Task`1
  name: Task<ResourceCreateOrUpdateResult>
  nameWithType: Task<ResourceCreateOrUpdateResult>
  fullName: Task<Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult>
  nameWithType.vb: Task(Of ResourceCreateOrUpdateResult)
  fullname.vb: Task(Of Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult)
  name.vb: Task(Of ResourceCreateOrUpdateResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
    name: ResourceCreateOrUpdateResult
    nameWithType: ResourceCreateOrUpdateResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
    name: ResourceCreateOrUpdateResult
    nameWithType: ResourceCreateOrUpdateResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceCreateOrUpdateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Task{AzureOperationResponse}
  commentId: '!:Task{AzureOperationResponse}'
  definition: Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
  commentId: T:Microsoft.Azure.Management.Resources.Models.ResourceGetResult
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: ResourceGetResult
  nameWithType: ResourceGetResult
  fullName: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
- uid: Task{Microsoft.Azure.Management.Resources.Models.ResourceGetResult}
  commentId: '!:Task{Microsoft.Azure.Management.Resources.Models.ResourceGetResult}'
  definition: Task`1
  name: Task<ResourceGetResult>
  nameWithType: Task<ResourceGetResult>
  fullName: Task<Microsoft.Azure.Management.Resources.Models.ResourceGetResult>
  nameWithType.vb: Task(Of ResourceGetResult)
  fullname.vb: Task(Of Microsoft.Azure.Management.Resources.Models.ResourceGetResult)
  name.vb: Task(Of ResourceGetResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
    name: ResourceGetResult
    nameWithType: ResourceGetResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
    name: ResourceGetResult
    nameWithType: ResourceGetResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceGetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Resources.Models.ResourceListParameters
  commentId: T:Microsoft.Azure.Management.Resources.Models.ResourceListParameters
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: ResourceListParameters
  nameWithType: ResourceListParameters
  fullName: Microsoft.Azure.Management.Resources.Models.ResourceListParameters
- uid: Microsoft.Azure.Management.Resources.Models.ResourceListResult
  commentId: T:Microsoft.Azure.Management.Resources.Models.ResourceListResult
  parent: Microsoft.Azure.Management.Resources.Models
  isExternal: false
  name: ResourceListResult
  nameWithType: ResourceListResult
  fullName: Microsoft.Azure.Management.Resources.Models.ResourceListResult
- uid: Task{Microsoft.Azure.Management.Resources.Models.ResourceListResult}
  commentId: '!:Task{Microsoft.Azure.Management.Resources.Models.ResourceListResult}'
  definition: Task`1
  name: Task<ResourceListResult>
  nameWithType: Task<ResourceListResult>
  fullName: Task<Microsoft.Azure.Management.Resources.Models.ResourceListResult>
  nameWithType.vb: Task(Of ResourceListResult)
  fullname.vb: Task(Of Microsoft.Azure.Management.Resources.Models.ResourceListResult)
  name.vb: Task(Of ResourceListResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceListResult
    name: ResourceListResult
    nameWithType: ResourceListResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Resources.Models.ResourceListResult
    name: ResourceListResult
    nameWithType: ResourceListResult
    fullName: Microsoft.Azure.Management.Resources.Models.ResourceListResult
  - name: )
    nameWithType: )
    fullName: )
