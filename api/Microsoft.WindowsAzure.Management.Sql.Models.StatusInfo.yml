### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  commentId: T:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  id: StatusInfo
  parent: Microsoft.WindowsAzure.Management.Sql.Models
  children:
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.#ctor
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.BlobUri
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.DatabaseName
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ErrorMessage
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.LastModifiedTime
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.QueuedTime
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestId
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestType
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ServerName
  - Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.Status
  langs:
  - csharp
  - vb
  name: StatusInfo
  nameWithType: StatusInfo
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StatusInfo
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nDescribes the status of an import or export operation.\n"
  example: []
  syntax:
    content: public class StatusInfo
    content.vb: Public Class StatusInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.BlobUri
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.BlobUri
  id: BlobUri
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: BlobUri
  nameWithType: StatusInfo.BlobUri
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.BlobUri
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobUri
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the URI of the DACPAC file being used that is stored\nin Azure Blob Storage.  For import this is the DACPAC that is\nbeing imported.  For export this is the destination for the\nresultant DACPAC file.\n"
  example: []
  syntax:
    content: public Uri BlobUri { get; set; }
    content.vb: Public Property BlobUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.DatabaseName
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.DatabaseName
  id: DatabaseName
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: StatusInfo.DatabaseName
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.DatabaseName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DatabaseName
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the name of the database that is being used.  For\nimport this is the name of the newly created database that is\nbeing imported into.  For export this is the name of the database\nbeing exported.\n"
  example: []
  syntax:
    content: public string DatabaseName { get; set; }
    content.vb: Public Property DatabaseName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ErrorMessage
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ErrorMessage
  id: ErrorMessage
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: StatusInfo.ErrorMessage
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ErrorMessage
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ErrorMessage
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the error message of the request if the request\nfailed in some way.\n"
  example: []
  syntax:
    content: public string ErrorMessage { get; set; }
    content.vb: Public Property ErrorMessage As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.LastModifiedTime
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.LastModifiedTime
  id: LastModifiedTime
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: LastModifiedTime
  nameWithType: StatusInfo.LastModifiedTime
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.LastModifiedTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModifiedTime
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the last time the operation status changed.\n"
  example: []
  syntax:
    content: public DateTime LastModifiedTime { get; set; }
    content.vb: Public Property LastModifiedTime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.QueuedTime
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.QueuedTime
  id: QueuedTime
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: QueuedTime
  nameWithType: StatusInfo.QueuedTime
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.QueuedTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: QueuedTime
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 88
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the time at which the import or export request was\nqueued and the process initiated.\n"
  example: []
  syntax:
    content: public DateTime QueuedTime { get; set; }
    content.vb: Public Property QueuedTime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestId
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestId
  id: RequestId
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: RequestId
  nameWithType: StatusInfo.RequestId
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequestId
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the request ID of this import or export request.\nThis can be used to continue to track this operation using\nGetStatus.\n"
  example: []
  syntax:
    content: public string RequestId { get; set; }
    content.vb: Public Property RequestId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestType
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestType
  id: RequestType
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: RequestType
  nameWithType: StatusInfo.RequestType
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.RequestType
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequestType
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the type of the operation.  This can be either:\nImport or Export.\n"
  example: []
  syntax:
    content: public string RequestType { get; set; }
    content.vb: Public Property RequestType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ServerName
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ServerName
  id: ServerName
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: ServerName
  nameWithType: StatusInfo.ServerName
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.ServerName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerName
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the name of the SQL Database server holding the\ndatabase that the import or export operation is utilizing.\n"
  example: []
  syntax:
    content: public string ServerName { get; set; }
    content.vb: Public Property ServerName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.Status
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.Status
  id: Status
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: StatusInfo.Status
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.Status
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the status of the import or export request.\n"
  example: []
  syntax:
    content: public string Status { get; set; }
    content.vb: Public Property Status As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo
  langs:
  - csharp
  - vb
  name: StatusInfo()
  nameWithType: StatusInfo.StatusInfo()
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.StatusInfo.StatusInfo()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/StatusInfo.cs
    startLine: 145
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nInitializes a new instance of the StatusInfo class.\n"
  example: []
  syntax:
    content: public StatusInfo()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Sql.Models
  commentId: N:Microsoft.WindowsAzure.Management.Sql.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Sql.Models
  nameWithType: Microsoft.WindowsAzure.Management.Sql.Models
  fullName: Microsoft.WindowsAzure.Management.Sql.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
