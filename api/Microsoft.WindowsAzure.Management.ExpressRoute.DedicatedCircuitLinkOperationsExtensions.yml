items:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  id: DedicatedCircuitLinkOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  children:
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  langs:
  - csharp
  - vb
  name: DedicatedCircuitLinkOperationsExtensions
  nameWithType: DedicatedCircuitLinkOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DedicatedCircuitLinkOperationsExtensions
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Express Route API provides programmatic access to the functionality\nneeded by the customer to set up Dedicated Circuits and Dedicated\nCircuit Links. The Express Route Customer API is a REST API. All API\noperations are performed over SSL and mutually authenticated using\nX.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: 'public class DedicatedCircuitLinkOperationsExtensions : object'
    content.vb: >-
      Public Class DedicatedCircuitLinkOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginNew(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.BeginNew(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginNew
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Dedicated Circuit Link operation creates a new dedicated\ncircuit link.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationResponse BeginNew(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginNew(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As ExpressRouteOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginNewAsync(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.BeginNewAsync(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginNewAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Dedicated Circuit Link operation creates a new dedicated\ncircuit link.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationResponse> BeginNewAsync(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginNewAsync(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As Task(Of ExpressRouteOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: BeginRemove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRemove(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.BeginRemove(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginRemove
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 109
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Remove Dedicated Circuit Link operation deletes an existing\ndedicated circuit link.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationResponse BeginRemove(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRemove(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As ExpressRouteOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service key representing the dedicated circuit.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: BeginRemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRemoveAsync(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.BeginRemoveAsync(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.BeginRemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginRemoveAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Remove Dedicated Circuit Link operation deletes an existing\ndedicated circuit link.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationResponse> BeginRemoveAsync(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRemoveAsync(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As Task(Of ExpressRouteOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service key representing the dedicated circuit.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.Get(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 158
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Dedicated Circuit Link operation retrieves the specified\ndedicated circuit link.\n"
  example: []
  syntax:
    content: public static DedicatedCircuitLinkGetResponse Get(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As DedicatedCircuitLinkGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
      description: "\nThe Get Dedicated Circuit Link operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.GetAsync(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 184
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Dedicated Circuit Link operation retrieves the specified\ndedicated circuit link.\n"
  example: []
  syntax:
    content: public static Task<DedicatedCircuitLinkGetResponse> GetAsync(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As Task(Of DedicatedCircuitLinkGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse}
      description: "\nThe Get Dedicated Circuit Link operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  id: GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IDedicatedCircuitLinkOperations, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.GetOperationStatus(IDedicatedCircuitLinkOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetOperationStatus
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 213
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Express Route operation status gets information on the\nstatus of Express Route operations in Windows Azure.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse GetOperationStatus(this IDedicatedCircuitLinkOperations operations, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As IDedicatedCircuitLinkOperations, operationId As String) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The id  of the operation.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  id: GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IDedicatedCircuitLinkOperations, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.GetOperationStatusAsync(IDedicatedCircuitLinkOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetOperationStatusAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 246
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Express Route operation status gets information on the\nstatus of Express Route operations in Windows Azure.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> GetOperationStatusAsync(this IDedicatedCircuitLinkOperations operations, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As IDedicatedCircuitLinkOperations, operationId As String) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The id  of the operation.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  id: List(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IDedicatedCircuitLinkOperations, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.List(IDedicatedCircuitLinkOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: List
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 266
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe List Dedicated Circuit Links operation retrieves a list of\nVnets that are linked to the circuit with the specified service\nkey.\n"
  example: []
  syntax:
    content: public static DedicatedCircuitLinkListResponse List(this IDedicatedCircuitLinkOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IDedicatedCircuitLinkOperations, serviceKey As String) As DedicatedCircuitLinkListResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nOptional.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
      description: "\nThe List Dedicated Circuit Link operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  id: ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IDedicatedCircuitLinkOperations, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.ListAsync(IDedicatedCircuitLinkOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 290
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe List Dedicated Circuit Links operation retrieves a list of\nVnets that are linked to the circuit with the specified service\nkey.\n"
  example: []
  syntax:
    content: public static Task<DedicatedCircuitLinkListResponse> ListAsync(this IDedicatedCircuitLinkOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IDedicatedCircuitLinkOperations, serviceKey As String) As Task(Of DedicatedCircuitLinkListResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nOptional.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse}
      description: "\nThe List Dedicated Circuit Link operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: New(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: New(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.New(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: New
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 320
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Dedicated Circuit Link operation creates a new dedicated\ncircuit link.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse New(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function New(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: NewAsync(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.NewAsync(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: NewAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 354
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Dedicated Circuit Link operation creates a new dedicated\ncircuit link.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> NewAsync(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function NewAsync(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: Remove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: Remove(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.Remove(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Remove
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 384
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Remove Dedicated Circuit Link operation deletes an existing\ndedicated circuit link.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse Remove(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Remove(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service Key associated with the dedicated circuit.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  id: RemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAsync(IDedicatedCircuitLinkOperations, String, String)
  nameWithType: DedicatedCircuitLinkOperationsExtensions.RemoveAsync(IDedicatedCircuitLinkOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitLinkOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitLinkOperationsExtensions.cs
    startLine: 418
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Remove Dedicated Circuit Link operation deletes an existing\ndedicated circuit link.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> RemoveAsync(this IDedicatedCircuitLinkOperations operations, string serviceKey, string vnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAsync(operations As IDedicatedCircuitLinkOperations, serviceKey As String, vnetName As String) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service Key associated with the dedicated circuit.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired.\n"
    return:
      type: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: IDedicatedCircuitLinkOperations
  nameWithType: IDedicatedCircuitLinkOperations
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitLinkOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: ExpressRouteOperationResponse
  nameWithType: ExpressRouteOperationResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models
- uid: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
  commentId: '!:Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}'
  definition: Task`1
  name: Task<ExpressRouteOperationResponse>
  nameWithType: Task<ExpressRouteOperationResponse>
  fullName: Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse>
  nameWithType.vb: Task(Of ExpressRouteOperationResponse)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse)
  name.vb: Task(Of ExpressRouteOperationResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
    name: ExpressRouteOperationResponse
    nameWithType: ExpressRouteOperationResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
    name: ExpressRouteOperationResponse
    nameWithType: ExpressRouteOperationResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: DedicatedCircuitLinkGetResponse
  nameWithType: DedicatedCircuitLinkGetResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
- uid: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse}
  commentId: '!:Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse}'
  definition: Task`1
  name: Task<DedicatedCircuitLinkGetResponse>
  nameWithType: Task<DedicatedCircuitLinkGetResponse>
  fullName: Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse>
  nameWithType.vb: Task(Of DedicatedCircuitLinkGetResponse)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse)
  name.vb: Task(Of DedicatedCircuitLinkGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
    name: DedicatedCircuitLinkGetResponse
    nameWithType: DedicatedCircuitLinkGetResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
    name: DedicatedCircuitLinkGetResponse
    nameWithType: DedicatedCircuitLinkGetResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: ExpressRouteOperationStatusResponse
  nameWithType: ExpressRouteOperationStatusResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
- uid: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
  commentId: '!:Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}'
  definition: Task`1
  name: Task<ExpressRouteOperationStatusResponse>
  nameWithType: Task<ExpressRouteOperationStatusResponse>
  fullName: Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse>
  nameWithType.vb: Task(Of ExpressRouteOperationStatusResponse)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse)
  name.vb: Task(Of ExpressRouteOperationStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
    name: ExpressRouteOperationStatusResponse
    nameWithType: ExpressRouteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
    name: ExpressRouteOperationStatusResponse
    nameWithType: ExpressRouteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: DedicatedCircuitLinkListResponse
  nameWithType: DedicatedCircuitLinkListResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
- uid: Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse}
  commentId: '!:Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse}'
  definition: Task`1
  name: Task<DedicatedCircuitLinkListResponse>
  nameWithType: Task<DedicatedCircuitLinkListResponse>
  fullName: Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse>
  nameWithType.vb: Task(Of DedicatedCircuitLinkListResponse)
  fullname.vb: Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse)
  name.vb: Task(Of DedicatedCircuitLinkListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
    name: DedicatedCircuitLinkListResponse
    nameWithType: DedicatedCircuitLinkListResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
    name: DedicatedCircuitLinkListResponse
    nameWithType: DedicatedCircuitLinkListResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkListResponse
  - name: )
    nameWithType: )
    fullName: )
