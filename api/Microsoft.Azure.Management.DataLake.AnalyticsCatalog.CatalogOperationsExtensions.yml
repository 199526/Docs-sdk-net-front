items:
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  id: CatalogOperationsExtensions
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  children:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssembly(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssemblyAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredential(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredentialAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabase(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabaseAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSource(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSourceAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedure(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedureAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchema(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchemaAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTable(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatistic(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatisticAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunction(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunctionAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetView(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetViewAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssemblies(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssembliesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentials(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentialsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabases(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabasesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSources(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSourcesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProcedures(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProceduresAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemas(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemasAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTables(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTablesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatistics(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatisticsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctions(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctionsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypes(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViews(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViewsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  langs:
  - csharp
  - vb
  name: CatalogOperationsExtensions
  nameWithType: CatalogOperationsExtensions
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CatalogOperationsExtensions
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nCreates an Azure Data Lake Analytics catalog management client.\n"
  example: []
  syntax:
    content: 'public class CatalogOperationsExtensions : object'
    content.vb: >-
      Public Class CatalogOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  id: CreateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateSecret(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  nameWithType: CatalogOperationsExtensions.CreateSecret(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateSecret
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nCreates the specified secret for use with external data sources in\nthe specified database\n"
  example: []
  syntax:
    content: public static CatalogSecretCreateResponse CreateSecret(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateSecret(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, parameters As DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters) As CatalogSecretCreateResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to create the secret in.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
      description: "\nRequired. The parameters required to create the secret (name and\npassword)\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
      description: "\nThe create secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  id: CreateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateSecretAsync(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  nameWithType: CatalogOperationsExtensions.CreateSecretAsync(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.CreateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateSecretAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nCreates the specified secret for use with external data sources in\nthe specified database\n"
  example: []
  syntax:
    content: public static Task<CatalogSecretCreateResponse> CreateSecretAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateSecretAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, parameters As DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters) As Task(Of CatalogSecretCreateResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to create the secret in.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
      description: "\nRequired. The parameters required to create the secret (name and\npassword)\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse}
      description: "\nThe create secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: DeleteSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteSecret(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.DeleteSecret(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteSecret
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nDeletes the specified secret in the specified database\n"
  example: []
  syntax:
    content: public static CatalogSecretCreateResponse DeleteSecret(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string secretName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteSecret(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, secretName As String) As CatalogSecretCreateResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to delete the secret from.\n"
    - id: secretName
      type: System.String
      description: "\nOptional. The name of the secret to delete\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
      description: "\nThe create secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: DeleteSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteSecretAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.DeleteSecretAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.DeleteSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteSecretAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nDeletes the specified secret in the specified database\n"
  example: []
  syntax:
    content: public static Task<CatalogSecretCreateResponse> DeleteSecretAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string secretName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteSecretAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, secretName As String) As Task(Of CatalogSecretCreateResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to delete the secret from.\n"
    - id: secretName
      type: System.String
      description: "\nOptional. The name of the secret to delete\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse}
      description: "\nThe create secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssembly(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssembly(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetAssembly(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAssembly(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetAssembly(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssembly(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAssembly
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 183
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified assembly from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogAssemblyGetResponse GetAssembly(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string assemblyName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAssembly(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, assemblyName As String) As CatalogAssemblyGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the assembly in.\n"
    - id: assemblyName
      type: System.String
      description: "\nRequired. The name of the assembly to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
      description: "\nThe Get Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssemblyAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssemblyAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetAssemblyAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAssemblyAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetAssemblyAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetAssemblyAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAssemblyAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified assembly from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogAssemblyGetResponse> GetAssemblyAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string assemblyName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAssemblyAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, assemblyName As String) As Task(Of CatalogAssemblyGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the assembly in.\n"
    - id: assemblyName
      type: System.String
      description: "\nRequired. The name of the assembly to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse}
      description: "\nThe Get Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredential(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredential(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetCredential(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCredential(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetCredential(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredential(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetCredential
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 245
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified credential from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogCredentialGetResponse GetCredential(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string credentialName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCredential(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, credentialName As String) As CatalogCredentialGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    - id: credentialName
      type: System.String
      description: "\nRequired. The name of the credential to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
      description: "\nThe Get credential operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredentialAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredentialAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetCredentialAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCredentialAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetCredentialAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetCredentialAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetCredentialAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 278
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified credential from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogCredentialGetResponse> GetCredentialAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string credentialName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCredentialAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, credentialName As String) As Task(Of CatalogCredentialGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    - id: credentialName
      type: System.String
      description: "\nRequired. The name of the credential to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse}
      description: "\nThe Get credential operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabase(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabase(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: GetDatabase(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetDatabase(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetDatabase(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabase(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetDatabase
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 304
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified database from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogDatabaseGetResponse GetDatabase(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDatabase(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As CatalogDatabaseGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The path to the file to create.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
      description: "\nThe Get Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabaseAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabaseAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: GetDatabaseAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetDatabaseAsync(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetDatabaseAsync(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetDatabaseAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetDatabaseAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 334
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified database from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogDatabaseGetResponse> GetDatabaseAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDatabaseAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As Task(Of CatalogDatabaseGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The path to the file to create.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse}
      description: "\nThe Get Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSource(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSource(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetExternalDataSource(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetExternalDataSource(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetExternalDataSource(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSource(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetExternalDataSource
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 364
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified external data source from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static CatalogExternalDataSourceGetResponse GetExternalDataSource(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string externalDataSourceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExternalDataSource(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, externalDataSourceName As String) As CatalogExternalDataSourceGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the external Data Source\nin.\n"
    - id: externalDataSourceName
      type: System.String
      description: "\nRequired. The name of the external Data Source to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
      description: "\nThe Get external data source operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSourceAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSourceAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetExternalDataSourceAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetExternalDataSourceAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetExternalDataSourceAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetExternalDataSourceAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetExternalDataSourceAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 398
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified external data source from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogExternalDataSourceGetResponse> GetExternalDataSourceAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string externalDataSourceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExternalDataSourceAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, externalDataSourceName As String) As Task(Of CatalogExternalDataSourceGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the external Data Source\nin.\n"
    - id: externalDataSourceName
      type: System.String
      description: "\nRequired. The name of the external Data Source to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse}
      description: "\nThe Get external data source operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedure(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedure(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetProcedure(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetProcedure(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetProcedure(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedure(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetProcedure
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 430
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified procedure from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogProcedureGetResponse GetProcedure(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string procedureName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetProcedure(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, procedureName As String) As CatalogProcedureGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the procedure in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the procedure in.\n"
    - id: procedureName
      type: System.String
      description: "\nRequired. The name of the procedure to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
      description: "\nThe Get procedure operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedureAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedureAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetProcedureAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetProcedureAsync(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetProcedureAsync(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetProcedureAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetProcedureAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 466
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified procedure from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogProcedureGetResponse> GetProcedureAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string procedureName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetProcedureAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, procedureName As String) As Task(Of CatalogProcedureGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the procedure in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the procedure in.\n"
    - id: procedureName
      type: System.String
      description: "\nRequired. The name of the procedure to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse}
      description: "\nThe Get procedure operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchema(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchema(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetSchema(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetSchema(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetSchema(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchema(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSchema
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 495
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified schema from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogSchemaGetResponse GetSchema(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSchema(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As CatalogSchemaGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
      description: "\nThe Get schema operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchemaAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchemaAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetSchemaAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetSchemaAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetSchemaAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSchemaAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSchemaAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 528
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified schema from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogSchemaGetResponse> GetSchemaAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSchemaAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As Task(Of CatalogSchemaGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse}
      description: "\nThe Get schema operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetSecret(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetSecret(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecret
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 556
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nGets the specified secret in the specified database\n"
  example: []
  syntax:
    content: public static CatalogSecretGetResponse GetSecret(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string secretName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecret(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, secretName As String) As CatalogSecretGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to get the secret from.\n"
    - id: secretName
      type: System.String
      description: "\nRequired. The name of the secret to get\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
      description: "\nThe Get secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: GetSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetSecretAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetSecretAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 588
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nGets the specified secret in the specified database\n"
  example: []
  syntax:
    content: public static Task<CatalogSecretGetResponse> GetSecretAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string secretName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, secretName As String) As Task(Of CatalogSecretGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to get the secret from.\n"
    - id: secretName
      type: System.String
      description: "\nRequired. The name of the secret to get\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse}
      description: "\nThe Get secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTable(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTable(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetTable(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTable(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetTable(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTable(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetTable
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 620
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified table from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogTableGetResponse GetTable(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTable(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableName As String) As CatalogTableGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the table in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the table in.\n"
    - id: tableName
      type: System.String
      description: "\nRequired. The name of the table to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
      description: "\nThe Get table operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetTableAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTableAsync(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetTableAsync(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetTableAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 656
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified table from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTableGetResponse> GetTableAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTableAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableName As String) As Task(Of CatalogTableGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the table in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the table in.\n"
    - id: tableName
      type: System.String
      description: "\nRequired. The name of the table to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse}
      description: "\nThe Get table operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatistic(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatistic(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  id: GetTableStatistic(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTableStatistic(ICatalogOperations, String, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetTableStatistic(ICatalogOperations, String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatistic(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetTableStatistic
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 691
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified table from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogTableStatisticsGetResponse GetTableStatistic(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableName, string statisticsName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTableStatistic(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableName As String, statisticsName As String) As CatalogTableStatisticsGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the statistics in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the statistics in.\n"
    - id: tableName
      type: System.String
      description: "\nRequired. The name of the table to find the statistics in.\n"
    - id: statisticsName
      type: System.String
      description: "\nRequired. The name of the table statistics to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
      description: "\nThe Get table statistics operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatisticAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatisticAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  id: GetTableStatisticAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTableStatisticAsync(ICatalogOperations, String, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetTableStatisticAsync(ICatalogOperations, String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableStatisticAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetTableStatisticAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 730
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified table from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTableStatisticsGetResponse> GetTableStatisticAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableName, string statisticsName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTableStatisticAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableName As String, statisticsName As String) As Task(Of CatalogTableStatisticsGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the statistics in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the statistics in.\n"
    - id: tableName
      type: System.String
      description: "\nRequired. The name of the table to find the statistics in.\n"
    - id: statisticsName
      type: System.String
      description: "\nRequired. The name of the table statistics to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse}
      description: "\nThe Get table statistics operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunction(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunction(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetTableValuedFunction(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTableValuedFunction(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetTableValuedFunction(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunction(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetTableValuedFunction
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 764
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified table valued function from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static CatalogTableValuedFunctionGetResponse GetTableValuedFunction(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableValuedFunctionName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTableValuedFunction(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableValuedFunctionName As String) As CatalogTableValuedFunctionGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the table valued\nfunction in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the table valued function\nin.\n"
    - id: tableValuedFunctionName
      type: System.String
      description: "\nRequired. The name of the tableValuedFunction to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
      description: "\nThe Get table valued function operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunctionAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunctionAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetTableValuedFunctionAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTableValuedFunctionAsync(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetTableValuedFunctionAsync(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetTableValuedFunctionAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetTableValuedFunctionAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 802
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified table valued function from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTableValuedFunctionGetResponse> GetTableValuedFunctionAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableValuedFunctionName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTableValuedFunctionAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableValuedFunctionName As String) As Task(Of CatalogTableValuedFunctionGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the table valued\nfunction in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the table valued function\nin.\n"
    - id: tableValuedFunctionName
      type: System.String
      description: "\nRequired. The name of the tableValuedFunction to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse}
      description: "\nThe Get table valued function operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetView(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetView(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetView(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetView(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetView(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetView(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetView
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 834
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified view from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogViewGetResponse GetView(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string viewName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetView(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, viewName As String) As CatalogViewGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the view in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the view in.\n"
    - id: viewName
      type: System.String
      description: "\nRequired. The name of the view to find.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
      description: "\nThe Get view operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetViewAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetViewAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: GetViewAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetViewAsync(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.GetViewAsync(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.GetViewAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetViewAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 870
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the specified view from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogViewGetResponse> GetViewAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string viewName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetViewAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, viewName As String) As Task(Of CatalogViewGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the view in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the view in.\n"
    - id: viewName
      type: System.String
      description: "\nRequired. The name of the view to find.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse}
      description: "\nThe Get view operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssemblies(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssemblies(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListAssemblies(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAssemblies(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListAssemblies(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssemblies(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListAssemblies
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 896
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of assemblies from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogAssemblyListGetResponse ListAssemblies(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAssemblies(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As CatalogAssemblyListGetResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the assembly in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
      description: "\nThe List Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssembliesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssembliesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListAssembliesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAssembliesAsync(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListAssembliesAsync(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListAssembliesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListAssembliesAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 926
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of assemblies from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogAssemblyListGetResponse> ListAssembliesAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAssembliesAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As Task(Of CatalogAssemblyListGetResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the assembly in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse}
      description: "\nThe List Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentials(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentials(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListCredentials(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListCredentials(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListCredentials(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentials(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListCredentials
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 952
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of credentials from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogCredentialListResponse ListCredentials(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListCredentials(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As CatalogCredentialListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
      description: "\nThe List schema operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentialsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentialsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListCredentialsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListCredentialsAsync(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListCredentialsAsync(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListCredentialsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListCredentialsAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 982
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of credentials from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogCredentialListResponse> ListCredentialsAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListCredentialsAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As Task(Of CatalogCredentialListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse}
      description: "\nThe List schema operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabases(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabases(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  id: ListDatabases(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListDatabases(ICatalogOperations, String, String)
  nameWithType: CatalogOperationsExtensions.ListDatabases(ICatalogOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabases(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListDatabases
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1005
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of databases from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogDatabaseListResponse ListDatabases(this ICatalogOperations operations, string resourceGroupName, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListDatabases(operations As ICatalogOperations, resourceGroupName As String, accountName As String) As CatalogDatabaseListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
      description: "\nThe List Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabasesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabasesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  id: ListDatabasesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListDatabasesAsync(ICatalogOperations, String, String)
  nameWithType: CatalogOperationsExtensions.ListDatabasesAsync(ICatalogOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListDatabasesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListDatabasesAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1032
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of databases from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogDatabaseListResponse> ListDatabasesAsync(this ICatalogOperations operations, string resourceGroupName, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListDatabasesAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String) As Task(Of CatalogDatabaseListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse}
      description: "\nThe List Database operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSources(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSources(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListExternalDataSources(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListExternalDataSources(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListExternalDataSources(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSources(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListExternalDataSources
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1059
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of external data sources from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static CatalogExternalDataSourceListResponse ListExternalDataSources(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListExternalDataSources(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As CatalogExternalDataSourceListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the external Data Source\nin.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
      description: "\nThe List external data source operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSourcesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSourcesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListExternalDataSourcesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListExternalDataSourcesAsync(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListExternalDataSourcesAsync(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListExternalDataSourcesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListExternalDataSourcesAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1090
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of external data sources from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogExternalDataSourceListResponse> ListExternalDataSourcesAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListExternalDataSourcesAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As Task(Of CatalogExternalDataSourceListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the external Data Source\nin.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse}
      description: "\nThe List external data source operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProcedures(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProcedures(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListProcedures(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListProcedures(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListProcedures(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProcedures(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListProcedures
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1119
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of procedures from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static CatalogProcedureListResponse ListProcedures(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListProcedures(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As CatalogProcedureListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the procedures in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the procedures in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
      description: "\nThe List procedures operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProceduresAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProceduresAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListProceduresAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListProceduresAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListProceduresAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListProceduresAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListProceduresAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1152
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of procedures from the current Data Lake\nAnalytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogProcedureListResponse> ListProceduresAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListProceduresAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As Task(Of CatalogProcedureListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the procedures in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the procedures in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse}
      description: "\nThe List procedures operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemas(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemas(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListSchemas(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListSchemas(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListSchemas(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemas(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListSchemas
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1178
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of schemas from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogSchemaListResponse ListSchemas(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListSchemas(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As CatalogSchemaListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
      description: "\nThe List schema operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemasAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemasAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  id: ListSchemasAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListSchemasAsync(ICatalogOperations, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListSchemasAsync(ICatalogOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListSchemasAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListSchemasAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1208
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of schemas from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogSchemaListResponse> ListSchemasAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListSchemasAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String) As Task(Of CatalogSchemaListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the schema in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse}
      description: "\nThe List schema operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTables(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTables(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListTables(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTables(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListTables(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTables(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTables
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1237
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of tables from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogTableListResponse ListTables(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTables(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As CatalogTableListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the tables in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the tables in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
      description: "\nThe List tables operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTablesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTablesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListTablesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTablesAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListTablesAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTablesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTablesAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1270
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of tables from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTableListResponse> ListTablesAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTablesAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As Task(Of CatalogTableListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the tables in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the tables in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse}
      description: "\nThe List tables operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatistics(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatistics(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: ListTableStatistics(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTableStatistics(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListTableStatistics(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatistics(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTableStatistics
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1302
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of tables from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogTableStatisticsListResponse ListTableStatistics(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTableStatistics(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableName As String) As CatalogTableStatisticsListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the statistics in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the statistics in.\n"
    - id: tableName
      type: System.String
      description: "\nRequired. The name of the table to find the statistics in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
      description: "\nThe List table statistics operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatisticsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatisticsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  id: ListTableStatisticsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTableStatisticsAsync(ICatalogOperations, String, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListTableStatisticsAsync(ICatalogOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableStatisticsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTableStatisticsAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1338
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of tables from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTableStatisticsListResponse> ListTableStatisticsAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, string tableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTableStatisticsAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, tableName As String) As Task(Of CatalogTableStatisticsListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the statistics in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the statistics in.\n"
    - id: tableName
      type: System.String
      description: "\nRequired. The name of the table to find the statistics in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse}
      description: "\nThe List table statistics operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctions(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctions(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListTableValuedFunctions(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTableValuedFunctions(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListTableValuedFunctions(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctions(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTableValuedFunctions
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1369
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of table valued functions from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static CatalogTableValuedFunctionListResponse ListTableValuedFunctions(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTableValuedFunctions(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As CatalogTableValuedFunctionListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the table valued\nfunctions in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the table valued functions\nin.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
      description: "\nThe List table valued functions operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctionsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctionsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListTableValuedFunctionsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTableValuedFunctionsAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListTableValuedFunctionsAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTableValuedFunctionsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTableValuedFunctionsAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1404
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of table valued functions from the current Data\nLake Analytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTableValuedFunctionListResponse> ListTableValuedFunctionsAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTableValuedFunctionsAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As Task(Of CatalogTableValuedFunctionListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the table valued\nfunctions in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the table valued functions\nin.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse}
      description: "\nThe List table valued functions operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypes(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypes(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  id: ListTypes(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTypes(ICatalogOperations, String, String, String, String, TypeListParameters)
  nameWithType: CatalogOperationsExtensions.ListTypes(ICatalogOperations, String, String, String, String, TypeListParameters)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypes(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTypes
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1437
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of catalog types within the specified database\nand schema for the current Data Lake Analytics catalog\n"
  example: []
  syntax:
    content: public static CatalogTypeListResponse ListTypes(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, TypeListParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTypes(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, parameters As TypeListParameters) As CatalogTypeListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the types in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the types in.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters
      description: "\nOptional. Query parameters. If null is passed returns all catalog\ntype items.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
      description: "\nThe List types operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  id: ListTypesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTypesAsync(ICatalogOperations, String, String, String, String, TypeListParameters)
  nameWithType: CatalogOperationsExtensions.ListTypesAsync(ICatalogOperations, String, String, String, String, TypeListParameters)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListTypesAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String, Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListTypesAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1474
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of catalog types within the specified database\nand schema for the current Data Lake Analytics catalog\n"
  example: []
  syntax:
    content: public static Task<CatalogTypeListResponse> ListTypesAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName, TypeListParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTypesAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String, parameters As TypeListParameters) As Task(Of CatalogTypeListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the types in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the types in.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters
      description: "\nOptional. Query parameters. If null is passed returns all catalog\ntype items.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse}
      description: "\nThe List types operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViews(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViews(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListViews(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListViews(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListViews(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViews(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListViews
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1503
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of views from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static CatalogViewListResponse ListViews(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListViews(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As CatalogViewListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the views in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the views in.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
      description: "\nThe List views operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViewsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViewsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  id: ListViewsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListViewsAsync(ICatalogOperations, String, String, String, String)
  nameWithType: CatalogOperationsExtensions.ListViewsAsync(ICatalogOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.ListViewsAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListViewsAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1536
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nRetrieves the list of views from the current Data Lake Analytics\ncatalog\n"
  example: []
  syntax:
    content: public static Task<CatalogViewListResponse> ListViewsAsync(this ICatalogOperations operations, string resourceGroupName, string accountName, string databaseName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListViewsAsync(operations As ICatalogOperations, resourceGroupName As String, accountName As String, databaseName As String, schemaName As String) As Task(Of CatalogViewListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to find the views in.\n"
    - id: schemaName
      type: System.String
      description: "\nRequired. The name of the schema to find the views in.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse}
      description: "\nThe List views operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  id: UpdateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateSecret(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  nameWithType: CatalogOperationsExtensions.UpdateSecret(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecret(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateSecret
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1566
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nModifies the specified secret for use with external data sources in\nthe specified database\n"
  example: []
  syntax:
    content: public static CatalogSecretCreateResponse UpdateSecret(this ICatalogOperations operations, string accountName, string resourceGroupName, string databaseName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateSecret(operations As ICatalogOperations, accountName As String, resourceGroupName As String, databaseName As String, parameters As DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters) As CatalogSecretCreateResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to modify the secret in.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
      description: "\nRequired. The parameters required to modify the secret (name and\npassword)\n"
    return:
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
      description: "\nThe create secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  id: UpdateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateSecretAsync(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  nameWithType: CatalogOperationsExtensions.UpdateSecretAsync(ICatalogOperations, String, String, String, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.CatalogOperationsExtensions.UpdateSecretAsync(Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations, System.String, System.String, System.String, Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateSecretAsync
    path: src/ResourceManagement/DataLake.AnalyticsCatalog/DataLakeAnalyticsCatalogManagement/Generated/CatalogOperationsExtensions.cs
    startLine: 1600
  assemblies:
  - Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  namespace: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  summary: "\nModifies the specified secret for use with external data sources in\nthe specified database\n"
  example: []
  syntax:
    content: public static Task<CatalogSecretCreateResponse> UpdateSecretAsync(this ICatalogOperations operations, string accountName, string resourceGroupName, string databaseName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateSecretAsync(operations As ICatalogOperations, accountName As String, resourceGroupName As String, databaseName As String, parameters As DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters) As Task(Of CatalogSecretCreateResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. The name of the resourceGroup the Data Lake Analytics\naccount is in\n"
    - id: databaseName
      type: System.String
      description: "\nRequired. The name of the database to modify the secret in.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
      description: "\nRequired. The parameters required to modify the secret (name and\npassword)\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse}
      description: "\nThe create secret operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  commentId: N:Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  nameWithType: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog
  isExternal: false
  name: ICatalogOperations
  nameWithType: ICatalogOperations
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.ICatalogOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
  nameWithType: DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogSecretCreateResponse
  nameWithType: CatalogSecretCreateResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  commentId: N:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  nameWithType: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse}'
  definition: Task`1
  name: Task<CatalogSecretCreateResponse>
  nameWithType: Task<CatalogSecretCreateResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse>
  nameWithType.vb: Task(Of CatalogSecretCreateResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse)
  name.vb: Task(Of CatalogSecretCreateResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
    name: CatalogSecretCreateResponse
    nameWithType: CatalogSecretCreateResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
    name: CatalogSecretCreateResponse
    nameWithType: CatalogSecretCreateResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretCreateResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogAssemblyGetResponse
  nameWithType: CatalogAssemblyGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse}'
  definition: Task`1
  name: Task<CatalogAssemblyGetResponse>
  nameWithType: Task<CatalogAssemblyGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse>
  nameWithType.vb: Task(Of CatalogAssemblyGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse)
  name.vb: Task(Of CatalogAssemblyGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
    name: CatalogAssemblyGetResponse
    nameWithType: CatalogAssemblyGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
    name: CatalogAssemblyGetResponse
    nameWithType: CatalogAssemblyGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogCredentialGetResponse
  nameWithType: CatalogCredentialGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse}'
  definition: Task`1
  name: Task<CatalogCredentialGetResponse>
  nameWithType: Task<CatalogCredentialGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse>
  nameWithType.vb: Task(Of CatalogCredentialGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse)
  name.vb: Task(Of CatalogCredentialGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
    name: CatalogCredentialGetResponse
    nameWithType: CatalogCredentialGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
    name: CatalogCredentialGetResponse
    nameWithType: CatalogCredentialGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogDatabaseGetResponse
  nameWithType: CatalogDatabaseGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse}'
  definition: Task`1
  name: Task<CatalogDatabaseGetResponse>
  nameWithType: Task<CatalogDatabaseGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse>
  nameWithType.vb: Task(Of CatalogDatabaseGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse)
  name.vb: Task(Of CatalogDatabaseGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
    name: CatalogDatabaseGetResponse
    nameWithType: CatalogDatabaseGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
    name: CatalogDatabaseGetResponse
    nameWithType: CatalogDatabaseGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogExternalDataSourceGetResponse
  nameWithType: CatalogExternalDataSourceGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse}'
  definition: Task`1
  name: Task<CatalogExternalDataSourceGetResponse>
  nameWithType: Task<CatalogExternalDataSourceGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse>
  nameWithType.vb: Task(Of CatalogExternalDataSourceGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse)
  name.vb: Task(Of CatalogExternalDataSourceGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
    name: CatalogExternalDataSourceGetResponse
    nameWithType: CatalogExternalDataSourceGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
    name: CatalogExternalDataSourceGetResponse
    nameWithType: CatalogExternalDataSourceGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogProcedureGetResponse
  nameWithType: CatalogProcedureGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse}'
  definition: Task`1
  name: Task<CatalogProcedureGetResponse>
  nameWithType: Task<CatalogProcedureGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse>
  nameWithType.vb: Task(Of CatalogProcedureGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse)
  name.vb: Task(Of CatalogProcedureGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
    name: CatalogProcedureGetResponse
    nameWithType: CatalogProcedureGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
    name: CatalogProcedureGetResponse
    nameWithType: CatalogProcedureGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogSchemaGetResponse
  nameWithType: CatalogSchemaGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse}'
  definition: Task`1
  name: Task<CatalogSchemaGetResponse>
  nameWithType: Task<CatalogSchemaGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse>
  nameWithType.vb: Task(Of CatalogSchemaGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse)
  name.vb: Task(Of CatalogSchemaGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
    name: CatalogSchemaGetResponse
    nameWithType: CatalogSchemaGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
    name: CatalogSchemaGetResponse
    nameWithType: CatalogSchemaGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogSecretGetResponse
  nameWithType: CatalogSecretGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse}'
  definition: Task`1
  name: Task<CatalogSecretGetResponse>
  nameWithType: Task<CatalogSecretGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse>
  nameWithType.vb: Task(Of CatalogSecretGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse)
  name.vb: Task(Of CatalogSecretGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
    name: CatalogSecretGetResponse
    nameWithType: CatalogSecretGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
    name: CatalogSecretGetResponse
    nameWithType: CatalogSecretGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSecretGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTableGetResponse
  nameWithType: CatalogTableGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse}'
  definition: Task`1
  name: Task<CatalogTableGetResponse>
  nameWithType: Task<CatalogTableGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse>
  nameWithType.vb: Task(Of CatalogTableGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse)
  name.vb: Task(Of CatalogTableGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
    name: CatalogTableGetResponse
    nameWithType: CatalogTableGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
    name: CatalogTableGetResponse
    nameWithType: CatalogTableGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTableStatisticsGetResponse
  nameWithType: CatalogTableStatisticsGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse}'
  definition: Task`1
  name: Task<CatalogTableStatisticsGetResponse>
  nameWithType: Task<CatalogTableStatisticsGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse>
  nameWithType.vb: Task(Of CatalogTableStatisticsGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse)
  name.vb: Task(Of CatalogTableStatisticsGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
    name: CatalogTableStatisticsGetResponse
    nameWithType: CatalogTableStatisticsGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
    name: CatalogTableStatisticsGetResponse
    nameWithType: CatalogTableStatisticsGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTableValuedFunctionGetResponse
  nameWithType: CatalogTableValuedFunctionGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse}'
  definition: Task`1
  name: Task<CatalogTableValuedFunctionGetResponse>
  nameWithType: Task<CatalogTableValuedFunctionGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse>
  nameWithType.vb: Task(Of CatalogTableValuedFunctionGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse)
  name.vb: Task(Of CatalogTableValuedFunctionGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
    name: CatalogTableValuedFunctionGetResponse
    nameWithType: CatalogTableValuedFunctionGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
    name: CatalogTableValuedFunctionGetResponse
    nameWithType: CatalogTableValuedFunctionGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogViewGetResponse
  nameWithType: CatalogViewGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse}'
  definition: Task`1
  name: Task<CatalogViewGetResponse>
  nameWithType: Task<CatalogViewGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse>
  nameWithType.vb: Task(Of CatalogViewGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse)
  name.vb: Task(Of CatalogViewGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
    name: CatalogViewGetResponse
    nameWithType: CatalogViewGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
    name: CatalogViewGetResponse
    nameWithType: CatalogViewGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogAssemblyListGetResponse
  nameWithType: CatalogAssemblyListGetResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse}'
  definition: Task`1
  name: Task<CatalogAssemblyListGetResponse>
  nameWithType: Task<CatalogAssemblyListGetResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse>
  nameWithType.vb: Task(Of CatalogAssemblyListGetResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse)
  name.vb: Task(Of CatalogAssemblyListGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
    name: CatalogAssemblyListGetResponse
    nameWithType: CatalogAssemblyListGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
    name: CatalogAssemblyListGetResponse
    nameWithType: CatalogAssemblyListGetResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogAssemblyListGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogCredentialListResponse
  nameWithType: CatalogCredentialListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse}'
  definition: Task`1
  name: Task<CatalogCredentialListResponse>
  nameWithType: Task<CatalogCredentialListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse>
  nameWithType.vb: Task(Of CatalogCredentialListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse)
  name.vb: Task(Of CatalogCredentialListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
    name: CatalogCredentialListResponse
    nameWithType: CatalogCredentialListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
    name: CatalogCredentialListResponse
    nameWithType: CatalogCredentialListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogCredentialListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogDatabaseListResponse
  nameWithType: CatalogDatabaseListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse}'
  definition: Task`1
  name: Task<CatalogDatabaseListResponse>
  nameWithType: Task<CatalogDatabaseListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse>
  nameWithType.vb: Task(Of CatalogDatabaseListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse)
  name.vb: Task(Of CatalogDatabaseListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
    name: CatalogDatabaseListResponse
    nameWithType: CatalogDatabaseListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
    name: CatalogDatabaseListResponse
    nameWithType: CatalogDatabaseListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogDatabaseListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogExternalDataSourceListResponse
  nameWithType: CatalogExternalDataSourceListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse}'
  definition: Task`1
  name: Task<CatalogExternalDataSourceListResponse>
  nameWithType: Task<CatalogExternalDataSourceListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse>
  nameWithType.vb: Task(Of CatalogExternalDataSourceListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse)
  name.vb: Task(Of CatalogExternalDataSourceListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
    name: CatalogExternalDataSourceListResponse
    nameWithType: CatalogExternalDataSourceListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
    name: CatalogExternalDataSourceListResponse
    nameWithType: CatalogExternalDataSourceListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogExternalDataSourceListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogProcedureListResponse
  nameWithType: CatalogProcedureListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse}'
  definition: Task`1
  name: Task<CatalogProcedureListResponse>
  nameWithType: Task<CatalogProcedureListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse>
  nameWithType.vb: Task(Of CatalogProcedureListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse)
  name.vb: Task(Of CatalogProcedureListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
    name: CatalogProcedureListResponse
    nameWithType: CatalogProcedureListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
    name: CatalogProcedureListResponse
    nameWithType: CatalogProcedureListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogProcedureListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogSchemaListResponse
  nameWithType: CatalogSchemaListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse}'
  definition: Task`1
  name: Task<CatalogSchemaListResponse>
  nameWithType: Task<CatalogSchemaListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse>
  nameWithType.vb: Task(Of CatalogSchemaListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse)
  name.vb: Task(Of CatalogSchemaListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
    name: CatalogSchemaListResponse
    nameWithType: CatalogSchemaListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
    name: CatalogSchemaListResponse
    nameWithType: CatalogSchemaListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogSchemaListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTableListResponse
  nameWithType: CatalogTableListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse}'
  definition: Task`1
  name: Task<CatalogTableListResponse>
  nameWithType: Task<CatalogTableListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse>
  nameWithType.vb: Task(Of CatalogTableListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse)
  name.vb: Task(Of CatalogTableListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
    name: CatalogTableListResponse
    nameWithType: CatalogTableListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
    name: CatalogTableListResponse
    nameWithType: CatalogTableListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTableStatisticsListResponse
  nameWithType: CatalogTableStatisticsListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse}'
  definition: Task`1
  name: Task<CatalogTableStatisticsListResponse>
  nameWithType: Task<CatalogTableStatisticsListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse>
  nameWithType.vb: Task(Of CatalogTableStatisticsListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse)
  name.vb: Task(Of CatalogTableStatisticsListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
    name: CatalogTableStatisticsListResponse
    nameWithType: CatalogTableStatisticsListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
    name: CatalogTableStatisticsListResponse
    nameWithType: CatalogTableStatisticsListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableStatisticsListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTableValuedFunctionListResponse
  nameWithType: CatalogTableValuedFunctionListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse}'
  definition: Task`1
  name: Task<CatalogTableValuedFunctionListResponse>
  nameWithType: Task<CatalogTableValuedFunctionListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse>
  nameWithType.vb: Task(Of CatalogTableValuedFunctionListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse)
  name.vb: Task(Of CatalogTableValuedFunctionListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
    name: CatalogTableValuedFunctionListResponse
    nameWithType: CatalogTableValuedFunctionListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
    name: CatalogTableValuedFunctionListResponse
    nameWithType: CatalogTableValuedFunctionListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTableValuedFunctionListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: TypeListParameters
  nameWithType: TypeListParameters
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.TypeListParameters
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogTypeListResponse
  nameWithType: CatalogTypeListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse}'
  definition: Task`1
  name: Task<CatalogTypeListResponse>
  nameWithType: Task<CatalogTypeListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse>
  nameWithType.vb: Task(Of CatalogTypeListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse)
  name.vb: Task(Of CatalogTypeListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
    name: CatalogTypeListResponse
    nameWithType: CatalogTypeListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
    name: CatalogTypeListResponse
    nameWithType: CatalogTypeListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogTypeListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
  commentId: T:Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
  parent: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
  isExternal: false
  name: CatalogViewListResponse
  nameWithType: CatalogViewListResponse
  fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
- uid: Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse}'
  definition: Task`1
  name: Task<CatalogViewListResponse>
  nameWithType: Task<CatalogViewListResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse>
  nameWithType.vb: Task(Of CatalogViewListResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse)
  name.vb: Task(Of CatalogViewListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
    name: CatalogViewListResponse
    nameWithType: CatalogViewListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
    name: CatalogViewListResponse
    nameWithType: CatalogViewListResponse
    fullName: Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models.CatalogViewListResponse
  - name: )
    nameWithType: )
    fullName: )
