items:
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  id: FileSystemOperationsExtensions
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem
  children:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLink(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLinkAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectory(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectoryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplication(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplicationAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimes(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  - Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  langs:
  - csharp
  - vb
  name: FileSystemOperationsExtensions
  nameWithType: FileSystemOperationsExtensions
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: FileSystemOperationsExtensions
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates a Data Lake Store filesystem management client.\n"
  example: []
  syntax:
    content: 'public class FileSystemOperationsExtensions : object'
    content.vb: >-
      Public Class FileSystemOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  id: Append(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Append(IFileSystemOperations, String, Stream)
  nameWithType: FileSystemOperationsExtensions.Append(IFileSystemOperations, String, Stream)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, Stream)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Append
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nAppends to the file specified in the link that was returned from\nBeginAppend.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Append(this IFileSystemOperations operations, string fileAppendRequestLink, Stream streamContents)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Append(operations As IFileSystemOperations, fileAppendRequestLink As String, streamContents As Stream) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: fileAppendRequestLink
      type: System.String
      description: "\nRequired. The link to the file to append to including all required\nparameters.\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when appending to the file.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  id: AppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: AppendAsync(IFileSystemOperations, String, Stream)
  nameWithType: FileSystemOperationsExtensions.AppendAsync(IFileSystemOperations, String, Stream)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, Stream)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: AppendAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nAppends to the file specified in the link that was returned from\nBeginAppend.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> AppendAsync(this IFileSystemOperations operations, string fileAppendRequestLink, Stream streamContents)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendAsync(operations As IFileSystemOperations, fileAppendRequestLink As String, streamContents As Stream) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: fileAppendRequestLink
      type: System.String
      description: "\nRequired. The link to the file to append to including all required\nparameters.\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when appending to the file.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  id: BeginAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAppend(IFileSystemOperations, String, String, Nullable<Int64>)
  nameWithType: FileSystemOperationsExtensions.BeginAppend(IFileSystemOperations, String, String, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginAppend
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nInitiates a file append request, resulting in a return of the data\nnode location that will service the request.\n"
  example: []
  syntax:
    content: public static FileCreateOpenAndAppendResponse BeginAppend(this IFileSystemOperations operations, string filePath, string accountName, long ? bufferSize)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAppend(operations As IFileSystemOperations, filePath As String, accountName As String, bufferSize As Long?) As FileCreateOpenAndAppendResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to append to.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to append to the\nfile in\n"
    - id: bufferSize
      type: System.Nullable{System.Int64}
      description: "\nRequired. The optional buffer size to use when appending data\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
      description: "\nThe response recieved after the BeginOpen, BeginCreate and\nBeginAppend requests.\n"
  nameWithType.vb: FileSystemOperationsExtensions.BeginAppend(IFileSystemOperations, String, String, Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int64))
  name.vb: BeginAppend(IFileSystemOperations, String, String, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  id: BeginAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAppendAsync(IFileSystemOperations, String, String, Nullable<Int64>)
  nameWithType: FileSystemOperationsExtensions.BeginAppendAsync(IFileSystemOperations, String, String, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginAppendAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nInitiates a file append request, resulting in a return of the data\nnode location that will service the request.\n"
  example: []
  syntax:
    content: public static Task<FileCreateOpenAndAppendResponse> BeginAppendAsync(this IFileSystemOperations operations, string filePath, string accountName, long ? bufferSize)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAppendAsync(operations As IFileSystemOperations, filePath As String, accountName As String, bufferSize As Long?) As Task(Of FileCreateOpenAndAppendResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to append to.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to append to the\nfile in\n"
    - id: bufferSize
      type: System.Nullable{System.Int64}
      description: "\nRequired. The optional buffer size to use when appending data\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse}
      description: "\nThe response recieved after the BeginOpen, BeginCreate and\nBeginAppend requests.\n"
  nameWithType.vb: FileSystemOperationsExtensions.BeginAppendAsync(IFileSystemOperations, String, String, Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int64))
  name.vb: BeginAppendAsync(IFileSystemOperations, String, String, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  id: BeginCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreate(IFileSystemOperations, String, String, FileCreateParameters)
  nameWithType: FileSystemOperationsExtensions.BeginCreate(IFileSystemOperations, String, String, FileCreateParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginCreate
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nInitiates a file creation request, resulting in a return of the\ndata node location that will service the request.\n"
  example: []
  syntax:
    content: public static FileCreateOpenAndAppendResponse BeginCreate(this IFileSystemOperations operations, string filePath, string accountName, FileCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreate(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As FileCreateParameters) As FileCreateOpenAndAppendResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to create.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to create the\nfile in\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
      description: "\nOptional. The optional parameters to use when creating the file\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
      description: "\nThe response recieved after the BeginOpen, BeginCreate and\nBeginAppend requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  id: BeginCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreateAsync(IFileSystemOperations, String, String, FileCreateParameters)
  nameWithType: FileSystemOperationsExtensions.BeginCreateAsync(IFileSystemOperations, String, String, FileCreateParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginCreateAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nInitiates a file creation request, resulting in a return of the\ndata node location that will service the request.\n"
  example: []
  syntax:
    content: public static Task<FileCreateOpenAndAppendResponse> BeginCreateAsync(this IFileSystemOperations operations, string filePath, string accountName, FileCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreateAsync(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As FileCreateParameters) As Task(Of FileCreateOpenAndAppendResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to create.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to create the\nfile in\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
      description: "\nOptional. The optional parameters to use when creating the file\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse}
      description: "\nThe response recieved after the BeginOpen, BeginCreate and\nBeginAppend requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  id: BeginOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginOpen(IFileSystemOperations, String, String, FileOpenParameters)
  nameWithType: FileSystemOperationsExtensions.BeginOpen(IFileSystemOperations, String, String, FileOpenParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginOpen
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 226
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nInitiates a file open (read) request, resulting in a return of the\ndata node location that will service the request.\n"
  example: []
  syntax:
    content: public static FileCreateOpenAndAppendResponse BeginOpen(this IFileSystemOperations operations, string filePath, string accountName, FileOpenParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginOpen(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As FileOpenParameters) As FileCreateOpenAndAppendResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to open.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
      description: "\nOptional. The optional parameters to pass to the open operation\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
      description: "\nThe response recieved after the BeginOpen, BeginCreate and\nBeginAppend requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  id: BeginOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginOpenAsync(IFileSystemOperations, String, String, FileOpenParameters)
  nameWithType: FileSystemOperationsExtensions.BeginOpenAsync(IFileSystemOperations, String, String, FileOpenParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.BeginOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginOpenAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nInitiates a file open (read) request, resulting in a return of the\ndata node location that will service the request.\n"
  example: []
  syntax:
    content: public static Task<FileCreateOpenAndAppendResponse> BeginOpenAsync(this IFileSystemOperations operations, string filePath, string accountName, FileOpenParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginOpenAsync(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As FileOpenParameters) As Task(Of FileCreateOpenAndAppendResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to open.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
      description: "\nOptional. The optional parameters to pass to the open operation\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse}
      description: "\nThe response recieved after the BeginOpen, BeginCreate and\nBeginAppend requests.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: CheckAccess(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckAccess(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.CheckAccess(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CheckAccess
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 282
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse CheckAccess(this IFileSystemOperations operations, string path, string accountName, string fsAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckAccess(operations As IFileSystemOperations, path As String, accountName As String, fsAction As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: path
      type: System.String
      description: "\nRequired. The path to the file or folder to check access for.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: fsAction
      type: System.String
      description: "\nRequired. File system operation read/write/execute in string form,\nmatching regex pattern '[rwx-]{3}'\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: CheckAccessAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckAccessAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.CheckAccessAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CheckAccessAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 312
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> CheckAccessAsync(this IFileSystemOperations operations, string path, string accountName, string fsAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckAccessAsync(operations As IFileSystemOperations, path As String, accountName As String, fsAction As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: path
      type: System.String
      description: "\nRequired. The path to the file or folder to check access for.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: fsAction
      type: System.String
      description: "\nRequired. File system operation read/write/execute in string form,\nmatching regex pattern '[rwx-]{3}'\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: Concat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Concat(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.Concat(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Concat
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 339
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nConcatenates the list of files into the target file.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Concat(this IFileSystemOperations operations, string destinationPath, string accountName, string paths)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Concat(operations As IFileSystemOperations, destinationPath As String, accountName As String, paths As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: destinationPath
      type: System.String
      description: "\nRequired. The path to the destination file resulting from the\nconcatenation.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: paths
      type: System.String
      description: "\nRequired. A list of comma seperated absolute FileSystem paths\nwithout scheme and authority\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: ConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcatAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.ConcatAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ConcatAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 370
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nConcatenates the list of files into the target file.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> ConcatAsync(this IFileSystemOperations operations, string destinationPath, string accountName, string paths)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcatAsync(operations As IFileSystemOperations, destinationPath As String, accountName As String, paths As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: destinationPath
      type: System.String
      description: "\nRequired. The path to the destination file resulting from the\nconcatenation.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: paths
      type: System.String
      description: "\nRequired. A list of comma seperated absolute FileSystem paths\nwithout scheme and authority\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  id: ConcurrentAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcurrentAppend(IFileSystemOperations, String, String, Stream)
  nameWithType: FileSystemOperationsExtensions.ConcurrentAppend(IFileSystemOperations, String, String, Stream)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ConcurrentAppend
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 399
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nAppends to the file specified. This method supports multiple\nconcurrent appends to the file. NOTE: that concurrent append and\nserial append CANNOT be used interchangeably. Once a file has been\nappended to using either one, it can only be appended to using\nthat type of append.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse ConcurrentAppend(this IFileSystemOperations operations, string accountName, string filePath, Stream streamContents)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcurrentAppend(operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the data lake account that the file lives in.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to append to using concurrent append.\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when appending to the file.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  id: ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream)
  nameWithType: FileSystemOperationsExtensions.ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ConcurrentAppendAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 432
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nAppends to the file specified. This method supports multiple\nconcurrent appends to the file. NOTE: that concurrent append and\nserial append CANNOT be used interchangeably. Once a file has been\nappended to using either one, it can only be appended to using\nthat type of append.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> ConcurrentAppendAsync(this IFileSystemOperations operations, string accountName, string filePath, Stream streamContents)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcurrentAppendAsync(operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the data lake account that the file lives in.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to append to using concurrent append.\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when appending to the file.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  id: Create(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IFileSystemOperations, String, Stream)
  nameWithType: FileSystemOperationsExtensions.Create(IFileSystemOperations, String, Stream)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, Stream)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Create
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 458
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates the file specified in the link that was returned from\nBeginCreate.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Create(this IFileSystemOperations operations, string fileCreateRequestLink, Stream streamContents)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IFileSystemOperations, fileCreateRequestLink As String, streamContents As Stream) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: fileCreateRequestLink
      type: System.String
      description: "\nRequired. The link to the file to create including all required\nparameters.\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when creating the file. This\nparameter is required, however it can be an empty stream. Just not\nnull.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  id: CreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,Stream)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IFileSystemOperations, String, Stream)
  nameWithType: FileSystemOperationsExtensions.CreateAsync(IFileSystemOperations, String, Stream)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, Stream)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 488
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates the file specified in the link that was returned from\nBeginCreate.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> CreateAsync(this IFileSystemOperations operations, string fileCreateRequestLink, Stream streamContents)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IFileSystemOperations, fileCreateRequestLink As String, streamContents As Stream) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: fileCreateRequestLink
      type: System.String
      description: "\nRequired. The link to the file to create including all required\nparameters.\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when creating the file. This\nparameter is required, however it can be an empty stream. Just not\nnull.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLink(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLink(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  id: CreateSymLink(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateSymLink(IFileSystemOperations, String, String, String, Nullable<Boolean>)
  nameWithType: FileSystemOperationsExtensions.CreateSymLink(IFileSystemOperations, String, String, String, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLink(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateSymLink
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 517
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates a symbolic link.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse CreateSymLink(this IFileSystemOperations operations, string sourcePath, string accountName, string destinationPath, bool ? createParent)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateSymLink(operations As IFileSystemOperations, sourcePath As String, accountName As String, destinationPath As String, createParent As Boolean?) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to create a symlink of.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: destinationPath
      type: System.String
      description: "\nRequired. The path to create the symlink at\n"
    - id: createParent
      type: System.Nullable{System.Boolean}
      description: "\nRequired. If the parent directories do not exist, indicates if they\nshould be created.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  nameWithType.vb: FileSystemOperationsExtensions.CreateSymLink(IFileSystemOperations, String, String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLink(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: CreateSymLink(IFileSystemOperations, String, String, String, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLinkAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLinkAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  id: CreateSymLinkAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateSymLinkAsync(IFileSystemOperations, String, String, String, Nullable<Boolean>)
  nameWithType: FileSystemOperationsExtensions.CreateSymLinkAsync(IFileSystemOperations, String, String, String, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLinkAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateSymLinkAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 550
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates a symbolic link.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> CreateSymLinkAsync(this IFileSystemOperations operations, string sourcePath, string accountName, string destinationPath, bool ? createParent)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateSymLinkAsync(operations As IFileSystemOperations, sourcePath As String, accountName As String, destinationPath As String, createParent As Boolean?) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to create a symlink of.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: destinationPath
      type: System.String
      description: "\nRequired. The path to create the symlink at\n"
    - id: createParent
      type: System.Nullable{System.Boolean}
      description: "\nRequired. If the parent directories do not exist, indicates if they\nshould be created.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  nameWithType.vb: FileSystemOperationsExtensions.CreateSymLinkAsync(IFileSystemOperations, String, String, String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.CreateSymLinkAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: CreateSymLinkAsync(IFileSystemOperations, String, String, String, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  id: Delete(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IFileSystemOperations, String, String, Boolean)
  nameWithType: FileSystemOperationsExtensions.Delete(IFileSystemOperations, String, String, Boolean)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 575
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDeletes the requested file or folder, optionally recursively.\n"
  example: []
  syntax:
    content: public static FileOperationResultResponse Delete(this IFileSystemOperations operations, string filePath, string accountName, bool recursive)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IFileSystemOperations, filePath As String, accountName As String, recursive As Boolean) As FileOperationResultResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file or folder to delete.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: recursive
      type: System.Boolean
      description: "\nRequired. The optional switch indicating if the delete should be\nrecursive\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
      description: "\nThe result of the request or operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  id: DeleteAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IFileSystemOperations, String, String, Boolean)
  nameWithType: FileSystemOperationsExtensions.DeleteAsync(IFileSystemOperations, String, String, Boolean)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 604
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDeletes the requested file or folder, optionally recursively.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResultResponse> DeleteAsync(this IFileSystemOperations operations, string filePath, string accountName, bool recursive)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IFileSystemOperations, filePath As String, accountName As String, recursive As Boolean) As Task(Of FileOperationResultResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file or folder to delete.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: recursive
      type: System.Boolean
      description: "\nRequired. The optional switch indicating if the delete should be\nrecursive\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse}
      description: "\nThe result of the request or operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  id: DirectAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DirectAppend(IFileSystemOperations, String, String, Stream, Nullable<Int64>)
  nameWithType: FileSystemOperationsExtensions.DirectAppend(IFileSystemOperations, String, String, Stream, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DirectAppend
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 635
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDirectly appends to a file with the specified content, without\nrequiring a redirect. This API is NOT webhdfs compliant. It should\nbe used only by tools that do not rely on webhdfs interoperability.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse DirectAppend(this IFileSystemOperations operations, string filePath, string accountName, Stream streamContents, long ? bufferSize)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DirectAppend(operations As IFileSystemOperations, filePath As String, accountName As String, streamContents As Stream, bufferSize As Long?) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to append to.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to append to the\nfile in\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when appending to the file.\n"
    - id: bufferSize
      type: System.Nullable{System.Int64}
      description: "\nRequired. The optional buffer size to use when appending data\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  nameWithType.vb: FileSystemOperationsExtensions.DirectAppend(IFileSystemOperations, String, String, Stream, Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppend(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable(Of System.Int64))
  name.vb: DirectAppend(IFileSystemOperations, String, String, Stream, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  id: DirectAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DirectAppendAsync(IFileSystemOperations, String, String, Stream, Nullable<Int64>)
  nameWithType: FileSystemOperationsExtensions.DirectAppendAsync(IFileSystemOperations, String, String, Stream, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DirectAppendAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 670
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDirectly appends to a file with the specified content, without\nrequiring a redirect. This API is NOT webhdfs compliant. It should\nbe used only by tools that do not rely on webhdfs interoperability.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DirectAppendAsync(this IFileSystemOperations operations, string filePath, string accountName, Stream streamContents, long ? bufferSize)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DirectAppendAsync(operations As IFileSystemOperations, filePath As String, accountName As String, streamContents As Stream, bufferSize As Long?) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to append to.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to append to the\nfile in\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when appending to the file.\n"
    - id: bufferSize
      type: System.Nullable{System.Int64}
      description: "\nRequired. The optional buffer size to use when appending data\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  nameWithType.vb: FileSystemOperationsExtensions.DirectAppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectAppendAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable(Of System.Int64))
  name.vb: DirectAppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  id: DirectCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DirectCreate(IFileSystemOperations, String, String, Stream, FileCreateParameters)
  nameWithType: FileSystemOperationsExtensions.DirectCreate(IFileSystemOperations, String, String, Stream, FileCreateParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreate(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DirectCreate
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 703
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDirectly creates a file with the specified content, without\nrequiring a redirect. This API is NOT webhdfs compliant. It should\nbe used only by tools that do not rely on webhdfs interoperability.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse DirectCreate(this IFileSystemOperations operations, string filePath, string accountName, Stream streamContents, FileCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DirectCreate(operations As IFileSystemOperations, filePath As String, accountName As String, streamContents As Stream, parameters As FileCreateParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to create.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to create the\nfile in\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when creating the file. This\nparameter is required, however it can be an empty stream. Just not\nnull.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
      description: "\nOptional. The optional parameters to use when creating the file\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  id: DirectCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DirectCreateAsync(IFileSystemOperations, String, String, Stream, FileCreateParameters)
  nameWithType: FileSystemOperationsExtensions.DirectCreateAsync(IFileSystemOperations, String, String, Stream, FileCreateParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectCreateAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DirectCreateAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 740
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDirectly creates a file with the specified content, without\nrequiring a redirect. This API is NOT webhdfs compliant. It should\nbe used only by tools that do not rely on webhdfs interoperability.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DirectCreateAsync(this IFileSystemOperations operations, string filePath, string accountName, Stream streamContents, FileCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DirectCreateAsync(operations As IFileSystemOperations, filePath As String, accountName As String, streamContents As Stream, parameters As FileCreateParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to create.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the Data Lake Store account to create the\nfile in\n"
    - id: streamContents
      type: Stream
      description: "\nRequired. The file contents to include when creating the file. This\nparameter is required, however it can be an empty stream. Just not\nnull.\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
      description: "\nOptional. The optional parameters to use when creating the file\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  id: DirectOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DirectOpen(IFileSystemOperations, String, String, FileOpenParameters)
  nameWithType: FileSystemOperationsExtensions.DirectOpen(IFileSystemOperations, String, String, FileOpenParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpen(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DirectOpen
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 766
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDirectly opens and reads from the specified file, without requiring\na redirect. This API is NOT webhdfs compliant. It should be used\nonly by tools that do not rely on webhdfs interoperability.\n"
  example: []
  syntax:
    content: public static FileOpenResponse DirectOpen(this IFileSystemOperations operations, string filePath, string accountName, FileOpenParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DirectOpen(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As FileOpenParameters) As FileOpenResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to open.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
      description: "\nOptional. The optional parameters to pass to the open operation\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
      description: "\nThe data from the file requested.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  id: DirectOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DirectOpenAsync(IFileSystemOperations, String, String, FileOpenParameters)
  nameWithType: FileSystemOperationsExtensions.DirectOpenAsync(IFileSystemOperations, String, String, FileOpenParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.DirectOpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DirectOpenAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 796
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nDirectly opens and reads from the specified file, without requiring\na redirect. This API is NOT webhdfs compliant. It should be used\nonly by tools that do not rely on webhdfs interoperability.\n"
  example: []
  syntax:
    content: public static Task<FileOpenResponse> DirectOpenAsync(this IFileSystemOperations operations, string filePath, string accountName, FileOpenParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DirectOpenAsync(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As FileOpenParameters) As Task(Of FileOpenResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to open.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
      description: "\nOptional. The optional parameters to pass to the open operation\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse}
      description: "\nThe data from the file requested.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: GetAclStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAclStatus(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetAclStatus(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAclStatus
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 817
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGets ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static AclStatusResponse GetAclStatus(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAclStatus(operations As IFileSystemOperations, filePath As String, accountName As String) As AclStatusResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to get ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
      description: "\nData Lake Store filesystem Acl information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: GetAclStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAclStatusAsync(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetAclStatusAsync(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAclStatusAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 842
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGets ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AclStatusResponse> GetAclStatusAsync(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAclStatusAsync(operations As IFileSystemOperations, filePath As String, accountName As String) As Task(Of AclStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to get ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse}
      description: "\nData Lake Store filesystem Acl information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: GetContentSummary(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetContentSummary(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetContentSummary(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetContentSummary
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 863
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: public static ContentSummaryResponse GetContentSummary(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContentSummary(operations As IFileSystemOperations, filePath As String, accountName As String) As ContentSummaryResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to open.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
      description: "\nData Lake Store filesystem content summary information response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetContentSummaryAsync(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetContentSummaryAsync(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetContentSummaryAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 888
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<ContentSummaryResponse> GetContentSummaryAsync(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContentSummaryAsync(operations As IFileSystemOperations, filePath As String, accountName As String) As Task(Of ContentSummaryResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to open.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse}
      description: "\nData Lake Store filesystem content summary information response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: GetFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFileStatus(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetFileStatus(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetFileStatus
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 909
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: public static FileStatusResponse GetFileStatus(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileStatus(operations As IFileSystemOperations, filePath As String, accountName As String) As FileStatusResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to retrieve status for.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
      description: "\nData Lake Store filesystem file status information response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: GetFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFileStatusAsync(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.GetFileStatusAsync(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetFileStatusAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 934
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<FileStatusResponse> GetFileStatusAsync(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileStatusAsync(operations As IFileSystemOperations, filePath As String, accountName As String) As Task(Of FileStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to retrieve status for.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse}
      description: "\nData Lake Store filesystem file status information response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectory(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectory(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  id: GetHomeDirectory(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetHomeDirectory(IFileSystemOperations, String)
  nameWithType: FileSystemOperationsExtensions.GetHomeDirectory(IFileSystemOperations, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectory(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetHomeDirectory
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 952
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGet the home directory for the specified account.\n"
  example: []
  syntax:
    content: public static HomeDirectoryResponse GetHomeDirectory(this IFileSystemOperations operations, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHomeDirectory(operations As IFileSystemOperations, accountName As String) As HomeDirectoryResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
      description: "\nData Lake Store filesystem home path response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectoryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectoryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  id: GetHomeDirectoryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetHomeDirectoryAsync(IFileSystemOperations, String)
  nameWithType: FileSystemOperationsExtensions.GetHomeDirectoryAsync(IFileSystemOperations, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.GetHomeDirectoryAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetHomeDirectoryAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 974
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGet the home directory for the specified account.\n"
  example: []
  syntax:
    content: public static Task<HomeDirectoryResponse> GetHomeDirectoryAsync(this IFileSystemOperations operations, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHomeDirectoryAsync(operations As IFileSystemOperations, accountName As String) As Task(Of HomeDirectoryResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse}
      description: "\nData Lake Store filesystem home path response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  id: ListFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFileStatus(IFileSystemOperations, String, String, DataLakeStoreFileSystemListParameters)
  nameWithType: FileSystemOperationsExtensions.ListFileStatus(IFileSystemOperations, String, String, DataLakeStoreFileSystemListParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListFileStatus
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 999
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGet the list of file status objects specified by the file path.\n"
  example: []
  syntax:
    content: public static FileStatusesResponse ListFileStatus(this IFileSystemOperations operations, string filePath, string accountName, DataLakeStoreFileSystemListParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFileStatus(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As DataLakeStoreFileSystemListParameters) As FileStatusesResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to retrieve status for.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters
      description: "\nOptional. Query parameters. If null is passed returns all file\nstatus items.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
      description: "\nData Lake Store filesystem file status list information response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  id: ListFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFileStatusAsync(IFileSystemOperations, String, String, DataLakeStoreFileSystemListParameters)
  nameWithType: FileSystemOperationsExtensions.ListFileStatusAsync(IFileSystemOperations, String, String, DataLakeStoreFileSystemListParameters)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListFileStatusAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1028
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGet the list of file status objects specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<FileStatusesResponse> ListFileStatusAsync(this IFileSystemOperations operations, string filePath, string accountName, DataLakeStoreFileSystemListParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFileStatusAsync(operations As IFileSystemOperations, filePath As String, accountName As String, parameters As DataLakeStoreFileSystemListParameters) As Task(Of FileStatusesResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the file to retrieve status for.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: parameters
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters
      description: "\nOptional. Query parameters. If null is passed returns all file\nstatus items.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse}
      description: "\nData Lake Store filesystem file status list information response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: Mkdirs(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Mkdirs(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.Mkdirs(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Mkdirs
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1052
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: public static FileOperationResultResponse Mkdirs(this IFileSystemOperations operations, string path, string accountName, string permission)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Mkdirs(operations As IFileSystemOperations, path As String, accountName As String, permission As String) As FileOperationResultResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: path
      type: System.String
      description: "\nRequired. The path to the directory to create.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: permission
      type: System.String
      description: "\nOptional. The optional permissions to set on the directories\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
      description: "\nThe result of the request or operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: MkdirsAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MkdirsAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.MkdirsAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MkdirsAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1080
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResultResponse> MkdirsAsync(this IFileSystemOperations operations, string path, string accountName, string permission)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MkdirsAsync(operations As IFileSystemOperations, path As String, accountName As String, permission As String) As Task(Of FileOperationResultResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: path
      type: System.String
      description: "\nRequired. The path to the directory to create.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: permission
      type: System.String
      description: "\nOptional. The optional permissions to set on the directories\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse}
      description: "\nThe result of the request or operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: ModifyAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ModifyAclEntries(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.ModifyAclEntries(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ModifyAclEntries
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1106
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nModifies existing ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse ModifyAclEntries(this IFileSystemOperations operations, string filePath, string accountName, string aclSpec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ModifyAclEntries(operations As IFileSystemOperations, filePath As String, accountName As String, aclSpec As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to modify ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: aclSpec
      type: System.String
      description: "\nRequired. The ACL spec included in ACL modification operations in\nthe format '[default:]user|group|other::r|-w|-x|-'\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ModifyAclEntriesAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.ModifyAclEntriesAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ModifyAclEntriesAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1136
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nModifies existing ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> ModifyAclEntriesAsync(this IFileSystemOperations operations, string filePath, string accountName, string aclSpec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ModifyAclEntriesAsync(operations As IFileSystemOperations, filePath As String, accountName As String, aclSpec As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to modify ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: aclSpec
      type: System.String
      description: "\nRequired. The ACL spec included in ACL modification operations in\nthe format '[default:]user|group|other::r|-w|-x|-'\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  id: MsConcat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MsConcat(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  nameWithType: FileSystemOperationsExtensions.MsConcat(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MsConcat
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1179
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  syntax:
    content: public static AzureOperationResponse MsConcat(this IFileSystemOperations operations, string destinationPath, string accountName, Stream streamContents, bool ? deleteSourceDirectory)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MsConcat(operations As IFileSystemOperations, destinationPath As String, accountName As String, streamContents As Stream, deleteSourceDirectory As Boolean?) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
    - id: destinationPath
      type: System.String
    - id: accountName
      type: System.String
    - id: streamContents
      type: Stream
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
    return:
      type: AzureOperationResponse
  nameWithType.vb: FileSystemOperationsExtensions.MsConcat(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable(Of System.Boolean))
  name.vb: MsConcat(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  id: MsConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,Stream,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  nameWithType: FileSystemOperationsExtensions.MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MsConcatAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1226
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  syntax:
    content: public static Task<AzureOperationResponse> MsConcatAsync(this IFileSystemOperations operations, string destinationPath, string accountName, Stream streamContents, bool ? deleteSourceDirectory)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MsConcatAsync(operations As IFileSystemOperations, destinationPath As String, accountName As String, streamContents As Stream, deleteSourceDirectory As Boolean?) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
    - id: destinationPath
      type: System.String
    - id: accountName
      type: System.String
    - id: streamContents
      type: Stream
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
    return:
      type: Task{AzureOperationResponse}
  nameWithType.vb: FileSystemOperationsExtensions.MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, Stream, System.Nullable(Of System.Boolean))
  name.vb: MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  id: Open(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Open(IFileSystemOperations, String)
  nameWithType: FileSystemOperationsExtensions.Open(IFileSystemOperations, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Open
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1245
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGets the data associated with the file handle requested.\n"
  example: []
  syntax:
    content: public static FileOpenResponse Open(this IFileSystemOperations operations, string fileOpenRequestLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Open(operations As IFileSystemOperations, fileOpenRequestLink As String) As FileOpenResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: fileOpenRequestLink
      type: System.String
      description: "\nRequired. The link to the file to open including all required\nparameters.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
      description: "\nThe data from the file requested.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  id: OpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: OpenAsync(IFileSystemOperations, String)
  nameWithType: FileSystemOperationsExtensions.OpenAsync(IFileSystemOperations, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OpenAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1268
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nGets the data associated with the file handle requested.\n"
  example: []
  syntax:
    content: public static Task<FileOpenResponse> OpenAsync(this IFileSystemOperations operations, string fileOpenRequestLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenAsync(operations As IFileSystemOperations, fileOpenRequestLink As String) As Task(Of FileOpenResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: fileOpenRequestLink
      type: System.String
      description: "\nRequired. The link to the file to open including all required\nparameters.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse}
      description: "\nThe data from the file requested.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: RemoveAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAcl(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveAcl(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveAcl
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1290
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRemoves the existing ACL on a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse RemoveAcl(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAcl(operations As IFileSystemOperations, filePath As String, accountName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to remove ACL on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: RemoveAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclAsync(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveAclAsync(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveAclAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1316
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRemoves the existing ACL on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> RemoveAclAsync(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclAsync(operations As IFileSystemOperations, filePath As String, accountName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to remove ACL on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: RemoveAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclEntries(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveAclEntries(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveAclEntries
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1342
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRemoves existing ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse RemoveAclEntries(this IFileSystemOperations operations, string filePath, string accountName, string aclSpec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclEntries(operations As IFileSystemOperations, filePath As String, accountName As String, aclSpec As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to remove ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: aclSpec
      type: System.String
      description: "\nRequired. The ACL spec included in ACL removal operations in the\nformat '[default:]user|group|other'\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclEntriesAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveAclEntriesAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveAclEntriesAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1372
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRemoves existing ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> RemoveAclEntriesAsync(this IFileSystemOperations operations, string filePath, string accountName, string aclSpec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclEntriesAsync(operations As IFileSystemOperations, filePath As String, accountName As String, aclSpec As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to remove ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: aclSpec
      type: System.String
      description: "\nRequired. The ACL spec included in ACL removal operations in the\nformat '[default:]user|group|other'\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveDefaultAcl(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveDefaultAcl(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveDefaultAcl
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1395
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRemoves default ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse RemoveDefaultAcl(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveDefaultAcl(operations As IFileSystemOperations, filePath As String, accountName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to remove default ACLs\non.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  id: RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveDefaultAclAsync(IFileSystemOperations, String, String)
  nameWithType: FileSystemOperationsExtensions.RemoveDefaultAclAsync(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveDefaultAclAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1422
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRemoves default ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> RemoveDefaultAclAsync(this IFileSystemOperations operations, string filePath, string accountName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveDefaultAclAsync(operations As IFileSystemOperations, filePath As String, accountName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to remove default ACLs\non.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: Rename(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Rename(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.Rename(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Rename
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1446
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRename a directory or file.\n"
  example: []
  syntax:
    content: public static FileOperationResultResponse Rename(this IFileSystemOperations operations, string sourcePath, string accountName, string destinationPath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Rename(operations As IFileSystemOperations, sourcePath As String, accountName As String, destinationPath As String) As FileOperationResultResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory to move/rename.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: destinationPath
      type: System.String
      description: "\nRequired. The path to move/rename the file or folder to\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
      description: "\nThe result of the request or operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: RenameAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RenameAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.RenameAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RenameAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1474
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nRename a directory or file.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResultResponse> RenameAsync(this IFileSystemOperations operations, string sourcePath, string accountName, string destinationPath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RenameAsync(operations As IFileSystemOperations, sourcePath As String, accountName As String, destinationPath As String) As Task(Of FileOperationResultResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory to move/rename.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: destinationPath
      type: System.String
      description: "\nRequired. The path to move/rename the file or folder to\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse}
      description: "\nThe result of the request or operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: SetAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetAcl(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetAcl(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetAcl
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1500
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse SetAcl(this IFileSystemOperations operations, string filePath, string accountName, string aclSpec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAcl(operations As IFileSystemOperations, filePath As String, accountName As String, aclSpec As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: aclSpec
      type: System.String
      description: "\nRequired. The ACL spec included in ACL creation operations in the\nformat '[default:]user|group|other::r|-w|-x|-'\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: SetAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetAclAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetAclAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetAclAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1530
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets ACL entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> SetAclAsync(this IFileSystemOperations operations, string filePath, string accountName, string aclSpec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAclAsync(operations As IFileSystemOperations, filePath As String, accountName As String, aclSpec As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: filePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set ACLs on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: aclSpec
      type: System.String
      description: "\nRequired. The ACL spec included in ACL creation operations in the\nformat '[default:]user|group|other::r|-w|-x|-'\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  id: SetOwner(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetOwner(IFileSystemOperations, String, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetOwner(IFileSystemOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetOwner
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1559
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the owner of a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse SetOwner(this IFileSystemOperations operations, string sourcePath, string accountName, string owner, string group)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetOwner(operations As IFileSystemOperations, sourcePath As String, accountName As String, owner As String, group As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set the owner on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: owner
      type: System.String
      description: "\nOptional. The username who is the owner of a file/directory, if\nempty remains unchanged.\n"
    - id: group
      type: System.String
      description: "\nOptional. The name of a group, if empty remains unchanged.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  id: SetOwnerAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetOwnerAsync(IFileSystemOperations, String, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetOwnerAsync(IFileSystemOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetOwnerAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1592
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the owner of a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> SetOwnerAsync(this IFileSystemOperations operations, string sourcePath, string accountName, string owner, string group)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetOwnerAsync(operations As IFileSystemOperations, sourcePath As String, accountName As String, owner As String, group As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set the owner on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: owner
      type: System.String
      description: "\nOptional. The username who is the owner of a file/directory, if\nempty remains unchanged.\n"
    - id: group
      type: System.String
      description: "\nOptional. The name of a group, if empty remains unchanged.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: SetPermission(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetPermission(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetPermission(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetPermission
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1618
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse SetPermission(this IFileSystemOperations operations, string sourcePath, string accountName, string permission)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPermission(operations As IFileSystemOperations, sourcePath As String, accountName As String, permission As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set permissions on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: permission
      type: System.String
      description: "\nOptional. A string octal representation of the permission (i.e\n'rwx')\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  id: SetPermissionAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetPermissionAsync(IFileSystemOperations, String, String, String)
  nameWithType: FileSystemOperationsExtensions.SetPermissionAsync(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetPermissionAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1648
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> SetPermissionAsync(this IFileSystemOperations operations, string sourcePath, string accountName, string permission)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPermissionAsync(operations As IFileSystemOperations, sourcePath As String, accountName As String, permission As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set permissions on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: permission
      type: System.String
      description: "\nOptional. A string octal representation of the permission (i.e\n'rwx')\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplication(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplication(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  id: SetReplication(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetReplication(IFileSystemOperations, String, String, Nullable<Int16>)
  nameWithType: FileSystemOperationsExtensions.SetReplication(IFileSystemOperations, String, String, Nullable<Int16>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplication(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int16>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetReplication
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1673
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the value of the replication factor.\n"
  example: []
  syntax:
    content: public static FileOperationResultResponse SetReplication(this IFileSystemOperations operations, string sourcePath, string accountName, short ? replication)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReplication(operations As IFileSystemOperations, sourcePath As String, accountName As String, replication As Short?) As FileOperationResultResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to create a replication\nof.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: replication
      type: System.Nullable{System.Int16}
      description: "\nRequired. The number of replications of a file.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
      description: "\nThe result of the request or operation.\n"
  nameWithType.vb: FileSystemOperationsExtensions.SetReplication(IFileSystemOperations, String, String, Nullable(Of Int16))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplication(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int16))
  name.vb: SetReplication(IFileSystemOperations, String, String, Nullable(Of Int16))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplicationAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplicationAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  id: SetReplicationAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int16})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetReplicationAsync(IFileSystemOperations, String, String, Nullable<Int16>)
  nameWithType: FileSystemOperationsExtensions.SetReplicationAsync(IFileSystemOperations, String, String, Nullable<Int16>)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplicationAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int16>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetReplicationAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1702
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the value of the replication factor.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResultResponse> SetReplicationAsync(this IFileSystemOperations operations, string sourcePath, string accountName, short ? replication)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReplicationAsync(operations As IFileSystemOperations, sourcePath As String, accountName As String, replication As Short?) As Task(Of FileOperationResultResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to create a replication\nof.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: replication
      type: System.Nullable{System.Int16}
      description: "\nRequired. The number of replications of a file.\n"
    return:
      type: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse}
      description: "\nThe result of the request or operation.\n"
  nameWithType.vb: FileSystemOperationsExtensions.SetReplicationAsync(IFileSystemOperations, String, String, Nullable(Of Int16))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetReplicationAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int16))
  name.vb: SetReplicationAsync(IFileSystemOperations, String, String, Nullable(Of Int16))
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimes(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimes(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  id: SetTimes(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetTimes(IFileSystemOperations, String, String, Int64, Int64)
  nameWithType: FileSystemOperationsExtensions.SetTimes(IFileSystemOperations, String, String, Int64, Int64)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimes(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetTimes
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1732
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the access or modification time on a file or folder.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse SetTimes(this IFileSystemOperations operations, string sourcePath, string accountName, long modificationTime, long accessTime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTimes(operations As IFileSystemOperations, sourcePath As String, accountName As String, modificationTime As Long, accessTime As Long) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set permissions on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: modificationTime
      type: System.Int64
      description: "\nRequired. The modification time of a file/directory. If -1 remains\nunchanged\n"
    - id: accessTime
      type: System.Int64
      description: "\nRequired. The access time of a file/directory. If -1 remains\nunchanged\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  id: SetTimesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations,System.String,System.String,System.Int64,System.Int64)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetTimesAsync(IFileSystemOperations, String, String, Int64, Int64)
  nameWithType: FileSystemOperationsExtensions.SetTimesAsync(IFileSystemOperations, String, String, Int64, Int64)
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.FileSystemOperationsExtensions.SetTimesAsync(Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations, System.String, System.String, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetTimesAsync
    path: src/ResourceManagement/DataLake.StoreFileSystem/DataLakeStoreFileSystemManagement/Generated/FileSystemOperationsExtensions.cs
    startLine: 1766
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreFileSystem
  namespace: Microsoft.Azure.Management.DataLake.StoreFileSystem
  summary: "\nSets the access or modification time on a file or folder.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> SetTimesAsync(this IFileSystemOperations operations, string sourcePath, string accountName, long modificationTime, long accessTime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTimesAsync(operations As IFileSystemOperations, sourcePath As String, accountName As String, modificationTime As Long, accessTime As Long) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
      description: "\nReference to the\nMicrosoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations.\n"
    - id: sourcePath
      type: System.String
      description: "\nRequired. The path to the directory or file to set permissions on.\n"
    - id: accountName
      type: System.String
      description: "\nRequired. The name of the account to use\n"
    - id: modificationTime
      type: System.Int64
      description: "\nRequired. The modification time of a file/directory. If -1 remains\nunchanged\n"
    - id: accessTime
      type: System.Int64
      description: "\nRequired. The access time of a file/directory. If -1 remains\nunchanged\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem
  commentId: N:Microsoft.Azure.Management.DataLake.StoreFileSystem
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreFileSystem
  nameWithType: Microsoft.Azure.Management.DataLake.StoreFileSystem
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem
  isExternal: false
  name: IFileSystemOperations
  nameWithType: IFileSystemOperations
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.IFileSystemOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Task{AzureOperationResponse}
  commentId: '!:Task{AzureOperationResponse}'
  definition: Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileCreateOpenAndAppendResponse
  nameWithType: FileCreateOpenAndAppendResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  commentId: N:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  nameWithType: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse}'
  definition: Task`1
  name: Task<FileCreateOpenAndAppendResponse>
  nameWithType: Task<FileCreateOpenAndAppendResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse>
  nameWithType.vb: Task(Of FileCreateOpenAndAppendResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse)
  name.vb: Task(Of FileCreateOpenAndAppendResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
    name: FileCreateOpenAndAppendResponse
    nameWithType: FileCreateOpenAndAppendResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
    name: FileCreateOpenAndAppendResponse
    nameWithType: FileCreateOpenAndAppendResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateOpenAndAppendResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileCreateParameters
  nameWithType: FileCreateParameters
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileCreateParameters
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileOpenParameters
  nameWithType: FileOpenParameters
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenParameters
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileOperationResultResponse
  nameWithType: FileOperationResultResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse}'
  definition: Task`1
  name: Task<FileOperationResultResponse>
  nameWithType: Task<FileOperationResultResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse>
  nameWithType.vb: Task(Of FileOperationResultResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse)
  name.vb: Task(Of FileOperationResultResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
    name: FileOperationResultResponse
    nameWithType: FileOperationResultResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
    name: FileOperationResultResponse
    nameWithType: FileOperationResultResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOperationResultResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileOpenResponse
  nameWithType: FileOpenResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse}'
  definition: Task`1
  name: Task<FileOpenResponse>
  nameWithType: Task<FileOpenResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse>
  nameWithType.vb: Task(Of FileOpenResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse)
  name.vb: Task(Of FileOpenResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
    name: FileOpenResponse
    nameWithType: FileOpenResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
    name: FileOpenResponse
    nameWithType: FileOpenResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileOpenResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: AclStatusResponse
  nameWithType: AclStatusResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse}'
  definition: Task`1
  name: Task<AclStatusResponse>
  nameWithType: Task<AclStatusResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse>
  nameWithType.vb: Task(Of AclStatusResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse)
  name.vb: Task(Of AclStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
    name: AclStatusResponse
    nameWithType: AclStatusResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
    name: AclStatusResponse
    nameWithType: AclStatusResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.AclStatusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: ContentSummaryResponse
  nameWithType: ContentSummaryResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse}'
  definition: Task`1
  name: Task<ContentSummaryResponse>
  nameWithType: Task<ContentSummaryResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse>
  nameWithType.vb: Task(Of ContentSummaryResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse)
  name.vb: Task(Of ContentSummaryResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
    name: ContentSummaryResponse
    nameWithType: ContentSummaryResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
    name: ContentSummaryResponse
    nameWithType: ContentSummaryResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.ContentSummaryResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileStatusResponse
  nameWithType: FileStatusResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse}'
  definition: Task`1
  name: Task<FileStatusResponse>
  nameWithType: Task<FileStatusResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse>
  nameWithType.vb: Task(Of FileStatusResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse)
  name.vb: Task(Of FileStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
    name: FileStatusResponse
    nameWithType: FileStatusResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
    name: FileStatusResponse
    nameWithType: FileStatusResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: HomeDirectoryResponse
  nameWithType: HomeDirectoryResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse}'
  definition: Task`1
  name: Task<HomeDirectoryResponse>
  nameWithType: Task<HomeDirectoryResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse>
  nameWithType.vb: Task(Of HomeDirectoryResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse)
  name.vb: Task(Of HomeDirectoryResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
    name: HomeDirectoryResponse
    nameWithType: HomeDirectoryResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
    name: HomeDirectoryResponse
    nameWithType: HomeDirectoryResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.HomeDirectoryResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: DataLakeStoreFileSystemListParameters
  nameWithType: DataLakeStoreFileSystemListParameters
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.DataLakeStoreFileSystemListParameters
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models
  isExternal: false
  name: FileStatusesResponse
  nameWithType: FileStatusesResponse
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
- uid: Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse}
  commentId: '!:Task{Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse}'
  definition: Task`1
  name: Task<FileStatusesResponse>
  nameWithType: Task<FileStatusesResponse>
  fullName: Task<Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse>
  nameWithType.vb: Task(Of FileStatusesResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse)
  name.vb: Task(Of FileStatusesResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
    name: FileStatusesResponse
    nameWithType: FileStatusesResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
    name: FileStatusesResponse
    nameWithType: FileStatusesResponse
    fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.Models.FileStatusesResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int16}
  commentId: '!:System.Nullable{System.Int16}'
  definition: System.Nullable`1
  name: Nullable<Int16>
  nameWithType: Nullable<Int16>
  fullName: System.Nullable<System.Int16>
  nameWithType.vb: Nullable(Of Int16)
  fullname.vb: System.Nullable(Of System.Int16)
  name.vb: Nullable(Of Int16)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
