items:
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  id: FarmSettings
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  children:
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.#ctor
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.BandwidthThrottleIsEnabled
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.CorsAllowedOriginsList
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DataCenterUriHostSuffixes
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultRequestThresholdInTps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultThrottleProbabilityDecayIntervalInSeconds
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.FeedbackRefreshIntervalInSeconds
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodForFullThrottlingInRefreshIntervals
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodMaxThrottleProbability
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpPort
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpsPort
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumRequestThresholdInTps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.NumberOfAccountsToSync
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallRequestThresholdInTps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalEgressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalIngressThresholdInGbps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.RetentionPeriodForDeletedStorageAccountsInDays
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.SettingsPollingIntervalInSecond
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForEgress
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIngress
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetEgress
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetIngress
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalEgress
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalIngress
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTps
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.UsageCollectionIntervalInSeconds
  langs:
  - csharp
  - vb
  name: FarmSettings
  nameWithType: FarmSettings
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: FarmSettings
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1536
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nYour documentation here\n"
  example: []
  syntax:
    content: 'public class FarmSettings : object'
    content.vb: >-
      Public Class FarmSettings
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.BandwidthThrottleIsEnabled
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.BandwidthThrottleIsEnabled
  id: BandwidthThrottleIsEnabled
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: BandwidthThrottleIsEnabled
  nameWithType: FarmSettings.BandwidthThrottleIsEnabled
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.BandwidthThrottleIsEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BandwidthThrottleIsEnabled
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1543
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public bool ? BandwidthThrottleIsEnabled { get; set; }
    content.vb: Public Property BandwidthThrottleIsEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.CorsAllowedOriginsList
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.CorsAllowedOriginsList
  id: CorsAllowedOriginsList
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: CorsAllowedOriginsList
  nameWithType: FarmSettings.CorsAllowedOriginsList
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.CorsAllowedOriginsList
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CorsAllowedOriginsList
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1554
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public string CorsAllowedOriginsList { get; set; }
    content.vb: Public Property CorsAllowedOriginsList As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DataCenterUriHostSuffixes
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DataCenterUriHostSuffixes
  id: DataCenterUriHostSuffixes
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DataCenterUriHostSuffixes
  nameWithType: FarmSettings.DataCenterUriHostSuffixes
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DataCenterUriHostSuffixes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DataCenterUriHostSuffixes
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1565
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public string DataCenterUriHostSuffixes { get; set; }
    content.vb: Public Property DataCenterUriHostSuffixes As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultEgressThresholdInGbps
  id: DefaultEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultEgressThresholdInGbps
  nameWithType: FarmSettings.DefaultEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1576
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultEgressThresholdInGbps { get; set; }
    content.vb: Public Property DefaultEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIngressThresholdInGbps
  id: DefaultIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultIngressThresholdInGbps
  nameWithType: FarmSettings.DefaultIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1587
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultIngressThresholdInGbps { get; set; }
    content.vb: Public Property DefaultIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetEgressThresholdInGbps
  id: DefaultIntranetEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultIntranetEgressThresholdInGbps
  nameWithType: FarmSettings.DefaultIntranetEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultIntranetEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1598
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultIntranetEgressThresholdInGbps { get; set; }
    content.vb: Public Property DefaultIntranetEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetIngressThresholdInGbps
  id: DefaultIntranetIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultIntranetIngressThresholdInGbps
  nameWithType: FarmSettings.DefaultIntranetIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultIntranetIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultIntranetIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1609
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultIntranetIngressThresholdInGbps { get; set; }
    content.vb: Public Property DefaultIntranetIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultRequestThresholdInTps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultRequestThresholdInTps
  id: DefaultRequestThresholdInTps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultRequestThresholdInTps
  nameWithType: FarmSettings.DefaultRequestThresholdInTps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultRequestThresholdInTps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultRequestThresholdInTps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1620
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultRequestThresholdInTps { get; set; }
    content.vb: Public Property DefaultRequestThresholdInTps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultThrottleProbabilityDecayIntervalInSeconds
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultThrottleProbabilityDecayIntervalInSeconds
  id: DefaultThrottleProbabilityDecayIntervalInSeconds
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultThrottleProbabilityDecayIntervalInSeconds
  nameWithType: FarmSettings.DefaultThrottleProbabilityDecayIntervalInSeconds
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultThrottleProbabilityDecayIntervalInSeconds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultThrottleProbabilityDecayIntervalInSeconds
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1631
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? DefaultThrottleProbabilityDecayIntervalInSeconds { get; set; }
    content.vb: Public Property DefaultThrottleProbabilityDecayIntervalInSeconds As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalEgressThresholdInGbps
  id: DefaultTotalEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultTotalEgressThresholdInGbps
  nameWithType: FarmSettings.DefaultTotalEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultTotalEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1642
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultTotalEgressThresholdInGbps { get; set; }
    content.vb: Public Property DefaultTotalEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalIngressThresholdInGbps
  id: DefaultTotalIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: DefaultTotalIngressThresholdInGbps
  nameWithType: FarmSettings.DefaultTotalIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.DefaultTotalIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultTotalIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1653
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? DefaultTotalIngressThresholdInGbps { get; set; }
    content.vb: Public Property DefaultTotalIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.FeedbackRefreshIntervalInSeconds
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.FeedbackRefreshIntervalInSeconds
  id: FeedbackRefreshIntervalInSeconds
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: FeedbackRefreshIntervalInSeconds
  nameWithType: FarmSettings.FeedbackRefreshIntervalInSeconds
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.FeedbackRefreshIntervalInSeconds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: FeedbackRefreshIntervalInSeconds
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1664
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? FeedbackRefreshIntervalInSeconds { get; set; }
    content.vb: Public Property FeedbackRefreshIntervalInSeconds As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodForFullThrottlingInRefreshIntervals
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodForFullThrottlingInRefreshIntervals
  id: GracePeriodForFullThrottlingInRefreshIntervals
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: GracePeriodForFullThrottlingInRefreshIntervals
  nameWithType: FarmSettings.GracePeriodForFullThrottlingInRefreshIntervals
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodForFullThrottlingInRefreshIntervals
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GracePeriodForFullThrottlingInRefreshIntervals
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1675
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? GracePeriodForFullThrottlingInRefreshIntervals { get; set; }
    content.vb: Public Property GracePeriodForFullThrottlingInRefreshIntervals As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodMaxThrottleProbability
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodMaxThrottleProbability
  id: GracePeriodMaxThrottleProbability
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: GracePeriodMaxThrottleProbability
  nameWithType: FarmSettings.GracePeriodMaxThrottleProbability
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.GracePeriodMaxThrottleProbability
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GracePeriodMaxThrottleProbability
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1686
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? GracePeriodMaxThrottleProbability { get; set; }
    content.vb: Public Property GracePeriodMaxThrottleProbability As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpPort
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpPort
  id: HostStyleHttpPort
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: HostStyleHttpPort
  nameWithType: FarmSettings.HostStyleHttpPort
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: HostStyleHttpPort
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1697
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? HostStyleHttpPort { get; set; }
    content.vb: Public Property HostStyleHttpPort As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpsPort
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpsPort
  id: HostStyleHttpsPort
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: HostStyleHttpsPort
  nameWithType: FarmSettings.HostStyleHttpsPort
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.HostStyleHttpsPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: HostStyleHttpsPort
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1708
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? HostStyleHttpsPort { get; set; }
    content.vb: Public Property HostStyleHttpsPort As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumEgressThresholdInGbps
  id: MinimumEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumEgressThresholdInGbps
  nameWithType: FarmSettings.MinimumEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1719
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumEgressThresholdInGbps { get; set; }
    content.vb: Public Property MinimumEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIngressThresholdInGbps
  id: MinimumIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumIngressThresholdInGbps
  nameWithType: FarmSettings.MinimumIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1730
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumIngressThresholdInGbps { get; set; }
    content.vb: Public Property MinimumIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetEgressThresholdInGbps
  id: MinimumIntranetEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumIntranetEgressThresholdInGbps
  nameWithType: FarmSettings.MinimumIntranetEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumIntranetEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1741
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumIntranetEgressThresholdInGbps { get; set; }
    content.vb: Public Property MinimumIntranetEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetIngressThresholdInGbps
  id: MinimumIntranetIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumIntranetIngressThresholdInGbps
  nameWithType: FarmSettings.MinimumIntranetIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumIntranetIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumIntranetIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1752
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumIntranetIngressThresholdInGbps { get; set; }
    content.vb: Public Property MinimumIntranetIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumRequestThresholdInTps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumRequestThresholdInTps
  id: MinimumRequestThresholdInTps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumRequestThresholdInTps
  nameWithType: FarmSettings.MinimumRequestThresholdInTps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumRequestThresholdInTps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumRequestThresholdInTps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1763
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumRequestThresholdInTps { get; set; }
    content.vb: Public Property MinimumRequestThresholdInTps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalEgressThresholdInGbps
  id: MinimumTotalEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumTotalEgressThresholdInGbps
  nameWithType: FarmSettings.MinimumTotalEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumTotalEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1774
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumTotalEgressThresholdInGbps { get; set; }
    content.vb: Public Property MinimumTotalEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalIngressThresholdInGbps
  id: MinimumTotalIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: MinimumTotalIngressThresholdInGbps
  nameWithType: FarmSettings.MinimumTotalIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.MinimumTotalIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: MinimumTotalIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1785
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? MinimumTotalIngressThresholdInGbps { get; set; }
    content.vb: Public Property MinimumTotalIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.NumberOfAccountsToSync
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.NumberOfAccountsToSync
  id: NumberOfAccountsToSync
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: NumberOfAccountsToSync
  nameWithType: FarmSettings.NumberOfAccountsToSync
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.NumberOfAccountsToSync
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: NumberOfAccountsToSync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1796
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? NumberOfAccountsToSync { get; set; }
    content.vb: Public Property NumberOfAccountsToSync As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallEgressThresholdInGbps
  id: OverallEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallEgressThresholdInGbps
  nameWithType: FarmSettings.OverallEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1807
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallEgressThresholdInGbps { get; set; }
    content.vb: Public Property OverallEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIngressThresholdInGbps
  id: OverallIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallIngressThresholdInGbps
  nameWithType: FarmSettings.OverallIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1818
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallIngressThresholdInGbps { get; set; }
    content.vb: Public Property OverallIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetEgressThresholdInGbps
  id: OverallIntranetEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallIntranetEgressThresholdInGbps
  nameWithType: FarmSettings.OverallIntranetEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallIntranetEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1829
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallIntranetEgressThresholdInGbps { get; set; }
    content.vb: Public Property OverallIntranetEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetIngressThresholdInGbps
  id: OverallIntranetIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallIntranetIngressThresholdInGbps
  nameWithType: FarmSettings.OverallIntranetIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallIntranetIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallIntranetIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1840
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallIntranetIngressThresholdInGbps { get; set; }
    content.vb: Public Property OverallIntranetIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallRequestThresholdInTps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallRequestThresholdInTps
  id: OverallRequestThresholdInTps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallRequestThresholdInTps
  nameWithType: FarmSettings.OverallRequestThresholdInTps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallRequestThresholdInTps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallRequestThresholdInTps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1851
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallRequestThresholdInTps { get; set; }
    content.vb: Public Property OverallRequestThresholdInTps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalEgressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalEgressThresholdInGbps
  id: OverallTotalEgressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallTotalEgressThresholdInGbps
  nameWithType: FarmSettings.OverallTotalEgressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalEgressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallTotalEgressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1862
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallTotalEgressThresholdInGbps { get; set; }
    content.vb: Public Property OverallTotalEgressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalIngressThresholdInGbps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalIngressThresholdInGbps
  id: OverallTotalIngressThresholdInGbps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: OverallTotalIngressThresholdInGbps
  nameWithType: FarmSettings.OverallTotalIngressThresholdInGbps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.OverallTotalIngressThresholdInGbps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OverallTotalIngressThresholdInGbps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1873
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? OverallTotalIngressThresholdInGbps { get; set; }
    content.vb: Public Property OverallTotalIngressThresholdInGbps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.RetentionPeriodForDeletedStorageAccountsInDays
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.RetentionPeriodForDeletedStorageAccountsInDays
  id: RetentionPeriodForDeletedStorageAccountsInDays
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: RetentionPeriodForDeletedStorageAccountsInDays
  nameWithType: FarmSettings.RetentionPeriodForDeletedStorageAccountsInDays
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.RetentionPeriodForDeletedStorageAccountsInDays
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RetentionPeriodForDeletedStorageAccountsInDays
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1885
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Duration within which a storage account can be recovered,\nbeyond which the account would be garbage collected.\n"
  example: []
  syntax:
    content: public int ? RetentionPeriodForDeletedStorageAccountsInDays { get; set; }
    content.vb: Public Property RetentionPeriodForDeletedStorageAccountsInDays As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.SettingsPollingIntervalInSecond
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.SettingsPollingIntervalInSecond
  id: SettingsPollingIntervalInSecond
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: SettingsPollingIntervalInSecond
  nameWithType: FarmSettings.SettingsPollingIntervalInSecond
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.SettingsPollingIntervalInSecond
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SettingsPollingIntervalInSecond
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1896
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? SettingsPollingIntervalInSecond { get; set; }
    content.vb: Public Property SettingsPollingIntervalInSecond As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForEgress
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForEgress
  id: ToleranceFactorForEgress
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForEgress
  nameWithType: FarmSettings.ToleranceFactorForEgress
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForEgress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForEgress
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1907
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForEgress { get; set; }
    content.vb: Public Property ToleranceFactorForEgress As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIngress
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIngress
  id: ToleranceFactorForIngress
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForIngress
  nameWithType: FarmSettings.ToleranceFactorForIngress
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIngress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForIngress
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1918
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForIngress { get; set; }
    content.vb: Public Property ToleranceFactorForIngress As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetEgress
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetEgress
  id: ToleranceFactorForIntranetEgress
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForIntranetEgress
  nameWithType: FarmSettings.ToleranceFactorForIntranetEgress
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetEgress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForIntranetEgress
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1929
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForIntranetEgress { get; set; }
    content.vb: Public Property ToleranceFactorForIntranetEgress As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetIngress
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetIngress
  id: ToleranceFactorForIntranetIngress
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForIntranetIngress
  nameWithType: FarmSettings.ToleranceFactorForIntranetIngress
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForIntranetIngress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForIntranetIngress
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1940
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForIntranetIngress { get; set; }
    content.vb: Public Property ToleranceFactorForIntranetIngress As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalEgress
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalEgress
  id: ToleranceFactorForTotalEgress
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForTotalEgress
  nameWithType: FarmSettings.ToleranceFactorForTotalEgress
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalEgress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForTotalEgress
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1951
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForTotalEgress { get; set; }
    content.vb: Public Property ToleranceFactorForTotalEgress As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalIngress
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalIngress
  id: ToleranceFactorForTotalIngress
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForTotalIngress
  nameWithType: FarmSettings.ToleranceFactorForTotalIngress
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTotalIngress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForTotalIngress
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1962
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForTotalIngress { get; set; }
    content.vb: Public Property ToleranceFactorForTotalIngress As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTps
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTps
  id: ToleranceFactorForTps
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: ToleranceFactorForTps
  nameWithType: FarmSettings.ToleranceFactorForTps
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.ToleranceFactorForTps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ToleranceFactorForTps
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1973
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public double ? ToleranceFactorForTps { get; set; }
    content.vb: Public Property ToleranceFactorForTps As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.UsageCollectionIntervalInSeconds
  commentId: P:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.UsageCollectionIntervalInSeconds
  id: UsageCollectionIntervalInSeconds
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: UsageCollectionIntervalInSeconds
  nameWithType: FarmSettings.UsageCollectionIntervalInSeconds
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.UsageCollectionIntervalInSeconds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UsageCollectionIntervalInSeconds
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1984
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nOptional. Your documentation here.\n"
  example: []
  syntax:
    content: public int ? UsageCollectionIntervalInSeconds { get; set; }
    content.vb: Public Property UsageCollectionIntervalInSeconds As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.#ctor
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.#ctor
  id: '#ctor'
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings
  langs:
  - csharp
  - vb
  name: FarmSettings()
  nameWithType: FarmSettings.FarmSettings()
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.FarmSettings()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 1993
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage.Models
  summary: "\nInitializes a new instance of the FarmSettings class.\n"
  example: []
  syntax:
    content: public FarmSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models
  commentId: N:Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: Microsoft.AzureStack.AzureConsistentStorage.Models
  nameWithType: Microsoft.AzureStack.AzureConsistentStorage.Models
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  name: MakeEnumeration<FarmSettings>()
  nameWithType: ObjectExtensions.MakeEnumeration<FarmSettings>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings>()
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of FarmSettings)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings)()
  name.vb: MakeEnumeration(Of FarmSettings)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration<FarmSettings>
    nameWithType: ObjectExtensions.MakeEnumeration<FarmSettings>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration(Of FarmSettings)
    nameWithType: ObjectExtensions.MakeEnumeration(Of FarmSettings)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.AzureStack.AzureConsistentStorage.Models.FarmSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  isExternal: false
  name: MakeEnumeration<T>(T)
  nameWithType: ObjectExtensions.MakeEnumeration<T>(T)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>(T)
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of T)(T)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)(T)
  name.vb: MakeEnumeration(Of T)(T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration<T>
    nameWithType: ObjectExtensions.MakeEnumeration<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration(Of T)
    nameWithType: ObjectExtensions.MakeEnumeration(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Double}
  commentId: '!:System.Nullable{System.Double}'
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
