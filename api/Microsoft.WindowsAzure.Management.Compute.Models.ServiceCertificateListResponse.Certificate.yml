### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  id: ServiceCertificateListResponse.Certificate
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.CertificateUri
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Data
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Thumbprint
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.ThumbprintAlgorithm
  langs:
  - csharp
  - vb
  name: ServiceCertificateListResponse.Certificate
  nameWithType: ServiceCertificateListResponse.Certificate
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Certificate
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nA service certificate that is valid for your subscription.\n"
  example: []
  syntax:
    content: public class Certificate
    content.vb: Public Class Certificate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.CertificateUri
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.CertificateUri
  id: CertificateUri
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  langs:
  - csharp
  - vb
  name: CertificateUri
  nameWithType: ServiceCertificateListResponse.Certificate.CertificateUri
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.CertificateUri
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateUri
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The Service Management API request URI used to\nperform Get Service Certificate requests against the\ncertificate store.\n"
  example: []
  syntax:
    content: public Uri CertificateUri { get; set; }
    content.vb: Public Property CertificateUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Data
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Data
  id: Data
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ServiceCertificateListResponse.Certificate.Data
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Data
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Data
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
    startLine: 96
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The public part of the service certificate as a cer\nfile.\n"
  example: []
  syntax:
    content: public byte[] Data { get; set; }
    content.vb: Public Property Data As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Thumbprint
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Thumbprint
  id: Thumbprint
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: ServiceCertificateListResponse.Certificate.Thumbprint
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Thumbprint
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The X509 certificate thumb print property of the\nservice certificate.\n"
  example: []
  syntax:
    content: public string Thumbprint { get; set; }
    content.vb: Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.ThumbprintAlgorithm
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.ThumbprintAlgorithm
  id: ThumbprintAlgorithm
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  langs:
  - csharp
  - vb
  name: ThumbprintAlgorithm
  nameWithType: ServiceCertificateListResponse.Certificate.ThumbprintAlgorithm
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.ThumbprintAlgorithm
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ThumbprintAlgorithm
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The algorithm that was used to hash the service\ncertificate. Currently SHA-1 is the only supported algorithm.\n"
  example: []
  syntax:
    content: public string ThumbprintAlgorithm { get; set; }
    content.vb: Public Property ThumbprintAlgorithm As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate
  langs:
  - csharp
  - vb
  name: Certificate()
  nameWithType: ServiceCertificateListResponse.Certificate.Certificate()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateListResponse.Certificate.Certificate()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateListResponse.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the Certificate class.\n"
  example: []
  syntax:
    content: public Certificate()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
