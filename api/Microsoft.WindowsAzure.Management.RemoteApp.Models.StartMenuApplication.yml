### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  id: StartMenuApplication
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.#ctor
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.#ctor(System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.CommandLineArguments
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconPngUris
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconUri
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.Name
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.StartMenuAppId
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.VirtualPath
  langs:
  - csharp
  - vb
  name: StartMenuApplication
  nameWithType: StartMenuApplication
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartMenuApplication
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nDefinition containing details of Start Menu Applications.\n"
  example: []
  syntax:
    content: public class StartMenuApplication
    content.vb: Public Class StartMenuApplication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.CommandLineArguments
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.CommandLineArguments
  id: CommandLineArguments
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: CommandLineArguments
  nameWithType: StartMenuApplication.CommandLineArguments
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.CommandLineArguments
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLineArguments
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The command line arguments to launch the application.\n"
  example: []
  syntax:
    content: public string CommandLineArguments { get; set; }
    content.vb: Public Property CommandLineArguments As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconPngUris
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconPngUris
  id: IconPngUris
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: IconPngUris
  nameWithType: StartMenuApplication.IconPngUris
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconPngUris
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IconPngUris
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The available map of icon PNG file URIs for different\nresolutions (e.g. 16x16, 32x32, 64x64). The key of the map is the\nfirst dimension of the PNG resolution.\n"
  example: []
  syntax:
    content: public IDictionary<int, string> IconPngUris { get; set; }
    content.vb: Public Property IconPngUris As IDictionary(Of Integer, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconUri
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconUri
  id: IconUri
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: IconUri
  nameWithType: StartMenuApplication.IconUri
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.IconUri
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IconUri
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The default URI to the application icon png file.\n"
  example: []
  syntax:
    content: public string IconUri { get; set; }
    content.vb: Public Property IconUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.Name
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StartMenuApplication.Name
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nRequired. The application name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.StartMenuAppId
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.StartMenuAppId
  id: StartMenuAppId
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: StartMenuAppId
  nameWithType: StartMenuApplication.StartMenuAppId
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.StartMenuAppId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartMenuAppId
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The start menu application id.\n"
  example: []
  syntax:
    content: public string StartMenuAppId { get; set; }
    content.vb: Public Property StartMenuAppId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.VirtualPath
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.VirtualPath
  id: VirtualPath
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: VirtualPath
  nameWithType: StartMenuApplication.VirtualPath
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.VirtualPath
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualPath
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The application image path on the destination machine\nspecified with environment variables for the drive and known\nsystem path.\n"
  example: []
  syntax:
    content: public string VirtualPath { get; set; }
    content.vb: Public Property VirtualPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: StartMenuApplication()
  nameWithType: StartMenuApplication.StartMenuApplication()
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.StartMenuApplication()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 106
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the StartMenuApplication class.\n"
  example: []
  syntax:
    content: public StartMenuApplication()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication
  langs:
  - csharp
  - vb
  name: StartMenuApplication(String)
  nameWithType: StartMenuApplication.StartMenuApplication(String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.StartMenuApplication.StartMenuApplication(System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/StartMenuApplication.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the StartMenuApplication class with\nrequired arguments.\n"
  example: []
  syntax:
    content: public StartMenuApplication(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp.Models
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp.Models
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.Int32,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.Int32,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Int32, String>
  nameWithType: IDictionary<Int32, String>
  fullName: System.Collections.Generic.IDictionary<System.Int32, System.String>
  nameWithType.vb: IDictionary(Of Int32, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Int32, System.String)
  name.vb: IDictionary(Of Int32, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
