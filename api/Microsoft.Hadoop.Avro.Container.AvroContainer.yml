items:
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer
  commentId: T:Microsoft.Hadoop.Avro.Container.AvroContainer
  id: AvroContainer
  parent: Microsoft.Hadoop.Avro.Container
  children:
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream,System.Boolean)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String,Stream,Microsoft.Hadoop.Avro.Container.Codec)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.Codec)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream,System.Boolean)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.CodecFactory)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,Microsoft.Hadoop.Avro.Container.Codec)
  - Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  langs:
  - csharp
  - vb
  name: AvroContainer
  nameWithType: AvroContainer
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer
  type: Class
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: AvroContainer
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 22
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nRepresents a factory for Avro file object containers.\n"
  example: []
  syntax:
    content: 'public class AvroContainer : object'
    content.vb: >-
      Public Class AvroContainer
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream)
  id: CreateGenericReader(Stream)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateGenericReader(Stream)
  nameWithType: AvroContainer.CreateGenericReader(Stream)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateGenericReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 30
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader of <xref href=\"Microsoft.Hadoop.Avro.AvroRecord\" data-throw-if-not-resolved=\"false\"></xref> or primitive type.\n"
  remarks: By default, <em>stream</em> is left open.
  example: []
  syntax:
    content: public static IAvroReader<object> CreateGenericReader(Stream stream)
    content.vb: Public Shared Function CreateGenericReader(stream As Stream) As IAvroReader(Of Object)
    parameters:
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{System.Object}
      description: A reader.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream,System.Boolean)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream,System.Boolean)
  id: CreateGenericReader(Stream,System.Boolean)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateGenericReader(Stream, Boolean)
  nameWithType: AvroContainer.CreateGenericReader(Stream, Boolean)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateGenericReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 41
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader of <xref href=\"Microsoft.Hadoop.Avro.AvroRecord\" data-throw-if-not-resolved=\"false\"></xref> or primitive type.\n"
  example: []
  syntax:
    content: public static IAvroReader<object> CreateGenericReader(Stream stream, bool leaveOpen)
    content.vb: Public Shared Function CreateGenericReader(stream As Stream, leaveOpen As Boolean) As IAvroReader(Of Object)
    parameters:
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code> leaves the stream open.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{System.Object}
      description: 'A reader. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  id: CreateGenericReader(Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateGenericReader(Stream, Boolean, CodecFactory)
  nameWithType: AvroContainer.CreateGenericReader(Stream, Boolean, CodecFactory)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(Stream, System.Boolean, Microsoft.Hadoop.Avro.Container.CodecFactory)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateGenericReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 53
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader of <xref href=\"Microsoft.Hadoop.Avro.AvroRecord\" data-throw-if-not-resolved=\"false\"></xref> or primitive type.\n"
  example: []
  syntax:
    content: public static IAvroReader<object> CreateGenericReader(Stream stream, bool leaveOpen, CodecFactory factory)
    content.vb: Public Shared Function CreateGenericReader(stream As Stream, leaveOpen As Boolean, factory As CodecFactory) As IAvroReader(Of Object)
    parameters:
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code> leaves the stream open.
    - id: factory
      type: Microsoft.Hadoop.Avro.Container.CodecFactory
      description: The codec factory.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{System.Object}
      description: 'A reader. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  id: CreateGenericReader(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.CodecFactory)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateGenericReader(String, Stream, Boolean, CodecFactory)
  nameWithType: AvroContainer.CreateGenericReader(String, Stream, Boolean, CodecFactory)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericReader(System.String, Stream, System.Boolean, Microsoft.Hadoop.Avro.Container.CodecFactory)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateGenericReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 76
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader of <xref href=\"Microsoft.Hadoop.Avro.AvroRecord\" data-throw-if-not-resolved=\"false\"></xref> or primitive type.\n"
  remarks: <em>readerSchema</em> should be specified explicitely when the schema of the consumer/reader is different from the schema of the producer/writer.
  example: []
  syntax:
    content: public static IAvroReader<object> CreateGenericReader(string readerSchema, Stream stream, bool leaveOpen, CodecFactory factory)
    content.vb: Public Shared Function CreateGenericReader(readerSchema As String, stream As Stream, leaveOpen As Boolean, factory As CodecFactory) As IAvroReader(Of Object)
    parameters:
    - id: readerSchema
      type: System.String
      description: The reader schema.
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code> leaves the stream open.
    - id: factory
      type: Microsoft.Hadoop.Avro.Container.CodecFactory
      description: The codec factory.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{System.Object}
      description: 'A reader. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream)
  id: CreateReader``1(Stream)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateReader<T>(Stream)
  nameWithType: AvroContainer.CreateReader<T>(Stream)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader<T>(Stream)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 102
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader for a static C# type.\n"
  remarks: By default, <em>stream</em> is left open and default <xref href="Microsoft.Hadoop.Avro.AvroSerializerSettings" data-throw-if-not-resolved="false"></xref> are used.
  example: []
  syntax:
    content: public static IAvroReader<T> CreateReader<T>(Stream stream)
    content.vb: Public Shared Function CreateReader(Of T)(stream As Stream) As IAvroReader(Of T)
    parameters:
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    typeParameters:
    - id: T
      description: The type of deserialized objects.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{{T}}
      description: A reader.
  nameWithType.vb: AvroContainer.CreateReader(Of T)(Stream)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader(Of T)(Stream)
  name.vb: CreateReader(Of T)(Stream)
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream,System.Boolean)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream,System.Boolean)
  id: CreateReader``1(Stream,System.Boolean)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateReader<T>(Stream, Boolean)
  nameWithType: AvroContainer.CreateReader<T>(Stream, Boolean)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader<T>(Stream, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 116
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader for a static C# type.\n"
  remarks: Default <xref href="Microsoft.Hadoop.Avro.AvroSerializerSettings" data-throw-if-not-resolved="false"></xref> are used.
  example: []
  syntax:
    content: public static IAvroReader<T> CreateReader<T>(Stream stream, bool leaveOpen)
    content.vb: Public Shared Function CreateReader(Of T)(stream As Stream, leaveOpen As Boolean) As IAvroReader(Of T)
    parameters:
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code>, the <em>stream</em> is left open.
    typeParameters:
    - id: T
      description: The type of deserialized objects.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{{T}}
      description: 'A reader. '
  nameWithType.vb: AvroContainer.CreateReader(Of T)(Stream, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader(Of T)(Stream, System.Boolean)
  name.vb: CreateReader(Of T)(Stream, Boolean)
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.CodecFactory)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.CodecFactory)
  id: CreateReader``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.CodecFactory)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateReader<T>(Stream, Boolean, AvroSerializerSettings, CodecFactory)
  nameWithType: AvroContainer.CreateReader<T>(Stream, Boolean, AvroSerializerSettings, CodecFactory)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader<T>(Stream, System.Boolean, Microsoft.Hadoop.Avro.AvroSerializerSettings, Microsoft.Hadoop.Avro.Container.CodecFactory)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateReader
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 131
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a reader for a static C# type.\n"
  example: []
  syntax:
    content: public static IAvroReader<T> CreateReader<T>(Stream stream, bool leaveOpen, AvroSerializerSettings settings, CodecFactory codecFactory)
    content.vb: Public Shared Function CreateReader(Of T)(stream As Stream, leaveOpen As Boolean, settings As AvroSerializerSettings, codecFactory As CodecFactory) As IAvroReader(Of T)
    parameters:
    - id: stream
      type: Stream
      description: The stream containing Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code>, the <em>stream</em> is left open.
    - id: settings
      type: Microsoft.Hadoop.Avro.AvroSerializerSettings
      description: The serializer settings.
    - id: codecFactory
      type: Microsoft.Hadoop.Avro.Container.CodecFactory
      description: The codec factory.
    typeParameters:
    - id: T
      description: The type of deserialized objects.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroReader{{T}}
      description: 'A reader. '
  nameWithType.vb: AvroContainer.CreateReader(Of T)(Stream, Boolean, AvroSerializerSettings, CodecFactory)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateReader(Of T)(Stream, System.Boolean, Microsoft.Hadoop.Avro.AvroSerializerSettings, Microsoft.Hadoop.Avro.Container.CodecFactory)
  name.vb: CreateReader(Of T)(Stream, Boolean, AvroSerializerSettings, CodecFactory)
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,Microsoft.Hadoop.Avro.Container.Codec)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,Microsoft.Hadoop.Avro.Container.Codec)
  id: CreateWriter``1(Stream,Microsoft.Hadoop.Avro.Container.Codec)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateWriter<T>(Stream, Codec)
  nameWithType: AvroContainer.CreateWriter<T>(Stream, Codec)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter<T>(Stream, Microsoft.Hadoop.Avro.Container.Codec)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateWriter
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 157
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a writer of a static C# type.\n"
  remarks: By default, the <em>stream</em> is left open and default <xref href="Microsoft.Hadoop.Avro.AvroSerializerSettings" data-throw-if-not-resolved="false"></xref> are used.
  example: []
  syntax:
    content: public static IAvroWriter<T> CreateWriter<T>(Stream stream, Codec codec)
    content.vb: Public Shared Function CreateWriter(Of T)(stream As Stream, codec As Codec) As IAvroWriter(Of T)
    parameters:
    - id: stream
      type: Stream
      description: The stream that will contain the resulting Avro object container.
    - id: codec
      type: Microsoft.Hadoop.Avro.Container.Codec
      description: The codec.
    typeParameters:
    - id: T
      description: The type of serialized objects.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroWriter{{T}}
      description: A writer.
  nameWithType.vb: AvroContainer.CreateWriter(Of T)(Stream, Codec)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter(Of T)(Stream, Microsoft.Hadoop.Avro.Container.Codec)
  name.vb: CreateWriter(Of T)(Stream, Codec)
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  id: CreateWriter``1(Stream,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateWriter<T>(Stream, AvroSerializerSettings, Codec)
  nameWithType: AvroContainer.CreateWriter<T>(Stream, AvroSerializerSettings, Codec)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter<T>(Stream, Microsoft.Hadoop.Avro.AvroSerializerSettings, Microsoft.Hadoop.Avro.Container.Codec)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateWriter
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 172
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a writer of a static C# type.\n"
  remarks: By default, the <em>stream</em> is left open.
  example: []
  syntax:
    content: public static IAvroWriter<T> CreateWriter<T>(Stream stream, AvroSerializerSettings settings, Codec codec)
    content.vb: Public Shared Function CreateWriter(Of T)(stream As Stream, settings As AvroSerializerSettings, codec As Codec) As IAvroWriter(Of T)
    parameters:
    - id: stream
      type: Stream
      description: The stream that will contain the resulting Avro object container.
    - id: settings
      type: Microsoft.Hadoop.Avro.AvroSerializerSettings
      description: The serializer settings.
    - id: codec
      type: Microsoft.Hadoop.Avro.Container.Codec
      description: The codec.
    typeParameters:
    - id: T
      description: The type of serialized objects.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroWriter{{T}}
      description: 'A writer. '
  nameWithType.vb: AvroContainer.CreateWriter(Of T)(Stream, AvroSerializerSettings, Codec)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter(Of T)(Stream, Microsoft.Hadoop.Avro.AvroSerializerSettings, Microsoft.Hadoop.Avro.Container.Codec)
  name.vb: CreateWriter(Of T)(Stream, AvroSerializerSettings, Codec)
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  id: CreateWriter``1(Stream,System.Boolean,Microsoft.Hadoop.Avro.AvroSerializerSettings,Microsoft.Hadoop.Avro.Container.Codec)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateWriter<T>(Stream, Boolean, AvroSerializerSettings, Codec)
  nameWithType: AvroContainer.CreateWriter<T>(Stream, Boolean, AvroSerializerSettings, Codec)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter<T>(Stream, System.Boolean, Microsoft.Hadoop.Avro.AvroSerializerSettings, Microsoft.Hadoop.Avro.Container.Codec)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateWriter
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 187
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a writer of a static C# type.\n"
  example: []
  syntax:
    content: public static IAvroWriter<T> CreateWriter<T>(Stream stream, bool leaveOpen, AvroSerializerSettings settings, Codec codec)
    content.vb: Public Shared Function CreateWriter(Of T)(stream As Stream, leaveOpen As Boolean, settings As AvroSerializerSettings, codec As Codec) As IAvroWriter(Of T)
    parameters:
    - id: stream
      type: Stream
      description: The stream that will contain the resulting Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code> the <em>stream</em> is left open.
    - id: settings
      type: Microsoft.Hadoop.Avro.AvroSerializerSettings
      description: The serializer settings.
    - id: codec
      type: Microsoft.Hadoop.Avro.Container.Codec
      description: The codec.
    typeParameters:
    - id: T
      description: The type of serialized objects.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroWriter{{T}}
      description: 'A writer. '
  nameWithType.vb: AvroContainer.CreateWriter(Of T)(Stream, Boolean, AvroSerializerSettings, Codec)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateWriter(Of T)(Stream, System.Boolean, Microsoft.Hadoop.Avro.AvroSerializerSettings, Microsoft.Hadoop.Avro.Container.Codec)
  name.vb: CreateWriter(Of T)(Stream, Boolean, AvroSerializerSettings, Codec)
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String,Stream,Microsoft.Hadoop.Avro.Container.Codec)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String,Stream,Microsoft.Hadoop.Avro.Container.Codec)
  id: CreateGenericWriter(System.String,Stream,Microsoft.Hadoop.Avro.Container.Codec)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateGenericWriter(String, Stream, Codec)
  nameWithType: AvroContainer.CreateGenericWriter(String, Stream, Codec)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String, Stream, Microsoft.Hadoop.Avro.Container.Codec)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateGenericWriter
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 213
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a writer of <xref href=\"Microsoft.Hadoop.Avro.AvroRecord\" data-throw-if-not-resolved=\"false\"></xref> or primitive type.\n"
  remarks: By default, the <em>stream</em> is left open.
  example: []
  syntax:
    content: public static IAvroWriter<object> CreateGenericWriter(string schema, Stream stream, Codec codec)
    content.vb: Public Shared Function CreateGenericWriter(schema As String, stream As Stream, codec As Codec) As IAvroWriter(Of Object)
    parameters:
    - id: schema
      type: System.String
      description: The writer schema.
    - id: stream
      type: Stream
      description: The stream that will contain the resulting Avro object container.
    - id: codec
      type: Microsoft.Hadoop.Avro.Container.Codec
      description: The codec.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroWriter{System.Object}
      description: A writer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.Codec)
  commentId: M:Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.Codec)
  id: CreateGenericWriter(System.String,Stream,System.Boolean,Microsoft.Hadoop.Avro.Container.Codec)
  parent: Microsoft.Hadoop.Avro.Container.AvroContainer
  langs:
  - csharp
  - vb
  name: CreateGenericWriter(String, Stream, Boolean, Codec)
  nameWithType: AvroContainer.CreateGenericWriter(String, Stream, Boolean, Codec)
  fullName: Microsoft.Hadoop.Avro.Container.AvroContainer.CreateGenericWriter(System.String, Stream, System.Boolean, Microsoft.Hadoop.Avro.Container.Codec)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateGenericWriter
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Avro/Container/AvroContainer.Static.cs
    startLine: 227
  assemblies:
  - Microsoft.Hadoop.Avro
  namespace: Microsoft.Hadoop.Avro.Container
  summary: "\nCreates a writer of <xref href=\"Microsoft.Hadoop.Avro.AvroRecord\" data-throw-if-not-resolved=\"false\"></xref> or primitive type.\n"
  example: []
  syntax:
    content: public static IAvroWriter<object> CreateGenericWriter(string schema, Stream stream, bool leaveOpen, Codec codec)
    content.vb: Public Shared Function CreateGenericWriter(schema As String, stream As Stream, leaveOpen As Boolean, codec As Codec) As IAvroWriter(Of Object)
    parameters:
    - id: schema
      type: System.String
      description: The writer schema.
    - id: stream
      type: Stream
      description: The stream that will contain the resulting Avro object container.
    - id: leaveOpen
      type: System.Boolean
      description: If set to <code>true</code> the <em>stream</em> is left open.
    - id: codec
      type: Microsoft.Hadoop.Avro.Container.Codec
      description: The codec.
    return:
      type: Microsoft.Hadoop.Avro.Container.IAvroWriter{System.Object}
      description: A writer.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Hadoop.Avro.Container
  commentId: N:Microsoft.Hadoop.Avro.Container
  isExternal: false
  name: Microsoft.Hadoop.Avro.Container
  nameWithType: Microsoft.Hadoop.Avro.Container
  fullName: Microsoft.Hadoop.Avro.Container
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.Hadoop.Avro.AvroRecord
  commentId: T:Microsoft.Hadoop.Avro.AvroRecord
  isExternal: false
  name: AvroRecord
  nameWithType: AvroRecord
  fullName: Microsoft.Hadoop.Avro.AvroRecord
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Microsoft.Hadoop.Avro.Container.IAvroReader{System.Object}
  commentId: T:Microsoft.Hadoop.Avro.Container.IAvroReader{System.Object}
  parent: Microsoft.Hadoop.Avro.Container
  definition: Microsoft.Hadoop.Avro.Container.IAvroReader`1
  name: IAvroReader<Object>
  nameWithType: IAvroReader<Object>
  fullName: Microsoft.Hadoop.Avro.Container.IAvroReader<System.Object>
  nameWithType.vb: IAvroReader(Of Object)
  fullname.vb: Microsoft.Hadoop.Avro.Container.IAvroReader(Of System.Object)
  name.vb: IAvroReader(Of Object)
  spec.csharp:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
    name: IAvroReader
    nameWithType: IAvroReader
    fullName: Microsoft.Hadoop.Avro.Container.IAvroReader
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
    name: IAvroReader
    nameWithType: IAvroReader
    fullName: Microsoft.Hadoop.Avro.Container.IAvroReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
  commentId: T:Microsoft.Hadoop.Avro.Container.IAvroReader`1
  isExternal: false
  name: IAvroReader<T>
  nameWithType: IAvroReader<T>
  fullName: Microsoft.Hadoop.Avro.Container.IAvroReader<T>
  nameWithType.vb: IAvroReader(Of T)
  fullname.vb: Microsoft.Hadoop.Avro.Container.IAvroReader(Of T)
  name.vb: IAvroReader(Of T)
  spec.csharp:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
    name: IAvroReader
    nameWithType: IAvroReader
    fullName: Microsoft.Hadoop.Avro.Container.IAvroReader
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
    name: IAvroReader
    nameWithType: IAvroReader
    fullName: Microsoft.Hadoop.Avro.Container.IAvroReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Hadoop.Avro.Container.CodecFactory
  commentId: T:Microsoft.Hadoop.Avro.Container.CodecFactory
  parent: Microsoft.Hadoop.Avro.Container
  isExternal: false
  name: CodecFactory
  nameWithType: CodecFactory
  fullName: Microsoft.Hadoop.Avro.Container.CodecFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Hadoop.Avro.AvroSerializerSettings
  commentId: T:Microsoft.Hadoop.Avro.AvroSerializerSettings
  parent: Microsoft.Hadoop.Avro
  isExternal: false
  name: AvroSerializerSettings
  nameWithType: AvroSerializerSettings
  fullName: Microsoft.Hadoop.Avro.AvroSerializerSettings
- uid: Microsoft.Hadoop.Avro.Container.IAvroReader{{T}}
  commentId: T:Microsoft.Hadoop.Avro.Container.IAvroReader{``0}
  parent: Microsoft.Hadoop.Avro.Container
  definition: Microsoft.Hadoop.Avro.Container.IAvroReader`1
  name: IAvroReader<T>
  nameWithType: IAvroReader<T>
  fullName: Microsoft.Hadoop.Avro.Container.IAvroReader<T>
  nameWithType.vb: IAvroReader(Of T)
  fullname.vb: Microsoft.Hadoop.Avro.Container.IAvroReader(Of T)
  name.vb: IAvroReader(Of T)
  spec.csharp:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
    name: IAvroReader
    nameWithType: IAvroReader
    fullName: Microsoft.Hadoop.Avro.Container.IAvroReader
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroReader`1
    name: IAvroReader
    nameWithType: IAvroReader
    fullName: Microsoft.Hadoop.Avro.Container.IAvroReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Hadoop.Avro
  commentId: N:Microsoft.Hadoop.Avro
  isExternal: false
  name: Microsoft.Hadoop.Avro
  nameWithType: Microsoft.Hadoop.Avro
  fullName: Microsoft.Hadoop.Avro
- uid: Microsoft.Hadoop.Avro.Container.Codec
  commentId: T:Microsoft.Hadoop.Avro.Container.Codec
  parent: Microsoft.Hadoop.Avro.Container
  isExternal: false
  name: Codec
  nameWithType: Codec
  fullName: Microsoft.Hadoop.Avro.Container.Codec
- uid: Microsoft.Hadoop.Avro.Container.IAvroWriter{{T}}
  commentId: T:Microsoft.Hadoop.Avro.Container.IAvroWriter{``0}
  parent: Microsoft.Hadoop.Avro.Container
  definition: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
  name: IAvroWriter<T>
  nameWithType: IAvroWriter<T>
  fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter<T>
  nameWithType.vb: IAvroWriter(Of T)
  fullname.vb: Microsoft.Hadoop.Avro.Container.IAvroWriter(Of T)
  name.vb: IAvroWriter(Of T)
  spec.csharp:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
    name: IAvroWriter
    nameWithType: IAvroWriter
    fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
    name: IAvroWriter
    nameWithType: IAvroWriter
    fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
  commentId: T:Microsoft.Hadoop.Avro.Container.IAvroWriter`1
  isExternal: false
  name: IAvroWriter<T>
  nameWithType: IAvroWriter<T>
  fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter<T>
  nameWithType.vb: IAvroWriter(Of T)
  fullname.vb: Microsoft.Hadoop.Avro.Container.IAvroWriter(Of T)
  name.vb: IAvroWriter(Of T)
  spec.csharp:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
    name: IAvroWriter
    nameWithType: IAvroWriter
    fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
    name: IAvroWriter
    nameWithType: IAvroWriter
    fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Hadoop.Avro.Container.IAvroWriter{System.Object}
  commentId: T:Microsoft.Hadoop.Avro.Container.IAvroWriter{System.Object}
  parent: Microsoft.Hadoop.Avro.Container
  definition: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
  name: IAvroWriter<Object>
  nameWithType: IAvroWriter<Object>
  fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter<System.Object>
  nameWithType.vb: IAvroWriter(Of Object)
  fullname.vb: Microsoft.Hadoop.Avro.Container.IAvroWriter(Of System.Object)
  name.vb: IAvroWriter(Of Object)
  spec.csharp:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
    name: IAvroWriter
    nameWithType: IAvroWriter
    fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Hadoop.Avro.Container.IAvroWriter`1
    name: IAvroWriter
    nameWithType: IAvroWriter
    fullName: Microsoft.Hadoop.Avro.Container.IAvroWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
