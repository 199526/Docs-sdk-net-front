items:
- uid: Microsoft.Azure.KeyVault.KeyVaultClient
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultClient
  id: KeyVaultClient
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)
  - Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,HttpClient)
  - Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultCredential,DelegatingHandler[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.BackupKeyAsync(System.String,System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.DecryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.DeleteKeyAsync(System.String,System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSecretAsync(System.String,System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String,System.String,System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysNextAsync(System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsNextAsync(System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String,System.String,System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsNextAsync(System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsNextAsync(System.String,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyAsync(System.String,System.String,Microsoft.Azure.KeyVault.KeyBundle,System.Nullable{System.Boolean},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyAsync(System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretAsync(System.String,System.String,System.String,Dictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.SecretAttributes,CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String,System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.VerifyAsync(System.String,System.String,System.Byte[],System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  langs:
  - csharp
  - vb
  name: KeyVaultClient
  nameWithType: KeyVaultClient
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: KeyVaultClient
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nClient class to perform cryptographic key operations and vault operations\nagainst the Key Vault service. \nThread safety: This class is thread-safe.\n"
  example: []
  syntax:
    content: 'public class KeyVaultClient : object'
    content.vb: >-
      Public Class KeyVaultClient
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)
  id: '#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)'
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: KeyVaultClient(KeyVaultClient.AuthenticationCallback)
  nameWithType: KeyVaultClient.KeyVaultClient(KeyVaultClient.AuthenticationCallback)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.KeyVaultClient(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public KeyVaultClient(KeyVaultClient.AuthenticationCallback authenticationCallback)
    content.vb: Public Sub New(authenticationCallback As KeyVaultClient.AuthenticationCallback)
    parameters:
    - id: authenticationCallback
      type: Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback
      description: The authentication callback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,HttpClient)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,HttpClient)
  id: '#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,HttpClient)'
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: KeyVaultClient(KeyVaultClient.AuthenticationCallback, HttpClient)
  nameWithType: KeyVaultClient.KeyVaultClient(KeyVaultClient.AuthenticationCallback, HttpClient)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.KeyVaultClient(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback, HttpClient)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public KeyVaultClient(KeyVaultClient.AuthenticationCallback authenticationCallback, HttpClient httpClient)
    content.vb: Public Sub New(authenticationCallback As KeyVaultClient.AuthenticationCallback, httpClient As HttpClient)
    parameters:
    - id: authenticationCallback
      type: Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback
      description: The authentication callback
    - id: httpClient
      type: HttpClient
      description: 'Customized HTTP client '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultCredential,DelegatingHandler[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultCredential,DelegatingHandler[])
  id: '#ctor(Microsoft.Azure.KeyVault.KeyVaultCredential,DelegatingHandler[])'
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: KeyVaultClient(KeyVaultCredential, DelegatingHandler[])
  nameWithType: KeyVaultClient.KeyVaultClient(KeyVaultCredential, DelegatingHandler[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.KeyVaultClient(Microsoft.Azure.KeyVault.KeyVaultCredential, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor for testability\n"
  example: []
  syntax:
    content: public KeyVaultClient(KeyVaultCredential credential, DelegatingHandler[] handlers)
    content.vb: Public Sub New(credential As KeyVaultCredential, handlers As DelegatingHandler())
    parameters:
    - id: credential
      type: Microsoft.Azure.KeyVault.KeyVaultCredential
      description: Credential for key vault operations
    - id: handlers
      type: DelegatingHandler[]
      description: Custom HTTP handlers
  nameWithType.vb: KeyVaultClient.KeyVaultClient(KeyVaultCredential, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.KeyVaultClient(Microsoft.Azure.KeyVault.KeyVaultCredential, DelegatingHandler())
  name.vb: KeyVaultClient(KeyVaultCredential, DelegatingHandler())
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  id: EncryptAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: EncryptAsync(String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.EncryptAsync(String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String, System.String, System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: EncryptAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nEncrypts a single block of data. The amount of data that may be encrypted is determined\nby the target key type and the encryption algorithm.\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> EncryptAsync(string vault, string keyName, string keyVersion, string algorithm, byte[] plainText, CancellationToken cancellationToken = null)
    content.vb: Public Function EncryptAsync(vault As String, keyName As String, keyVersion As String, algorithm As String, plainText As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: vault
      type: System.String
      description: The URL of the vault
    - id: keyName
      type: System.String
      description: The name of the key
    - id: keyVersion
      type: System.String
      description: The version of the key (optional)
    - id: algorithm
      type: System.String
      description: 'The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm. '
    - id: plainText
      type: System.Byte[]
      description: The plain text
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: The encrypted text
  nameWithType.vb: KeyVaultClient.EncryptAsync(String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String, System.String, System.String, System.String, System.Byte(), CancellationToken)
  name.vb: EncryptAsync(String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  id: EncryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: EncryptAsync(String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.EncryptAsync(String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: EncryptAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nEncrypts a single block of data. The amount of data that may be encrypted is determined\nby the target key type and the encryption algorithm.\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> EncryptAsync(string keyIdentifier, string algorithm, byte[] plainText, CancellationToken cancellationToken = null)
    content.vb: Public Function EncryptAsync(keyIdentifier As String, algorithm As String, plainText As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: The full key identifier
    - id: algorithm
      type: System.String
      description: The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.
    - id: plainText
      type: System.Byte[]
      description: The plain text
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: The encrypted text
  nameWithType.vb: KeyVaultClient.EncryptAsync(String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.EncryptAsync(System.String, System.String, System.Byte(), CancellationToken)
  name.vb: EncryptAsync(String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.DecryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.DecryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  id: DecryptAsync(System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: DecryptAsync(String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.DecryptAsync(String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.DecryptAsync(System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DecryptAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDecrypts a single block of encrypted data\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> DecryptAsync(string keyIdentifier, string algorithm, byte[] cipherText, CancellationToken cancellationToken = null)
    content.vb: Public Function DecryptAsync(keyIdentifier As String, algorithm As String, cipherText As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: The full key identifier
    - id: algorithm
      type: System.String
      description: The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.
    - id: cipherText
      type: System.Byte[]
      description: The cipher text
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: The decryption result
  nameWithType.vb: KeyVaultClient.DecryptAsync(String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.DecryptAsync(System.String, System.String, System.Byte(), CancellationToken)
  name.vb: DecryptAsync(String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  id: SignAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: SignAsync(String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.SignAsync(String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String, System.String, System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SignAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 193
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a signature from a digest using the specified key in the vault\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> SignAsync(string vault, string keyName, string keyVersion, string algorithm, byte[] digest, CancellationToken cancellationToken = null)
    content.vb: Public Function SignAsync(vault As String, keyName As String, keyVersion As String, algorithm As String, digest As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: vault
      type: System.String
      description: The URL of the vault
    - id: keyName
      type: System.String
      description: The name of the key
    - id: keyVersion
      type: System.String
      description: The version of the key (optional)
    - id: algorithm
      type: System.String
      description: 'The signing algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. '
    - id: digest
      type: System.Byte[]
      description: The digest value to sign
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: The signature value
  nameWithType.vb: KeyVaultClient.SignAsync(String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String, System.String, System.String, System.String, System.Byte(), CancellationToken)
  name.vb: SignAsync(String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String,System.String,System.Byte[],CancellationToken)
  id: SignAsync(System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: SignAsync(String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.SignAsync(String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SignAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a signature from a digest using the specified key in the vault\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> SignAsync(string keyIdentifier, string algorithm, byte[] digest, CancellationToken cancellationToken = null)
    content.vb: Public Function SignAsync(keyIdentifier As String, algorithm As String, digest As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the signing key '
    - id: algorithm
      type: System.String
      description: 'The signing algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. '
    - id: digest
      type: System.Byte[]
      description: The digest value to sign
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: The signature value
  nameWithType.vb: KeyVaultClient.SignAsync(String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.SignAsync(System.String, System.String, System.Byte(), CancellationToken)
  name.vb: SignAsync(String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.VerifyAsync(System.String,System.String,System.Byte[],System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.VerifyAsync(System.String,System.String,System.Byte[],System.Byte[],CancellationToken)
  id: VerifyAsync(System.String,System.String,System.Byte[],System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: VerifyAsync(String, String, Byte[], Byte[], CancellationToken)
  nameWithType: KeyVaultClient.VerifyAsync(String, String, Byte[], Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.VerifyAsync(System.String, System.String, System.Byte[], System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: VerifyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nVerifies a signature using the specified key\n"
  example: []
  syntax:
    content: public Task<bool> VerifyAsync(string keyIdentifier, string algorithm, byte[] digest, byte[] signature, CancellationToken cancellationToken = null)
    content.vb: Public Function VerifyAsync(keyIdentifier As String, algorithm As String, digest As Byte(), signature As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the key used for signing '
    - id: algorithm
      type: System.String
      description: The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    - id: digest
      type: System.Byte[]
      description: 'The digest used for signing '
    - id: signature
      type: System.Byte[]
      description: 'The signature to be verified '
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{System.Boolean}
      description: 'true if the signature is verified, false otherwise. '
  nameWithType.vb: KeyVaultClient.VerifyAsync(String, String, Byte(), Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.VerifyAsync(System.String, System.String, System.Byte(), System.Byte(), CancellationToken)
  name.vb: VerifyAsync(String, String, Byte(), Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  id: WrapKeyAsync(System.String,System.String,System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: WrapKeyAsync(String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.WrapKeyAsync(String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String, System.String, System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: WrapKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 292
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nWraps a symmetric key using the specified key\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> WrapKeyAsync(string vault, string keyName, string keyVersion, string algorithm, byte[] key, CancellationToken cancellationToken = null)
    content.vb: Public Function WrapKeyAsync(vault As String, keyName As String, keyVersion As String, algorithm As String, key As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: vault
      type: System.String
      description: The URL of the vault
    - id: keyName
      type: System.String
      description: The name of the key
    - id: keyVersion
      type: System.String
      description: The version of the key (optional)
    - id: algorithm
      type: System.String
      description: 'The signing algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. '
    - id: key
      type: System.Byte[]
      description: 'The symmetric key '
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: 'The wrapped symmetric key '
  nameWithType.vb: KeyVaultClient.WrapKeyAsync(String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String, System.String, System.String, System.String, System.Byte(), CancellationToken)
  name.vb: WrapKeyAsync(String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  id: WrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: WrapKeyAsync(String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.WrapKeyAsync(String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: WrapKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 323
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nWraps a symmetric key using the specified key\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> WrapKeyAsync(string keyIdentifier, string algorithm, byte[] key, CancellationToken cancellationToken = null)
    content.vb: Public Function WrapKeyAsync(keyIdentifier As String, algorithm As String, key As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the key used for wrapping '
    - id: algorithm
      type: System.String
      description: The wrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    - id: key
      type: System.Byte[]
      description: 'The symmetric key '
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: 'The wrapped symmetric key '
  nameWithType.vb: KeyVaultClient.WrapKeyAsync(String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyAsync(System.String, System.String, System.Byte(), CancellationToken)
  name.vb: WrapKeyAsync(String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  id: UnwrapKeyAsync(System.String,System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: UnwrapKeyAsync(String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.UnwrapKeyAsync(String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyAsync(System.String, System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UnwrapKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 356
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUnwraps a symmetric key using the specified key in the vault\n    that has initially been used for wrapping the key.\n"
  example: []
  syntax:
    content: public Task<KeyOperationResult> UnwrapKeyAsync(string keyIdentifier, string algorithm, byte[] wrappedKey, CancellationToken cancellationToken = null)
    content.vb: Public Function UnwrapKeyAsync(keyIdentifier As String, algorithm As String, wrappedKey As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the wrapping/unwrapping key '
    - id: algorithm
      type: System.String
      description: The unwrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    - id: wrappedKey
      type: System.Byte[]
      description: The wrapped symmetric key
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
      description: The unwrapped symmetric key
  nameWithType.vb: KeyVaultClient.UnwrapKeyAsync(String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyAsync(System.String, System.String, System.Byte(), CancellationToken)
  name.vb: UnwrapKeyAsync(String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  id: CreateKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: CreateKeyAsync(String, String, String, Nullable<Int32>, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClient.CreateKeyAsync(String, String, String, Nullable<Int32>, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyAsync(System.String, System.String, System.String, System.Nullable<System.Int32>, System.String[], Microsoft.Azure.KeyVault.KeyAttributes, Dictionary<System.String, System.String>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 396
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a new, named, key in the specified vault.\n"
  example: []
  syntax:
    content: public Task<KeyBundle> CreateKeyAsync(string vault, string keyName, string keyType, int ? keySize = null, string[] key_ops = null, KeyAttributes keyAttributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: Public Function CreateKeyAsync(vault As String, keyName As String, keyType As String, keySize As Integer? = Nothing, key_ops As String() = Nothing, keyAttributes As KeyAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault in which the key is to be created.
    - id: keyName
      type: System.String
      description: The name for the key
    - id: keyType
      type: System.String
      description: The type of key to create. For valid key types, see WebKeyTypes.
    - id: keySize
      type: System.Nullable{System.Int32}
      description: Size of the key
    - id: key_ops
      type: System.String[]
      description: JSON web key operations. For more information, see JsonWebKeyOperation.
    - id: keyAttributes
      type: Microsoft.Azure.KeyVault.KeyAttributes
      description: The attributes of the key. For more information on possible attributes, see KeyAttributes.
    - id: tags
      type: Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: A key bundle containing the result of the create request
  nameWithType.vb: KeyVaultClient.CreateKeyAsync(String, String, String, Nullable(Of Int32), String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyAsync(System.String, System.String, System.String, System.Nullable(Of System.Int32), System.String(), Microsoft.Azure.KeyVault.KeyAttributes, Dictionary(Of System.String, System.String), CancellationToken)
  name.vb: CreateKeyAsync(String, String, String, Nullable(Of Int32), String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String,System.String,System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String,System.String,System.String,CancellationToken)
  id: GetKeyAsync(System.String,System.String,System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetKeyAsync(String, String, String, CancellationToken)
  nameWithType: KeyVaultClient.GetKeyAsync(String, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String, System.String, System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 434
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRetrieves the public portion of a key plus its attributes\n"
  example: []
  syntax:
    content: public Task<KeyBundle> GetKeyAsync(string vault, string keyName, string keyVersion = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetKeyAsync(vault As String, keyName As String, keyVersion As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: keyVersion
      type: System.String
      description: The key version
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: A KeyBundle of the key and its attributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String,CancellationToken)
  id: GetKeyAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetKeyAsync(String, CancellationToken)
  nameWithType: KeyVaultClient.GetKeyAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 453
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRetrieves the public portion of a key plus its attributes\n"
  example: []
  syntax:
    content: public Task<KeyBundle> GetKeyAsync(string keyIdentifier, CancellationToken cancellationToken = null)
    content.vb: Public Function GetKeyAsync(keyIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: The key identifier
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: A KeyBundle of the key and its attributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  id: GetKeysAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetKeysAsync(String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClient.GetKeysAsync(String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysAsync(System.String, System.Nullable<System.Int32>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetKeysAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 474
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList keys in the specified vault\n"
  example: []
  syntax:
    content: public Task<ListKeysResponseMessage> GetKeysAsync(string vault, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetKeysAsync(vault As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ListKeysResponseMessage)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the keys, e.g. https://myvault.vault.azure.net
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: Maximum number of keys to return
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListKeysResponseMessage}
      description: A response message containing a list of keys in the vault along with a link to the next page of keys
  nameWithType.vb: KeyVaultClient.GetKeysAsync(String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysAsync(System.String, System.Nullable(Of System.Int32), CancellationToken)
  name.vb: GetKeysAsync(String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysNextAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysNextAsync(System.String,CancellationToken)
  id: GetKeysNextAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetKeysNextAsync(String, CancellationToken)
  nameWithType: KeyVaultClient.GetKeysNextAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysNextAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetKeysNextAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 494
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the next page of keys\n"
  example: []
  syntax:
    content: public Task<ListKeysResponseMessage> GetKeysNextAsync(string nextLink, CancellationToken cancellationToken = null)
    content.vb: Public Function GetKeysNextAsync(nextLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of ListKeysResponseMessage)
    parameters:
    - id: nextLink
      type: System.String
      description: nextLink value from a previous call to GetKeys or GetKeysNext
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListKeysResponseMessage}
      description: 
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  id: GetKeyVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetKeyVersionsAsync(String, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClient.GetKeyVersionsAsync(String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsAsync(System.String, System.String, System.Nullable<System.Int32>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetKeyVersionsAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 516
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of the specified key\n"
  example: []
  syntax:
    content: public Task<ListKeysResponseMessage> GetKeyVersionsAsync(string vault, string keyName, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetKeyVersionsAsync(vault As String, keyName As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ListKeysResponseMessage)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the key, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: Name of the key
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: Maximum number of keys to return
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListKeysResponseMessage}
      description: A response message containing a list of keys along with a link to the next page of keys
  nameWithType.vb: KeyVaultClient.GetKeyVersionsAsync(String, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsAsync(System.String, System.String, System.Nullable(Of System.Int32), CancellationToken)
  name.vb: GetKeyVersionsAsync(String, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsNextAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsNextAsync(System.String,CancellationToken)
  id: GetKeyVersionsNextAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetKeyVersionsNextAsync(String, CancellationToken)
  nameWithType: KeyVaultClient.GetKeyVersionsNextAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsNextAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetKeyVersionsNextAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 539
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the next page of key versions\n"
  example: []
  syntax:
    content: public Task<ListKeysResponseMessage> GetKeyVersionsNextAsync(string nextLink, CancellationToken cancellationToken = null)
    content.vb: Public Function GetKeyVersionsNextAsync(nextLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of ListKeysResponseMessage)
    parameters:
    - id: nextLink
      type: System.String
      description: nextLink value from a previous call to GetKeyVersions or GetKeyVersionsNext
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListKeysResponseMessage}
      description: A response message containing a list of keys along with a link to the next page of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.DeleteKeyAsync(System.String,System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteKeyAsync(System.String,System.String,CancellationToken)
  id: DeleteKeyAsync(System.String,System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: DeleteKeyAsync(String, String, CancellationToken)
  nameWithType: KeyVaultClient.DeleteKeyAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.DeleteKeyAsync(System.String, System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 560
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes the specified key\n"
  example: []
  syntax:
    content: public Task<KeyBundle> DeleteKeyAsync(string vault, string keyName, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteKeyAsync(vault As String, keyName As String, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: The public part of the deleted key
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String,System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String,System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  id: UpdateKeyAsync(System.String,System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: UpdateKeyAsync(String, String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClient.UpdateKeyAsync(String, String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String, System.String, System.String[], Microsoft.Azure.KeyVault.KeyAttributes, Dictionary<System.String, System.String>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 586
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the Key Attributes associated with the specified key\n"
  example: []
  syntax:
    content: public Task<KeyBundle> UpdateKeyAsync(string vault, string keyName, string[] keyOps = null, KeyAttributes attributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: Public Function UpdateKeyAsync(vault As String, keyName As String, keyOps As String() = Nothing, attributes As KeyAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: keyOps
      type: System.String[]
      description: Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.
    - id: attributes
      type: Microsoft.Azure.KeyVault.KeyAttributes
      description: The new attributes for the key. For more information on key attributes, see KeyAttributes.
    - id: tags
      type: Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: CancellationToken
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: 'The updated key '
  nameWithType.vb: KeyVaultClient.UpdateKeyAsync(String, String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String, System.String, System.String(), Microsoft.Azure.KeyVault.KeyAttributes, Dictionary(Of System.String, System.String), CancellationToken)
  name.vb: UpdateKeyAsync(String, String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  id: UpdateKeyAsync(System.String,System.String[],Microsoft.Azure.KeyVault.KeyAttributes,Dictionary{System.String,System.String},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: UpdateKeyAsync(String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClient.UpdateKeyAsync(String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String, System.String[], Microsoft.Azure.KeyVault.KeyAttributes, Dictionary<System.String, System.String>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 608
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the Key Attributes associated with the specified key\n"
  example: []
  syntax:
    content: public Task<KeyBundle> UpdateKeyAsync(string keyIdentifier, string[] keyOps = null, KeyAttributes attributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: Public Function UpdateKeyAsync(keyIdentifier As String, keyOps As String() = Nothing, attributes As KeyAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: keyIdentifier
      type: System.String
      description: The key identifier
    - id: keyOps
      type: System.String[]
      description: Json web key operations. For more information, see JsonWebKeyOperation.
    - id: attributes
      type: Microsoft.Azure.KeyVault.KeyAttributes
      description: The new attributes for the key. For more information on key attributes, see KeyAttributes.
    - id: tags
      type: Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: 'The updated key '
  nameWithType.vb: KeyVaultClient.UpdateKeyAsync(String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyAsync(System.String, System.String(), Microsoft.Azure.KeyVault.KeyAttributes, Dictionary(Of System.String, System.String), CancellationToken)
  name.vb: UpdateKeyAsync(String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyAsync(System.String,System.String,Microsoft.Azure.KeyVault.KeyBundle,System.Nullable{System.Boolean},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyAsync(System.String,System.String,Microsoft.Azure.KeyVault.KeyBundle,System.Nullable{System.Boolean},CancellationToken)
  id: ImportKeyAsync(System.String,System.String,Microsoft.Azure.KeyVault.KeyBundle,System.Nullable{System.Boolean},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: ImportKeyAsync(String, String, KeyBundle, Nullable<Boolean>, CancellationToken)
  nameWithType: KeyVaultClient.ImportKeyAsync(String, String, KeyBundle, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyAsync(System.String, System.String, Microsoft.Azure.KeyVault.KeyBundle, System.Nullable<System.Boolean>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ImportKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 634
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nImports a key into the specified vault\n"
  example: []
  syntax:
    content: public Task<KeyBundle> ImportKeyAsync(string vault, string keyName, KeyBundle keyBundle, bool ? importToHardware = null, CancellationToken cancellationToken = null)
    content.vb: Public Function ImportKeyAsync(vault As String, keyName As String, keyBundle As KeyBundle, importToHardware As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: keyBundle
      type: Microsoft.Azure.KeyVault.KeyBundle
      description: 'Key bundle '
    - id: importToHardware
      type: System.Nullable{System.Boolean}
      description: 'Whether to import as a hardware key (HSM) or software key '
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: 'Imported key bundle to the vault '
  nameWithType.vb: KeyVaultClient.ImportKeyAsync(String, String, KeyBundle, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyAsync(System.String, System.String, Microsoft.Azure.KeyVault.KeyBundle, System.Nullable(Of System.Boolean), CancellationToken)
  name.vb: ImportKeyAsync(String, String, KeyBundle, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.BackupKeyAsync(System.String,System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupKeyAsync(System.String,System.String,CancellationToken)
  id: BackupKeyAsync(System.String,System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: BackupKeyAsync(String, String, CancellationToken)
  nameWithType: KeyVaultClient.BackupKeyAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.BackupKeyAsync(System.String, System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BackupKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 667
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRequests that a backup of the specified key be downloaded to the client.\n"
  example: []
  syntax:
    content: public Task<byte[]> BackupKeyAsync(string vault, string keyName, CancellationToken cancellationToken = null)
    content.vb: Public Function BackupKeyAsync(vault As String, keyName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Byte())
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{System.Byte[]}
      description: The backup blob containing the backed up key
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyAsync(System.String,System.Byte[],CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyAsync(System.String,System.Byte[],CancellationToken)
  id: RestoreKeyAsync(System.String,System.Byte[],CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: RestoreKeyAsync(String, Byte[], CancellationToken)
  nameWithType: KeyVaultClient.RestoreKeyAsync(String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyAsync(System.String, System.Byte[], CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RestoreKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 693
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRestores the backup key in to a vault \n"
  example: []
  syntax:
    content: public Task<KeyBundle> RestoreKeyAsync(string vault, byte[] keyBundleBackup, CancellationToken cancellationToken = null)
    content.vb: Public Function RestoreKeyAsync(vault As String, keyBundleBackup As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyBundleBackup
      type: System.Byte[]
      description: 'the backup blob associated with a key bundle '
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.KeyBundle}
      description: 'Restored key bundle in the vault '
  nameWithType.vb: KeyVaultClient.RestoreKeyAsync(String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyAsync(System.String, System.Byte(), CancellationToken)
  name.vb: RestoreKeyAsync(String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String,System.String,System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String,System.String,System.String,CancellationToken)
  id: GetSecretAsync(System.String,System.String,System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetSecretAsync(String, String, String, CancellationToken)
  nameWithType: KeyVaultClient.GetSecretAsync(String, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String, System.String, System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 725
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a secret.\n"
  example: []
  syntax:
    content: public Task<Secret> GetSecretAsync(string vault, string secretName, string secretVersion = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetSecretAsync(vault As String, secretName As String, secretVersion As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Secret)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the secrets.
    - id: secretName
      type: System.String
      description: The name the secret in the given vault.
    - id: secretVersion
      type: System.String
      description: The version of the secret (optional)
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.Secret}
      description: A response message containing the secret
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String,CancellationToken)
  id: GetSecretAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetSecretAsync(String, CancellationToken)
  nameWithType: KeyVaultClient.GetSecretAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 744
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a secret.\n"
  example: []
  syntax:
    content: public Task<Secret> GetSecretAsync(string secretIdentifier, CancellationToken cancellationToken = null)
    content.vb: Public Function GetSecretAsync(secretIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of Secret)
    parameters:
    - id: secretIdentifier
      type: System.String
      description: The URL for the secret.
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.Secret}
      description: A response message containing the secret
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretAsync(System.String,System.String,System.String,Dictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.SecretAttributes,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretAsync(System.String,System.String,System.String,Dictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.SecretAttributes,CancellationToken)
  id: SetSecretAsync(System.String,System.String,System.String,Dictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.SecretAttributes,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: SetSecretAsync(String, String, String, Dictionary<String, String>, String, SecretAttributes, CancellationToken)
  nameWithType: KeyVaultClient.SetSecretAsync(String, String, String, Dictionary<String, String>, String, SecretAttributes, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretAsync(System.String, System.String, System.String, Dictionary<System.String, System.String>, System.String, Microsoft.Azure.KeyVault.SecretAttributes, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SetSecretAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 769
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nSets a secret in the specified vault.\n"
  example: []
  syntax:
    content: public Task<Secret> SetSecretAsync(string vault, string secretName, string value, Dictionary<string, string> tags = null, string contentType = null, SecretAttributes secretAttributes = null, CancellationToken cancellationToken = null)
    content.vb: Public Function SetSecretAsync(vault As String, secretName As String, value As String, tags As Dictionary(Of String, String) = Nothing, contentType As String = Nothing, secretAttributes As SecretAttributes = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Secret)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the secrets.
    - id: secretName
      type: System.String
      description: The name the secret in the given vault.
    - id: value
      type: System.String
      description: The value of the secret.
    - id: tags
      type: Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: contentType
      type: System.String
      description: 'Type of the secret value such as a password. '
    - id: secretAttributes
      type: Microsoft.Azure.KeyVault.SecretAttributes
      description: Attributes for the secret. For more information on possible attributes, see SecretAttributes.
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.Secret}
      description: A response message containing the updated secret
  nameWithType.vb: KeyVaultClient.SetSecretAsync(String, String, String, Dictionary(Of String, String), String, SecretAttributes, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretAsync(System.String, System.String, System.String, Dictionary(Of System.String, System.String), System.String, Microsoft.Azure.KeyVault.SecretAttributes, CancellationToken)
  name.vb: SetSecretAsync(String, String, String, Dictionary(Of String, String), String, SecretAttributes, CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  id: UpdateSecretAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: UpdateSecretAsync(String, String, String, SecretAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClient.UpdateSecretAsync(String, String, String, SecretAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String, System.String, System.String, Microsoft.Azure.KeyVault.SecretAttributes, Dictionary<System.String, System.String>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateSecretAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 801
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the attributes associated with the specified secret\n"
  example: []
  syntax:
    content: public Task<Secret> UpdateSecretAsync(string vault, string secretName, string contentType = null, SecretAttributes secretAttributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: Public Function UpdateSecretAsync(vault As String, secretName As String, contentType As String = Nothing, secretAttributes As SecretAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Secret)
    parameters:
    - id: vault
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: secretName
      type: System.String
      description: The name of the secret
    - id: contentType
      type: System.String
      description: Type of the secret value such as password.
    - id: secretAttributes
      type: Microsoft.Azure.KeyVault.SecretAttributes
      description: Attributes for the secret. For more information on possible attributes, see SecretAttributes.
    - id: tags
      type: Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.Secret}
      description: A response message containing the updated secret
  nameWithType.vb: KeyVaultClient.UpdateSecretAsync(String, String, String, SecretAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String, System.String, System.String, Microsoft.Azure.KeyVault.SecretAttributes, Dictionary(Of System.String, System.String), CancellationToken)
  name.vb: UpdateSecretAsync(String, String, String, SecretAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  id: UpdateSecretAsync(System.String,System.String,Microsoft.Azure.KeyVault.SecretAttributes,Dictionary{System.String,System.String},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: UpdateSecretAsync(String, String, SecretAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClient.UpdateSecretAsync(String, String, SecretAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String, System.String, Microsoft.Azure.KeyVault.SecretAttributes, Dictionary<System.String, System.String>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateSecretAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 828
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the attributes associated with the specified secret\n"
  example: []
  syntax:
    content: public Task<Secret> UpdateSecretAsync(string secretIdentifier, string contentType = null, SecretAttributes secretAttributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: Public Function UpdateSecretAsync(secretIdentifier As String, contentType As String = Nothing, secretAttributes As SecretAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Secret)
    parameters:
    - id: secretIdentifier
      type: System.String
      description: The URL of the secret
    - id: contentType
      type: System.String
      description: Type of the secret value such as password.
    - id: secretAttributes
      type: Microsoft.Azure.KeyVault.SecretAttributes
      description: Attributes for the secret. For more information on possible attributes, see SecretAttributes.
    - id: tags
      type: Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.Secret}
      description: A response message containing the updated secret
  nameWithType.vb: KeyVaultClient.UpdateSecretAsync(String, String, SecretAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretAsync(System.String, System.String, Microsoft.Azure.KeyVault.SecretAttributes, Dictionary(Of System.String, System.String), CancellationToken)
  name.vb: UpdateSecretAsync(String, String, SecretAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSecretAsync(System.String,System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSecretAsync(System.String,System.String,CancellationToken)
  id: DeleteSecretAsync(System.String,System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: DeleteSecretAsync(String, String, CancellationToken)
  nameWithType: KeyVaultClient.DeleteSecretAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSecretAsync(System.String, System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteSecretAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 852
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes a secret from the specified vault.\n"
  example: []
  syntax:
    content: public Task<Secret> DeleteSecretAsync(string vault, string secretName, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteSecretAsync(vault As String, secretName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Secret)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the secrets.
    - id: secretName
      type: System.String
      description: The name of the secret in the given vault.
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.Secret}
      description: The deleted secret
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  id: GetSecretsAsync(System.String,System.Nullable{System.Int32},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetSecretsAsync(String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClient.GetSecretsAsync(String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsAsync(System.String, System.Nullable<System.Int32>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretsAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 878
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList secrets in the specified vault\n"
  example: []
  syntax:
    content: public Task<ListSecretsResponseMessage> GetSecretsAsync(string vault, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetSecretsAsync(vault As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ListSecretsResponseMessage)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the secrets.
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: Maximum number of secrets to return
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListSecretsResponseMessage}
      description: A response message containing a list of secrets in the vault along with a link to the next page of secrets
  nameWithType.vb: KeyVaultClient.GetSecretsAsync(String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsAsync(System.String, System.Nullable(Of System.Int32), CancellationToken)
  name.vb: GetSecretsAsync(String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsNextAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsNextAsync(System.String,CancellationToken)
  id: GetSecretsNextAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetSecretsNextAsync(String, CancellationToken)
  nameWithType: KeyVaultClient.GetSecretsNextAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsNextAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretsNextAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 898
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the next page of secrets\n"
  example: []
  syntax:
    content: public Task<ListSecretsResponseMessage> GetSecretsNextAsync(string nextLink, CancellationToken cancellationToken = null)
    content.vb: Public Function GetSecretsNextAsync(nextLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of ListSecretsResponseMessage)
    parameters:
    - id: nextLink
      type: System.String
      description: nextLink value from a previous call to GetSecrets or GetSecretsNext
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListSecretsResponseMessage}
      description: A response message containing a list of secrets in the vault along with a link to the next page of secrets
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  id: GetSecretVersionsAsync(System.String,System.String,System.Nullable{System.Int32},CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetSecretVersionsAsync(String, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClient.GetSecretVersionsAsync(String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsAsync(System.String, System.String, System.Nullable<System.Int32>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretVersionsAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 920
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of a secret\n"
  example: []
  syntax:
    content: public Task<ListSecretsResponseMessage> GetSecretVersionsAsync(string vault, string secretName, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetSecretVersionsAsync(vault As String, secretName As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ListSecretsResponseMessage)
    parameters:
    - id: vault
      type: System.String
      description: The URL for the vault containing the secret
    - id: secretName
      type: System.String
      description: The name of the secret
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: Maximum number of secrets to return
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListSecretsResponseMessage}
      description: A response message containing a list of secrets along with a link to the next page of secrets
  nameWithType.vb: KeyVaultClient.GetSecretVersionsAsync(String, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsAsync(System.String, System.String, System.Nullable(Of System.Int32), CancellationToken)
  name.vb: GetSecretVersionsAsync(String, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsNextAsync(System.String,CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsNextAsync(System.String,CancellationToken)
  id: GetSecretVersionsNextAsync(System.String,CancellationToken)
  parent: Microsoft.Azure.KeyVault.KeyVaultClient
  langs:
  - csharp
  - vb
  name: GetSecretVersionsNextAsync(String, CancellationToken)
  nameWithType: KeyVaultClient.GetSecretVersionsNextAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsNextAsync(System.String, CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetSecretVersionsNextAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault/KeyVaultClient.cs
    startLine: 943
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the next page of versions of a secret\n"
  example: []
  syntax:
    content: public Task<ListSecretsResponseMessage> GetSecretVersionsNextAsync(string nextLink, CancellationToken cancellationToken = null)
    content.vb: Public Function GetSecretVersionsNextAsync(nextLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of ListSecretsResponseMessage)
    parameters:
    - id: nextLink
      type: System.String
      description: nextLink value from a previous call to GetSecretVersions or GetSecretVersionsNext
    - id: cancellationToken
      type: CancellationToken
      description: Optional cancellation token
    return:
      type: Task{Microsoft.Azure.KeyVault.ListSecretsResponseMessage}
      description: A response message containing a list of secrets in the vault along with a link to the next page of secrets
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  name: DecryptDataAsync(KeyBundle, String, Byte[])
  nameWithType: KeyVaultClientExtensions.DecryptDataAsync(KeyBundle, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.DecryptDataAsync(KeyBundle, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte())
  name.vb: DecryptDataAsync(KeyBundle, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  name: DecryptDataAsync(JsonWebKey, String, Byte[])
  nameWithType: KeyVaultClientExtensions.DecryptDataAsync(JsonWebKey, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.DecryptDataAsync(JsonWebKey, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte())
  name.vb: DecryptDataAsync(JsonWebKey, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  name: EncryptDataAsync(KeyBundle, String, Byte[])
  nameWithType: KeyVaultClientExtensions.EncryptDataAsync(KeyBundle, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.EncryptDataAsync(KeyBundle, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte())
  name.vb: EncryptDataAsync(KeyBundle, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  name: EncryptDataAsync(JsonWebKey, String, Byte[])
  nameWithType: KeyVaultClientExtensions.EncryptDataAsync(JsonWebKey, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.EncryptDataAsync(JsonWebKey, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte())
  name.vb: EncryptDataAsync(JsonWebKey, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  name: SignAsync(KeyBundle, String, Byte[])
  nameWithType: KeyVaultClientExtensions.SignAsync(KeyBundle, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.SignAsync(KeyBundle, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte())
  name.vb: SignAsync(KeyBundle, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  name: SignAsync(JsonWebKey, String, Byte[])
  nameWithType: KeyVaultClientExtensions.SignAsync(JsonWebKey, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.SignAsync(JsonWebKey, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte())
  name.vb: SignAsync(JsonWebKey, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  name: UnwrapKeyAsync(KeyBundle, Byte[], String)
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync(KeyBundle, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.UnwrapKeyAsync(KeyBundle, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle, System.Byte(), System.String)
  name.vb: UnwrapKeyAsync(KeyBundle, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  name: UnwrapKeyAsync(JsonWebKey, Byte[], String)
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync(JsonWebKey, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.UnwrapKeyAsync(JsonWebKey, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte(), System.String)
  name.vb: UnwrapKeyAsync(JsonWebKey, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
  name: VerifyAsync(KeyBundle, String, Byte[], Byte[])
  nameWithType: KeyVaultClientExtensions.VerifyAsync(KeyBundle, String, Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[], System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.VerifyAsync(KeyBundle, String, Byte(), Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte(), System.Byte())
  name.vb: VerifyAsync(KeyBundle, String, Byte(), Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
  name: VerifyAsync(JsonWebKey, String, Byte[], Byte[])
  nameWithType: KeyVaultClientExtensions.VerifyAsync(JsonWebKey, String, Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[], System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.VerifyAsync(JsonWebKey, String, Byte(), Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte(), System.Byte())
  name.vb: VerifyAsync(JsonWebKey, String, Byte(), Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  name: WrapKeyAsync(KeyBundle, Byte[], String)
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync(KeyBundle, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.WrapKeyAsync(KeyBundle, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle, System.Byte(), System.String)
  name.vb: WrapKeyAsync(KeyBundle, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  definition: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  name: WrapKeyAsync(JsonWebKey, Byte[], String)
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync(JsonWebKey, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.WrapKeyAsync(JsonWebKey, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte(), System.String)
  name.vb: WrapKeyAsync(JsonWebKey, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  name: MakeEnumeration<KeyVaultClient>()
  nameWithType: ObjectExtensions.MakeEnumeration<KeyVaultClient>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Azure.KeyVault.KeyVaultClient>()
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of KeyVaultClient)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Azure.KeyVault.KeyVaultClient)()
  name.vb: MakeEnumeration(Of KeyVaultClient)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration<KeyVaultClient>
    nameWithType: ObjectExtensions.MakeEnumeration<KeyVaultClient>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Azure.KeyVault.KeyVaultClient>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration(Of KeyVaultClient)
    nameWithType: ObjectExtensions.MakeEnumeration(Of KeyVaultClient)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Azure.KeyVault.KeyVaultClient)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  isExternal: true
  name: DecryptDataAsync(KeyVaultClient, KeyBundle, String, Byte[])
  nameWithType: KeyVaultClientExtensions.DecryptDataAsync(KeyVaultClient, KeyBundle, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.DecryptDataAsync(KeyVaultClient, KeyBundle, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte())
  name.vb: DecryptDataAsync(KeyVaultClient, KeyBundle, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyVaultClientExtensions
  nameWithType: KeyVaultClientExtensions
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  isExternal: true
  name: DecryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte[])
  nameWithType: KeyVaultClientExtensions.DecryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.DecryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte())
  name.vb: DecryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: DecryptDataAsync
    nameWithType: KeyVaultClientExtensions.DecryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  isExternal: true
  name: EncryptDataAsync(KeyVaultClient, KeyBundle, String, Byte[])
  nameWithType: KeyVaultClientExtensions.EncryptDataAsync(KeyVaultClient, KeyBundle, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.EncryptDataAsync(KeyVaultClient, KeyBundle, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte())
  name.vb: EncryptDataAsync(KeyVaultClient, KeyBundle, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  isExternal: true
  name: EncryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte[])
  nameWithType: KeyVaultClientExtensions.EncryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.EncryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte())
  name.vb: EncryptDataAsync(KeyVaultClient, JsonWebKey, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: EncryptDataAsync
    nameWithType: KeyVaultClientExtensions.EncryptDataAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
  isExternal: true
  name: SignAsync(KeyVaultClient, KeyBundle, String, Byte[])
  nameWithType: KeyVaultClientExtensions.SignAsync(KeyVaultClient, KeyBundle, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.SignAsync(KeyVaultClient, KeyBundle, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte())
  name.vb: SignAsync(KeyVaultClient, KeyBundle, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
  isExternal: true
  name: SignAsync(KeyVaultClient, JsonWebKey, String, Byte[])
  nameWithType: KeyVaultClientExtensions.SignAsync(KeyVaultClient, JsonWebKey, String, Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.SignAsync(KeyVaultClient, JsonWebKey, String, Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte())
  name.vb: SignAsync(KeyVaultClient, JsonWebKey, String, Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[])
    name: SignAsync
    nameWithType: KeyVaultClientExtensions.SignAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  isExternal: true
  name: UnwrapKeyAsync(KeyVaultClient, KeyBundle, Byte[], String)
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync(KeyVaultClient, KeyBundle, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.UnwrapKeyAsync(KeyVaultClient, KeyBundle, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.Byte(), System.String)
  name.vb: UnwrapKeyAsync(KeyVaultClient, KeyBundle, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  isExternal: true
  name: UnwrapKeyAsync(KeyVaultClient, JsonWebKey, Byte[], String)
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync(KeyVaultClient, JsonWebKey, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.UnwrapKeyAsync(KeyVaultClient, JsonWebKey, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte(), System.String)
  name.vb: UnwrapKeyAsync(KeyVaultClient, JsonWebKey, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: UnwrapKeyAsync
    nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
  isExternal: true
  name: VerifyAsync(KeyVaultClient, KeyBundle, String, Byte[], Byte[])
  nameWithType: KeyVaultClientExtensions.VerifyAsync(KeyVaultClient, KeyBundle, String, Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte[], System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.VerifyAsync(KeyVaultClient, KeyBundle, String, Byte(), Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.String, System.Byte(), System.Byte())
  name.vb: VerifyAsync(KeyVaultClient, KeyBundle, String, Byte(), Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
  isExternal: true
  name: VerifyAsync(KeyVaultClient, JsonWebKey, String, Byte[], Byte[])
  nameWithType: KeyVaultClientExtensions.VerifyAsync(KeyVaultClient, JsonWebKey, String, Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte[], System.Byte[])
  nameWithType.vb: KeyVaultClientExtensions.VerifyAsync(KeyVaultClient, JsonWebKey, String, Byte(), Byte())
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.String, System.Byte(), System.Byte())
  name.vb: VerifyAsync(KeyVaultClient, JsonWebKey, String, Byte(), Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.String,System.Byte[],System.Byte[])
    name: VerifyAsync
    nameWithType: KeyVaultClientExtensions.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
  isExternal: true
  name: WrapKeyAsync(KeyVaultClient, KeyBundle, Byte[], String)
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync(KeyVaultClient, KeyBundle, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.WrapKeyAsync(KeyVaultClient, KeyBundle, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.KeyBundle, System.Byte(), System.String)
  name.vb: WrapKeyAsync(KeyVaultClient, KeyBundle, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.KeyBundle,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
  isExternal: true
  name: WrapKeyAsync(KeyVaultClient, JsonWebKey, Byte[], String)
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync(KeyVaultClient, JsonWebKey, Byte[], String)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte[], System.String)
  nameWithType.vb: KeyVaultClientExtensions.WrapKeyAsync(KeyVaultClient, JsonWebKey, Byte(), String)
  fullname.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Byte(), System.String)
  name.vb: WrapKeyAsync(KeyVaultClient, JsonWebKey, Byte(), String)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.KeyVaultClient,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Byte[],System.String)
    name: WrapKeyAsync
    nameWithType: KeyVaultClientExtensions.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.KeyVault.KeyVaultClient
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: Microsoft.Azure.KeyVault.KeyVaultClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
    name: JsonWebKey
    nameWithType: JsonWebKey
    fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  isExternal: false
  name: MakeEnumeration<T>(T)
  nameWithType: ObjectExtensions.MakeEnumeration<T>(T)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>(T)
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of T)(T)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)(T)
  name.vb: MakeEnumeration(Of T)(T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration<T>
    nameWithType: ObjectExtensions.MakeEnumeration<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration(Of T)
    nameWithType: ObjectExtensions.MakeEnumeration(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyVaultClient.AuthenticationCallback
  nameWithType: KeyVaultClient.AuthenticationCallback
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback
- uid: HttpClient
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: HttpClient
- uid: Microsoft.Azure.KeyVault.KeyVaultCredential
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultCredential
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyVaultCredential
  nameWithType: KeyVaultCredential
  fullName: Microsoft.Azure.KeyVault.KeyVaultCredential
- uid: DelegatingHandler[]
  name: DelegatingHandler[]
  nameWithType: DelegatingHandler[]
  fullName: DelegatingHandler[]
  nameWithType.vb: DelegatingHandler()
  fullname.vb: DelegatingHandler()
  name.vb: DelegatingHandler()
  spec.csharp:
  - uid: DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task{Microsoft.Azure.KeyVault.KeyOperationResult}
  commentId: '!:Task{Microsoft.Azure.KeyVault.KeyOperationResult}'
  definition: Task`1
  name: Task<KeyOperationResult>
  nameWithType: Task<KeyOperationResult>
  fullName: Task<Microsoft.Azure.KeyVault.KeyOperationResult>
  nameWithType.vb: Task(Of KeyOperationResult)
  fullname.vb: Task(Of Microsoft.Azure.KeyVault.KeyOperationResult)
  name.vb: Task(Of KeyOperationResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.KeyOperationResult
    name: KeyOperationResult
    nameWithType: KeyOperationResult
    fullName: Microsoft.Azure.KeyVault.KeyOperationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.KeyOperationResult
    name: KeyOperationResult
    nameWithType: KeyOperationResult
    fullName: Microsoft.Azure.KeyVault.KeyOperationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.KeyVault.KeyAttributes
  commentId: T:Microsoft.Azure.KeyVault.KeyAttributes
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyAttributes
  nameWithType: KeyAttributes
  fullName: Microsoft.Azure.KeyVault.KeyAttributes
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullname.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Microsoft.Azure.KeyVault.KeyBundle}
  commentId: '!:Task{Microsoft.Azure.KeyVault.KeyBundle}'
  definition: Task`1
  name: Task<KeyBundle>
  nameWithType: Task<KeyBundle>
  fullName: Task<Microsoft.Azure.KeyVault.KeyBundle>
  nameWithType.vb: Task(Of KeyBundle)
  fullname.vb: Task(Of Microsoft.Azure.KeyVault.KeyBundle)
  name.vb: Task(Of KeyBundle)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.KeyBundle
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullname.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Microsoft.Azure.KeyVault.ListKeysResponseMessage}
  commentId: '!:Task{Microsoft.Azure.KeyVault.ListKeysResponseMessage}'
  definition: Task`1
  name: Task<ListKeysResponseMessage>
  nameWithType: Task<ListKeysResponseMessage>
  fullName: Task<Microsoft.Azure.KeyVault.ListKeysResponseMessage>
  nameWithType.vb: Task(Of ListKeysResponseMessage)
  fullname.vb: Task(Of Microsoft.Azure.KeyVault.ListKeysResponseMessage)
  name.vb: Task(Of ListKeysResponseMessage)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.ListKeysResponseMessage
    name: ListKeysResponseMessage
    nameWithType: ListKeysResponseMessage
    fullName: Microsoft.Azure.KeyVault.ListKeysResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.ListKeysResponseMessage
    name: ListKeysResponseMessage
    nameWithType: ListKeysResponseMessage
    fullName: Microsoft.Azure.KeyVault.ListKeysResponseMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyBundle
  commentId: T:Microsoft.Azure.KeyVault.KeyBundle
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyBundle
  nameWithType: KeyBundle
  fullName: Microsoft.Azure.KeyVault.KeyBundle
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.Byte[]}
  commentId: '!:Task{System.Byte[]}'
  definition: Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullname.vb: Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Microsoft.Azure.KeyVault.Secret}
  commentId: '!:Task{Microsoft.Azure.KeyVault.Secret}'
  definition: Task`1
  name: Task<Secret>
  nameWithType: Task<Secret>
  fullName: Task<Microsoft.Azure.KeyVault.Secret>
  nameWithType.vb: Task(Of Secret)
  fullname.vb: Task(Of Microsoft.Azure.KeyVault.Secret)
  name.vb: Task(Of Secret)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Secret
    name: Secret
    nameWithType: Secret
    fullName: Microsoft.Azure.KeyVault.Secret
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Secret
    name: Secret
    nameWithType: Secret
    fullName: Microsoft.Azure.KeyVault.Secret
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.SecretAttributes
  commentId: T:Microsoft.Azure.KeyVault.SecretAttributes
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: SecretAttributes
  nameWithType: SecretAttributes
  fullName: Microsoft.Azure.KeyVault.SecretAttributes
- uid: Task{Microsoft.Azure.KeyVault.ListSecretsResponseMessage}
  commentId: '!:Task{Microsoft.Azure.KeyVault.ListSecretsResponseMessage}'
  definition: Task`1
  name: Task<ListSecretsResponseMessage>
  nameWithType: Task<ListSecretsResponseMessage>
  fullName: Task<Microsoft.Azure.KeyVault.ListSecretsResponseMessage>
  nameWithType.vb: Task(Of ListSecretsResponseMessage)
  fullname.vb: Task(Of Microsoft.Azure.KeyVault.ListSecretsResponseMessage)
  name.vb: Task(Of ListSecretsResponseMessage)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.ListSecretsResponseMessage
    name: ListSecretsResponseMessage
    nameWithType: ListSecretsResponseMessage
    fullName: Microsoft.Azure.KeyVault.ListSecretsResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.ListSecretsResponseMessage
    name: ListSecretsResponseMessage
    nameWithType: ListSecretsResponseMessage
    fullName: Microsoft.Azure.KeyVault.ListSecretsResponseMessage
  - name: )
    nameWithType: )
    fullName: )
