### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  id: SubscriptionOperationsExtensions
  parent: Microsoft.WindowsAzure.Management
  children:
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperations(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperationsAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  - Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  langs:
  - csharp
  - vb
  name: SubscriptionOperationsExtensions
  nameWithType: SubscriptionOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionOperationsExtensions
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Service Management API provides programmatic access to much of the\nfunctionality available through the Management Portal. The Service\nManagement API is a REST API. All API operations are performed over\nSSL and are mutually authenticated using X.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class SubscriptionOperationsExtensions
    content.vb: Public Module SubscriptionOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  id: Get(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(ISubscriptionOperations)
  nameWithType: SubscriptionOperationsExtensions.Get(ISubscriptionOperations)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Get Subscription operation returns account and resource\nallocation information for the specified subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/hh403995.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static SubscriptionGetResponse Get(this ISubscriptionOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As ISubscriptionOperations) As SubscriptionGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
      description: "\nThe Get Subscription operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  id: GetAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(ISubscriptionOperations)
  nameWithType: SubscriptionOperationsExtensions.GetAsync(ISubscriptionOperations)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Get Subscription operation returns account and resource\nallocation information for the specified subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/hh403995.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<SubscriptionGetResponse> GetAsync(this ISubscriptionOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As ISubscriptionOperations) As Task(Of SubscriptionGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse}
      description: "\nThe Get Subscription operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperations(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperations(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  id: ListOperations(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListOperations(ISubscriptionOperations, SubscriptionListOperationsParameters)
  nameWithType: SubscriptionOperationsExtensions.ListOperations(ISubscriptionOperations, SubscriptionListOperationsParameters)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperations(Microsoft.WindowsAzure.Management.ISubscriptionOperations, Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListOperations
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe List Subscription Operations operation returns a list of\ncreate, update, and delete operations that were performed on a\nsubscription during the specified timeframe.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/gg715318.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static SubscriptionListOperationsResponse ListOperations(this ISubscriptionOperations operations, SubscriptionListOperationsParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListOperations(operations As ISubscriptionOperations, parameters As SubscriptionListOperationsParameters) As SubscriptionListOperationsResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters
      description: "\nRequired. Parameters supplied to the List Subscription Operations\noperation.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
      description: "\nThe List Subscription Operations operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperationsAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperationsAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  id: ListOperationsAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListOperationsAsync(ISubscriptionOperations, SubscriptionListOperationsParameters)
  nameWithType: SubscriptionOperationsExtensions.ListOperationsAsync(ISubscriptionOperations, SubscriptionListOperationsParameters)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.ListOperationsAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations, Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListOperationsAsync
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe List Subscription Operations operation returns a list of\ncreate, update, and delete operations that were performed on a\nsubscription during the specified timeframe.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/gg715318.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<SubscriptionListOperationsResponse> ListOperationsAsync(this ISubscriptionOperations operations, SubscriptionListOperationsParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListOperationsAsync(operations As ISubscriptionOperations, parameters As SubscriptionListOperationsParameters) As Task(Of SubscriptionListOperationsResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters
      description: "\nRequired. Parameters supplied to the List Subscription Operations\noperation.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse}
      description: "\nThe List Subscription Operations operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  id: RegisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegisterResource(ISubscriptionOperations, String)
  nameWithType: SubscriptionOperationsExtensions.RegisterResource(ISubscriptionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegisterResource
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 145
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nRegister a resource with your subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse RegisterResource(this ISubscriptionOperations operations, string resourceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterResource(operations As ISubscriptionOperations, resourceName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    - id: resourceName
      type: System.String
      description: "\nRequired. Name of the resource to register.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  id: RegisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegisterResourceAsync(ISubscriptionOperations, String)
  nameWithType: SubscriptionOperationsExtensions.RegisterResourceAsync(ISubscriptionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.RegisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegisterResourceAsync
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nRegister a resource with your subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> RegisterResourceAsync(this ISubscriptionOperations operations, string resourceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterResourceAsync(operations As ISubscriptionOperations, resourceName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    - id: resourceName
      type: System.String
      description: "\nRequired. Name of the resource to register.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  id: UnregisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: UnregisterResource(ISubscriptionOperations, String)
  nameWithType: SubscriptionOperationsExtensions.UnregisterResource(ISubscriptionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResource(Microsoft.WindowsAzure.Management.ISubscriptionOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnregisterResource
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nUnregister a resource with your subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse UnregisterResource(this ISubscriptionOperations operations, string resourceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnregisterResource(operations As ISubscriptionOperations, resourceName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    - id: resourceName
      type: System.String
      description: "\nRequired. Name of the resource to unregister.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  id: UnregisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions
  langs:
  - csharp
  - vb
  name: UnregisterResourceAsync(ISubscriptionOperations, String)
  nameWithType: SubscriptionOperationsExtensions.UnregisterResourceAsync(ISubscriptionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.SubscriptionOperationsExtensions.UnregisterResourceAsync(Microsoft.WindowsAzure.Management.ISubscriptionOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnregisterResourceAsync
    path: src/ServiceManagement/Management/Management/Generated/SubscriptionOperationsExtensions.cs
    startLine: 210
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nUnregister a resource with your subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> UnregisterResourceAsync(this ISubscriptionOperations operations, string resourceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnregisterResourceAsync(operations As ISubscriptionOperations, resourceName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ISubscriptionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ISubscriptionOperations.\n"
    - id: resourceName
      type: System.String
      description: "\nRequired. Name of the resource to unregister.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management
  commentId: N:Microsoft.WindowsAzure.Management
  isExternal: false
  name: Microsoft.WindowsAzure.Management
  nameWithType: Microsoft.WindowsAzure.Management
  fullName: Microsoft.WindowsAzure.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.ISubscriptionOperations
  commentId: T:Microsoft.WindowsAzure.Management.ISubscriptionOperations
  parent: Microsoft.WindowsAzure.Management
  isExternal: false
  name: ISubscriptionOperations
  nameWithType: ISubscriptionOperations
  fullName: Microsoft.WindowsAzure.Management.ISubscriptionOperations
- uid: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
  parent: Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: SubscriptionGetResponse
  nameWithType: SubscriptionGetResponse
  fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
- uid: Microsoft.WindowsAzure.Management.Models
  commentId: N:Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Models
  nameWithType: Microsoft.WindowsAzure.Management.Models
  fullName: Microsoft.WindowsAzure.Management.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SubscriptionGetResponse>
  nameWithType: Task<SubscriptionGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse>
  nameWithType.vb: Task(Of SubscriptionGetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse)
  name.vb: Task(Of SubscriptionGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
    name: SubscriptionGetResponse
    nameWithType: SubscriptionGetResponse
    fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
    name: SubscriptionGetResponse
    nameWithType: SubscriptionGetResponse
    fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters
  commentId: T:Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters
  parent: Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: SubscriptionListOperationsParameters
  nameWithType: SubscriptionListOperationsParameters
  fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsParameters
- uid: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
  commentId: T:Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
  parent: Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: SubscriptionListOperationsResponse
  nameWithType: SubscriptionListOperationsResponse
  fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SubscriptionListOperationsResponse>
  nameWithType: Task<SubscriptionListOperationsResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse>
  nameWithType.vb: Task(Of SubscriptionListOperationsResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse)
  name.vb: Task(Of SubscriptionListOperationsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
    name: SubscriptionListOperationsResponse
    nameWithType: SubscriptionListOperationsResponse
    fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
    name: SubscriptionListOperationsResponse
    nameWithType: SubscriptionListOperationsResponse
    fullName: Microsoft.WindowsAzure.Management.Models.SubscriptionListOperationsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
