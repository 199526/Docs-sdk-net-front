### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  id: ManagementCertificateOperationsExtensions
  parent: Microsoft.WindowsAzure.Management
  children:
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Create(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Get(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.List(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  - Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  langs:
  - csharp
  - vb
  name: ManagementCertificateOperationsExtensions
  nameWithType: ManagementCertificateOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagementCertificateOperationsExtensions
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Service Management API provides programmatic access to much of the\nfunctionality available through the Management Portal. The Service\nManagement API is a REST API. All API operations are performed over\nSSL and are mutually authenticated using X.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class ManagementCertificateOperationsExtensions
    content.vb: Public Module ManagementCertificateOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Create(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Create(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  id: Create(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IManagementCertificateOperations, ManagementCertificateCreateParameters)
  nameWithType: ManagementCertificateOperationsExtensions.Create(IManagementCertificateOperations, ManagementCertificateCreateParameters)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Create(Microsoft.WindowsAzure.Management.IManagementCertificateOperations, Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Create Management Certificate operation adds a certificate to\nthe list of management certificates. Management certificates,\nwhich are also known as subscription certificates, authenticate\nclients attempting to connect to resources associated with your\nAzure subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154123.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Create(this IManagementCertificateOperations operations, ManagementCertificateCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IManagementCertificateOperations, parameters As ManagementCertificateCreateParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters
      description: "\nRequired. Parameters supplied to the Create Management Certificate\noperation.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  id: CreateAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IManagementCertificateOperations, ManagementCertificateCreateParameters)
  nameWithType: ManagementCertificateOperationsExtensions.CreateAsync(IManagementCertificateOperations, ManagementCertificateCreateParameters)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.CreateAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations, Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Create Management Certificate operation adds a certificate to\nthe list of management certificates. Management certificates,\nwhich are also known as subscription certificates, authenticate\nclients attempting to connect to resources associated with your\nAzure subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154123.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> CreateAsync(this IManagementCertificateOperations operations, ManagementCertificateCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IManagementCertificateOperations, parameters As ManagementCertificateCreateParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters
      description: "\nRequired. Parameters supplied to the Create Management Certificate\noperation.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  id: Delete(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IManagementCertificateOperations, String)
  nameWithType: ManagementCertificateOperationsExtensions.Delete(IManagementCertificateOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.IManagementCertificateOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Delete Management Certificate operation deletes a certificate\nfrom the list of management certificates. Management certificates,\nwhich are also known as subscription certificates, authenticate\nclients attempting to connect to resources associated with your\nAzure subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154127.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Delete(this IManagementCertificateOperations operations, string thumbprint)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IManagementCertificateOperations, thumbprint As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    - id: thumbprint
      type: System.String
      description: "\nRequired. The thumbprint value of the certificate to delete.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  id: DeleteAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IManagementCertificateOperations, String)
  nameWithType: ManagementCertificateOperationsExtensions.DeleteAsync(IManagementCertificateOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Delete Management Certificate operation deletes a certificate\nfrom the list of management certificates. Management certificates,\nwhich are also known as subscription certificates, authenticate\nclients attempting to connect to resources associated with your\nAzure subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154127.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DeleteAsync(this IManagementCertificateOperations operations, string thumbprint)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IManagementCertificateOperations, thumbprint As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    - id: thumbprint
      type: System.String
      description: "\nRequired. The thumbprint value of the certificate to delete.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Get(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Get(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  id: Get(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IManagementCertificateOperations, String)
  nameWithType: ManagementCertificateOperationsExtensions.Get(IManagementCertificateOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.Get(Microsoft.WindowsAzure.Management.IManagementCertificateOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Get Management Certificate operation retrieves information\nabout the management certificate with the specified thumbprint.\nManagement certificates, which are also known as subscription\ncertificates, authenticate clients attempting to connect to\nresources associated with your Azure subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154131.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static ManagementCertificateGetResponse Get(this IManagementCertificateOperations operations, string thumbprint)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IManagementCertificateOperations, thumbprint As String) As ManagementCertificateGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    - id: thumbprint
      type: System.String
      description: "\nRequired. The thumbprint value of the certificate to retrieve\ninformation about.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
      description: "\nThe Get Management Certificate operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  id: GetAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IManagementCertificateOperations, String)
  nameWithType: ManagementCertificateOperationsExtensions.GetAsync(IManagementCertificateOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 200
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe Get Management Certificate operation retrieves information\nabout the management certificate with the specified thumbprint.\nManagement certificates, which are also known as subscription\ncertificates, authenticate clients attempting to connect to\nresources associated with your Azure subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154131.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<ManagementCertificateGetResponse> GetAsync(this IManagementCertificateOperations operations, string thumbprint)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IManagementCertificateOperations, thumbprint As String) As Task(Of ManagementCertificateGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    - id: thumbprint
      type: System.String
      description: "\nRequired. The thumbprint value of the certificate to retrieve\ninformation about.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse}
      description: "\nThe Get Management Certificate operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.List(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.List(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  id: List(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IManagementCertificateOperations)
  nameWithType: ManagementCertificateOperationsExtensions.List(IManagementCertificateOperations)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.List(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe List Management Certificates operation lists and returns basic\ninformation about all of the management certificates associated\nwith the specified subscription. Management certificates, which\nare also known as subscription certificates, authenticate clients\nattempting to connect to resources associated with your Azure\nsubscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154105.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static ManagementCertificateListResponse List(this IManagementCertificateOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IManagementCertificateOperations) As ManagementCertificateListResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
      description: "\nThe List Management Certificates operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  commentId: M:Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  id: ListAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IManagementCertificateOperations)
  nameWithType: ManagementCertificateOperationsExtensions.ListAsync(IManagementCertificateOperations)
  fullName: Microsoft.WindowsAzure.Management.ManagementCertificateOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.IManagementCertificateOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ServiceManagement/Management/Management/Generated/ManagementCertificateOperationsExtensions.cs
    startLine: 248
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management
  summary: "\nThe List Management Certificates operation lists and returns basic\ninformation about all of the management certificates associated\nwith the specified subscription. Management certificates, which\nare also known as subscription certificates, authenticate clients\nattempting to connect to resources associated with your Azure\nsubscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154105.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<ManagementCertificateListResponse> ListAsync(this IManagementCertificateOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IManagementCertificateOperations) As Task(Of ManagementCertificateListResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.IManagementCertificateOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse}
      description: "\nThe List Management Certificates operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management
  commentId: N:Microsoft.WindowsAzure.Management
  isExternal: false
  name: Microsoft.WindowsAzure.Management
  nameWithType: Microsoft.WindowsAzure.Management
  fullName: Microsoft.WindowsAzure.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
  commentId: T:Microsoft.WindowsAzure.Management.IManagementCertificateOperations
  parent: Microsoft.WindowsAzure.Management
  isExternal: false
  name: IManagementCertificateOperations
  nameWithType: IManagementCertificateOperations
  fullName: Microsoft.WindowsAzure.Management.IManagementCertificateOperations
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters
  parent: Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: ManagementCertificateCreateParameters
  nameWithType: ManagementCertificateCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateCreateParameters
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Microsoft.WindowsAzure.Management.Models
  commentId: N:Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Models
  nameWithType: Microsoft.WindowsAzure.Management.Models
  fullName: Microsoft.WindowsAzure.Management.Models
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
  parent: Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: ManagementCertificateGetResponse
  nameWithType: ManagementCertificateGetResponse
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ManagementCertificateGetResponse>
  nameWithType: Task<ManagementCertificateGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse>
  nameWithType.vb: Task(Of ManagementCertificateGetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse)
  name.vb: Task(Of ManagementCertificateGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
    name: ManagementCertificateGetResponse
    nameWithType: ManagementCertificateGetResponse
    fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
    name: ManagementCertificateGetResponse
    nameWithType: ManagementCertificateGetResponse
    fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
  commentId: T:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
  parent: Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: ManagementCertificateListResponse
  nameWithType: ManagementCertificateListResponse
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ManagementCertificateListResponse>
  nameWithType: Task<ManagementCertificateListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse>
  nameWithType.vb: Task(Of ManagementCertificateListResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse)
  name.vb: Task(Of ManagementCertificateListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
    name: ManagementCertificateListResponse
    nameWithType: ManagementCertificateListResponse
    fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
    name: ManagementCertificateListResponse
    nameWithType: ManagementCertificateListResponse
    fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse
  - name: )
    nameWithType: )
    fullName: )
