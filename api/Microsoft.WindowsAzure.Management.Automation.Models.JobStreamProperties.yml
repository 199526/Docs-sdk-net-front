### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  commentId: T:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  id: JobStreamProperties
  parent: Microsoft.WindowsAzure.Management.Automation.Models
  children:
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.#ctor
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.JobStreamId
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamText
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamType
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Summary
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Time
  - Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Value
  langs:
  - csharp
  - vb
  name: JobStreamProperties
  nameWithType: JobStreamProperties
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobStreamProperties
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nDefinition of the job stream.\n"
  example: []
  syntax:
    content: public class JobStreamProperties
    content.vb: Public Class JobStreamProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.JobStreamId
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.JobStreamId
  id: JobStreamId
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: JobStreamId
  nameWithType: JobStreamProperties.JobStreamId
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.JobStreamId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobStreamId
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the id of the job stream.\n"
  example: []
  syntax:
    content: public string JobStreamId { get; set; }
    content.vb: Public Property JobStreamId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamText
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamText
  id: StreamText
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: StreamText
  nameWithType: JobStreamProperties.StreamText
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamText
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StreamText
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the stream text.\n"
  example: []
  syntax:
    content: public string StreamText { get; set; }
    content.vb: Public Property StreamText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamType
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamType
  id: StreamType
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: StreamType
  nameWithType: JobStreamProperties.StreamType
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.StreamType
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StreamType
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the stream type.\n"
  example: []
  syntax:
    content: public string StreamType { get; set; }
    content.vb: Public Property StreamType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Summary
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Summary
  id: Summary
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: JobStreamProperties.Summary
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Summary
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Summary
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the summary.\n"
  example: []
  syntax:
    content: public string Summary { get; set; }
    content.vb: Public Property Summary As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Time
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Time
  id: Time
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: JobStreamProperties.Time
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Time
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Time
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the creation time of the job.\n"
  example: []
  syntax:
    content: public DateTimeOffset Time { get; set; }
    content.vb: Public Property Time As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Value
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Value
  id: Value
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: JobStreamProperties.Value
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.Value
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Value
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the values of the job stream.\n"
  example: []
  syntax:
    content: public IDictionary<string, object> Value { get; set; }
    content.vb: Public Property Value As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties
  langs:
  - csharp
  - vb
  name: JobStreamProperties()
  nameWithType: JobStreamProperties.JobStreamProperties()
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.JobStreamProperties.JobStreamProperties()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/JobStreamProperties.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nInitializes a new instance of the JobStreamProperties class.\n"
  example: []
  syntax:
    content: public JobStreamProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Automation.Models
  commentId: N:Microsoft.WindowsAzure.Management.Automation.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Automation.Models
  nameWithType: Microsoft.WindowsAzure.Management.Automation.Models
  fullName: Microsoft.WindowsAzure.Management.Automation.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
