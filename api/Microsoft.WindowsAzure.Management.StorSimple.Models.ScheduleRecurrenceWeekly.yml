### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly
  id: ScheduleRecurrenceWeekly
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.#ctor
  - Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.#ctor(System.Collections.Generic.List{System.DayOfWeek},Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType,System.Int32)
  - Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.WeekDays
  langs:
  - csharp
  - vb
  name: ScheduleRecurrenceWeekly
  nameWithType: ScheduleRecurrenceWeekly
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScheduleRecurrenceWeekly
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nBackup policy weekly recurring schedule.\n"
  example: []
  syntax:
    content: 'public class ScheduleRecurrenceWeekly : ScheduleRecurrence'
    content.vb: >-
      Public Class ScheduleRecurrenceWeekly
          Inherits ScheduleRecurrence
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence
  inheritedMembers:
  - Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceType
  - Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceValue
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.WeekDays
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.WeekDays
  id: WeekDays
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly
  langs:
  - csharp
  - vb
  name: WeekDays
  nameWithType: ScheduleRecurrenceWeekly.WeekDays
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.WeekDays
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WeekDays
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. The week days list for this recurrence.\n"
  example: []
  syntax:
    content: public IList<DayOfWeek> WeekDays { get; set; }
    content.vb: Public Property WeekDays As IList(Of DayOfWeek)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.DayOfWeek}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly
  langs:
  - csharp
  - vb
  name: ScheduleRecurrenceWeekly()
  nameWithType: ScheduleRecurrenceWeekly.ScheduleRecurrenceWeekly()
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.ScheduleRecurrenceWeekly()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the ScheduleRecurrenceWeekly class.\n"
  example: []
  syntax:
    content: public ScheduleRecurrenceWeekly()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.#ctor(System.Collections.Generic.List{System.DayOfWeek},Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.#ctor(System.Collections.Generic.List{System.DayOfWeek},Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType,System.Int32)
  id: '#ctor(System.Collections.Generic.List{System.DayOfWeek},Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType,System.Int32)'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly
  langs:
  - csharp
  - vb
  name: ScheduleRecurrenceWeekly(List<DayOfWeek>, RecurrenceType, Int32)
  nameWithType: ScheduleRecurrenceWeekly.ScheduleRecurrenceWeekly(List<DayOfWeek>, RecurrenceType, Int32)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.ScheduleRecurrenceWeekly(System.Collections.Generic.List<System.DayOfWeek>, Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/ScheduleRecurrenceWeekly.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the ScheduleRecurrenceWeekly class\nwith required arguments.\n"
  example: []
  syntax:
    content: public ScheduleRecurrenceWeekly(List<DayOfWeek> weekDays, RecurrenceType recurrenceType, int recurrenceValue)
    content.vb: Public Sub New(weekDays As List(Of DayOfWeek), recurrenceType As RecurrenceType, recurrenceValue As Integer)
    parameters:
    - id: weekDays
      type: System.Collections.Generic.List{System.DayOfWeek}
    - id: recurrenceType
      type: Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType
    - id: recurrenceValue
      type: System.Int32
  nameWithType.vb: ScheduleRecurrenceWeekly.ScheduleRecurrenceWeekly(List(Of DayOfWeek), RecurrenceType, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrenceWeekly.ScheduleRecurrenceWeekly(System.Collections.Generic.List(Of System.DayOfWeek), Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType, System.Int32)
  name.vb: ScheduleRecurrenceWeekly(List(Of DayOfWeek), RecurrenceType, Int32)
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: ScheduleRecurrence
  nameWithType: ScheduleRecurrence
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceType
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceType
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence
  isExternal: false
  name: RecurrenceType
  nameWithType: ScheduleRecurrence.RecurrenceType
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceType
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceValue
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceValue
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence
  isExternal: false
  name: RecurrenceValue
  nameWithType: ScheduleRecurrence.RecurrenceValue
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.ScheduleRecurrence.RecurrenceValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{System.DayOfWeek}
  commentId: T:System.Collections.Generic.IList{System.DayOfWeek}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<DayOfWeek>
  nameWithType: IList<DayOfWeek>
  fullName: System.Collections.Generic.IList<System.DayOfWeek>
  nameWithType.vb: IList(Of DayOfWeek)
  fullname.vb: System.Collections.Generic.IList(Of System.DayOfWeek)
  name.vb: IList(Of DayOfWeek)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{System.DayOfWeek}
  commentId: T:System.Collections.Generic.List{System.DayOfWeek}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DayOfWeek>
  nameWithType: List<DayOfWeek>
  fullName: System.Collections.Generic.List<System.DayOfWeek>
  nameWithType.vb: List(Of DayOfWeek)
  fullname.vb: System.Collections.Generic.List(Of System.DayOfWeek)
  name.vb: List(Of DayOfWeek)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: RecurrenceType
  nameWithType: RecurrenceType
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.RecurrenceType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
