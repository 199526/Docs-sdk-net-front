### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  id: SshSettingKeyPair
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Fingerprint
  - Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Path
  langs:
  - csharp
  - vb
  name: SshSettingKeyPair
  nameWithType: SshSettingKeyPair
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SshSettingKeyPair
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nContains an SSH key pair to be installed on the virtual machine.\n"
  example: []
  syntax:
    content: public class SshSettingKeyPair
    content.vb: Public Class SshSettingKeyPair
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Fingerprint
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Fingerprint
  id: Fingerprint
  parent: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  langs:
  - csharp
  - vb
  name: Fingerprint
  nameWithType: SshSettingKeyPair.Fingerprint
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Fingerprint
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Fingerprint
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nRequired. Specifies the SHA1 fingerprint of an X509 certificate\nassociated with the hosted service that includes the SSH key pair.\n"
  example: []
  syntax:
    content: public string Fingerprint { get; set; }
    content.vb: Public Property Fingerprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Path
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Path
  id: Path
  parent: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: SshSettingKeyPair.Path
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.Path
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Path
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nRequired. Specifies the full path of a file on the virtual machine\nwhich stores the SSH private key. The file is overwritten when\nmultiple keys are written to it. The SSH public key is stored in\nthe same directory and has the same name as the private key file\nwith .pub suffix. Example: /home/user/.ssh/id_rsa.\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  langs:
  - csharp
  - vb
  name: SshSettingKeyPair()
  nameWithType: SshSettingKeyPair.SshSettingKeyPair()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.SshSettingKeyPair()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the SshSettingKeyPair class.\n"
  example: []
  syntax:
    content: public SshSettingKeyPair()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair
  langs:
  - csharp
  - vb
  name: SshSettingKeyPair(String, String)
  nameWithType: SshSettingKeyPair.SshSettingKeyPair(String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.SshSettingKeyPair.SshSettingKeyPair(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/SshSettingKeyPair.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the SshSettingKeyPair class with\nrequired arguments.\n"
  example: []
  syntax:
    content: public SshSettingKeyPair(string fingerprint, string path)
    content.vb: Public Sub New(fingerprint As String, path As String)
    parameters:
    - id: fingerprint
      type: System.String
    - id: path
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
