items:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  id: DataLakeStoreFrontEndAdapter
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  children:
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient)
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient,CancellationToken)
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Concatenate(System.String,System.String[])
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.DeleteStream(System.String,System.Boolean)
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.GetStreamLength(System.String)
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.StreamExists(System.String)
  langs:
  - csharp
  - vb
  name: DataLakeStoreFrontEndAdapter
  nameWithType: DataLakeStoreFrontEndAdapter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DataLakeStoreFrontEndAdapter
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nA front end adapter that communicates with the DataLake Store.\nThis is a syncrhonous call adapter, which has certain efficiency limitations.\nIn the future, new adapters that are created should consider implementing the methods\nasynchronously.\n"
  example: []
  syntax:
    content: 'public class DataLakeStoreFrontEndAdapter : object, IFrontEndAdapter'
    content.vb: >-
      Public Class DataLakeStoreFrontEndAdapter
          Inherits Object
          Implements IFrontEndAdapter
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient)
  id: '#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient)'
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: DataLakeStoreFrontEndAdapter(String, IDataLakeStoreFileSystemManagementClient)
  nameWithType: DataLakeStoreFrontEndAdapter.DataLakeStoreFrontEndAdapter(String, IDataLakeStoreFileSystemManagementClient)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.DataLakeStoreFrontEndAdapter(System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DataLakeStoreFrontEndAdapter(string accountName, IDataLakeStoreFileSystemManagementClient client)
    content.vb: Public Sub New(accountName As String, client As IDataLakeStoreFileSystemManagementClient)
    parameters:
    - id: accountName
      type: System.String
      description: Name of the account.
    - id: client
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient
      description: The client.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient,CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient,CancellationToken)
  id: '#ctor(System.String,Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient,CancellationToken)'
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: DataLakeStoreFrontEndAdapter(String, IDataLakeStoreFileSystemManagementClient, CancellationToken)
  nameWithType: DataLakeStoreFrontEndAdapter.DataLakeStoreFrontEndAdapter(String, IDataLakeStoreFileSystemManagementClient, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.DataLakeStoreFrontEndAdapter(System.String, Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient, CancellationToken)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DataLakeStoreFrontEndAdapter(string accountName, IDataLakeStoreFileSystemManagementClient client, CancellationToken token)
    content.vb: Public Sub New(accountName As String, client As IDataLakeStoreFileSystemManagementClient, token As CancellationToken)
    parameters:
    - id: accountName
      type: System.String
      description: Name of the account.
    - id: client
      type: Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient
      description: The client.
    - id: token
      type: CancellationToken
      description: The token.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  id: CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: CreateStream(String, Boolean, Byte[], Int32)
  nameWithType: DataLakeStoreFrontEndAdapter.CreateStream(String, Boolean, Byte[], Int32)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.CreateStream(System.String, System.Boolean, System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateStream
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nCreates a new, empty stream at the given path.\n"
  example: []
  syntax:
    content: public void CreateStream(string streamPath, bool overwrite, byte[] data, int byteCount)
    content.vb: Public Sub CreateStream(streamPath As String, overwrite As Boolean, data As Byte(), byteCount As Integer)
    parameters:
    - id: streamPath
      type: System.String
      description: The relative path to the stream.
    - id: overwrite
      type: System.Boolean
      description: Whether to overwrite an existing stream.
    - id: data
      type: System.Byte[]
      description: 
    - id: byteCount
      type: System.Int32
      description: 
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  nameWithType.vb: DataLakeStoreFrontEndAdapter.CreateStream(String, Boolean, Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.CreateStream(System.String, System.Boolean, System.Byte(), System.Int32)
  name.vb: CreateStream(String, Boolean, Byte(), Int32)
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.DeleteStream(System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.DeleteStream(System.String,System.Boolean)
  id: DeleteStream(System.String,System.Boolean)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: DeleteStream(String, Boolean)
  nameWithType: DataLakeStoreFrontEndAdapter.DeleteStream(String, Boolean)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.DeleteStream(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DeleteStream
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nDeletes an existing stream at the given path.\n"
  example: []
  syntax:
    content: public void DeleteStream(string streamPath, bool recurse = false)
    content.vb: Public Sub DeleteStream(streamPath As String, recurse As Boolean = False)
    parameters:
    - id: streamPath
      type: System.String
      description: The relative path to the stream.
    - id: recurse
      type: System.Boolean
      description: if set to <code>true</code> [recurse]. This is used for folder streams only.
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  id: AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: AppendToStream(String, Byte[], Int64, Int32)
  nameWithType: DataLakeStoreFrontEndAdapter.AppendToStream(String, Byte[], Int64, Int32)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.AppendToStream(System.String, System.Byte[], System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: AppendToStream
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nAppends to stream.\n"
  example: []
  syntax:
    content: public void AppendToStream(string streamPath, byte[] data, long offset, int byteCount)
    content.vb: Public Sub AppendToStream(streamPath As String, data As Byte(), offset As Long, byteCount As Integer)
    parameters:
    - id: streamPath
      type: System.String
      description: The stream path.
    - id: data
      type: System.Byte[]
      description: The data.
    - id: offset
      type: System.Int64
      description: The offset.
    - id: byteCount
      type: System.Int32
      description: The byte count.
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  nameWithType.vb: DataLakeStoreFrontEndAdapter.AppendToStream(String, Byte(), Int64, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.AppendToStream(System.String, System.Byte(), System.Int64, System.Int32)
  name.vb: AppendToStream(String, Byte(), Int64, Int32)
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.StreamExists(System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.StreamExists(System.String)
  id: StreamExists(System.String)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: StreamExists(String)
  nameWithType: DataLakeStoreFrontEndAdapter.StreamExists(String)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.StreamExists(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: StreamExists
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nDetermines if the stream with given path exists.\n"
  example: []
  syntax:
    content: public bool StreamExists(string streamPath)
    content.vb: Public Function StreamExists(streamPath As String) As Boolean
    parameters:
    - id: streamPath
      type: System.String
      description: The relative path to the stream.
    return:
      type: System.Boolean
      description: "\nTrue if the stream exists, false otherwise.\n"
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.GetStreamLength(System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.GetStreamLength(System.String)
  id: GetStreamLength(System.String)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: GetStreamLength(String)
  nameWithType: DataLakeStoreFrontEndAdapter.GetStreamLength(String)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.GetStreamLength(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetStreamLength
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nGets a value indicating the length of a stream, in bytes.\n"
  example: []
  syntax:
    content: public long GetStreamLength(string streamPath)
    content.vb: Public Function GetStreamLength(streamPath As String) As Long
    parameters:
    - id: streamPath
      type: System.String
      description: The relative path to the stream.
    return:
      type: System.Int64
      description: "\nThe length of the stream, in bytes.\n"
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Concatenate(System.String,System.String[])
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Concatenate(System.String,System.String[])
  id: Concatenate(System.String,System.String[])
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  langs:
  - csharp
  - vb
  name: Concatenate(String, String[])
  nameWithType: DataLakeStoreFrontEndAdapter.Concatenate(String, String[])
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Concatenate(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Concatenate
    path: src/ResourceManagement/DataLake.StoreUploader/DataLakeStoreUploader/DataLakeStoreUploader/DataLakeStoreFrontEndAdapter.cs
    startLine: 221
  assemblies:
  - Microsoft.Azure.Management.DataLake.StoreUploader
  namespace: Microsoft.Azure.Management.DataLake.StoreUploader
  summary: "\nConcatenates the given input streams (in order) into the given target stream.\nAt the end of this operation, input streams will be deleted.\n"
  example: []
  syntax:
    content: public void Concatenate(string targetStreamPath, string[] inputStreamPaths)
    content.vb: Public Sub Concatenate(targetStreamPath As String, inputStreamPaths As String())
    parameters:
    - id: targetStreamPath
      type: System.String
      description: The relative path to the target stream.
    - id: inputStreamPaths
      type: System.String[]
      description: An ordered array of paths to the input streams.
  implements:
  - Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String,System.String[])
  nameWithType.vb: DataLakeStoreFrontEndAdapter.Concatenate(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Concatenate(System.String, System.String())
  name.vb: Concatenate(String, String())
references:
- uid: Microsoft.Azure.Management.DataLake.StoreUploader
  commentId: N:Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreUploader
  nameWithType: Microsoft.Azure.Management.DataLake.StoreUploader
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  parent: Microsoft.Azure.Management.DataLake.StoreUploader
  isExternal: false
  name: IFrontEndAdapter
  nameWithType: IFrontEndAdapter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  name: MakeEnumeration<DataLakeStoreFrontEndAdapter>()
  nameWithType: ObjectExtensions.MakeEnumeration<DataLakeStoreFrontEndAdapter>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter>()
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of DataLakeStoreFrontEndAdapter)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter)()
  name.vb: MakeEnumeration(Of DataLakeStoreFrontEndAdapter)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration<DataLakeStoreFrontEndAdapter>
    nameWithType: ObjectExtensions.MakeEnumeration<DataLakeStoreFrontEndAdapter>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration(Of DataLakeStoreFrontEndAdapter)
    nameWithType: ObjectExtensions.MakeEnumeration(Of DataLakeStoreFrontEndAdapter)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  isExternal: false
  name: MakeEnumeration<T>(T)
  nameWithType: ObjectExtensions.MakeEnumeration<T>(T)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>(T)
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of T)(T)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)(T)
  name.vb: MakeEnumeration(Of T)(T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration<T>
    nameWithType: ObjectExtensions.MakeEnumeration<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration(Of T)
    nameWithType: ObjectExtensions.MakeEnumeration(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  commentId: T:Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
  isExternal: false
  name: DataLakeStoreFrontEndAdapter
  nameWithType: DataLakeStoreFrontEndAdapter
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.DataLakeStoreFrontEndAdapter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient
  commentId: T:Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient
  parent: Microsoft.Azure.Management.DataLake.StoreFileSystem
  isExternal: false
  name: IDataLakeStoreFileSystemManagementClient
  nameWithType: IDataLakeStoreFileSystemManagementClient
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem.IDataLakeStoreFileSystemManagementClient
- uid: Microsoft.Azure.Management.DataLake.StoreFileSystem
  commentId: N:Microsoft.Azure.Management.DataLake.StoreFileSystem
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.StoreFileSystem
  nameWithType: Microsoft.Azure.Management.DataLake.StoreFileSystem
  fullName: Microsoft.Azure.Management.DataLake.StoreFileSystem
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  isExternal: true
  name: CreateStream(String, Boolean, Byte[], Int32)
  nameWithType: IFrontEndAdapter.CreateStream(String, Boolean, Byte[], Int32)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String, System.Boolean, System.Byte[], System.Int32)
  nameWithType.vb: IFrontEndAdapter.CreateStream(String, Boolean, Byte(), Int32)
  fullname.vb: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String, System.Boolean, System.Byte(), System.Int32)
  name.vb: CreateStream(String, Boolean, Byte(), Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
    name: CreateStream
    nameWithType: IFrontEndAdapter.CreateStream
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)
    name: CreateStream
    nameWithType: IFrontEndAdapter.CreateStream
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.CreateStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream(System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream(System.String,System.Boolean)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  isExternal: true
  name: DeleteStream(String, Boolean)
  nameWithType: IFrontEndAdapter.DeleteStream(String, Boolean)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream(System.String,System.Boolean)
    name: DeleteStream
    nameWithType: IFrontEndAdapter.DeleteStream
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream(System.String,System.Boolean)
    name: DeleteStream
    nameWithType: IFrontEndAdapter.DeleteStream
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.DeleteStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  isExternal: true
  name: AppendToStream(String, Byte[], Int64, Int32)
  nameWithType: IFrontEndAdapter.AppendToStream(String, Byte[], Int64, Int32)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String, System.Byte[], System.Int64, System.Int32)
  nameWithType.vb: IFrontEndAdapter.AppendToStream(String, Byte(), Int64, Int32)
  fullname.vb: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String, System.Byte(), System.Int64, System.Int32)
  name.vb: AppendToStream(String, Byte(), Int64, Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
    name: AppendToStream
    nameWithType: IFrontEndAdapter.AppendToStream
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)
    name: AppendToStream
    nameWithType: IFrontEndAdapter.AppendToStream
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.AppendToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists(System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists(System.String)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  isExternal: true
  name: StreamExists(String)
  nameWithType: IFrontEndAdapter.StreamExists(String)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists(System.String)
    name: StreamExists
    nameWithType: IFrontEndAdapter.StreamExists
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists(System.String)
    name: StreamExists
    nameWithType: IFrontEndAdapter.StreamExists
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.StreamExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength(System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength(System.String)
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  isExternal: true
  name: GetStreamLength(String)
  nameWithType: IFrontEndAdapter.GetStreamLength(String)
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength(System.String)
    name: GetStreamLength
    nameWithType: IFrontEndAdapter.GetStreamLength
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength(System.String)
    name: GetStreamLength
    nameWithType: IFrontEndAdapter.GetStreamLength
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.GetStreamLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String,System.String[])
  commentId: M:Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String,System.String[])
  parent: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter
  isExternal: true
  name: Concatenate(String, String[])
  nameWithType: IFrontEndAdapter.Concatenate(String, String[])
  fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String, System.String[])
  nameWithType.vb: IFrontEndAdapter.Concatenate(String, String())
  fullname.vb: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String, System.String())
  name.vb: Concatenate(String, String())
  spec.csharp:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String,System.String[])
    name: Concatenate
    nameWithType: IFrontEndAdapter.Concatenate
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate(System.String,System.String[])
    name: Concatenate
    nameWithType: IFrontEndAdapter.Concatenate
    fullName: Microsoft.Azure.Management.DataLake.StoreUploader.IFrontEndAdapter.Concatenate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
