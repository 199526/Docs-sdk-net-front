### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  commentId: T:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  id: ManagementCertificateListResponse.SubscriptionCertificate
  parent: Microsoft.WindowsAzure.Management.Models
  children:
  - Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.#ctor
  - Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Created
  - Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Data
  - Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.PublicKey
  - Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Thumbprint
  langs:
  - csharp
  - vb
  name: ManagementCertificateListResponse.SubscriptionCertificate
  nameWithType: ManagementCertificateListResponse.SubscriptionCertificate
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionCertificate
    path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nA management certificate that is valid for your subscription.\n"
  example: []
  syntax:
    content: public class SubscriptionCertificate
    content.vb: Public Class SubscriptionCertificate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Created
  commentId: P:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Created
  id: Created
  parent: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: ManagementCertificateListResponse.SubscriptionCertificate.Created
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Created
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Created
    path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. The time that the management certificate was created,\nin UTC.\n"
  example: []
  syntax:
    content: public DateTime Created { get; set; }
    content.vb: Public Property Created As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Data
  commentId: P:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Data
  id: Data
  parent: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ManagementCertificateListResponse.SubscriptionCertificate.Data
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Data
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Data
    path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. A base-64 representation of the data contained in the\nmanagement certificate, in cer format.\n"
  example: []
  syntax:
    content: public byte[] Data { get; set; }
    content.vb: Public Property Data As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.PublicKey
  commentId: P:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.PublicKey
  id: PublicKey
  parent: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: ManagementCertificateListResponse.SubscriptionCertificate.PublicKey
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.PublicKey
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PublicKey
    path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. A base-64 representation of the management\ncertificate public key.\n"
  example: []
  syntax:
    content: public byte[] PublicKey { get; set; }
    content.vb: Public Property PublicKey As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Thumbprint
  commentId: P:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Thumbprint
  id: Thumbprint
  parent: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: ManagementCertificateListResponse.SubscriptionCertificate.Thumbprint
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.Thumbprint
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. The X509 certificate thumbprint property of the\nmanagement certificate. This thumbprint uniquely identifies\nthe certificate.\n"
  example: []
  syntax:
    content: public string Thumbprint { get; set; }
    content.vb: Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate
  langs:
  - csharp
  - vb
  name: SubscriptionCertificate()
  nameWithType: ManagementCertificateListResponse.SubscriptionCertificate.SubscriptionCertificate()
  fullName: Microsoft.WindowsAzure.Management.Models.ManagementCertificateListResponse.SubscriptionCertificate.SubscriptionCertificate()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Management/Management/Generated/Models/ManagementCertificateListResponse.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nInitializes a new instance of the SubscriptionCertificate class.\n"
  example: []
  syntax:
    content: public SubscriptionCertificate()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Models
  commentId: N:Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Models
  nameWithType: Microsoft.WindowsAzure.Management.Models
  fullName: Microsoft.WindowsAzure.Management.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
