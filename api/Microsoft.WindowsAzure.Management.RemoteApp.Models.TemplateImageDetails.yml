### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  id: TemplateImageDetails
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.#ctor
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Id
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Name
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Region
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SizeInGB
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SourceImageSasUri
  langs:
  - csharp
  - vb
  name: TemplateImageDetails
  nameWithType: TemplateImageDetails
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TemplateImageDetails
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nDetails required to create or set a template image.\n"
  example: []
  syntax:
    content: public class TemplateImageDetails
    content.vb: Public Class TemplateImageDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Id
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Id
  id: Id
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TemplateImageDetails.Id
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Id
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The unique identifier for the image. This is only\nrequired to update an existing template image.  Leave this blank\nto create a new template image.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Name
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TemplateImageDetails.Name
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nRequired. The friendly name for the image.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Region
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Region
  id: Region
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: TemplateImageDetails.Region
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.Region
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Region
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nRequired. The region where the image will be used. The region can\nnot be changed once a template image has been created.  Leave this\nblank if you want to update an existing template image.\n"
  example: []
  syntax:
    content: public string Region { get; set; }
    content.vb: Public Property Region As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SizeInGB
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SizeInGB
  id: SizeInGB
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: SizeInGB
  nameWithType: TemplateImageDetails.SizeInGB
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SizeInGB
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SizeInGB
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The size of this VHD.\n"
  example: []
  syntax:
    content: public int SizeInGB { get; set; }
    content.vb: Public Property SizeInGB As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SourceImageSasUri
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SourceImageSasUri
  id: SourceImageSasUri
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: SourceImageSasUri
  nameWithType: TemplateImageDetails.SourceImageSasUri
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.SourceImageSasUri
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceImageSasUri
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The URI with shared access signature (SAS) of the source\nimage.If this parameter is specified the RemoteApp service will\ncopy the specified image blob to its internal storage.\n"
  example: []
  syntax:
    content: public string SourceImageSasUri { get; set; }
    content.vb: Public Property SourceImageSasUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: TemplateImageDetails()
  nameWithType: TemplateImageDetails.TemplateImageDetails()
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.TemplateImageDetails()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the TemplateImageDetails class.\n"
  example: []
  syntax:
    content: public TemplateImageDetails()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails
  langs:
  - csharp
  - vb
  name: TemplateImageDetails(String, String)
  nameWithType: TemplateImageDetails.TemplateImageDetails(String, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.TemplateImageDetails.TemplateImageDetails(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/TemplateImageDetails.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the TemplateImageDetails class with\nrequired arguments.\n"
  example: []
  syntax:
    content: public TemplateImageDetails(string name, string region)
    content.vb: Public Sub New(name As String, region As String)
    parameters:
    - id: name
      type: System.String
    - id: region
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp.Models
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp.Models
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
