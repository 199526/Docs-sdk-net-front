### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  id: ServerCreateParameters
  parent: Microsoft.WindowsAzure.Management.Sql.Models
  children:
  - Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.#ctor(System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorPassword
  - Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorUserName
  - Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Location
  - Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Version
  langs:
  - csharp
  - vb
  name: ServerCreateParameters
  nameWithType: ServerCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerCreateParameters
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nThe parameters that are used by the service to provision a server.  The\nparameters marked optional are not required by the service.\n"
  example: []
  syntax:
    content: public class ServerCreateParameters
    content.vb: Public Class ServerCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorPassword
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorPassword
  id: AdministratorPassword
  parent: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  langs:
  - csharp
  - vb
  name: AdministratorPassword
  nameWithType: ServerCreateParameters.AdministratorPassword
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorPassword
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdministratorPassword
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nRequired. Gets or sets the administrator password for the new\nserver.\n"
  example: []
  syntax:
    content: public string AdministratorPassword { get; set; }
    content.vb: Public Property AdministratorPassword As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorUserName
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorUserName
  id: AdministratorUserName
  parent: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  langs:
  - csharp
  - vb
  name: AdministratorUserName
  nameWithType: ServerCreateParameters.AdministratorUserName
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.AdministratorUserName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdministratorUserName
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nRequired. Gets or sets the administrator username that will be used\nfor the new server.\n"
  example: []
  syntax:
    content: public string AdministratorUserName { get; set; }
    content.vb: Public Property AdministratorUserName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Location
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Location
  id: Location
  parent: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: ServerCreateParameters.Location
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Location
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nRequired. Gets or sets the region in which this server will be\ncreated.  See http://azure.microsoft.com/en-us/regions/#services\nfor a list of all the available regions.\n"
  example: []
  syntax:
    content: public string Location { get; set; }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Version
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Version
  id: Version
  parent: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ServerCreateParameters.Version
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.Version
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Version
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the version of server to create.  Valid\nvalues are: 1.0, 2.0.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  langs:
  - csharp
  - vb
  name: ServerCreateParameters()
  nameWithType: ServerCreateParameters.ServerCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.ServerCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nInitializes a new instance of the ServerCreateParameters class.\n"
  example: []
  syntax:
    content: public ServerCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters
  langs:
  - csharp
  - vb
  name: ServerCreateParameters(String, String, String)
  nameWithType: ServerCreateParameters.ServerCreateParameters(String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.ServerCreateParameters.ServerCreateParameters(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/ServerCreateParameters.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nInitializes a new instance of the ServerCreateParameters class with\nrequired arguments.\n"
  example: []
  syntax:
    content: public ServerCreateParameters(string administratorUserName, string administratorPassword, string location)
    content.vb: Public Sub New(administratorUserName As String, administratorPassword As String, location As String)
    parameters:
    - id: administratorUserName
      type: System.String
    - id: administratorPassword
      type: System.String
    - id: location
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Sql.Models
  commentId: N:Microsoft.WindowsAzure.Management.Sql.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Sql.Models
  nameWithType: Microsoft.WindowsAzure.Management.Sql.Models
  fullName: Microsoft.WindowsAzure.Management.Sql.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
