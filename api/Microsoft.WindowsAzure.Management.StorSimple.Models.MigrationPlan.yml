### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  id: MigrationPlan
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.#ctor
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.#ctor(System.String,System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo})
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.ConfigId
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.DeviceName
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlanInfo
  langs:
  - csharp
  - vb
  name: MigrationPlan
  nameWithType: MigrationPlan
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationPlan
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nMigration plan class\n"
  example: []
  syntax:
    content: public class MigrationPlan
    content.vb: Public Class MigrationPlan
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.ConfigId
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.ConfigId
  id: ConfigId
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  langs:
  - csharp
  - vb
  name: ConfigId
  nameWithType: MigrationPlan.ConfigId
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.ConfigId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConfigId
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets the config ID passed while importing the\nconfig\n"
  example: []
  syntax:
    content: public string ConfigId { get; set; }
    content.vb: Public Property ConfigId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.DeviceName
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.DeviceName
  id: DeviceName
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  langs:
  - csharp
  - vb
  name: DeviceName
  nameWithType: MigrationPlan.DeviceName
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.DeviceName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeviceName
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets the target devicename where the migration\nplan is computed\n"
  example: []
  syntax:
    content: public string DeviceName { get; set; }
    content.vb: Public Property DeviceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlanInfo
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlanInfo
  id: MigrationPlanInfo
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  langs:
  - csharp
  - vb
  name: MigrationPlanInfo
  nameWithType: MigrationPlan.MigrationPlanInfo
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlanInfo
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationPlanInfo
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets list of migration plans for all data\ncontainer specified in the config imported\n"
  example: []
  syntax:
    content: public IList<MigrationPlanInfo> MigrationPlanInfo { get; set; }
    content.vb: Public Property MigrationPlanInfo As IList(Of MigrationPlanInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  langs:
  - csharp
  - vb
  name: MigrationPlan()
  nameWithType: MigrationPlan.MigrationPlan()
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlan()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the MigrationPlan class.\n"
  example: []
  syntax:
    content: public MigrationPlan()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.#ctor(System.String,System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo})
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.#ctor(System.String,System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo})
  id: '#ctor(System.String,System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo})'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan
  langs:
  - csharp
  - vb
  name: MigrationPlan(String, String, List<MigrationPlanInfo>)
  nameWithType: MigrationPlan.MigrationPlan(String, String, List<MigrationPlanInfo>)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlan(System.String, System.String, System.Collections.Generic.List<Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo>)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationPlan.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the MigrationPlan class with required\narguments.\n"
  example: []
  syntax:
    content: public MigrationPlan(string configId, string deviceName, List<MigrationPlanInfo> migrationPlanInfo)
    content.vb: Public Sub New(configId As String, deviceName As String, migrationPlanInfo As List(Of MigrationPlanInfo))
    parameters:
    - id: configId
      type: System.String
    - id: deviceName
      type: System.String
    - id: migrationPlanInfo
      type: System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo}
  nameWithType.vb: MigrationPlan.MigrationPlan(String, String, List(Of MigrationPlanInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlan.MigrationPlan(System.String, System.String, System.Collections.Generic.List(Of Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo))
  name.vb: MigrationPlan(String, String, List(Of MigrationPlanInfo))
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo}
  commentId: T:System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MigrationPlanInfo>
  nameWithType: IList<MigrationPlanInfo>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo>
  nameWithType.vb: IList(Of MigrationPlanInfo)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo)
  name.vb: IList(Of MigrationPlanInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
    name: MigrationPlanInfo
    nameWithType: MigrationPlanInfo
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
    name: MigrationPlanInfo
    nameWithType: MigrationPlanInfo
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo}
  commentId: T:System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MigrationPlanInfo>
  nameWithType: List<MigrationPlanInfo>
  fullName: System.Collections.Generic.List<Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo>
  nameWithType.vb: List(Of MigrationPlanInfo)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo)
  name.vb: List(Of MigrationPlanInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
    name: MigrationPlanInfo
    nameWithType: MigrationPlanInfo
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
    name: MigrationPlanInfo
    nameWithType: MigrationPlanInfo
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationPlanInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
