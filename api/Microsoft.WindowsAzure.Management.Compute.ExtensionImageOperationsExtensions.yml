items:
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  id: ExtensionImageOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Compute
  children:
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  langs:
  - csharp
  - vb
  name: ExtensionImageOperationsExtensions
  nameWithType: ExtensionImageOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ExtensionImageOperationsExtensions
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nThe Service Management API provides programmatic access to much of the\nfunctionality available through the Management Portal. The Service\nManagement API is a REST API. All API operations are performed over\nSSL, and are mutually authenticated using X.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: 'public class ExtensionImageOperationsExtensions : object'
    content.vb: >-
      Public Class ExtensionImageOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRegistering(IExtensionImageOperations, ExtensionImageRegisterParameters)
  nameWithType: ExtensionImageOperationsExtensions.BeginRegistering(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginRegistering
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nRegister a new extension. An extension is identified by the\ncombination of its ProviderNamespace and Type (case-sensitive\nstring). It is not allowed to register an extension with the same\nidentity (i.e. combination of ProviderNamespace and Type) of an\nalready-registered extension. To register new version of an\nexisting extension, the Update Extension API should be used.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginRegistering(this IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRegistering(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\nRequired. Parameters supplied to the Register Virtual Machine\nExtension Image operation.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRegisteringAsync(IExtensionImageOperations, ExtensionImageRegisterParameters)
  nameWithType: ExtensionImageOperationsExtensions.BeginRegisteringAsync(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginRegisteringAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nRegister a new extension. An extension is identified by the\ncombination of its ProviderNamespace and Type (case-sensitive\nstring). It is not allowed to register an extension with the same\nidentity (i.e. combination of ProviderNamespace and Type) of an\nalready-registered extension. To register new version of an\nexisting extension, the Update Extension API should be used.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginRegisteringAsync(this IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRegisteringAsync(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\nRequired. Parameters supplied to the Register Virtual Machine\nExtension Image operation.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUnregistering(IExtensionImageOperations, String, String, String)
  nameWithType: ExtensionImageOperationsExtensions.BeginUnregistering(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginUnregistering
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUnregister a version of an extension that was previously registered\nusing either the Register Extension or Update Extension APIs. An\nextension version is identified by the combination of its\nProviderNamespace, Type and Version which are specified when\nregistering the extension. Unregistering is only allowed for\ninternal extensions, that is, the extensions for which the\nIsInternalExtension field is set to 'true' during registration or\nduring an update. There is a quota (15) on the number of\nextensions that can be registered per subscription. If your\nsubscription runs out of quota, you will wither need to unregister\nsome of the internal extensions or contact Azure (same email used\nto become a publisher)  to increase the quota.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginUnregistering(this IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUnregistering(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: providerNamespace
      type: System.String
      description: "\nRequired. The provider namespace of the extension image to\nunregister.\n"
    - id: type
      type: System.String
      description: "\nRequired. The type of the extension image to unregister.\n"
    - id: version
      type: System.String
      description: "\nRequired. The version of the extension image to unregister.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUnregisteringAsync(IExtensionImageOperations, String, String, String)
  nameWithType: ExtensionImageOperationsExtensions.BeginUnregisteringAsync(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginUnregisteringAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUnregister a version of an extension that was previously registered\nusing either the Register Extension or Update Extension APIs. An\nextension version is identified by the combination of its\nProviderNamespace, Type and Version which are specified when\nregistering the extension. Unregistering is only allowed for\ninternal extensions, that is, the extensions for which the\nIsInternalExtension field is set to 'true' during registration or\nduring an update. There is a quota (15) on the number of\nextensions that can be registered per subscription. If your\nsubscription runs out of quota, you will wither need to unregister\nsome of the internal extensions or contact Azure (same email used\nto become a publisher)  to increase the quota.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginUnregisteringAsync(this IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUnregisteringAsync(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: providerNamespace
      type: System.String
      description: "\nRequired. The provider namespace of the extension image to\nunregister.\n"
    - id: type
      type: System.String
      description: "\nRequired. The type of the extension image to unregister.\n"
    - id: version
      type: System.String
      description: "\nRequired. The version of the extension image to unregister.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdating(IExtensionImageOperations, ExtensionImageUpdateParameters)
  nameWithType: ExtensionImageOperationsExtensions.BeginUpdating(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginUpdating
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 193
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdate a new extension. It is allowed to update an extension which\nhad already been registered with the same identity (i.e.\ncombination of ProviderNamespace and Type) but with different\nversion. It will fail if the extension to update has an identity\nthat has not been registered before, or there is already an\nextension with the same identity and same version.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginUpdating(this IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdating(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Virtual Machine\nExtension Image operation.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdatingAsync(IExtensionImageOperations, ExtensionImageUpdateParameters)
  nameWithType: ExtensionImageOperationsExtensions.BeginUpdatingAsync(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginUpdatingAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdate a new extension. It is allowed to update an extension which\nhad already been registered with the same identity (i.e.\ncombination of ProviderNamespace and Type) but with different\nversion. It will fail if the extension to update has an identity\nthat has not been registered before, or there is already an\nextension with the same identity and same version.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginUpdatingAsync(this IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdatingAsync(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Virtual Machine\nExtension Image operation.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: Register(IExtensionImageOperations, ExtensionImageRegisterParameters)
  nameWithType: ExtensionImageOperationsExtensions.Register(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Register
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 254
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nRegister a new extension. An extension is identified by the\ncombination of its ProviderNamespace and Type (case-sensitive\nstring). It is not allowed to register an extension with the same\nidentity (i.e. combination of ProviderNamespace and Type) of an\nalready-registered extension. To register new version of an\nexisting extension, the Update Extension API should be used.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Register(this IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Register(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\nRequired. Parameters supplied to the Register Virtual Machine\nExtension Image operation.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegisterAsync(IExtensionImageOperations, ExtensionImageRegisterParameters)
  nameWithType: ExtensionImageOperationsExtensions.RegisterAsync(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RegisterAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 290
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nRegister a new extension. An extension is identified by the\ncombination of its ProviderNamespace and Type (case-sensitive\nstring). It is not allowed to register an extension with the same\nidentity (i.e. combination of ProviderNamespace and Type) of an\nalready-registered extension. To register new version of an\nexisting extension, the Update Extension API should be used.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> RegisterAsync(this IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterAsync(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\nRequired. Parameters supplied to the Register Virtual Machine\nExtension Image operation.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: Unregister(IExtensionImageOperations, String, String, String)
  nameWithType: ExtensionImageOperationsExtensions.Unregister(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Unregister
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 334
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUnregister a version of an extension that was previously registered\nusing either the Register Extension or Update Extension APIs. An\nextension version is identified by the combination of its\nProviderNamespace, Type and Version which are specified when\nregistering the extension. Unregistering is only allowed for\ninternal extensions, that is, the extensions for which the\nIsInternalExtension field is set to 'true' during registration or\nduring an update. There is a quota (15) on the number of\nextensions that can be registered per subscription. If your\nsubscription runs out of quota, you will wither need to unregister\nsome of the internal extensions or contact Azure (same email used\nto become a publisher)  to increase the quota.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Unregister(this IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Unregister(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: providerNamespace
      type: System.String
      description: "\nRequired. The provider namespace of the extension image to\nunregister.\n"
    - id: type
      type: System.String
      description: "\nRequired. The type of the extension image to unregister.\n"
    - id: version
      type: System.String
      description: "\nRequired. The version of the extension image to unregister.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: UnregisterAsync(IExtensionImageOperations, String, String, String)
  nameWithType: ExtensionImageOperationsExtensions.UnregisterAsync(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UnregisterAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 382
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUnregister a version of an extension that was previously registered\nusing either the Register Extension or Update Extension APIs. An\nextension version is identified by the combination of its\nProviderNamespace, Type and Version which are specified when\nregistering the extension. Unregistering is only allowed for\ninternal extensions, that is, the extensions for which the\nIsInternalExtension field is set to 'true' during registration or\nduring an update. There is a quota (15) on the number of\nextensions that can be registered per subscription. If your\nsubscription runs out of quota, you will wither need to unregister\nsome of the internal extensions or contact Azure (same email used\nto become a publisher)  to increase the quota.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> UnregisterAsync(this IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnregisterAsync(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: providerNamespace
      type: System.String
      description: "\nRequired. The provider namespace of the extension image to\nunregister.\n"
    - id: type
      type: System.String
      description: "\nRequired. The type of the extension image to unregister.\n"
    - id: version
      type: System.String
      description: "\nRequired. The version of the extension image to unregister.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IExtensionImageOperations, ExtensionImageUpdateParameters)
  nameWithType: ExtensionImageOperationsExtensions.Update(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Update
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 414
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdate a new extension. It is allowed to update an extension which\nhad already been registered with the same identity (i.e.\ncombination of ProviderNamespace and Type) but with different\nversion. It will fail if the extension to update has an identity\nthat has not been registered before, or there is already an\nextension with the same identity and same version.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Update(this IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Virtual Machine\nExtension Image operation.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IExtensionImageOperations, ExtensionImageUpdateParameters)
  nameWithType: ExtensionImageOperationsExtensions.UpdateAsync(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 450
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\nUpdate a new extension. It is allowed to update an extension which\nhad already been registered with the same identity (i.e.\ncombination of ProviderNamespace and Type) but with different\nversion. It will fail if the extension to update has an identity\nthat has not been registered before, or there is already an\nextension with the same identity and same version.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> UpdateAsync(this IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Virtual Machine\nExtension Image operation.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request and error information regarding\nthe failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Compute
  commentId: N:Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute
  nameWithType: Microsoft.WindowsAzure.Management.Compute
  fullName: Microsoft.WindowsAzure.Management.Compute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  commentId: T:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  parent: Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: IExtensionImageOperations
  nameWithType: IExtensionImageOperations
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionImageRegisterParameters
  nameWithType: ExtensionImageRegisterParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: Task{AzureOperationResponse}
  commentId: '!:Task{AzureOperationResponse}'
  definition: Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionImageUpdateParameters
  nameWithType: ExtensionImageUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
- uid: OperationStatusResponse
  isExternal: true
  name: OperationStatusResponse
  nameWithType: OperationStatusResponse
  fullName: OperationStatusResponse
- uid: Task{OperationStatusResponse}
  commentId: '!:Task{OperationStatusResponse}'
  definition: Task`1
  name: Task<OperationStatusResponse>
  nameWithType: Task<OperationStatusResponse>
  fullName: Task<OperationStatusResponse>
  nameWithType.vb: Task(Of OperationStatusResponse)
  fullname.vb: Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
