### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  id: VNet
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.#ctor
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.Name
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.SharedKey
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.State
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.StateInfo
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.UpgradeInProgress
  langs:
  - csharp
  - vb
  name: VNet
  nameWithType: VNet
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VNet
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nProperties of the virtual network.\n"
  example: []
  syntax:
    content: 'public class VNet : VNetCommonFields'
    content.vb: >-
      Public Class VNet
          Inherits VNetCommonFields
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  inheritedMembers:
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.DnsServers
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayIp
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewaySubnet
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayType
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.LocalAddressSpaces
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.Region
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VnetAddressSpaces
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VpnAddress
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.Name
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: VNet.Name
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Virtual network name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.SharedKey
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.SharedKey
  id: SharedKey
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  langs:
  - csharp
  - vb
  name: SharedKey
  nameWithType: VNet.SharedKey
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.SharedKey
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SharedKey
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The shared key for the VPN device to use.\n"
  example: []
  syntax:
    content: public string SharedKey { get; set; }
    content.vb: Public Property SharedKey As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.State
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.State
  id: State
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  langs:
  - csharp
  - vb
  name: State
  nameWithType: VNet.State
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.State
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Virtual network state.\n"
  example: []
  syntax:
    content: public VNetState State { get; set; }
    content.vb: Public Property State As VNetState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.StateInfo
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.StateInfo
  id: StateInfo
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  langs:
  - csharp
  - vb
  name: StateInfo
  nameWithType: VNet.StateInfo
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.StateInfo
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateInfo
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Additional information on the virtual network state.\n"
  example: []
  syntax:
    content: public string StateInfo { get; set; }
    content.vb: Public Property StateInfo As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.UpgradeInProgress
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.UpgradeInProgress
  id: UpgradeInProgress
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  langs:
  - csharp
  - vb
  name: UpgradeInProgress
  nameWithType: VNet.UpgradeInProgress
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.UpgradeInProgress
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpgradeInProgress
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Flag indicating whether the VNet is currently being\nupgraded.\n"
  example: []
  syntax:
    content: public bool UpgradeInProgress { get; set; }
    content.vb: Public Property UpgradeInProgress As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  langs:
  - csharp
  - vb
  name: VNet()
  nameWithType: VNet.VNet()
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet.VNet()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNet.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the VNet class.\n"
  example: []
  syntax:
    content: public VNet()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp.Models
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp.Models
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetCommonFields
  nameWithType: VNetCommonFields
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.DnsServers
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.DnsServers
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: DnsServers
  nameWithType: VNetCommonFields.DnsServers
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.DnsServers
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayIp
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayIp
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: GatewayIp
  nameWithType: VNetCommonFields.GatewayIp
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayIp
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewaySubnet
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewaySubnet
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: GatewaySubnet
  nameWithType: VNetCommonFields.GatewaySubnet
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewaySubnet
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayType
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayType
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: GatewayType
  nameWithType: VNetCommonFields.GatewayType
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.GatewayType
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.LocalAddressSpaces
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.LocalAddressSpaces
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: LocalAddressSpaces
  nameWithType: VNetCommonFields.LocalAddressSpaces
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.LocalAddressSpaces
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.Region
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.Region
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: Region
  nameWithType: VNetCommonFields.Region
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.Region
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VnetAddressSpaces
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VnetAddressSpaces
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: VnetAddressSpaces
  nameWithType: VNetCommonFields.VnetAddressSpaces
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VnetAddressSpaces
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VpnAddress
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VpnAddress
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields
  isExternal: false
  name: VpnAddress
  nameWithType: VNetCommonFields.VpnAddress
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetCommonFields.VpnAddress
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetState
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetState
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetState
  nameWithType: VNetState
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
