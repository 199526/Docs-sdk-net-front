items:
- uid: Microsoft.Azure.KeyVault.SymmetricKey
  commentId: T:Microsoft.Azure.KeyVault.SymmetricKey
  id: SymmetricKey
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])
  - Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)
  - Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  - Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  - Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  - Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  - Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  - Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.Key
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  - Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  - Microsoft.Azure.KeyVault.SymmetricKey.Kid
  - Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SymmetricKey
  nameWithType: SymmetricKey
  fullName: Microsoft.Azure.KeyVault.SymmetricKey
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SymmetricKey
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nA simple Symmetric Key\n"
  example: []
  syntax:
    content: 'public class SymmetricKey : IKey, IDisposable'
    content.vb: >-
      Public Class SymmetricKey
          Implements IKey, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - Microsoft.Azure.KeyVault.SymmetricKey.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  id: KeySize128
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize128
  nameWithType: SymmetricKey.KeySize128
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize128
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: KeySize128
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize128 = 16
    content.vb: Public Const KeySize128 As Integer = 16
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  id: KeySize192
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize192
  nameWithType: SymmetricKey.KeySize192
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize192
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: KeySize192
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize192 = 24
    content.vb: Public Const KeySize192 As Integer = 24
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  id: KeySize256
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize256
  nameWithType: SymmetricKey.KeySize256
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize256
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: KeySize256
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize256 = 32
    content.vb: Public Const KeySize256 As Integer = 32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  id: KeySize384
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize384
  nameWithType: SymmetricKey.KeySize384
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize384
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: KeySize384
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize384 = 48
    content.vb: Public Const KeySize384 As Integer = 48
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  commentId: F:Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  id: KeySize512
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: KeySize512
  nameWithType: SymmetricKey.KeySize512
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.KeySize512
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: KeySize512
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public const int KeySize512 = 64
    content.vb: Public Const KeySize512 As Integer = 64
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey()
  nameWithType: SymmetricKey.SymmetricKey()
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDefault constructor\n"
  example: []
  syntax:
    content: public SymmetricKey()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey(String)
  nameWithType: SymmetricKey.SymmetricKey(String)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public SymmetricKey(string kid)
    content.vb: Public Sub New(kid As String)
    parameters:
    - id: kid
      type: System.String
      description: The key identifier to use
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey(String, Int32)
  nameWithType: SymmetricKey.SymmetricKey(String, Int32)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public SymmetricKey(string kid, int keySize)
    content.vb: Public Sub New(kid As String, keySize As Integer)
    parameters:
    - id: kid
      type: System.String
      description: The key identifier to use
    - id: keySize
      type: System.Int32
      description: The key size in bytes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SymmetricKey(String, Byte[])
  nameWithType: SymmetricKey.SymmetricKey(String, Byte[])
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public SymmetricKey(string kid, byte[] keyBytes)
    content.vb: Public Sub New(kid As String, keyBytes As Byte())
    parameters:
    - id: kid
      type: System.String
      description: The key identifier
    - id: keyBytes
      type: System.Byte[]
      description: The key material
  nameWithType.vb: SymmetricKey.SymmetricKey(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.SymmetricKey(System.String, System.Byte())
  name.vb: SymmetricKey(String, Byte())
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Key
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.Key
  id: Key
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: SymmetricKey.Key
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Key
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Key
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: >-
      [Obsolete("The Key property will be removed in a future release, please remove references to it")]

      public byte[] Key { get; }
    content.vb: >-
      <Obsolete("The Key property will be removed in a future release, please remove references to it")>

      Public ReadOnly Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The Key property will be removed in a future release, please remove references to it
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Kid
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.Kid
  id: Kid
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Kid
  nameWithType: SymmetricKey.Kid
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Kid
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Kid
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string Kid { get; protected set; }
    content.vb: Public Property Kid As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.Kid
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DefaultEncryptionAlgorithm
  nameWithType: SymmetricKey.DefaultEncryptionAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultEncryptionAlgorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultEncryptionAlgorithm
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string DefaultEncryptionAlgorithm { get; }
    content.vb: Public ReadOnly Property DefaultEncryptionAlgorithm As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.DefaultEncryptionAlgorithm
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  id: DefaultKeyWrapAlgorithm
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DefaultKeyWrapAlgorithm
  nameWithType: SymmetricKey.DefaultKeyWrapAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultKeyWrapAlgorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultKeyWrapAlgorithm
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 139
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string DefaultKeyWrapAlgorithm { get; }
    content.vb: Public ReadOnly Property DefaultKeyWrapAlgorithm As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.DefaultKeyWrapAlgorithm
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  id: DefaultSignatureAlgorithm
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DefaultSignatureAlgorithm
  nameWithType: SymmetricKey.DefaultSignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DefaultSignatureAlgorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DefaultSignatureAlgorithm
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 167
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public string DefaultSignatureAlgorithm { get; }
    content.vb: Public ReadOnly Property DefaultSignatureAlgorithm As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.DefaultSignatureAlgorithm
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  id: DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: DecryptAsync(Byte[], Byte[], Byte[], Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.DecryptAsync(Byte[], Byte[], Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: DecryptAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<byte[]> DecryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData = null, byte[] authenticationTag = null, string algorithm = null, CancellationToken token = null)
    content.vb: Public Function DecryptAsync(ciphertext As Byte(), iv As Byte(), authenticationData As Byte() = Nothing, authenticationTag As Byte() = Nothing, algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Byte())
    parameters:
    - id: ciphertext
      type: System.Byte[]
    - id: iv
      type: System.Byte[]
    - id: authenticationData
      type: System.Byte[]
    - id: authenticationTag
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: SymmetricKey.DecryptAsync(Byte(), Byte(), Byte(), Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.DecryptAsync(System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: DecryptAsync(Byte(), Byte(), Byte(), Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  id: EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: EncryptAsync(Byte[], Byte[], Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.EncryptAsync(Byte[], Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte[], System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: EncryptAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 212
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<Tuple<byte[], byte[], string>> EncryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData = null, string algorithm = null, CancellationToken token = null)
    content.vb: Public Function EncryptAsync(plaintext As Byte(), iv As Byte(), authenticationData As Byte() = Nothing, algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Tuple(Of Byte(), Byte(), String))
    parameters:
    - id: plaintext
      type: System.Byte[]
    - id: iv
      type: System.Byte[]
    - id: authenticationData
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.Byte[],System.String}}
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: SymmetricKey.EncryptAsync(Byte(), Byte(), Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.EncryptAsync(System.Byte(), System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: EncryptAsync(Byte(), Byte(), Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: WrapKeyAsync(Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.WrapKeyAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: WrapKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 246
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<Tuple<byte[], string>> WrapKeyAsync(byte[] key, string algorithm = null, CancellationToken token = null)
    content.vb: Public Function WrapKeyAsync(key As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Tuple(Of Byte(), String))
    parameters:
    - id: key
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: SymmetricKey.WrapKeyAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.WrapKeyAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: WrapKeyAsync(Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: UnwrapKeyAsync(Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.UnwrapKeyAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UnwrapKeyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 268
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<byte[]> UnwrapKeyAsync(byte[] encryptedKey, string algorithm = null, CancellationToken token = null)
    content.vb: Public Function UnwrapKeyAsync(encryptedKey As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Byte())
    parameters:
    - id: encryptedKey
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: SymmetricKey.UnwrapKeyAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.UnwrapKeyAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: UnwrapKeyAsync(Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  id: SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: SignAsync(Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.SignAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: SignAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 290
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<Tuple<byte[], string>> SignAsync(byte[] digest, string algorithm = null, CancellationToken token = null)
    content.vb: Public Function SignAsync(digest As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Tuple(Of Byte(), String))
    parameters:
    - id: digest
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: SymmetricKey.SignAsync(Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.SignAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: SignAsync(Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  id: VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: VerifyAsync(Byte[], Byte[], String, CancellationToken)
  nameWithType: SymmetricKey.VerifyAsync(Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: VerifyAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 295
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public Task<bool> VerifyAsync(byte[] digest, byte[] signature, string algorithm = null, CancellationToken token = null)
    content.vb: Public Function VerifyAsync(digest As Byte(), signature As Byte(), algorithm As String = Nothing, token As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: digest
      type: System.Byte[]
    - id: signature
      type: System.Byte[]
    - id: algorithm
      type: System.String
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  implements:
  - Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  nameWithType.vb: SymmetricKey.VerifyAsync(Byte(), Byte(), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.SymmetricKey.VerifyAsync(System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: VerifyAsync(Byte(), Byte(), String, CancellationToken)
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.Dispose
  id: Dispose
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SymmetricKey.Dispose()
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Dispose()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Dispose
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 304
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  commentId: M:Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Azure.KeyVault.SymmetricKey
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SymmetricKey.Dispose(Boolean)
  fullName: Microsoft.Azure.KeyVault.SymmetricKey.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Dispose
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions/SymmetricKey.cs
    startLine: 310
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.KeyVault.Core.IKey
  commentId: T:Microsoft.Azure.KeyVault.Core.IKey
  parent: Microsoft.Azure.KeyVault.Core
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.Azure.KeyVault.Core.IKey
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.SymmetricKey.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  name: MakeEnumeration<SymmetricKey>()
  nameWithType: ObjectExtensions.MakeEnumeration<SymmetricKey>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Azure.KeyVault.SymmetricKey>()
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of SymmetricKey)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Azure.KeyVault.SymmetricKey)()
  name.vb: MakeEnumeration(Of SymmetricKey)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration<SymmetricKey>
    nameWithType: ObjectExtensions.MakeEnumeration<SymmetricKey>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Azure.KeyVault.SymmetricKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration(Of SymmetricKey)
    nameWithType: ObjectExtensions.MakeEnumeration(Of SymmetricKey)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Azure.KeyVault.SymmetricKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Core
  commentId: N:Microsoft.Azure.KeyVault.Core
  isExternal: false
  name: Microsoft.Azure.KeyVault.Core
  nameWithType: Microsoft.Azure.KeyVault.Core
  fullName: Microsoft.Azure.KeyVault.Core
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  isExternal: false
  name: MakeEnumeration<T>(T)
  nameWithType: ObjectExtensions.MakeEnumeration<T>(T)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>(T)
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of T)(T)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)(T)
  name.vb: MakeEnumeration(Of T)(T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration<T>
    nameWithType: ObjectExtensions.MakeEnumeration<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration(Of T)
    nameWithType: ObjectExtensions.MakeEnumeration(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.KeyVault.Core.IKey.Kid
  commentId: P:Microsoft.Azure.KeyVault.Core.IKey.Kid
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: Kid
  nameWithType: IKey.Kid
  fullName: Microsoft.Azure.KeyVault.Core.IKey.Kid
- uid: Microsoft.Azure.KeyVault.Core.IKey.DefaultEncryptionAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.Core.IKey.DefaultEncryptionAlgorithm
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: DefaultEncryptionAlgorithm
  nameWithType: IKey.DefaultEncryptionAlgorithm
  fullName: Microsoft.Azure.KeyVault.Core.IKey.DefaultEncryptionAlgorithm
- uid: Microsoft.Azure.KeyVault.Core.IKey.DefaultKeyWrapAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.Core.IKey.DefaultKeyWrapAlgorithm
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: DefaultKeyWrapAlgorithm
  nameWithType: IKey.DefaultKeyWrapAlgorithm
  fullName: Microsoft.Azure.KeyVault.Core.IKey.DefaultKeyWrapAlgorithm
- uid: Microsoft.Azure.KeyVault.Core.IKey.DefaultSignatureAlgorithm
  commentId: P:Microsoft.Azure.KeyVault.Core.IKey.DefaultSignatureAlgorithm
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: DefaultSignatureAlgorithm
  nameWithType: IKey.DefaultSignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.Core.IKey.DefaultSignatureAlgorithm
- uid: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: DecryptAsync(Byte[], Byte[], Byte[], Byte[], String, CancellationToken)
  nameWithType: IKey.DecryptAsync(Byte[], Byte[], Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IKey.DecryptAsync(Byte(), Byte(), Byte(), Byte(), String, CancellationToken)
  fullname.vb: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: DecryptAsync(Byte(), Byte(), Byte(), Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
    name: DecryptAsync
    nameWithType: IKey.DecryptAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
    name: DecryptAsync
    nameWithType: IKey.DecryptAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.DecryptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullname.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: EncryptAsync(Byte[], Byte[], Byte[], String, CancellationToken)
  nameWithType: IKey.EncryptAsync(Byte[], Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[], System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IKey.EncryptAsync(Byte(), Byte(), Byte(), String, CancellationToken)
  fullname.vb: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte(), System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: EncryptAsync(Byte(), Byte(), Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
    name: EncryptAsync
    nameWithType: IKey.EncryptAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync(System.Byte[],System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
    name: EncryptAsync
    nameWithType: IKey.EncryptAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.EncryptAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.Byte[],System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.Byte[],System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Tuple<Byte[], Byte[], String>>
  nameWithType: Task<Tuple<Byte[], Byte[], String>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Byte[], System.Byte[], System.String>>
  nameWithType.vb: Task(Of Tuple(Of Byte(), Byte(), String))
  fullname.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Byte(), System.Byte(), System.String))
  name.vb: Task(Of Tuple(Of Byte(), Byte(), String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: WrapKeyAsync(Byte[], String, CancellationToken)
  nameWithType: IKey.WrapKeyAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IKey.WrapKeyAsync(Byte(), String, CancellationToken)
  fullname.vb: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: WrapKeyAsync(Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: WrapKeyAsync
    nameWithType: IKey.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: WrapKeyAsync
    nameWithType: IKey.WrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.WrapKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Byte[],System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Tuple<Byte[], String>>
  nameWithType: Task<Tuple<Byte[], String>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Byte[], System.String>>
  nameWithType.vb: Task(Of Tuple(Of Byte(), String))
  fullname.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Byte(), System.String))
  name.vb: Task(Of Tuple(Of Byte(), String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: UnwrapKeyAsync(Byte[], String, CancellationToken)
  nameWithType: IKey.UnwrapKeyAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IKey.UnwrapKeyAsync(Byte(), String, CancellationToken)
  fullname.vb: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: UnwrapKeyAsync(Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: UnwrapKeyAsync
    nameWithType: IKey.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: UnwrapKeyAsync
    nameWithType: IKey.UnwrapKeyAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.UnwrapKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: SignAsync(Byte[], String, CancellationToken)
  nameWithType: IKey.SignAsync(Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IKey.SignAsync(Byte(), String, CancellationToken)
  fullname.vb: Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: SignAsync(Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: SignAsync
    nameWithType: IKey.SignAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.SignAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.SignAsync(System.Byte[],System.String,System.Threading.CancellationToken)
    name: SignAsync
    nameWithType: IKey.SignAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.SignAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKey
  isExternal: true
  name: VerifyAsync(Byte[], Byte[], String, CancellationToken)
  nameWithType: IKey.VerifyAsync(Byte[], Byte[], String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[], System.Byte[], System.String, System.Threading.CancellationToken)
  nameWithType.vb: IKey.VerifyAsync(Byte(), Byte(), String, CancellationToken)
  fullname.vb: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte(), System.Byte(), System.String, System.Threading.CancellationToken)
  name.vb: VerifyAsync(Byte(), Byte(), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
    name: VerifyAsync
    nameWithType: IKey.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync(System.Byte[],System.Byte[],System.String,System.Threading.CancellationToken)
    name: VerifyAsync
    nameWithType: IKey.VerifyAsync
    fullName: Microsoft.Azure.KeyVault.Core.IKey.VerifyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
