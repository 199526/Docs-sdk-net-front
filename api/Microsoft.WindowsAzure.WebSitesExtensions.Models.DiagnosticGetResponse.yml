### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse
  commentId: T:Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse
  id: DiagnosticGetResponse
  parent: Microsoft.WindowsAzure.WebSitesExtensions.Models
  children:
  - Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.#ctor
  - Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.Settings
  langs:
  - csharp
  - vb
  name: DiagnosticGetResponse
  nameWithType: DiagnosticGetResponse
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse
  type: Class
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/DiagnosticGetResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DiagnosticGetResponse
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/DiagnosticGetResponse.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.WebSitesExtensions.Models
  summary: "\nThe get diagnostic settings operation response.\n"
  example: []
  syntax:
    content: 'public class DiagnosticGetResponse : AzureOperationResponse'
    content.vb: >-
      Public Class DiagnosticGetResponse
          Inherits AzureOperationResponse
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.Settings
  commentId: P:Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.Settings
  id: Settings
  parent: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: DiagnosticGetResponse.Settings
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.Settings
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/DiagnosticGetResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Settings
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/DiagnosticGetResponse.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.WebSitesExtensions.Models
  summary: "\nOptional. The diagnostics setting information.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Settings { get; set; }
    content.vb: Public Property Settings As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.#ctor
  commentId: M:Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse
  langs:
  - csharp
  - vb
  name: DiagnosticGetResponse()
  nameWithType: DiagnosticGetResponse.DiagnosticGetResponse()
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.Models.DiagnosticGetResponse.DiagnosticGetResponse()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/DiagnosticGetResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/DiagnosticGetResponse.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.WebSitesExtensions.Models
  summary: "\nInitializes a new instance of the DiagnosticGetResponse class.\n"
  example: []
  syntax:
    content: public DiagnosticGetResponse()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.WebSitesExtensions.Models
  commentId: N:Microsoft.WindowsAzure.WebSitesExtensions.Models
  isExternal: false
  name: Microsoft.WindowsAzure.WebSitesExtensions.Models
  nameWithType: Microsoft.WindowsAzure.WebSitesExtensions.Models
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
