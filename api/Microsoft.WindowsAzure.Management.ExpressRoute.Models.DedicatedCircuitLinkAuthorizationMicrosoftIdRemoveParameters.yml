### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  id: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  children:
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.#ctor
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.MicrosoftIds
  langs:
  - csharp
  - vb
  name: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  nameWithType: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nThe parameters to remove existing Microsoft Ids from an authorization\n"
  example: []
  syntax:
    content: public class DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
    content.vb: Public Class DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.MicrosoftIds
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.MicrosoftIds
  id: MicrosoftIds
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  langs:
  - csharp
  - vb
  name: MicrosoftIds
  nameWithType: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.MicrosoftIds
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.MicrosoftIds
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MicrosoftIds
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. A comma separated list of Microsoft Ids\n"
  example: []
  syntax:
    content: public string MicrosoftIds { get; set; }
    content.vb: Public Property MicrosoftIds As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters
  langs:
  - csharp
  - vb
  name: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters()
  nameWithType: DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters()
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nInitializes a new instance of the\nDedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters class.\n"
  example: []
  syntax:
    content: public DedicatedCircuitLinkAuthorizationMicrosoftIdRemoveParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
