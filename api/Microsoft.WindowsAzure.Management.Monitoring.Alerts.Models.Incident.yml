### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  id: Incident
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  children:
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.#ctor
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ActivatedTime
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.Id
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.IsActive
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ResolvedTime
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.RuleId
  langs:
  - csharp
  - vb
  name: Incident
  nameWithType: Incident
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Incident
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nAn alert incident indicates the activation status of an alert rule.\n"
  example: []
  syntax:
    content: public class Incident
    content.vb: Public Class Incident
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ActivatedTime
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ActivatedTime
  id: ActivatedTime
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  langs:
  - csharp
  - vb
  name: ActivatedTime
  nameWithType: Incident.ActivatedTime
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ActivatedTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActivatedTime
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nOptional. The time at which the incident got activated.\n"
  example: []
  syntax:
    content: public DateTime ActivatedTime { get; set; }
    content.vb: Public Property ActivatedTime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.Id
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.Id
  id: Id
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Incident.Id
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.Id
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nOptional. Incident identifier.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.IsActive
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.IsActive
  id: IsActive
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: Incident.IsActive
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.IsActive
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsActive
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nOptional. A boolean to indicate whether the incident is active or\nresolved.\n"
  example: []
  syntax:
    content: public bool IsActive { get; set; }
    content.vb: Public Property IsActive As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ResolvedTime
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ResolvedTime
  id: ResolvedTime
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  langs:
  - csharp
  - vb
  name: ResolvedTime
  nameWithType: Incident.ResolvedTime
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.ResolvedTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResolvedTime
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nOptional. The time at which the incident got resolved. If null, it\nmeans the incident is still active.\n"
  example: []
  syntax:
    content: public DateTime? ResolvedTime { get; set; }
    content.vb: Public Property ResolvedTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.RuleId
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.RuleId
  id: RuleId
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  langs:
  - csharp
  - vb
  name: RuleId
  nameWithType: Incident.RuleId
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.RuleId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RuleId
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nOptional. Rule identifier that is associated with the incident.\n"
  example: []
  syntax:
    content: public string RuleId { get; set; }
    content.vb: Public Property RuleId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident
  langs:
  - csharp
  - vb
  name: Incident()
  nameWithType: Incident.Incident()
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Incident.Incident()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/Models/Incident.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  summary: "\nInitializes a new instance of the Incident class.\n"
  example: []
  syntax:
    content: public Incident()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  commentId: N:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  nameWithType: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
