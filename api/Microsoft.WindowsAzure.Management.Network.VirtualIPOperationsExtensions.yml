items:
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  id: VirtualIPOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Network
  children:
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Add(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.AddAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAdding(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAddingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemoving(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemovingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: VirtualIPOperationsExtensions
  nameWithType: VirtualIPOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: VirtualIPOperationsExtensions
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Service Management API includes operations for managing the virtual\nnetworks for your subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj157182.aspx for\nmore information)\n"
  example: []
  syntax:
    content: 'public class VirtualIPOperationsExtensions : object'
    content.vb: >-
      Public Class VirtualIPOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Add(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Add(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: Add(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: Add(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.Add(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Add(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Add
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Add Virtual IP operation adds a logical Virtual IP to the\ndeployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Add(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Add(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment where the logical Virtual IP\nis to be added.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be added.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.AddAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.AddAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: AddAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddAsync(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.AddAsync(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.AddAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: AddAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Add Virtual IP operation adds a logical Virtual IP to the\ndeployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> AddAsync(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAsync(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment where the logical Virtual IP\nis to be added.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be added.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAdding(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAdding(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: BeginAdding(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAdding(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.BeginAdding(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAdding(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginAdding
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Begin Adding Virtual IP operation adds a logical Virtual IP to\nthe deployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse BeginAdding(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAdding(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment where the logical Virtual IP\nis to be added.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be added.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAddingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAddingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: BeginAddingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAddingAsync(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.BeginAddingAsync(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginAddingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginAddingAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 181
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Begin Adding Virtual IP operation adds a logical Virtual IP to\nthe deployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> BeginAddingAsync(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAddingAsync(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment where the logical Virtual IP\nis to be added.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be added.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemoving(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemoving(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: BeginRemoving(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRemoving(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.BeginRemoving(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemoving(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginRemoving
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 216
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Begin Removing Virtual IP operation removes a logical Virtual\nIP from the deployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse BeginRemoving(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRemoving(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment whose logical Virtual IP is to\nbe removed.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be added.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemovingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemovingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: BeginRemovingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRemovingAsync(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.BeginRemovingAsync(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.BeginRemovingAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginRemovingAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 255
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Begin Removing Virtual IP operation removes a logical Virtual\nIP from the deployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> BeginRemovingAsync(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRemovingAsync(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment whose logical Virtual IP is to\nbe removed.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be added.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: Remove(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: Remove(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.Remove(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.Remove(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Remove
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 290
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Remove Virtual IP operation removes a logical Virtual IP from\nthe deployment.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Remove(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Remove(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment whose logical Virtual IP is to\nbe removed.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be removed.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  id: RemoveAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAsync(IVirtualIPOperations, String, String, String)
  nameWithType: VirtualIPOperationsExtensions.RemoveAsync(IVirtualIPOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.VirtualIPOperationsExtensions.RemoveAsync(Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: RemoveAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/VirtualIPOperationsExtensions.cs
    startLine: 329
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Remove Virtual IP operation removes a logical Virtual IP from\nthe deployment.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> RemoveAsync(this IVirtualIPOperations operations, string serviceName, string deploymentName, string virtualIPName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAsync(operations As IVirtualIPOperations, serviceName As String, deploymentName As String, virtualIPName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IVirtualIPOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the hosted service that contains the given\ndeployment.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment whose logical Virtual IP is to\nbe removed.\n"
    - id: virtualIPName
      type: System.String
      description: "\nRequired. The name of the logical Virtual IP to be removed.\n"
    return:
      type: Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Network
  commentId: N:Microsoft.WindowsAzure.Management.Network
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Network
  nameWithType: Microsoft.WindowsAzure.Management.Network
  fullName: Microsoft.WindowsAzure.Management.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
  commentId: T:Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
  parent: Microsoft.WindowsAzure.Management.Network
  isExternal: false
  name: IVirtualIPOperations
  nameWithType: IVirtualIPOperations
  fullName: Microsoft.WindowsAzure.Management.Network.IVirtualIPOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OperationStatusResponse
  isExternal: true
  name: OperationStatusResponse
  nameWithType: OperationStatusResponse
  fullName: OperationStatusResponse
- uid: Task{OperationStatusResponse}
  commentId: '!:Task{OperationStatusResponse}'
  definition: Task`1
  name: Task<OperationStatusResponse>
  nameWithType: Task<OperationStatusResponse>
  fullName: Task<OperationStatusResponse>
  nameWithType.vb: Task(Of OperationStatusResponse)
  fullname.vb: Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
