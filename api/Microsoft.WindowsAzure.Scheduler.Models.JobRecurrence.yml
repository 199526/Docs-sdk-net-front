### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  id: JobRecurrence
  parent: Microsoft.WindowsAzure.Scheduler.Models
  children:
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.#ctor
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency)
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Count
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.EndTime
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Frequency
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Interval
  - Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Schedule
  langs:
  - csharp
  - vb
  name: JobRecurrence
  nameWithType: JobRecurrence
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobRecurrence
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nRecurrence schedule for the job.\n"
  example: []
  syntax:
    content: public class JobRecurrence
    content.vb: Public Class JobRecurrence
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Count
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Count
  id: Count
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: JobRecurrence.Count
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Count
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Count
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Count of occurrences that will execute. Optional. Default\nwill recur infinitely\n"
  example: []
  syntax:
    content: public int ? Count { get; set; }
    content.vb: Public Property Count As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.EndTime
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: JobRecurrence.EndTime
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.EndTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Time in ISO-8601 format after which no more occurrences\nwill execute.\n"
  example: []
  syntax:
    content: public DateTime? EndTime { get; set; }
    content.vb: Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Frequency
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Frequency
  id: Frequency
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: JobRecurrence.Frequency
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Frequency
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frequency
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nRequired. The frequency of recurrence.\n"
  example: []
  syntax:
    content: public JobRecurrenceFrequency Frequency { get; set; }
    content.vb: Public Property Frequency As JobRecurrenceFrequency
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Interval
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Interval
  id: Interval
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: JobRecurrence.Interval
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Interval
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Interval
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Interval of the recurrence at the given frequency.\n"
  example: []
  syntax:
    content: public int ? Interval { get; set; }
    content.vb: Public Property Interval As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Schedule
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Schedule
  id: Schedule
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: Schedule
  nameWithType: JobRecurrence.Schedule
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.Schedule
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Schedule
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nOptional. Recurrence schedule for the job.\n"
  example: []
  syntax:
    content: public JobRecurrenceSchedule Schedule { get; set; }
    content.vb: Public Property Schedule As JobRecurrenceSchedule
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceSchedule
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.#ctor
  commentId: M:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: JobRecurrence()
  nameWithType: JobRecurrence.JobRecurrence()
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.JobRecurrence()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nInitializes a new instance of the JobRecurrence class.\n"
  example: []
  syntax:
    content: public JobRecurrence()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency)
  commentId: M:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency)
  id: '#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency)'
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence
  langs:
  - csharp
  - vb
  name: JobRecurrence(JobRecurrenceFrequency)
  nameWithType: JobRecurrence.JobRecurrence(JobRecurrenceFrequency)
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrence.JobRecurrence(Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobRecurrence.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nInitializes a new instance of the JobRecurrence class with required\narguments.\n"
  example: []
  syntax:
    content: public JobRecurrence(JobRecurrenceFrequency frequency)
    content.vb: Public Sub New(frequency As JobRecurrenceFrequency)
    parameters:
    - id: frequency
      type: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Scheduler.Models
  commentId: N:Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Scheduler.Models
  nameWithType: Microsoft.WindowsAzure.Scheduler.Models
  fullName: Microsoft.WindowsAzure.Scheduler.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency
  parent: Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: JobRecurrenceFrequency
  nameWithType: JobRecurrenceFrequency
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceFrequency
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceSchedule
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceSchedule
  parent: Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: JobRecurrenceSchedule
  nameWithType: JobRecurrenceSchedule
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobRecurrenceSchedule
