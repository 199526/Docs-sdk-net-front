items:
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  id: FarmOperationsExtensions
  parent: Microsoft.AzureStack.AzureConsistentStorage
  children:
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Create(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CreateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,System.String,System.Nullable{Guid},IEnumerable{System.Int32})
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,Uri,System.Nullable{Guid},IEnumerable{System.Int32})
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmented(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Get(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQueryAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatus(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatusAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitions(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitionsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetrics(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.List(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ListAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGc(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGcAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Update(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  - Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.UpdateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  langs:
  - csharp
  - vb
  name: FarmOperationsExtensions
  nameWithType: FarmOperationsExtensions
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: FarmOperationsExtensions
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18591
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  syntax:
    content: 'public class FarmOperationsExtensions : object'
    content.vb: >-
      Public Class FarmOperationsExtensions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,Uri,System.Nullable{Guid},IEnumerable{System.Int32})
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,Uri,System.Nullable{Guid},IEnumerable{System.Int32})
  id: ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,Uri,System.Nullable{Guid},IEnumerable{System.Int32})
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, Uri, Nullable<Guid>, IEnumerable<Int32>)
  nameWithType: FarmOperationsExtensions.ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, Uri, Nullable<Guid>, IEnumerable<Int32>)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, DateTime, DateTime, System.String, Uri, System.Nullable<Guid>, IEnumerable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ExecuteEventQuery
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
    startLine: 68
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static IEnumerable<EventModel> ExecuteEventQuery(this IFarmOperations operations, string resourceGroupName, string farmId, DateTime startTimeUtc, DateTime endTimeUtc, string computerName, Uri resourceUri, Guid? providerGuid, IEnumerable<int> eventIds)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteEventQuery(operations As IFarmOperations, resourceGroupName As String, farmId As String, startTimeUtc As DateTime, endTimeUtc As DateTime, computerName As String, resourceUri As Uri, providerGuid As Guid?, eventIds As IEnumerable(Of Integer)) As IEnumerable(Of EventModel)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: startTimeUtc
      type: DateTime
      description: "\nRequired. Your documentation here.\n"
    - id: endTimeUtc
      type: DateTime
      description: "\nRequired. Your documentation here.\n"
    - id: computerName
      type: System.String
      description: "\nOptional. Your documentation here.\n"
    - id: resourceUri
      type: Uri
      description: "\nOptional. Your documentation here.\n"
    - id: providerGuid
      type: System.Nullable{Guid}
      description: "\nOptional. Your documentation here.\n"
    - id: eventIds
      type: IEnumerable{System.Int32}
      description: "\nOptional. Your documentation here.\n"
    return:
      type: IEnumerable{Microsoft.AzureStack.AzureConsistentStorage.EventModel}
      description: "\nYour documentation here.\n"
  nameWithType.vb: FarmOperationsExtensions.ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, Uri, Nullable(Of Guid), IEnumerable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, DateTime, DateTime, System.String, Uri, System.Nullable(Of Guid), IEnumerable(Of System.Int32))
  name.vb: ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, Uri, Nullable(Of Guid), IEnumerable(Of Int32))
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,System.String,System.Nullable{Guid},IEnumerable{System.Int32})
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,System.String,System.Nullable{Guid},IEnumerable{System.Int32})
  id: ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,DateTime,DateTime,System.String,System.String,System.Nullable{Guid},IEnumerable{System.Int32})
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, String, Nullable<Guid>, IEnumerable<Int32>)
  nameWithType: FarmOperationsExtensions.ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, String, Nullable<Guid>, IEnumerable<Int32>)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, DateTime, DateTime, System.String, System.String, System.Nullable<Guid>, IEnumerable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ExecuteEventQuery
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
    startLine: 120
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static IEnumerable<EventModel> ExecuteEventQuery(this IFarmOperations operations, string resourceGroupName, string farmId, DateTime startTimeUtc, DateTime endTimeUtc, string computerName, string resourceUri, Guid? providerGuid, IEnumerable<int> eventIds)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteEventQuery(operations As IFarmOperations, resourceGroupName As String, farmId As String, startTimeUtc As DateTime, endTimeUtc As DateTime, computerName As String, resourceUri As String, providerGuid As Guid?, eventIds As IEnumerable(Of Integer)) As IEnumerable(Of EventModel)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: startTimeUtc
      type: DateTime
      description: "\nRequired. Your documentation here.\n"
    - id: endTimeUtc
      type: DateTime
      description: "\nRequired. Your documentation here.\n"
    - id: computerName
      type: System.String
      description: "\nOptional. Your documentation here.\n"
    - id: resourceUri
      type: System.String
      description: "\nOptional. Your documentation here.\n"
    - id: providerGuid
      type: System.Nullable{Guid}
      description: "\nOptional. Your documentation here.\n"
    - id: eventIds
      type: IEnumerable{System.Int32}
      description: "\nOptional. Your documentation here.\n"
    return:
      type: IEnumerable{Microsoft.AzureStack.AzureConsistentStorage.EventModel}
      description: "\nYour documentation here.\n"
  nameWithType.vb: FarmOperationsExtensions.ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, String, Nullable(Of Guid), IEnumerable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, DateTime, DateTime, System.String, System.String, System.Nullable(Of Guid), IEnumerable(Of System.Int32))
  name.vb: ExecuteEventQuery(IFarmOperations, String, String, DateTime, DateTime, String, String, Nullable(Of Guid), IEnumerable(Of Int32))
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery)
  id: ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExecuteEventQuery(IFarmOperations, EventQuery)
  nameWithType: FarmOperationsExtensions.ExecuteEventQuery(IFarmOperations, EventQuery)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ExecuteEventQuery
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
    startLine: 151
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static IEnumerable<EventModel> ExecuteEventQuery(this IFarmOperations operations, EventQuery eventQuery)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteEventQuery(operations As IFarmOperations, eventQuery As EventQuery) As IEnumerable(Of EventModel)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: eventQuery
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
      description: "\nRequired. Your documentation here.\n"
    return:
      type: IEnumerable{Microsoft.AzureStack.AzureConsistentStorage.EventModel}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmented(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmented(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  id: ExecuteEventQuerySegmented(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExecuteEventQuerySegmented(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable<Int32>)
  nameWithType: FarmOperationsExtensions.ExecuteEventQuerySegmented(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable<Int32>)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmented(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery, Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ExecuteEventQuerySegmented
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
    startLine: 179
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static EventListResponse ExecuteEventQuerySegmented(this IFarmOperations operations, EventQuery eventQuery, EventQueryContinuationToken continuationToken, int ? maxCount)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteEventQuerySegmented(operations As IFarmOperations, eventQuery As EventQuery, continuationToken As EventQueryContinuationToken, maxCount As Integer?) As EventListResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: eventQuery
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
      description: "\nRequired. Your documentation here.\n"
    - id: continuationToken
      type: Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken
      description: "\nOptional. Your documentation here.\n"
    - id: maxCount
      type: System.Nullable{System.Int32}
      description: "\nOptional. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
      description: "\nYour documentation here.\n"
  nameWithType.vb: FarmOperationsExtensions.ExecuteEventQuerySegmented(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmented(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery, Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken, System.Nullable(Of System.Int32))
  name.vb: ExecuteEventQuerySegmented(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable(Of Int32))
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  id: ExecuteEventQuerySegmentedAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery,Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExecuteEventQuerySegmentedAsync(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable<Int32>)
  nameWithType: FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable<Int32>)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery, Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ExecuteEventQuerySegmentedAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Customization/StorageAdminManagementClient.Customization.cs
    startLine: 209
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<EventListResponse> ExecuteEventQuerySegmentedAsync(this IFarmOperations operations, EventQuery eventQuery, EventQueryContinuationToken continuationToken, int ? maxCount)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteEventQuerySegmentedAsync(operations As IFarmOperations, eventQuery As EventQuery, continuationToken As EventQueryContinuationToken, maxCount As Integer?) As Task(Of EventListResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: eventQuery
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
      description: "\nRequired. Your documentation here.\n"
    - id: continuationToken
      type: Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken
      description: "\nOptional. Your documentation here.\n"
    - id: maxCount
      type: System.Nullable{System.Int32}
      description: "\nOptional. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.EventListResponse}
      description: "\nYour documentation here.\n"
  nameWithType.vb: FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ExecuteEventQuerySegmentedAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery, Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken, System.Nullable(Of System.Int32))
  name.vb: ExecuteEventQuerySegmentedAsync(IFarmOperations, EventQuery, EventQueryContinuationToken, Nullable(Of Int32))
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  id: BeginCollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCollectLog(IFarmOperations, String, String, LogCollectParameters)
  nameWithType: FarmOperationsExtensions.BeginCollectLog(IFarmOperations, String, String, LogCollectParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginCollectLog
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18614
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static LogCollectResponse BeginCollectLog(this IFarmOperations operations, string resourceGroupName, string farmId, LogCollectParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCollectLog(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As LogCollectParameters) As LogCollectResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  id: BeginCollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCollectLogAsync(IFarmOperations, String, String, LogCollectParameters)
  nameWithType: FarmOperationsExtensions.BeginCollectLogAsync(IFarmOperations, String, String, LogCollectParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.BeginCollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: BeginCollectLogAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18644
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<LogCollectResponse> BeginCollectLogAsync(this IFarmOperations operations, string resourceGroupName, string farmId, LogCollectParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCollectLogAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As LogCollectParameters) As Task(Of LogCollectResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  id: CollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: CollectLog(IFarmOperations, String, String, LogCollectParameters)
  nameWithType: FarmOperationsExtensions.CollectLog(IFarmOperations, String, String, LogCollectParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLog(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CollectLog
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18670
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static LogCollectResponse CollectLog(this IFarmOperations operations, string resourceGroupName, string farmId, LogCollectParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CollectLog(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As LogCollectParameters) As LogCollectResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  id: CollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: CollectLogAsync(IFarmOperations, String, String, LogCollectParameters)
  nameWithType: FarmOperationsExtensions.CollectLogAsync(IFarmOperations, String, String, LogCollectParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CollectLogAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CollectLogAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18700
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<LogCollectResponse> CollectLogAsync(this IFarmOperations operations, string resourceGroupName, string farmId, LogCollectParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CollectLogAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As LogCollectParameters) As Task(Of LogCollectResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Create(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Create(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  id: Create(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IFarmOperations, String, String, FarmCreateParameters)
  nameWithType: FarmOperationsExtensions.Create(IFarmOperations, String, String, FarmCreateParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Create(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Create
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18726
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static FarmGetResponse Create(this IFarmOperations operations, string resourceGroupName, string farmId, FarmCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As FarmCreateParameters) As FarmGetResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CreateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CreateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  id: CreateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IFarmOperations, String, String, FarmCreateParameters)
  nameWithType: FarmOperationsExtensions.CreateAsync(IFarmOperations, String, String, FarmCreateParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.CreateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18756
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<FarmGetResponse> CreateAsync(this IFarmOperations operations, string resourceGroupName, string farmId, FarmCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As FarmCreateParameters) As Task(Of FarmGetResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Get(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Get(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  id: Get(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IFarmOperations, String, String)
  nameWithType: FarmOperationsExtensions.Get(IFarmOperations, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Get(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18779
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static FarmGetResponse Get(this IFarmOperations operations, string resourceGroupName, string farmId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IFarmOperations, resourceGroupName As String, farmId As String) As FarmGetResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  id: GetAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IFarmOperations, String, String)
  nameWithType: FarmOperationsExtensions.GetAsync(IFarmOperations, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18806
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<FarmGetResponse> GetAsync(this IFarmOperations operations, string resourceGroupName, string farmId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String) As Task(Of FarmGetResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  id: GetEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetEventQuery(IFarmOperations, String, String, String)
  nameWithType: FarmOperationsExtensions.GetEventQuery(IFarmOperations, String, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQuery(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetEventQuery
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18832
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static EventQuery GetEventQuery(this IFarmOperations operations, string resourceGroupName, string farmId, string filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEventQuery(operations As IFarmOperations, resourceGroupName As String, farmId As String, filter As String) As EventQuery
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: filter
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQueryAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQueryAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  id: GetEventQueryAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetEventQueryAsync(IFarmOperations, String, String, String)
  nameWithType: FarmOperationsExtensions.GetEventQueryAsync(IFarmOperations, String, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetEventQueryAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetEventQueryAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18862
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<EventQuery> GetEventQueryAsync(this IFarmOperations operations, string resourceGroupName, string farmId, string filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEventQueryAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, filter As String) As Task(Of EventQuery)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: filter
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatus(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatus(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  id: GetLogCollectOperationStatus(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetLogCollectOperationStatus(IFarmOperations, String)
  nameWithType: FarmOperationsExtensions.GetLogCollectOperationStatus(IFarmOperations, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatus(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetLogCollectOperationStatus
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18883
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public static LogCollectResponse GetLogCollectOperationStatus(this IFarmOperations operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogCollectOperationStatus(operations As IFarmOperations, operationStatusLink As String) As LogCollectResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatusAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatusAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  id: GetLogCollectOperationStatusAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetLogCollectOperationStatusAsync(IFarmOperations, String)
  nameWithType: FarmOperationsExtensions.GetLogCollectOperationStatusAsync(IFarmOperations, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetLogCollectOperationStatusAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetLogCollectOperationStatusAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18908
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public static Task<LogCollectResponse> GetLogCollectOperationStatusAsync(this IFarmOperations operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogCollectOperationStatusAsync(operations As IFarmOperations, operationStatusLink As String) As Task(Of LogCollectResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitions(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitions(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  id: GetMetricDefinitions(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetMetricDefinitions(IFarmOperations, String, String, String)
  nameWithType: FarmOperationsExtensions.GetMetricDefinitions(IFarmOperations, String, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitions(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetMetricDefinitions
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18934
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static MetricDefinitionsResult GetMetricDefinitions(this IFarmOperations operations, string resourceGroupName, string farmId, string filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMetricDefinitions(operations As IFarmOperations, resourceGroupName As String, farmId As String, filter As String) As MetricDefinitionsResult
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: filter
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitionsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitionsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  id: GetMetricDefinitionsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetMetricDefinitionsAsync(IFarmOperations, String, String, String)
  nameWithType: FarmOperationsExtensions.GetMetricDefinitionsAsync(IFarmOperations, String, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricDefinitionsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetMetricDefinitionsAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18964
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<MetricDefinitionsResult> GetMetricDefinitionsAsync(this IFarmOperations operations, string resourceGroupName, string farmId, string filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMetricDefinitionsAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, filter As String) As Task(Of MetricDefinitionsResult)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: filter
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetrics(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetrics(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  id: GetMetrics(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetMetrics(IFarmOperations, String, String, String)
  nameWithType: FarmOperationsExtensions.GetMetrics(IFarmOperations, String, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetrics(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetMetrics
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 18990
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static MetricsResult GetMetrics(this IFarmOperations operations, string resourceGroupName, string farmId, string filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMetrics(operations As IFarmOperations, resourceGroupName As String, farmId As String, filter As String) As MetricsResult
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: filter
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  id: GetMetricsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetMetricsAsync(IFarmOperations, String, String, String)
  nameWithType: FarmOperationsExtensions.GetMetricsAsync(IFarmOperations, String, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.GetMetricsAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: GetMetricsAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19020
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<MetricsResult> GetMetricsAsync(this IFarmOperations operations, string resourceGroupName, string farmId, string filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMetricsAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, filter As String) As Task(Of MetricsResult)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: filter
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.List(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.List(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  id: List(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IFarmOperations, String)
  nameWithType: FarmOperationsExtensions.List(IFarmOperations, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.List(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19040
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static FarmListResponse List(this IFarmOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IFarmOperations, resourceGroupName As String) As FarmListResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ListAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ListAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  id: ListAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IFarmOperations, String)
  nameWithType: FarmOperationsExtensions.ListAsync(IFarmOperations, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.ListAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19064
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<FarmListResponse> ListAsync(this IFarmOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IFarmOperations, resourceGroupName As String) As Task(Of FarmListResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGc(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGc(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  id: OnDemandGc(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: OnDemandGc(IFarmOperations, String, String)
  nameWithType: FarmOperationsExtensions.OnDemandGc(IFarmOperations, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGc(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OnDemandGc
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19088
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static AzureOperationResponse OnDemandGc(this IFarmOperations operations, string resourceGroupName, string farmId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OnDemandGc(operations As IFarmOperations, resourceGroupName As String, farmId As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGcAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGcAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  id: OnDemandGcAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: OnDemandGcAsync(IFarmOperations, String, String)
  nameWithType: FarmOperationsExtensions.OnDemandGcAsync(IFarmOperations, String, String)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.OnDemandGcAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: OnDemandGcAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19116
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> OnDemandGcAsync(this IFarmOperations operations, string resourceGroupName, string farmId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OnDemandGcAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Update(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Update(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  id: Update(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IFarmOperations, String, String, FarmUpdateParameters)
  nameWithType: FarmOperationsExtensions.Update(IFarmOperations, String, String, FarmUpdateParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.Update(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: Update
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19142
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static FarmGetResponse Update(this IFarmOperations operations, string resourceGroupName, string farmId, FarmUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As FarmUpdateParameters) As FarmGetResponse
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.UpdateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  commentId: M:Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.UpdateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  id: UpdateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations,System.String,System.String,Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IFarmOperations, String, String, FarmUpdateParameters)
  nameWithType: FarmOperationsExtensions.UpdateAsync(IFarmOperations, String, String, FarmUpdateParameters)
  fullName: Microsoft.AzureStack.AzureConsistentStorage.FarmOperationsExtensions.UpdateAsync(Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations, System.String, System.String, Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
      branch: master
      repo: git@github.com:qinezh/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ResourceManagement/AzureStackStorageAdmin/StorageManagement/Generated/StorageAdminManagementClient.cs
    startLine: 19172
  assemblies:
  - Microsoft.AzureStack.AzureConsistentStorage
  namespace: Microsoft.AzureStack.AzureConsistentStorage
  summary: "\nYour documentation here.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/XXXXX.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<FarmGetResponse> UpdateAsync(this IFarmOperations operations, string resourceGroupName, string farmId, FarmUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As IFarmOperations, resourceGroupName As String, farmId As String, parameters As FarmUpdateParameters) As Task(Of FarmGetResponse)
    parameters:
    - id: operations
      type: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
      description: "\nReference to the\nMicrosoft.AzureStack.AzureConsistentStorage.IFarmOperations.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: farmId
      type: System.String
      description: "\nRequired. Your documentation here.\n"
    - id: parameters
      type: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters
      description: "\nRequired. Your documentation here.\n"
    return:
      type: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse}
      description: "\nYour documentation here.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AzureStack.AzureConsistentStorage
  commentId: N:Microsoft.AzureStack.AzureConsistentStorage
  isExternal: false
  name: Microsoft.AzureStack.AzureConsistentStorage
  nameWithType: Microsoft.AzureStack.AzureConsistentStorage
  fullName: Microsoft.AzureStack.AzureConsistentStorage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  name: ToJson()
  nameWithType: QueryHelpers.ToJson()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  parent: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  definition: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  name: ToQueryString()
  nameWithType: QueryHelpers.ToQueryString()
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString()
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: QueryHelpers.ToJson(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson(System.Object)
    name: ToJson
    nameWithType: QueryHelpers.ToJson
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  commentId: T:Microsoft.Azure.Management.SiteRecovery.QueryHelpers
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: QueryHelpers
  nameWithType: QueryHelpers
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers
- uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  isExternal: true
  name: ToQueryString(Object)
  nameWithType: QueryHelpers.ToQueryString(Object)
  fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString(System.Object)
    name: ToQueryString
    nameWithType: QueryHelpers.ToQueryString
    fullName: Microsoft.Azure.Management.SiteRecovery.QueryHelpers.ToQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery
  commentId: N:Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  nameWithType: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
  parent: Microsoft.AzureStack.AzureConsistentStorage
  isExternal: false
  name: IFarmOperations
  nameWithType: IFarmOperations
  fullName: Microsoft.AzureStack.AzureConsistentStorage.IFarmOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: System.Nullable{Guid}
  commentId: '!:System.Nullable{Guid}'
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullname.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{System.Int32}
  commentId: '!:IEnumerable{System.Int32}'
  definition: IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullname.vb: IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{Microsoft.AzureStack.AzureConsistentStorage.EventModel}
  commentId: '!:IEnumerable{Microsoft.AzureStack.AzureConsistentStorage.EventModel}'
  definition: IEnumerable`1
  name: IEnumerable<EventModel>
  nameWithType: IEnumerable<EventModel>
  fullName: IEnumerable<Microsoft.AzureStack.AzureConsistentStorage.EventModel>
  nameWithType.vb: IEnumerable(Of EventModel)
  fullname.vb: IEnumerable(Of Microsoft.AzureStack.AzureConsistentStorage.EventModel)
  name.vb: IEnumerable(Of EventModel)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.EventModel
    name: EventModel
    nameWithType: EventModel
    fullName: Microsoft.AzureStack.AzureConsistentStorage.EventModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.EventModel
    name: EventModel
    nameWithType: EventModel
    fullName: Microsoft.AzureStack.AzureConsistentStorage.EventModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: EventQuery
  nameWithType: EventQuery
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models
  commentId: N:Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: Microsoft.AzureStack.AzureConsistentStorage.Models
  nameWithType: Microsoft.AzureStack.AzureConsistentStorage.Models
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models
- uid: Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken
  parent: Microsoft.AzureStack.AzureConsistentStorage
  isExternal: false
  name: EventQueryContinuationToken
  nameWithType: EventQueryContinuationToken
  fullName: Microsoft.AzureStack.AzureConsistentStorage.EventQueryContinuationToken
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
  parent: Microsoft.AzureStack.AzureConsistentStorage
  isExternal: false
  name: EventListResponse
  nameWithType: EventListResponse
  fullName: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.EventListResponse}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.EventListResponse}'
  definition: Task`1
  name: Task<EventListResponse>
  nameWithType: Task<EventListResponse>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.EventListResponse>
  nameWithType.vb: Task(Of EventListResponse)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.EventListResponse)
  name.vb: Task(Of EventListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
    name: EventListResponse
    nameWithType: EventListResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
    name: EventListResponse
    nameWithType: EventListResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.EventListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: LogCollectParameters
  nameWithType: LogCollectParameters
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectParameters
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: LogCollectResponse
  nameWithType: LogCollectResponse
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse}'
  definition: Task`1
  name: Task<LogCollectResponse>
  nameWithType: Task<LogCollectResponse>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse>
  nameWithType.vb: Task(Of LogCollectResponse)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse)
  name.vb: Task(Of LogCollectResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
    name: LogCollectResponse
    nameWithType: LogCollectResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
    name: LogCollectResponse
    nameWithType: LogCollectResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.LogCollectResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: FarmCreateParameters
  nameWithType: FarmCreateParameters
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmCreateParameters
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: FarmGetResponse
  nameWithType: FarmGetResponse
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse}'
  definition: Task`1
  name: Task<FarmGetResponse>
  nameWithType: Task<FarmGetResponse>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse>
  nameWithType.vb: Task(Of FarmGetResponse)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse)
  name.vb: Task(Of FarmGetResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
    name: FarmGetResponse
    nameWithType: FarmGetResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
    name: FarmGetResponse
    nameWithType: FarmGetResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery}'
  definition: Task`1
  name: Task<EventQuery>
  nameWithType: Task<EventQuery>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery>
  nameWithType.vb: Task(Of EventQuery)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery)
  name.vb: Task(Of EventQuery)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
    name: EventQuery
    nameWithType: EventQuery
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
    name: EventQuery
    nameWithType: EventQuery
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.EventQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: MetricDefinitionsResult
  nameWithType: MetricDefinitionsResult
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult}'
  definition: Task`1
  name: Task<MetricDefinitionsResult>
  nameWithType: Task<MetricDefinitionsResult>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult>
  nameWithType.vb: Task(Of MetricDefinitionsResult)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult)
  name.vb: Task(Of MetricDefinitionsResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
    name: MetricDefinitionsResult
    nameWithType: MetricDefinitionsResult
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
    name: MetricDefinitionsResult
    nameWithType: MetricDefinitionsResult
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricDefinitionsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: MetricsResult
  nameWithType: MetricsResult
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult}'
  definition: Task`1
  name: Task<MetricsResult>
  nameWithType: Task<MetricsResult>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult>
  nameWithType.vb: Task(Of MetricsResult)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult)
  name.vb: Task(Of MetricsResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
    name: MetricsResult
    nameWithType: MetricsResult
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
    name: MetricsResult
    nameWithType: MetricsResult
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.MetricsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: FarmListResponse
  nameWithType: FarmListResponse
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
- uid: Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse}
  commentId: '!:Task{Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse}'
  definition: Task`1
  name: Task<FarmListResponse>
  nameWithType: Task<FarmListResponse>
  fullName: Task<Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse>
  nameWithType.vb: Task(Of FarmListResponse)
  fullname.vb: Task(Of Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse)
  name.vb: Task(Of FarmListResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
    name: FarmListResponse
    nameWithType: FarmListResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
    name: FarmListResponse
    nameWithType: FarmListResponse
    fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmListResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Task{AzureOperationResponse}
  commentId: '!:Task{AzureOperationResponse}'
  definition: Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters
  commentId: T:Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters
  parent: Microsoft.AzureStack.AzureConsistentStorage.Models
  isExternal: false
  name: FarmUpdateParameters
  nameWithType: FarmUpdateParameters
  fullName: Microsoft.AzureStack.AzureConsistentStorage.Models.FarmUpdateParameters
