### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  id: DataStatistics
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.#ctor
  - Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.CloudData
  - Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.ProcessedData
  - Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.Throughput
  - Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.TotalData
  langs:
  - csharp
  - vb
  name: DataStatistics
  nameWithType: DataStatistics
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataStatistics
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nData statistics for a DeviceJob\n"
  example: []
  syntax:
    content: public class DataStatistics
    content.vb: Public Class DataStatistics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.CloudData
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.CloudData
  id: CloudData
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  langs:
  - csharp
  - vb
  name: CloudData
  nameWithType: DataStatistics.CloudData
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.CloudData
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudData
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Data written to cloud (in Bytes)\n"
  example: []
  syntax:
    content: public long CloudData { get; set; }
    content.vb: Public Property CloudData As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.ProcessedData
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.ProcessedData
  id: ProcessedData
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  langs:
  - csharp
  - vb
  name: ProcessedData
  nameWithType: DataStatistics.ProcessedData
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.ProcessedData
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProcessedData
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Data processed (in Bytes)\n"
  example: []
  syntax:
    content: public long ProcessedData { get; set; }
    content.vb: Public Property ProcessedData As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.Throughput
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.Throughput
  id: Throughput
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  langs:
  - csharp
  - vb
  name: Throughput
  nameWithType: DataStatistics.Throughput
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.Throughput
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Throughput
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Average throughput (in Bytes/sec)\n"
  example: []
  syntax:
    content: public long Throughput { get; set; }
    content.vb: Public Property Throughput As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.TotalData
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.TotalData
  id: TotalData
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  langs:
  - csharp
  - vb
  name: TotalData
  nameWithType: DataStatistics.TotalData
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.TotalData
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TotalData
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Total data (in Bytes)\n"
  example: []
  syntax:
    content: public long TotalData { get; set; }
    content.vb: Public Property TotalData As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics
  langs:
  - csharp
  - vb
  name: DataStatistics()
  nameWithType: DataStatistics.DataStatistics()
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.DataStatistics.DataStatistics()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/DataStatistics.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the DataStatistics class.\n"
  example: []
  syntax:
    content: public DataStatistics()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
