### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  commentId: T:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  id: ActivityParameter
  parent: Microsoft.WindowsAzure.Management.Automation.Models
  children:
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.#ctor
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsDynamic
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsMandatory
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Name
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Position
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Type
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipeline
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipelineByPropertyName
  - Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromRemainingArguments
  langs:
  - csharp
  - vb
  name: ActivityParameter
  nameWithType: ActivityParameter
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActivityParameter
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nDefinition of the activity parameter.\n"
  example: []
  syntax:
    content: public class ActivityParameter
    content.vb: Public Class ActivityParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsDynamic
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsDynamic
  id: IsDynamic
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: ActivityParameter.IsDynamic
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsDynamic
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsDynamic
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets a Boolean value that indicates true if the\nparameter is dynamic.\n"
  example: []
  syntax:
    content: public bool IsDynamic { get; set; }
    content.vb: Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsMandatory
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsMandatory
  id: IsMandatory
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: IsMandatory
  nameWithType: ActivityParameter.IsMandatory
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.IsMandatory
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsMandatory
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets a Boolean value that indicates true if the\nparameter is required. If the value is false, the parameter is\noptional.\n"
  example: []
  syntax:
    content: public bool IsMandatory { get; set; }
    content.vb: Public Property IsMandatory As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Name
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ActivityParameter.Name
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the name of the activity parameter.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Position
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Position
  id: Position
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ActivityParameter.Position
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Position
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Position
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the position of the activity parameter.\n"
  example: []
  syntax:
    content: public bool Position { get; set; }
    content.vb: Public Property Position As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Type
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Type
  id: Type
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ActivityParameter.Type
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.Type
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets the type of the activity parameter.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipeline
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipeline
  id: ValueFromPipeline
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: ValueFromPipeline
  nameWithType: ActivityParameter.ValueFromPipeline
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipeline
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ValueFromPipeline
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 98
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets a Boolean value that indicates true if the\nparameter can take values from the incoming pipeline objects. This\nsetting is used if the cmdlet must access the complete input\nobject. false indicates that the parameter cannot take values from\nthe complete input object.\n"
  example: []
  syntax:
    content: public bool ValueFromPipeline { get; set; }
    content.vb: Public Property ValueFromPipeline As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipelineByPropertyName
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipelineByPropertyName
  id: ValueFromPipelineByPropertyName
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: ValueFromPipelineByPropertyName
  nameWithType: ActivityParameter.ValueFromPipelineByPropertyName
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromPipelineByPropertyName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ValueFromPipelineByPropertyName
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets a Boolean value that indicates true if the\nparameter can be filled from a property of the incoming pipeline\nobject that has the same name as this parameter. false indicates\nthat the parameter cannot be filled from the incoming pipeline\nobject property with the same name.\n"
  example: []
  syntax:
    content: public bool ValueFromPipelineByPropertyName { get; set; }
    content.vb: Public Property ValueFromPipelineByPropertyName As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromRemainingArguments
  commentId: P:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromRemainingArguments
  id: ValueFromRemainingArguments
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: ValueFromRemainingArguments
  nameWithType: ActivityParameter.ValueFromRemainingArguments
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ValueFromRemainingArguments
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ValueFromRemainingArguments
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 128
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nOptional. Gets or sets a Boolean value that indicates true if the\ncmdlet parameter accepts all the remaining command-line arguments\nthat are associated with this parameter in the form of an array.\nfalse if the cmdlet parameter does not accept all the remaining\nargument values.\n"
  example: []
  syntax:
    content: public bool ValueFromRemainingArguments { get; set; }
    content.vb: Public Property ValueFromRemainingArguments As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter
  langs:
  - csharp
  - vb
  name: ActivityParameter()
  nameWithType: ActivityParameter.ActivityParameter()
  fullName: Microsoft.WindowsAzure.Management.Automation.Models.ActivityParameter.ActivityParameter()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Automation/AutomationManagement/Generated/Models/ActivityParameter.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Management.Automation
  namespace: Microsoft.WindowsAzure.Management.Automation.Models
  summary: "\nInitializes a new instance of the ActivityParameter class.\n"
  example: []
  syntax:
    content: public ActivityParameter()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Automation.Models
  commentId: N:Microsoft.WindowsAzure.Management.Automation.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Automation.Models
  nameWithType: Microsoft.WindowsAzure.Management.Automation.Models
  fullName: Microsoft.WindowsAzure.Management.Automation.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
