### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  id: StorageAccountCreateParameters
  parent: Microsoft.WindowsAzure.Management.Storage.Models
  children:
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AccountType
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AffinityGroup
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Description
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.ExtendedProperties
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Label
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Location
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Name
  langs:
  - csharp
  - vb
  name: StorageAccountCreateParameters
  nameWithType: StorageAccountCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountCreateParameters
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nParameters supplied to the Create Storage Account operation.\n"
  example: []
  syntax:
    content: public class StorageAccountCreateParameters
    content.vb: Public Class StorageAccountCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AccountType
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AccountType
  id: AccountType
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: AccountType
  nameWithType: StorageAccountCreateParameters.AccountType
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AccountType
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccountType
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. Specifies whether the account supports locally-redundant\nstorage, geo-redundant storage, zone-redundant storage, or read\naccess geo-redundant storage. Possible values are:'Standard_LRS',\n'Standard_ZRS', 'Standard_GRS', and 'Standard_RAGRS'.\n"
  example: []
  syntax:
    content: public string AccountType { get; set; }
    content.vb: Public Property AccountType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AffinityGroup
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AffinityGroup
  id: AffinityGroup
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: AffinityGroup
  nameWithType: StorageAccountCreateParameters.AffinityGroup
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.AffinityGroup
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AffinityGroup
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. The name of an existing affinity group in the specified\nsubscription. Required if Location is not specified. You can\ninclude either a Location or AffinityGroup element in the request\nbody, but not both. To list available affinity groups, use the\nList Affinity Groups operation.\n"
  example: []
  syntax:
    content: public string AffinityGroup { get; set; }
    content.vb: Public Property AffinityGroup As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Description
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: StorageAccountCreateParameters.Description
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Description
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. A description for the storage account. The description\nmay be up to 1024 characters in length.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.ExtendedProperties
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.ExtendedProperties
  id: ExtendedProperties
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: ExtendedProperties
  nameWithType: StorageAccountCreateParameters.ExtendedProperties
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.ExtendedProperties
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExtendedProperties
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. Represents the name of an extended storage account\nproperty. Each extended property must have a defined name and a\nvalue. You can have a maximum of 50 extended property name/value\npairs. The maximum length of the Name element is 64 characters,\nonly alphanumeric characters and underscores are valid in the\nName, and the name must start with a letter. Attempting to use\nother characters, starting the Name with a non-letter character,\nor entering a name that is identical to that of another extended\nproperty owned by the same storage account will result in a status\ncode 400 (Bad Request) error. Each extended property value has a\nmaximum length of 255 characters.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> ExtendedProperties { get; set; }
    content.vb: Public Property ExtendedProperties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Label
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: StorageAccountCreateParameters.Label
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Label
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Label
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nRequired. A name for the storage account, specified as\nabase64-encoded string. The name may be up to 100 characters in\nlength. The name can be used identify the storage account for your\ntracking purposes.\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Location
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Location
  id: Location
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: StorageAccountCreateParameters.Location
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Location
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 128
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. The location where the storage account is created.\nRequired if AffinityGroup is not specified. You can include either\na Location or AffinityGroup element in the request body, but not\nboth. To list available locations, use the List Locations\noperation.\n"
  example: []
  syntax:
    content: public string Location { get; set; }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Name
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StorageAccountCreateParameters.Name
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nRequired. A name for the storage account, unique within Azure.\nStorage account names must be between 3 and 24 characters in\nlength, and must use numbers and lower-case letters only. This\nname is the DNS prefix name and can be used to access blobs,\nqueues, and tables in the storage account. For example:\nhttp://ServiceName.blob.core.windows.net/mycontainer/.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: StorageAccountCreateParameters()
  nameWithType: StorageAccountCreateParameters.StorageAccountCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.StorageAccountCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 154
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccountCreateParameters\nclass.\n"
  example: []
  syntax:
    content: public StorageAccountCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters
  langs:
  - csharp
  - vb
  name: StorageAccountCreateParameters(String, String)
  nameWithType: StorageAccountCreateParameters.StorageAccountCreateParameters(String, String)
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountCreateParameters.StorageAccountCreateParameters(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountCreateParameters.cs
    startLine: 163
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccountCreateParameters\nclass with required arguments.\n"
  example: []
  syntax:
    content: public StorageAccountCreateParameters(string name, string label)
    content.vb: Public Sub New(name As String, label As String)
    parameters:
    - id: name
      type: System.String
    - id: label
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Storage.Models
  commentId: N:Microsoft.WindowsAzure.Management.Storage.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Storage.Models
  nameWithType: Microsoft.WindowsAzure.Management.Storage.Models
  fullName: Microsoft.WindowsAzure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
