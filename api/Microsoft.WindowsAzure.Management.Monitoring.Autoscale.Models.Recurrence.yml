### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence
  id: Recurrence
  parent: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  children:
  - Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.#ctor
  - Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Frequency
  - Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Schedule
  langs:
  - csharp
  - vb
  name: Recurrence
  nameWithType: Recurrence
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Recurrence
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  syntax:
    content: public class Recurrence
    content.vb: Public Class Recurrence
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Frequency
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Frequency
  id: Frequency
  parent: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: Recurrence.Frequency
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Frequency
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frequency
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  summary: "\nOptional.\n"
  example: []
  syntax:
    content: public RecurrenceFrequency Frequency { get; set; }
    content.vb: Public Property Frequency As RecurrenceFrequency
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrenceFrequency
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Schedule
  commentId: P:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Schedule
  id: Schedule
  parent: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Schedule
  nameWithType: Recurrence.Schedule
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Schedule
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Schedule
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  summary: "\nOptional.\n"
  example: []
  syntax:
    content: public RecurrentSchedule Schedule { get; set; }
    content.vb: Public Property Schedule As RecurrentSchedule
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrentSchedule
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Recurrence()
  nameWithType: Recurrence.Recurrence()
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.Recurrence.Recurrence()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Autoscale/Models/Recurrence.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  summary: "\nInitializes a new instance of the Recurrence class.\n"
  example: []
  syntax:
    content: public Recurrence()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  commentId: N:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  nameWithType: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrenceFrequency
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrenceFrequency
  parent: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  isExternal: false
  name: RecurrenceFrequency
  nameWithType: RecurrenceFrequency
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrenceFrequency
- uid: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrentSchedule
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrentSchedule
  parent: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models
  isExternal: false
  name: RecurrentSchedule
  nameWithType: RecurrentSchedule
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Autoscale.Models.RecurrentSchedule
