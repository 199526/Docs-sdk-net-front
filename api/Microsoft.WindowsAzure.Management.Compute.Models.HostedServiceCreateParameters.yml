### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  id: HostedServiceCreateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.AffinityGroup
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Description
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ExtendedProperties
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Location
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ReverseDnsFqdn
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ServiceName
  langs:
  - csharp
  - vb
  name: HostedServiceCreateParameters
  nameWithType: HostedServiceCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostedServiceCreateParameters
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nParameters supplied to the Create Hosted Service operation.\n"
  example: []
  syntax:
    content: public class HostedServiceCreateParameters
    content.vb: Public Class HostedServiceCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.AffinityGroup
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.AffinityGroup
  id: AffinityGroup
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: AffinityGroup
  nameWithType: HostedServiceCreateParameters.AffinityGroup
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.AffinityGroup
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AffinityGroup
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The name of an existing affinity group associated with\nthis subscription. Required if Location is not specified. This\nname is a GUID and can be retrieved by examining the name element\nof the response body returned by the List Affinity Groups\noperation. Specify either Location or AffinityGroup, but not both.\nTo list available affinity groups, use the List Affinity Groups\noperation.\n"
  example: []
  syntax:
    content: public string AffinityGroup { get; set; }
    content.vb: Public Property AffinityGroup As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Description
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: HostedServiceCreateParameters.Description
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Description
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. A description for the cloud service. The description can\nbe up to 1024 characters in length.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ExtendedProperties
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ExtendedProperties
  id: ExtendedProperties
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: ExtendedProperties
  nameWithType: HostedServiceCreateParameters.ExtendedProperties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ExtendedProperties
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExtendedProperties
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Represents the name of an extended cloud service\nproperty. Each extended property must have a defined name and a\nvalue. You can have a maximum of 50 extended property name and\nvalue pairs. The maximum length of the name element is 64\ncharacters, only alphanumeric characters and underscores are valid\nin the name, and it must start with a letter. Attempting to use\nother characters, starting with a non-letter character, or\nentering a name that is identical to that of another extended\nproperty owned by the same service will result in a status code\n400 (Bad Request) error. Each extended property value has a\nmaximum length of 255 characters.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> ExtendedProperties { get; set; }
    content.vb: Public Property ExtendedProperties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: HostedServiceCreateParameters.Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Label
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Label
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nRequired. A name for the cloud service. The name can be up to 100\ncharacters in length. The name can be used to identify the storage\naccount for your tracking purposes.\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Location
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Location
  id: Location
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: HostedServiceCreateParameters.Location
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.Location
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The location where the cloud service will be created.\nRequired if AffinityGroup is not specified. Specify either\nLocation or AffinityGroup, but not both. To list available\nlocations, use the List Locations operation.\n"
  example: []
  syntax:
    content: public string Location { get; set; }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ReverseDnsFqdn
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ReverseDnsFqdn
  id: ReverseDnsFqdn
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: ReverseDnsFqdn
  nameWithType: HostedServiceCreateParameters.ReverseDnsFqdn
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ReverseDnsFqdn
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReverseDnsFqdn
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Dns address to which the cloud service's IP address\nresolves when queried using a reverse Dns query.\n"
  example: []
  syntax:
    content: public string ReverseDnsFqdn { get; set; }
    content.vb: Public Property ReverseDnsFqdn As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ServiceName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ServiceName
  id: ServiceName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: HostedServiceCreateParameters.ServiceName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.ServiceName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceName
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nRequired. A name for the cloud service that is unique within Azure.\nThis name is the DNS prefix name and can be used to access the\nservice.\n"
  example: []
  syntax:
    content: public string ServiceName { get; set; }
    content.vb: Public Property ServiceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: HostedServiceCreateParameters()
  nameWithType: HostedServiceCreateParameters.HostedServiceCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.HostedServiceCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 149
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the HostedServiceCreateParameters\nclass.\n"
  example: []
  syntax:
    content: public HostedServiceCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters
  langs:
  - csharp
  - vb
  name: HostedServiceCreateParameters(String, String)
  nameWithType: HostedServiceCreateParameters.HostedServiceCreateParameters(String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceCreateParameters.HostedServiceCreateParameters(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceCreateParameters.cs
    startLine: 158
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the HostedServiceCreateParameters\nclass with required arguments.\n"
  example: []
  syntax:
    content: public HostedServiceCreateParameters(string serviceName, string label)
    content.vb: Public Sub New(serviceName As String, label As String)
    parameters:
    - id: serviceName
      type: System.String
    - id: label
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
