### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters
  id: JobListWithFilterParameters
  parent: Microsoft.WindowsAzure.Scheduler.Models
  children:
  - Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.#ctor
  - Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobState)
  - Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.State
  langs:
  - csharp
  - vb
  name: JobListWithFilterParameters
  nameWithType: JobListWithFilterParameters
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobListWithFilterParameters
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nParameters supplied to the List Jobs with filter operation.\n"
  example: []
  syntax:
    content: 'public class JobListWithFilterParameters : JobListParameters'
    content.vb: >-
      Public Class JobListWithFilterParameters
          Inherits JobListParameters
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Scheduler.Models.JobListParameters
  inheritedMembers:
  - Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Skip
  - Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Top
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.State
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.State
  id: State
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters
  langs:
  - csharp
  - vb
  name: State
  nameWithType: JobListWithFilterParameters.State
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.State
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nRequired. Filter the job history to have it only return job\nexecution attempts having a particular State, enabled, disabled,\nfaulted, or completed.\n"
  example: []
  syntax:
    content: public JobState State { get; set; }
    content.vb: Public Property State As JobState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Scheduler.Models.JobState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters
  langs:
  - csharp
  - vb
  name: JobListWithFilterParameters()
  nameWithType: JobListWithFilterParameters.JobListWithFilterParameters()
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.JobListWithFilterParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nInitializes a new instance of the JobListWithFilterParameters class.\n"
  example: []
  syntax:
    content: public JobListWithFilterParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobState)
  commentId: M:Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobState)
  id: '#ctor(Microsoft.WindowsAzure.Scheduler.Models.JobState)'
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters
  langs:
  - csharp
  - vb
  name: JobListWithFilterParameters(JobState)
  nameWithType: JobListWithFilterParameters.JobListWithFilterParameters(JobState)
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListWithFilterParameters.JobListWithFilterParameters(Microsoft.WindowsAzure.Scheduler.Models.JobState)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/JobListWithFilterParameters.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Scheduler.Models
  summary: "\nInitializes a new instance of the JobListWithFilterParameters class\nwith required arguments.\n"
  example: []
  syntax:
    content: public JobListWithFilterParameters(JobState state)
    content.vb: Public Sub New(state As JobState)
    parameters:
    - id: state
      type: Microsoft.WindowsAzure.Scheduler.Models.JobState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Scheduler.Models
  commentId: N:Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Scheduler.Models
  nameWithType: Microsoft.WindowsAzure.Scheduler.Models
  fullName: Microsoft.WindowsAzure.Scheduler.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobListParameters
  parent: Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: JobListParameters
  nameWithType: JobListParameters
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Skip
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Skip
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters
  isExternal: false
  name: Skip
  nameWithType: JobListParameters.Skip
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Skip
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Top
  commentId: P:Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Top
  parent: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters
  isExternal: false
  name: Top
  nameWithType: JobListParameters.Top
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobListParameters.Top
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Scheduler.Models.JobState
  commentId: T:Microsoft.WindowsAzure.Scheduler.Models.JobState
  parent: Microsoft.WindowsAzure.Scheduler.Models
  isExternal: false
  name: JobState
  nameWithType: JobState
  fullName: Microsoft.WindowsAzure.Scheduler.Models.JobState
