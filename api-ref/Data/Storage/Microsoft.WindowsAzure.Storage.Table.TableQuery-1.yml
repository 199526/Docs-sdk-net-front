### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  id: TableQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.#ctor
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.FilterString
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Select(IList{System.String})
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.SelectColumns
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Take(System.Nullable{System.Int32})
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.TakeCount
  - Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Where(System.String)
  langs:
  - csharp
  - vb
  name: TableQuery<TElement>
  nameWithType: TableQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>
  type: Class
  source:
    remote:
      path: Lib/WindowsRuntime/Table/TableQueryGeneric.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableQuery
    path: Lib/WindowsRuntime/Table/TableQueryGeneric.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nRepresents a query against a Microsoft Azure table.\n"
  example: []
  syntax:
    content: 'public class TableQuery<TElement> : object where TElement : ITableEntity, new ()'
    content.vb: >-
      Public Class TableQuery(Of TElement As {ITableEntity, New})
          Inherits Object
    typeParameters:
    - id: TElement
  inheritance:
  - System.Object
  nameWithType.vb: TableQuery(Of TElement)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement)
  name.vb: TableQuery(Of TElement)
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.TakeCount
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.TakeCount
  id: TakeCount
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: TakeCount
  nameWithType: TableQuery<TElement>.TakeCount
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.TakeCount
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableQueryGeneric.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TakeCount
    path: Lib/Common/Table/TableQueryGeneric.Common.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the number of entities the query returns specified in the table query. \n"
  example: []
  syntax:
    content: public int ? TakeCount { get; set; }
    content.vb: Public Property TakeCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The maximum number of entities for the table query to return.
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.TakeCount*
  nameWithType.vb: TableQuery(Of TElement).TakeCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).TakeCount
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.FilterString
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.FilterString
  id: FilterString
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: FilterString
  nameWithType: TableQuery<TElement>.FilterString
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.FilterString
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableQueryGeneric.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FilterString
    path: Lib/Common/Table/TableQueryGeneric.Common.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the filter expression to use in the table query.\n"
  example: []
  syntax:
    content: public string FilterString { get; set; }
    content.vb: Public Property FilterString As String
    parameters: []
    return:
      type: System.String
      description: A string containing the filter expression to use in the query.
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.FilterString*
  nameWithType.vb: TableQuery(Of TElement).FilterString
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).FilterString
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.SelectColumns
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.SelectColumns
  id: SelectColumns
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: SelectColumns
  nameWithType: TableQuery<TElement>.SelectColumns
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.SelectColumns
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableQueryGeneric.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SelectColumns
    path: Lib/Common/Table/TableQueryGeneric.Common.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the property names of the table entity properties to return when the table query is executed.\n"
  example: []
  syntax:
    content: public IList<string> SelectColumns { get; set; }
    content.vb: Public Property SelectColumns As IList(Of String)
    parameters: []
    return:
      type: IList{System.String}
      description: A list of strings containing the property names of the table entity properties to return when the query is executed.
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.SelectColumns*
  nameWithType.vb: TableQuery(Of TElement).SelectColumns
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).SelectColumns
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Select(IList{System.String})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Select(IList{System.String})
  id: Select(IList{System.String})
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: Select(IList<String>)
  nameWithType: TableQuery<TElement>.Select(IList<String>)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.Select(IList<System.String>)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableQueryGeneric.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Select
    path: Lib/Common/Table/TableQueryGeneric.Common.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDefines the property names of the table entity properties to return when the table query is executed. \n"
  remarks: "The select clause is optional on a table query, and is used to limit the table properties returned from the server. \nBy default, a query will return all properties from the table entity."
  example: []
  syntax:
    content: public TableQuery<TElement> Select(IList<string> columns)
    content.vb: Public Function Select(columns As IList(Of String)) As TableQuery(Of TElement)
    parameters:
    - id: columns
      type: IList{System.String}
      description: A list of string objects containing the property names of the table entity properties to return when the query is executed.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> instance set with the table entity properties to return.
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Select*
  nameWithType.vb: TableQuery(Of TElement).Select(IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).Select(IList(Of System.String))
  name.vb: Select(IList(Of String))
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Take(System.Nullable{System.Int32})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Take(System.Nullable{System.Int32})
  id: Take(System.Nullable{System.Int32})
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: Take(Nullable<Int32>)
  nameWithType: TableQuery<TElement>.Take(Nullable<Int32>)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.Take(System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableQueryGeneric.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Take
    path: Lib/Common/Table/TableQueryGeneric.Common.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDefines the upper bound for the number of entities the query returns.\n"
  example: []
  syntax:
    content: public TableQuery<TElement> Take(int ? take)
    content.vb: Public Function Take(take As Integer?) As TableQuery(Of TElement)
    parameters:
    - id: take
      type: System.Nullable{System.Int32}
      description: The maximum number of entities for the table query to return.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> instance set with the number of entities to return.
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Take*
  nameWithType.vb: TableQuery(Of TElement).Take(Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).Take(System.Nullable(Of System.Int32))
  name.vb: Take(Nullable(Of Int32))
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Where(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Where(System.String)
  id: Where(System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: Where(String)
  nameWithType: TableQuery<TElement>.Where(String)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.Where(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableQueryGeneric.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Where
    path: Lib/Common/Table/TableQueryGeneric.Common.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDefines a filter expression for the table query. Only entities that satisfy the specified filter expression will be returned by the query. \n"
  remarks: Setting a filter expression is optional; by default, all entities in the table are returned if no filter expression is specified in the table query.
  example: []
  syntax:
    content: public TableQuery<TElement> Where(string filter)
    content.vb: Public Function Where(filter As String) As TableQuery(Of TElement)
    parameters:
    - id: filter
      type: System.String
      description: A string containing the filter expression to apply to the table query.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> instance set with the filter on entities to return.
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Where*
  nameWithType.vb: TableQuery(Of TElement).Where(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).Where(System.String)
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  langs:
  - csharp
  - vb
  name: TableQuery()
  nameWithType: TableQuery<TElement>.TableQuery()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.TableQuery()
  type: Constructor
  source:
    remote:
      path: Lib/WindowsRuntime/Table/TableQueryGeneric.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/WindowsRuntime/Table/TableQueryGeneric.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TableQuery()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.#ctor*
  nameWithType.vb: TableQuery(Of TElement).TableQuery()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).TableQuery()
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.TakeCount*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.TakeCount
  isExternal: false
  name: TakeCount
  nameWithType: TableQuery<TElement>.TakeCount
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.TakeCount
  nameWithType.vb: TableQuery(Of TElement).TakeCount
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).TakeCount
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.FilterString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.FilterString
  isExternal: false
  name: FilterString
  nameWithType: TableQuery<TElement>.FilterString
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.FilterString
  nameWithType.vb: TableQuery(Of TElement).FilterString
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).FilterString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.SelectColumns*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.SelectColumns
  isExternal: false
  name: SelectColumns
  nameWithType: TableQuery<TElement>.SelectColumns
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.SelectColumns
  nameWithType.vb: TableQuery(Of TElement).SelectColumns
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).SelectColumns
- uid: IList{System.String}
  commentId: '!:IList{System.String}'
  definition: IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuery
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuery
  nameWithType: TableQuery
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Select*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Select
  isExternal: false
  name: Select
  nameWithType: TableQuery<TElement>.Select
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.Select
  nameWithType.vb: TableQuery(Of TElement).Select
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).Select
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuery<TElement>
  nameWithType: TableQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>
  nameWithType.vb: TableQuery(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement)
  name.vb: TableQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    nameWithType: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    nameWithType: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Take*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Take
  isExternal: false
  name: Take
  nameWithType: TableQuery<TElement>.Take
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.Take
  nameWithType.vb: TableQuery(Of TElement).Take
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).Take
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Where*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.Where
  isExternal: false
  name: Where
  nameWithType: TableQuery<TElement>.Where
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.Where
  nameWithType.vb: TableQuery(Of TElement).Where
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).Where
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableQuery`1.#ctor
  isExternal: false
  name: TableQuery
  nameWithType: TableQuery<TElement>.TableQuery
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>.TableQuery
  nameWithType.vb: TableQuery(Of TElement).TableQuery
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement).TableQuery
