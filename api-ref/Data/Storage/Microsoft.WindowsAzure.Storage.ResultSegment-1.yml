### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1
  commentId: T:Microsoft.WindowsAzure.Storage.ResultSegment`1
  id: ResultSegment`1
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  - Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  langs:
  - csharp
  - vb
  name: ResultSegment<TElement>
  nameWithType: ResultSegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>
  type: Class
  source:
    remote:
      path: Lib/Common/ResultSegment.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ResultSegment
    path: Lib/Common/ResultSegment.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents a result segment that was retrieved from the total set of possible results.\n"
  example: []
  syntax:
    content: 'public class ResultSegment<TElement> : object'
    content.vb: >-
      Public Class ResultSegment(Of TElement)
          Inherits Object
    typeParameters:
    - id: TElement
      description: The type of the element returned in the result segment.
  inheritance:
  - System.Object
  nameWithType.vb: ResultSegment(Of TElement)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement)
  name.vb: ResultSegment(Of TElement)
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  commentId: P:Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  id: Results
  parent: Microsoft.WindowsAzure.Storage.ResultSegment`1
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: ResultSegment<TElement>.Results
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>.Results
  type: Property
  source:
    remote:
      path: Lib/Common/ResultSegment.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Results
    path: Lib/Common/ResultSegment.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets an enumerable collection of results.\n"
  example: []
  syntax:
    content: public List<TElement> Results { get; }
    content.vb: Public ReadOnly Property Results As List(Of TElement)
    parameters: []
    return:
      type: List{{TElement}}
      description: An enumerable collection of results of type <code>TElement</code>.
  overload: Microsoft.WindowsAzure.Storage.ResultSegment`1.Results*
  nameWithType.vb: ResultSegment(Of TElement).Results
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement).Results
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  commentId: P:Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.WindowsAzure.Storage.ResultSegment`1
  langs:
  - csharp
  - vb
  name: ContinuationToken
  nameWithType: ResultSegment<TElement>.ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>.ContinuationToken
  type: Property
  source:
    remote:
      path: Lib/Common/ResultSegment.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContinuationToken
    path: Lib/Common/ResultSegment.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets a continuation token to use to retrieve the next set of results with a subsequent call to the operation.\n"
  example: []
  syntax:
    content: public IContinuationToken ContinuationToken { get; }
    content.vb: Public ReadOnly Property ContinuationToken As IContinuationToken
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.IContinuationToken
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.IContinuationToken" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken*
  nameWithType.vb: ResultSegment(Of TElement).ContinuationToken
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement).ContinuationToken
references:
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1.Results*
  commentId: Overload:Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  isExternal: false
  name: Results
  nameWithType: ResultSegment<TElement>.Results
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>.Results
  nameWithType.vb: ResultSegment(Of TElement).Results
  fullname.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement).Results
- uid: List{{TElement}}
  commentId: '!:List{`0}'
  definition: List`1
  name: List<TElement>
  nameWithType: List<TElement>
  fullName: List<TElement>
  nameWithType.vb: List(Of TElement)
  fullname.vb: List(Of TElement)
  name.vb: List(Of TElement)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullname.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IContinuationToken
  commentId: T:Microsoft.WindowsAzure.Storage.IContinuationToken
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IContinuationToken
  nameWithType: IContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.IContinuationToken
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken*
  commentId: Overload:Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  isExternal: false
  name: ContinuationToken
  nameWithType: ResultSegment<TElement>.ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>.ContinuationToken
  nameWithType.vb: ResultSegment(Of TElement).ContinuationToken
  fullname.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement).ContinuationToken
