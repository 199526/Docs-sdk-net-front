### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.StorageException
  commentId: T:Microsoft.WindowsAzure.Storage.StorageException
  id: StorageException
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,Exception)
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String,Exception)
  - Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  - Microsoft.WindowsAzure.Storage.StorageException.ToString
  - Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  - Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  - Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation},HttpResponseMessage)
  langs:
  - csharp
  - vb
  name: StorageException
  nameWithType: StorageException
  fullName: Microsoft.WindowsAzure.Storage.StorageException
  type: Class
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StorageException
    path: Lib/Common/StorageException.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents an exception thrown by the Azure Storage service.\n"
  example: []
  syntax:
    content: 'public class StorageException : Exception'
    content.vb: >-
      Public Class StorageException
          Inherits Exception
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  commentId: P:Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  id: RequestInformation
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: RequestInformation
  nameWithType: StorageException.RequestInformation
  fullName: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  type: Property
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestInformation
    path: Lib/Common/StorageException.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.RequestResult\" data-throw-if-not-resolved=\"false\"></xref> object for this <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public RequestResult RequestInformation { get; }
    content.vb: Public ReadOnly Property RequestInformation As RequestResult
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref> object for this <xref href="Microsoft.WindowsAzure.Storage.StorageException" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException()
  nameWithType: StorageException.StorageException()
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException()
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public StorageException()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(String)
  nameWithType: StorageException.StorageException(String)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified error message.\n"
  example: []
  syntax:
    content: public StorageException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String,Exception)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String,Exception)
  id: '#ctor(System.String,Exception)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(String, Exception)
  nameWithType: StorageException.StorageException(String, Exception)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(System.String, Exception)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that generated this exception.\n"
  example: []
  syntax:
    content: public StorageException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: The exception error message.
    - id: innerException
      type: Exception
      description: The inner exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,Exception)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,Exception)
  id: '#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,Exception)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(RequestResult, String, Exception)
  nameWithType: StorageException.StorageException(RequestResult, String, Exception)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(Microsoft.WindowsAzure.Storage.RequestResult, System.String, Exception)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified parameters.\n"
  example: []
  syntax:
    content: public StorageException(RequestResult res, string message, Exception inner)
    content.vb: Public Sub New(res As RequestResult, message As String, inner As Exception)
    parameters:
    - id: res
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    - id: message
      type: System.String
      description: The exception message.
    - id: inner
      type: Exception
      description: The inner exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  id: TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: TranslateException(Exception, RequestResult)
  nameWithType: StorageException.TranslateException(Exception, RequestResult)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception, Microsoft.WindowsAzure.Storage.RequestResult)
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TranslateException
    path: Lib/Common/StorageException.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nTranslates the specified exception into a <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static StorageException TranslateException(Exception ex, RequestResult reqResult)
    content.vb: Public Shared Function TranslateException(ex As Exception, reqResult As RequestResult) As StorageException
    parameters:
    - id: ex
      type: Exception
      description: The exception to translate.
    - id: reqResult
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    return:
      type: Microsoft.WindowsAzure.Storage.StorageException
      description: The storage exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  id: TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: TranslateException(Exception, RequestResult, Func<Stream, StorageExtendedErrorInformation>)
  nameWithType: StorageException.TranslateException(Exception, RequestResult, Func<Stream, StorageExtendedErrorInformation>)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception, Microsoft.WindowsAzure.Storage.RequestResult, Func<Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation>)
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TranslateException
    path: Lib/Common/StorageException.cs
    startLine: 151
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nTranslates the specified exception into a storage exception.\n"
  example: []
  syntax:
    content: public static StorageException TranslateException(Exception ex, RequestResult reqResult, Func<Stream, StorageExtendedErrorInformation> parseError)
    content.vb: Public Shared Function TranslateException(ex As Exception, reqResult As RequestResult, parseError As Func(Of Stream, StorageExtendedErrorInformation)) As StorageException
    parameters:
    - id: ex
      type: Exception
      description: The exception to translate.
    - id: reqResult
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    - id: parseError
      type: Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}
      description: The delegate used to parse the error to get extended error information.
    return:
      type: Microsoft.WindowsAzure.Storage.StorageException
      description: The storage exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  nameWithType.vb: StorageException.TranslateException(Exception, RequestResult, Func(Of Stream, StorageExtendedErrorInformation))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception, Microsoft.WindowsAzure.Storage.RequestResult, Func(Of Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation))
  name.vb: TranslateException(Exception, RequestResult, Func(Of Stream, StorageExtendedErrorInformation))
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation},HttpResponseMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation},HttpResponseMessage)
  id: TranslateException(Exception,Microsoft.WindowsAzure.Storage.RequestResult,Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation},HttpResponseMessage)
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: TranslateException(Exception, RequestResult, Func<Stream, StorageExtendedErrorInformation>, HttpResponseMessage)
  nameWithType: StorageException.TranslateException(Exception, RequestResult, Func<Stream, StorageExtendedErrorInformation>, HttpResponseMessage)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception, Microsoft.WindowsAzure.Storage.RequestResult, Func<Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation>, HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TranslateException
    path: Lib/Common/StorageException.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nTranslates the specified exception into a storage exception.\n"
  example: []
  syntax:
    content: public static StorageException TranslateException(Exception ex, RequestResult reqResult, Func<Stream, StorageExtendedErrorInformation> parseError, HttpResponseMessage response)
    content.vb: Public Shared Function TranslateException(ex As Exception, reqResult As RequestResult, parseError As Func(Of Stream, StorageExtendedErrorInformation), response As HttpResponseMessage) As StorageException
    parameters:
    - id: ex
      type: Exception
      description: The exception to translate.
    - id: reqResult
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    - id: parseError
      type: Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}
      description: The delegate used to parse the error to get extended error information.
    - id: response
      type: HttpResponseMessage
      description: HTTP response message
    return:
      type: Microsoft.WindowsAzure.Storage.StorageException
      description: The storage exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  nameWithType.vb: StorageException.TranslateException(Exception, RequestResult, Func(Of Stream, StorageExtendedErrorInformation), HttpResponseMessage)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(Exception, Microsoft.WindowsAzure.Storage.RequestResult, Func(Of Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation), HttpResponseMessage)
  name.vb: TranslateException(Exception, RequestResult, Func(Of Stream, StorageExtendedErrorInformation), HttpResponseMessage)
- uid: Microsoft.WindowsAzure.Storage.StorageException.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.ToString
  id: ToString
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StorageException.ToString()
  fullName: Microsoft.WindowsAzure.Storage.StorageException.ToString()
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ToString
    path: Lib/Common/StorageException.cs
    startLine: 450
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents an exception thrown by the Microsoft Azure storage client library. \n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents the exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  commentId: T:Microsoft.WindowsAzure.Storage.RequestResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: RequestResult
  nameWithType: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
- uid: Microsoft.WindowsAzure.Storage.StorageException
  commentId: T:Microsoft.WindowsAzure.Storage.StorageException
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageException
  nameWithType: StorageException
  fullName: Microsoft.WindowsAzure.Storage.StorageException
- uid: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  isExternal: false
  name: RequestInformation
  nameWithType: StorageException.RequestInformation
  fullName: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.#ctor
  isExternal: false
  name: StorageException
  nameWithType: StorageException.StorageException
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.TranslateException
  isExternal: false
  name: TranslateException
  nameWithType: StorageException.TranslateException
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException
- uid: Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}
  commentId: '!:Func{Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}'
  definition: Func`2
  name: Func<Stream, StorageExtendedErrorInformation>
  nameWithType: Func<Stream, StorageExtendedErrorInformation>
  fullName: Func<Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation>
  nameWithType.vb: Func(Of Stream, StorageExtendedErrorInformation)
  fullname.vb: Func(Of Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation)
  name.vb: Func(Of Stream, StorageExtendedErrorInformation)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
    name: StorageExtendedErrorInformation
    nameWithType: StorageExtendedErrorInformation
    fullName: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
    name: StorageExtendedErrorInformation
    nameWithType: StorageExtendedErrorInformation
    fullName: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullname.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpResponseMessage
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage
- uid: Microsoft.WindowsAzure.Storage.StorageException.ToString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.ToString
  isExternal: false
  name: ToString
  nameWithType: StorageException.ToString
  fullName: Microsoft.WindowsAzure.Storage.StorageException.ToString
