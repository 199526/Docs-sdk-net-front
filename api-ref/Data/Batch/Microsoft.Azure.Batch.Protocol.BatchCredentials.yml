### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.BatchCredentials
  commentId: T:Microsoft.Azure.Batch.Protocol.BatchCredentials
  id: BatchCredentials
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: BatchCredentials
  nameWithType: BatchCredentials
  fullName: Microsoft.Azure.Batch.Protocol.BatchCredentials
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/BatchCredentials.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchCredentials
    path: src/Batch/Client/Src/Protocol/BatchCredentials.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nBase class for credentials used to authenticate a HTTP request to Azure Batch.\n"
  example: []
  syntax:
    content: 'public abstract class BatchCredentials : ServiceClientCredentials'
    content.vb: >-
      Public MustInherit Class BatchCredentials
          Inherits ServiceClientCredentials
  inheritance:
  - System.Object
  - Microsoft.Rest.ServiceClientCredentials
  inheritedMembers:
  - Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{{T}})
  - Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.Protocol.BatchCredentials
  langs:
  - csharp
  - vb
  name: SignRequestAsync(HttpRequestMessage, CancellationToken)
  nameWithType: BatchCredentials.SignRequestAsync(HttpRequestMessage, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/BatchCredentials.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SignRequestAsync
    path: src/Batch/Client/Src/Protocol/BatchCredentials.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nSigns a HTTP request with the current <xref href=\"Microsoft.Azure.Batch.Protocol.BatchCredentials\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract Task SignRequestAsync(HttpRequestMessage httpRequest, CancellationToken cancellationToken)
    content.vb: Public MustOverride Function SignRequestAsync(httpRequest As HttpRequestMessage, cancellationToken As CancellationToken) As Task
    parameters:
    - id: httpRequest
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request to be signed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous signing operation.
  overload: Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Rest.ServiceClientCredentials
  commentId: T:Microsoft.Rest.ServiceClientCredentials
  parent: Microsoft.Rest
  isExternal: true
  name: ServiceClientCredentials
  nameWithType: ServiceClientCredentials
  fullName: Microsoft.Rest.ServiceClientCredentials
- uid: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{{T}})
  commentId: M:Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
  parent: Microsoft.Rest.ServiceClientCredentials
  definition: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
  name: InitializeServiceClient<T>(ServiceClient<T>)
  nameWithType: ServiceClientCredentials.InitializeServiceClient<T>(ServiceClient<T>)
  fullName: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient<T>(Microsoft.Rest.ServiceClient<T>)
  nameWithType.vb: ServiceClientCredentials.InitializeServiceClient(Of T)(ServiceClient(Of T))
  fullname.vb: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient(Of T)(Microsoft.Rest.ServiceClient(Of T))
  name.vb: InitializeServiceClient(Of T)(ServiceClient(Of T))
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
    name: InitializeServiceClient<T>
    nameWithType: ServiceClientCredentials.InitializeServiceClient<T>
    fullName: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
    name: InitializeServiceClient(Of T)
    nameWithType: ServiceClientCredentials.InitializeServiceClient(Of T)
    fullName: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Microsoft.Rest.ServiceClientCredentials
  isExternal: true
  name: ProcessHttpRequestAsync(HttpRequestMessage, CancellationToken)
  nameWithType: ServiceClientCredentials.ProcessHttpRequestAsync(HttpRequestMessage, CancellationToken)
  fullName: Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: ProcessHttpRequestAsync
    nameWithType: ServiceClientCredentials.ProcessHttpRequestAsync
    fullName: Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: ProcessHttpRequestAsync
    nameWithType: ServiceClientCredentials.ProcessHttpRequestAsync
    fullName: Microsoft.Rest.ServiceClientCredentials.ProcessHttpRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest
  commentId: N:Microsoft.Rest
  isExternal: false
  name: Microsoft.Rest
  nameWithType: Microsoft.Rest
  fullName: Microsoft.Rest
- uid: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
  commentId: M:Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
  isExternal: true
  name: InitializeServiceClient<T>(ServiceClient<T>)
  nameWithType: ServiceClientCredentials.InitializeServiceClient<T>(ServiceClient<T>)
  fullName: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient<T>(Microsoft.Rest.ServiceClient<T>)
  nameWithType.vb: ServiceClientCredentials.InitializeServiceClient(Of T)(ServiceClient(Of T))
  fullname.vb: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient(Of T)(Microsoft.Rest.ServiceClient(Of T))
  name.vb: InitializeServiceClient(Of T)(ServiceClient(Of T))
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
    name: InitializeServiceClient<T>
    nameWithType: ServiceClientCredentials.InitializeServiceClient<T>
    fullName: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient``1(Microsoft.Rest.ServiceClient{``0})
    name: InitializeServiceClient(Of T)
    nameWithType: ServiceClientCredentials.InitializeServiceClient(Of T)
    fullName: Microsoft.Rest.ServiceClientCredentials.InitializeServiceClient(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.BatchCredentials
  commentId: T:Microsoft.Azure.Batch.Protocol.BatchCredentials
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: BatchCredentials
  nameWithType: BatchCredentials
  fullName: Microsoft.Azure.Batch.Protocol.BatchCredentials
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync
  isExternal: false
  name: SignRequestAsync
  nameWithType: BatchCredentials.SignRequestAsync
  fullName: Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
