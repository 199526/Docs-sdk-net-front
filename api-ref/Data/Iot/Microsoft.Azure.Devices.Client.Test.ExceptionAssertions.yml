### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  commentId: T:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  id: ExceptionAssertions
  parent: Microsoft.Azure.Devices.Client.Test
  children:
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected(System.Action)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(System.Func{System.Threading.Tasks.Task},System.Type)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync``1(System.Func{System.Threading.Tasks.Task})
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync``1(System.Threading.Tasks.Task)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName``1(``0,System.String)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion``1(System.Threading.Tasks.Task{``0},System.Action{``0})
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode``1(System.Threading.Tasks.Task{``0},System.UInt32)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException``1(System.Exception,System.String)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException``1(System.AggregateException)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri(System.Net.WebException,System.Uri)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException``1(System.AggregateException)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(HttpResponseException,System.Net.HttpStatusCode)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Net.WebException,System.Net.HttpStatusCode,System.String)
  - Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Threading.Tasks.Task{HttpResponseException},System.Net.HttpStatusCode)
  langs:
  - csharp
  - vb
  name: ExceptionAssertions
  nameWithType: ExceptionAssertions
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  type: Class
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ExceptionAssertions
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static class ExceptionAssertions
    content.vb: Public Module ExceptionAssertions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected(System.Action)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected(System.Action)
  id: Expected(System.Action)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: Expected(Action)
  nameWithType: ExceptionAssertions.Expected(Action)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected(System.Action)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Expected
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static Exception Expected(this Action action)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Expected(action As Action) As Exception
    parameters:
    - id: action
      type: System.Action
    return:
      type: System.Exception
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName``1(``0,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName``1(``0,System.String)
  id: WithArgumentName``1(``0,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithArgumentName<TArgumentException>(TArgumentException, String)
  nameWithType: ExceptionAssertions.WithArgumentName<TArgumentException>(TArgumentException, String)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName<TArgumentException>(TArgumentException, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithArgumentName
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static TArgumentException WithArgumentName<TArgumentException>(this TArgumentException exception, string parameter)where TArgumentException : ArgumentException'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithArgumentName(Of TArgumentException As ArgumentException)(exception As TArgumentException, parameter As String) As TArgumentException
    parameters:
    - id: exception
      type: '{TArgumentException}'
    - id: parameter
      type: System.String
    typeParameters:
    - id: TArgumentException
    return:
      type: '{TArgumentException}'
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName*
  nameWithType.vb: ExceptionAssertions.WithArgumentName(Of TArgumentException)(TArgumentException, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName(Of TArgumentException)(TArgumentException, System.String)
  name.vb: WithArgumentName(Of TArgumentException)(TArgumentException, String)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException``1(System.Exception,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException``1(System.Exception,System.String)
  id: WithException``1(System.Exception,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithException<TException>(Exception, String)
  nameWithType: ExceptionAssertions.WithException<TException>(Exception, String)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException<TException>(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithException
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static TException WithException<TException>(this Exception exception, string message = null)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithException(Of TException As Exception)(exception As Exception, message As String = Nothing) As TException
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    typeParameters:
    - id: TException
    return:
      type: '{TException}'
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException*
  nameWithType.vb: ExceptionAssertions.WithException(Of TException)(Exception, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException(Of TException)(System.Exception, System.String)
  name.vb: WithException(Of TException)(Exception, String)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri(System.Net.WebException,System.Uri)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri(System.Net.WebException,System.Uri)
  id: WithResponseUri(System.Net.WebException,System.Uri)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithResponseUri(WebException, Uri)
  nameWithType: ExceptionAssertions.WithResponseUri(WebException, Uri)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri(System.Net.WebException, System.Uri)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithResponseUri
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static WebException WithResponseUri(this WebException exception, Uri uri)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithResponseUri(exception As WebException, uri As Uri) As WebException
    parameters:
    - id: exception
      type: System.Net.WebException
    - id: uri
      type: System.Uri
    return:
      type: System.Net.WebException
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException``1(System.AggregateException)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException``1(System.AggregateException)
  id: WithFirstInnerException``1(System.AggregateException)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithFirstInnerException<TException>(AggregateException)
  nameWithType: ExceptionAssertions.WithFirstInnerException<TException>(AggregateException)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException<TException>(System.AggregateException)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithFirstInnerException
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static TException WithFirstInnerException<TException>(this AggregateException exception)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithFirstInnerException(Of TException As Exception)(exception As AggregateException) As TException
    parameters:
    - id: exception
      type: System.AggregateException
    typeParameters:
    - id: TException
    return:
      type: '{TException}'
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException*
  nameWithType.vb: ExceptionAssertions.WithFirstInnerException(Of TException)(AggregateException)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException(Of TException)(System.AggregateException)
  name.vb: WithFirstInnerException(Of TException)(AggregateException)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Net.WebException,System.Net.HttpStatusCode,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Net.WebException,System.Net.HttpStatusCode,System.String)
  id: WithStatusCode(System.Net.WebException,System.Net.HttpStatusCode,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithStatusCode(WebException, HttpStatusCode, String)
  nameWithType: ExceptionAssertions.WithStatusCode(WebException, HttpStatusCode, String)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Net.WebException, System.Net.HttpStatusCode, System.String)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithStatusCode
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static WebException WithStatusCode(this WebException exception, HttpStatusCode statusCode, string statusDescription = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithStatusCode(exception As WebException, statusCode As HttpStatusCode, statusDescription As String = Nothing) As WebException
    parameters:
    - id: exception
      type: System.Net.WebException
    - id: statusCode
      type: System.Net.HttpStatusCode
    - id: statusDescription
      type: System.String
    return:
      type: System.Net.WebException
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync``1(System.Threading.Tasks.Task)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync``1(System.Threading.Tasks.Task)
  id: ExpectedAsync``1(System.Threading.Tasks.Task)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: ExpectedAsync<TException>(Task)
  nameWithType: ExceptionAssertions.ExpectedAsync<TException>(Task)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync<TException>(System.Threading.Tasks.Task)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ExpectedAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static Task<TException> ExpectedAsync<TException>(this Task action)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExpectedAsync(Of TException As Exception)(action As Task) As Task(Of TException)
    parameters:
    - id: action
      type: System.Threading.Tasks.Task
    typeParameters:
    - id: TException
    return:
      type: System.Threading.Tasks.Task{{TException}}
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync*
  nameWithType.vb: ExceptionAssertions.ExpectedAsync(Of TException)(Task)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(Of TException)(System.Threading.Tasks.Task)
  name.vb: ExpectedAsync(Of TException)(Task)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync``1(System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync``1(System.Func{System.Threading.Tasks.Task})
  id: ExpectedAsync``1(System.Func{System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: ExpectedAsync<TException>(Func<Task>)
  nameWithType: ExceptionAssertions.ExpectedAsync<TException>(Func<Task>)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync<TException>(System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ExpectedAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static Task<TException> ExpectedAsync<TException>(this Func<Task> action)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExpectedAsync(Of TException As Exception)(action As Func(Of Task)) As Task(Of TException)
    parameters:
    - id: action
      type: System.Func{System.Threading.Tasks.Task}
    typeParameters:
    - id: TException
    return:
      type: System.Threading.Tasks.Task{{TException}}
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync*
  nameWithType.vb: ExceptionAssertions.ExpectedAsync(Of TException)(Func(Of Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(Of TException)(System.Func(Of System.Threading.Tasks.Task))
  name.vb: ExpectedAsync(Of TException)(Func(Of Task))
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(System.Func{System.Threading.Tasks.Task},System.Type)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(System.Func{System.Threading.Tasks.Task},System.Type)
  id: ExpectedAsync(System.Func{System.Threading.Tasks.Task},System.Type)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: ExpectedAsync(Func<Task>, Type)
  nameWithType: ExceptionAssertions.ExpectedAsync(Func<Task>, Type)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(System.Func<System.Threading.Tasks.Task>, System.Type)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ExpectedAsync
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static Task<Exception> ExpectedAsync(this Func<Task> action, Type exceptionType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExpectedAsync(action As Func(Of Task), exceptionType As Type) As Task(Of Exception)
    parameters:
    - id: action
      type: System.Func{System.Threading.Tasks.Task}
    - id: exceptionType
      type: System.Type
    return:
      type: System.Threading.Tasks.Task{System.Exception}
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync*
  nameWithType.vb: ExceptionAssertions.ExpectedAsync(Func(Of Task), Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(System.Func(Of System.Threading.Tasks.Task), System.Type)
  name.vb: ExpectedAsync(Func(Of Task), Type)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion``1(System.Threading.Tasks.Task{``0},System.Action{``0})
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion``1(System.Threading.Tasks.Task{``0},System.Action{``0})
  id: WithAssertion``1(System.Threading.Tasks.Task{``0},System.Action{``0})
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithAssertion<TException>(Task<TException>, Action<TException>)
  nameWithType: ExceptionAssertions.WithAssertion<TException>(Task<TException>, Action<TException>)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion<TException>(System.Threading.Tasks.Task<TException>, System.Action<TException>)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithAssertion
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static Task<TException> WithAssertion<TException>(this Task<TException> exception, Action<TException> assert)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAssertion(Of TException As Exception)(exception As Task(Of TException), assert As Action(Of TException)) As Task(Of TException)
    parameters:
    - id: exception
      type: System.Threading.Tasks.Task{{TException}}
    - id: assert
      type: System.Action{{TException}}
    typeParameters:
    - id: TException
    return:
      type: System.Threading.Tasks.Task{{TException}}
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion*
  nameWithType.vb: ExceptionAssertions.WithAssertion(Of TException)(Task(Of TException), Action(Of TException))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion(Of TException)(System.Threading.Tasks.Task(Of TException), System.Action(Of TException))
  name.vb: WithAssertion(Of TException)(Task(Of TException), Action(Of TException))
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode``1(System.Threading.Tasks.Task{``0},System.UInt32)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode``1(System.Threading.Tasks.Task{``0},System.UInt32)
  id: WithErrorCode``1(System.Threading.Tasks.Task{``0},System.UInt32)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithErrorCode<TException>(Task<TException>, UInt32)
  nameWithType: ExceptionAssertions.WithErrorCode<TException>(Task<TException>, UInt32)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode<TException>(System.Threading.Tasks.Task<TException>, System.UInt32)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithErrorCode
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static Task<TException> WithErrorCode<TException>(this Task<TException> exception, uint errorCode)where TException : HttpListenerException'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithErrorCode(Of TException As HttpListenerException)(exception As Task(Of TException), errorCode As UInteger) As Task(Of TException)
    parameters:
    - id: exception
      type: System.Threading.Tasks.Task{{TException}}
    - id: errorCode
      type: System.UInt32
    typeParameters:
    - id: TException
    return:
      type: System.Threading.Tasks.Task{{TException}}
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode*
  nameWithType.vb: ExceptionAssertions.WithErrorCode(Of TException)(Task(Of TException), UInt32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode(Of TException)(System.Threading.Tasks.Task(Of TException), System.UInt32)
  name.vb: WithErrorCode(Of TException)(Task(Of TException), UInt32)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Threading.Tasks.Task{HttpResponseException},System.Net.HttpStatusCode)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Threading.Tasks.Task{HttpResponseException},System.Net.HttpStatusCode)
  id: WithStatusCode(System.Threading.Tasks.Task{HttpResponseException},System.Net.HttpStatusCode)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithStatusCode(Task<HttpResponseException>, HttpStatusCode)
  nameWithType: ExceptionAssertions.WithStatusCode(Task<HttpResponseException>, HttpStatusCode)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Threading.Tasks.Task<HttpResponseException>, System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithStatusCode
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static Task<HttpResponseException> WithStatusCode(this Task<HttpResponseException> exception, HttpStatusCode statusCode)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithStatusCode(exception As Task(Of HttpResponseException), statusCode As HttpStatusCode) As Task(Of HttpResponseException)
    parameters:
    - id: exception
      type: System.Threading.Tasks.Task{HttpResponseException}
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: System.Threading.Tasks.Task{HttpResponseException}
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode*
  nameWithType.vb: ExceptionAssertions.WithStatusCode(Task(Of HttpResponseException), HttpStatusCode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(System.Threading.Tasks.Task(Of HttpResponseException), System.Net.HttpStatusCode)
  name.vb: WithStatusCode(Task(Of HttpResponseException), HttpStatusCode)
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(HttpResponseException,System.Net.HttpStatusCode)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(HttpResponseException,System.Net.HttpStatusCode)
  id: WithStatusCode(HttpResponseException,System.Net.HttpStatusCode)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithStatusCode(HttpResponseException, HttpStatusCode)
  nameWithType: ExceptionAssertions.WithStatusCode(HttpResponseException, HttpStatusCode)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode(HttpResponseException, System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithStatusCode
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: public static HttpResponseException WithStatusCode(this HttpResponseException exception, HttpStatusCode statusCode)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithStatusCode(exception As HttpResponseException, statusCode As HttpStatusCode) As HttpResponseException
    parameters:
    - id: exception
      type: HttpResponseException
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: HttpResponseException
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException``1(System.AggregateException)
  commentId: M:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException``1(System.AggregateException)
  id: WithSingleInnerException``1(System.AggregateException)
  isExtensionMethod: true
  parent: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions
  langs:
  - csharp
  - vb
  name: WithSingleInnerException<TException>(AggregateException)
  nameWithType: ExceptionAssertions.WithSingleInnerException<TException>(AggregateException)
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException<TException>(System.AggregateException)
  type: Method
  source:
    remote:
      path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: WithSingleInnerException
    path: csharp/device/Microsoft.Azure.Devices.Client/test/Microsoft.Azure.Devices.Api.Test/ExceptionAssertions.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Devices.Client.Test
  namespace: Microsoft.Azure.Devices.Client.Test
  syntax:
    content: 'public static TException WithSingleInnerException<TException>(this AggregateException exception)where TException : Exception'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithSingleInnerException(Of TException As Exception)(exception As AggregateException) As TException
    parameters:
    - id: exception
      type: System.AggregateException
    typeParameters:
    - id: TException
    return:
      type: '{TException}'
  overload: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException*
  nameWithType.vb: ExceptionAssertions.WithSingleInnerException(Of TException)(AggregateException)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException(Of TException)(System.AggregateException)
  name.vb: WithSingleInnerException(Of TException)(AggregateException)
references:
- uid: Microsoft.Azure.Devices.Client.Test
  commentId: N:Microsoft.Azure.Devices.Client.Test
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Test
  nameWithType: Microsoft.Azure.Devices.Client.Test
  fullName: Microsoft.Azure.Devices.Client.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected
  isExternal: false
  name: Expected
  nameWithType: ExceptionAssertions.Expected
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.Expected
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName
  isExternal: false
  name: WithArgumentName<TArgumentException>
  nameWithType: ExceptionAssertions.WithArgumentName<TArgumentException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName<TArgumentException>
  nameWithType.vb: ExceptionAssertions.WithArgumentName(Of TArgumentException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithArgumentName(Of TArgumentException)
  name.vb: WithArgumentName(Of TArgumentException)
- uid: '{TArgumentException}'
  commentId: '!:TArgumentException'
  definition: TArgumentException
  name: TArgumentException
  nameWithType: TArgumentException
  fullName: TArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TArgumentException
  isExternal: false
  name: TArgumentException
  nameWithType: TArgumentException
  fullName: TArgumentException
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException
  isExternal: false
  name: WithException<TException>
  nameWithType: ExceptionAssertions.WithException<TException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException<TException>
  nameWithType.vb: ExceptionAssertions.WithException(Of TException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithException(Of TException)
  name.vb: WithException(Of TException)
- uid: '{TException}'
  commentId: '!:TException'
  definition: TException
  name: TException
  nameWithType: TException
  fullName: TException
- uid: TException
  isExternal: false
  name: TException
  nameWithType: TException
  fullName: TException
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri
  isExternal: false
  name: WithResponseUri
  nameWithType: ExceptionAssertions.WithResponseUri
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithResponseUri
- uid: System.Net.WebException
  commentId: T:System.Net.WebException
  parent: System.Net
  isExternal: true
  name: WebException
  nameWithType: WebException
  fullName: System.Net.WebException
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException
  isExternal: false
  name: WithFirstInnerException<TException>
  nameWithType: ExceptionAssertions.WithFirstInnerException<TException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException<TException>
  nameWithType.vb: ExceptionAssertions.WithFirstInnerException(Of TException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithFirstInnerException(Of TException)
  name.vb: WithFirstInnerException(Of TException)
- uid: System.AggregateException
  commentId: T:System.AggregateException
  parent: System
  isExternal: true
  name: AggregateException
  nameWithType: AggregateException
  fullName: System.AggregateException
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode
  isExternal: false
  name: WithStatusCode
  nameWithType: ExceptionAssertions.WithStatusCode
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithStatusCode
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync
  isExternal: false
  name: ExpectedAsync<TException>
  nameWithType: ExceptionAssertions.ExpectedAsync<TException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync<TException>
  nameWithType.vb: ExceptionAssertions.ExpectedAsync(Of TException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.ExpectedAsync(Of TException)
  name.vb: ExpectedAsync(Of TException)
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task{{TException}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TException>
  nameWithType: Task<TException>
  fullName: System.Threading.Tasks.Task<TException>
  nameWithType.vb: Task(Of TException)
  fullname.vb: System.Threading.Tasks.Task(Of TException)
  name.vb: Task(Of TException)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TException
    nameWithType: TException
    fullName: TException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TException
    nameWithType: TException
    fullName: TException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullname.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Threading.Tasks.Task{System.Exception}
  commentId: T:System.Threading.Tasks.Task{System.Exception}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Exception>
  nameWithType: Task<Exception>
  fullName: System.Threading.Tasks.Task<System.Exception>
  nameWithType.vb: Task(Of Exception)
  fullname.vb: System.Threading.Tasks.Task(Of System.Exception)
  name.vb: Task(Of Exception)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion
  isExternal: false
  name: WithAssertion<TException>
  nameWithType: ExceptionAssertions.WithAssertion<TException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion<TException>
  nameWithType.vb: ExceptionAssertions.WithAssertion(Of TException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithAssertion(Of TException)
  name.vb: WithAssertion(Of TException)
- uid: System.Action{{TException}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<TException>
  nameWithType: Action<TException>
  fullName: System.Action<TException>
  nameWithType.vb: Action(Of TException)
  fullname.vb: System.Action(Of TException)
  name.vb: Action(Of TException)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TException
    nameWithType: TException
    fullName: TException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TException
    nameWithType: TException
    fullName: TException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode
  isExternal: false
  name: WithErrorCode<TException>
  nameWithType: ExceptionAssertions.WithErrorCode<TException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode<TException>
  nameWithType.vb: ExceptionAssertions.WithErrorCode(Of TException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithErrorCode(Of TException)
  name.vb: WithErrorCode(Of TException)
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Threading.Tasks.Task{HttpResponseException}
  commentId: T:System.Threading.Tasks.Task{HttpResponseException}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseException>
  nameWithType: Task<HttpResponseException>
  fullName: System.Threading.Tasks.Task<HttpResponseException>
  nameWithType.vb: Task(Of HttpResponseException)
  fullname.vb: System.Threading.Tasks.Task(Of HttpResponseException)
  name.vb: Task(Of HttpResponseException)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HttpResponseException
    name: HttpResponseException
    nameWithType: HttpResponseException
    fullName: HttpResponseException
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HttpResponseException
    name: HttpResponseException
    nameWithType: HttpResponseException
    fullName: HttpResponseException
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpResponseException
  isExternal: true
  name: HttpResponseException
  nameWithType: HttpResponseException
  fullName: HttpResponseException
- uid: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException*
  commentId: Overload:Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException
  isExternal: false
  name: WithSingleInnerException<TException>
  nameWithType: ExceptionAssertions.WithSingleInnerException<TException>
  fullName: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException<TException>
  nameWithType.vb: ExceptionAssertions.WithSingleInnerException(Of TException)
  fullname.vb: Microsoft.Azure.Devices.Client.Test.ExceptionAssertions.WithSingleInnerException(Of TException)
  name.vb: WithSingleInnerException(Of TException)
