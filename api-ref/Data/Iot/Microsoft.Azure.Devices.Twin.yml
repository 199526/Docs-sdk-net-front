### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Twin
  commentId: T:Microsoft.Azure.Devices.Twin
  id: Twin
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.Twin.#ctor
  - Microsoft.Azure.Devices.Twin.#ctor(System.String)
  - Microsoft.Azure.Devices.Twin.DeviceId
  - Microsoft.Azure.Devices.Twin.ETag
  - Microsoft.Azure.Devices.Twin.Properties
  - Microsoft.Azure.Devices.Twin.Tags
  - Microsoft.Azure.Devices.Twin.ToJson(Newtonsoft.Json.Formatting)
  langs:
  - csharp
  - vb
  name: Twin
  nameWithType: Twin
  fullName: Microsoft.Azure.Devices.Twin
  type: Class
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Twin
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nTwin Representation\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (TwinJsonConverter))]

      public class Twin : IETagHolder
    content.vb: >-
      <JsonConverter(GetType(TwinJsonConverter))>

      Public Class Twin
          Implements IETagHolder
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Devices.Common.IETagHolder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Azure.Devices.Converters.TwinJsonConverter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Twin.#ctor
  commentId: M:Microsoft.Azure.Devices.Twin.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: Twin()
  nameWithType: Twin.Twin()
  fullName: Microsoft.Azure.Devices.Twin.Twin()
  type: Constructor
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: .ctor
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nCreates an instance of <xref href=\"Microsoft.Azure.Devices.Twin\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Twin()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Devices.Twin.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Twin.#ctor(System.String)
  commentId: M:Microsoft.Azure.Devices.Twin.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: Twin(String)
  nameWithType: Twin.Twin(String)
  fullName: Microsoft.Azure.Devices.Twin.Twin(System.String)
  type: Constructor
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: .ctor
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nCreates an instance of <xref href=\"Microsoft.Azure.Devices.Twin\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Twin(string deviceId)
    content.vb: Public Sub New(deviceId As String)
    parameters:
    - id: deviceId
      type: System.String
      description: Device Id
  overload: Microsoft.Azure.Devices.Twin.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Twin.DeviceId
  commentId: P:Microsoft.Azure.Devices.Twin.DeviceId
  id: DeviceId
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: Twin.DeviceId
  fullName: Microsoft.Azure.Devices.Twin.DeviceId
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: DeviceId
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nGets and sets the <xref href=\"Microsoft.Azure.Devices.Twin\" data-throw-if-not-resolved=\"false\"></xref> Id.\n"
  example: []
  syntax:
    content: public string DeviceId { get; set; }
    content.vb: Public Property DeviceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.Twin.DeviceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Twin.Tags
  commentId: P:Microsoft.Azure.Devices.Twin.Tags
  id: Tags
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: Twin.Tags
  fullName: Microsoft.Azure.Devices.Twin.Tags
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Tags
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nGets and sets the <xref href=\"Microsoft.Azure.Devices.Twin\" data-throw-if-not-resolved=\"false\"></xref> tags.\n"
  example: []
  syntax:
    content: public TwinCollection Tags { get; set; }
    content.vb: Public Property Tags As TwinCollection
    parameters: []
    return:
      type: Microsoft.Azure.Devices.TwinCollection
  overload: Microsoft.Azure.Devices.Twin.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Twin.Properties
  commentId: P:Microsoft.Azure.Devices.Twin.Properties
  id: Properties
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: Twin.Properties
  fullName: Microsoft.Azure.Devices.Twin.Properties
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: Properties
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nGets and sets the <xref href=\"Microsoft.Azure.Devices.Twin\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  example: []
  syntax:
    content: public TwinProperties Properties { get; set; }
    content.vb: Public Property Properties As TwinProperties
    parameters: []
    return:
      type: Microsoft.Azure.Devices.TwinProperties
  overload: Microsoft.Azure.Devices.Twin.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Twin.ETag
  commentId: P:Microsoft.Azure.Devices.Twin.ETag
  id: ETag
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: Twin.ETag
  fullName: Microsoft.Azure.Devices.Twin.ETag
  type: Property
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ETag
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nTwin's ETag\n"
  example: []
  syntax:
    content: public string ETag { get; set; }
    content.vb: Public Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.Twin.ETag*
  implements:
  - Microsoft.Azure.Devices.Common.IETagHolder.ETag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Twin.ToJson(Newtonsoft.Json.Formatting)
  commentId: M:Microsoft.Azure.Devices.Twin.ToJson(Newtonsoft.Json.Formatting)
  id: ToJson(Newtonsoft.Json.Formatting)
  parent: Microsoft.Azure.Devices.Twin
  langs:
  - csharp
  - vb
  name: ToJson(Formatting)
  nameWithType: Twin.ToJson(Formatting)
  fullName: Microsoft.Azure.Devices.Twin.ToJson(Newtonsoft.Json.Formatting)
  type: Method
  source:
    remote:
      path: csharp/service/Microsoft.Azure.Devices/Twin.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdks
    id: ToJson
    path: csharp/service/Microsoft.Azure.Devices/Twin.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nGets the Twin as a JSON string\n"
  example: []
  syntax:
    content: public string ToJson(Formatting formatting = Formatting.None)
    content.vb: Public Function ToJson(formatting As Formatting = Formatting.None) As String
    parameters:
    - id: formatting
      type: Newtonsoft.Json.Formatting
      description: Optional. Formatting for the output JSON string.
    return:
      type: System.String
      description: JSON string
  overload: Microsoft.Azure.Devices.Twin.ToJson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Devices.Common.IETagHolder
  commentId: T:Microsoft.Azure.Devices.Common.IETagHolder
  parent: Microsoft.Azure.Devices.Common
  isExternal: false
  name: IETagHolder
  nameWithType: IETagHolder
  fullName: Microsoft.Azure.Devices.Common.IETagHolder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Common
  commentId: N:Microsoft.Azure.Devices.Common
  isExternal: false
  name: Microsoft.Azure.Devices.Common
  nameWithType: Microsoft.Azure.Devices.Common
  fullName: Microsoft.Azure.Devices.Common
- uid: Microsoft.Azure.Devices.Twin
  commentId: T:Microsoft.Azure.Devices.Twin
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: Twin
  nameWithType: Twin
  fullName: Microsoft.Azure.Devices.Twin
- uid: Microsoft.Azure.Devices.Twin.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Twin.#ctor
  isExternal: false
  name: Twin
  nameWithType: Twin.Twin
  fullName: Microsoft.Azure.Devices.Twin.Twin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.Twin.DeviceId*
  commentId: Overload:Microsoft.Azure.Devices.Twin.DeviceId
  isExternal: false
  name: DeviceId
  nameWithType: Twin.DeviceId
  fullName: Microsoft.Azure.Devices.Twin.DeviceId
- uid: Microsoft.Azure.Devices.Twin.Tags*
  commentId: Overload:Microsoft.Azure.Devices.Twin.Tags
  isExternal: false
  name: Tags
  nameWithType: Twin.Tags
  fullName: Microsoft.Azure.Devices.Twin.Tags
- uid: Microsoft.Azure.Devices.TwinCollection
  commentId: T:Microsoft.Azure.Devices.TwinCollection
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: Microsoft.Azure.Devices.TwinCollection
- uid: Microsoft.Azure.Devices.Twin.Properties*
  commentId: Overload:Microsoft.Azure.Devices.Twin.Properties
  isExternal: false
  name: Properties
  nameWithType: Twin.Properties
  fullName: Microsoft.Azure.Devices.Twin.Properties
- uid: Microsoft.Azure.Devices.TwinProperties
  commentId: T:Microsoft.Azure.Devices.TwinProperties
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: TwinProperties
  nameWithType: TwinProperties
  fullName: Microsoft.Azure.Devices.TwinProperties
- uid: Microsoft.Azure.Devices.Twin.ETag*
  commentId: Overload:Microsoft.Azure.Devices.Twin.ETag
  isExternal: false
  name: ETag
  nameWithType: Twin.ETag
  fullName: Microsoft.Azure.Devices.Twin.ETag
- uid: Microsoft.Azure.Devices.Common.IETagHolder.ETag
  commentId: P:Microsoft.Azure.Devices.Common.IETagHolder.ETag
  parent: Microsoft.Azure.Devices.Common.IETagHolder
  isExternal: false
  name: ETag
  nameWithType: IETagHolder.ETag
  fullName: Microsoft.Azure.Devices.Common.IETagHolder.ETag
- uid: Microsoft.Azure.Devices.Twin.ToJson*
  commentId: Overload:Microsoft.Azure.Devices.Twin.ToJson
  isExternal: false
  name: ToJson
  nameWithType: Twin.ToJson
  fullName: Microsoft.Azure.Devices.Twin.ToJson
- uid: Newtonsoft.Json.Formatting
  commentId: T:Newtonsoft.Json.Formatting
  parent: Newtonsoft.Json
  isExternal: true
  name: Formatting
  nameWithType: Formatting
  fullName: Newtonsoft.Json.Formatting
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
