### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  id: LocatorBaseCollectionExtensions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  langs:
  - csharp
  - vb
  name: LocatorBaseCollectionExtensions
  nameWithType: LocatorBaseCollectionExtensions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: LocatorBaseCollectionExtensions
    path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nContains extension methods and helpers for the <see cref=\"!:LocatorBaseCollection\"></see> class.\n"
  example: []
  syntax:
    content: public static class LocatorBaseCollectionExtensions
    content.vb: Public Module LocatorBaseCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  id: CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable<DateTime>)
  nameWithType: LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable<DateTime>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, System.TimeSpan, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: CreateAsync
    path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> instance for new <see cref=\"!:ILocator\"></see>.\n"
  example: []
  syntax:
    content: public static Task<ILocator> CreateAsync(this LocatorBaseCollection locators, LocatorType locatorType, IAsset asset, AccessPermissions permissions, TimeSpan duration, DateTime? startTime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(locators As LocatorBaseCollection, locatorType As LocatorType, asset As IAsset, permissions As AccessPermissions, duration As TimeSpan, startTime As Date?) As Task(Of ILocator)
    parameters:
    - id: locators
      type: LocatorBaseCollection
      description: The <see cref="!:LocatorBaseCollection"></see> instance.
    - id: locatorType
      type: LocatorType
      description: The <see cref="!:LocatorType"></see>.
    - id: asset
      type: IAsset
      description: The <see cref="!:IAsset"></see> instance for the new <see cref="!:ILocator"></see>.
    - id: permissions
      type: AccessPermissions
      description: The <see cref="!:AccessPermissions"></see> of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    - id: duration
      type: System.TimeSpan
      description: The duration of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The start time of the new <see cref="!:ILocator"></see>.
    return:
      type: System.Threading.Tasks.Task{ILocator}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> instance for new <see cref="!:ILocator"></see>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync*
  nameWithType.vb: LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, System.TimeSpan, System.Nullable(Of System.DateTime))
  name.vb: CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable(Of DateTime))
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  id: CreateAsync(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan)
  nameWithType: LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: CreateAsync
    path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> instance for new <see cref=\"!:ILocator\"></see>.\n"
  example: []
  syntax:
    content: public static Task<ILocator> CreateAsync(this LocatorBaseCollection locators, LocatorType locatorType, IAsset asset, AccessPermissions permissions, TimeSpan duration)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(locators As LocatorBaseCollection, locatorType As LocatorType, asset As IAsset, permissions As AccessPermissions, duration As TimeSpan) As Task(Of ILocator)
    parameters:
    - id: locators
      type: LocatorBaseCollection
      description: The <see cref="!:LocatorBaseCollection"></see> instance.
    - id: locatorType
      type: LocatorType
      description: The <see cref="!:LocatorType"></see>.
    - id: asset
      type: IAsset
      description: The <see cref="!:IAsset"></see> instance for the new <see cref="!:ILocator"></see>.
    - id: permissions
      type: AccessPermissions
      description: The <see cref="!:AccessPermissions"></see> of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    - id: duration
      type: System.TimeSpan
      description: The duration of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    return:
      type: System.Threading.Tasks.Task{ILocator}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> instance for new <see cref="!:ILocator"></see>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  id: Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan,System.Nullable{System.DateTime})
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  langs:
  - csharp
  - vb
  name: Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable<DateTime>)
  nameWithType: LocatorBaseCollectionExtensions.Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable<DateTime>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, System.TimeSpan, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Create
    path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a new <see cref=\"!:ILocator\"></see> instance.\n"
  example: []
  syntax:
    content: public static ILocator Create(this LocatorBaseCollection locators, LocatorType locatorType, IAsset asset, AccessPermissions permissions, TimeSpan duration, DateTime? startTime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(locators As LocatorBaseCollection, locatorType As LocatorType, asset As IAsset, permissions As AccessPermissions, duration As TimeSpan, startTime As Date?) As ILocator
    parameters:
    - id: locators
      type: LocatorBaseCollection
      description: The <see cref="!:LocatorBaseCollection"></see> instance.
    - id: locatorType
      type: LocatorType
      description: The <see cref="!:LocatorType"></see>.
    - id: asset
      type: IAsset
      description: The <see cref="!:IAsset"></see> instance for the new <see cref="!:ILocator"></see>.
    - id: permissions
      type: AccessPermissions
      description: The <see cref="!:AccessPermissions"></see> of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    - id: duration
      type: System.TimeSpan
      description: The duration of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The start time of the new <see cref="!:ILocator"></see>.
    return:
      type: ILocator
      description: A a new <see cref="!:ILocator"></see> instance.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create*
  nameWithType.vb: LocatorBaseCollectionExtensions.Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, System.TimeSpan, System.Nullable(Of System.DateTime))
  name.vb: Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan, Nullable(Of DateTime))
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  id: Create(LocatorBaseCollection,LocatorType,IAsset,AccessPermissions,System.TimeSpan)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions
  langs:
  - csharp
  - vb
  name: Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan)
  nameWithType: LocatorBaseCollectionExtensions.Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, TimeSpan)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create(LocatorBaseCollection, LocatorType, IAsset, AccessPermissions, System.TimeSpan)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Create
    path: MediaServices.Client.Extensions/LocatorBaseCollectionExtensions.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a new <see cref=\"!:ILocator\"></see> instance.\n"
  example: []
  syntax:
    content: public static ILocator Create(this LocatorBaseCollection locators, LocatorType locatorType, IAsset asset, AccessPermissions permissions, TimeSpan duration)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(locators As LocatorBaseCollection, locatorType As LocatorType, asset As IAsset, permissions As AccessPermissions, duration As TimeSpan) As ILocator
    parameters:
    - id: locators
      type: LocatorBaseCollection
      description: The <see cref="!:LocatorBaseCollection"></see> instance.
    - id: locatorType
      type: LocatorType
      description: The <see cref="!:LocatorType"></see>.
    - id: asset
      type: IAsset
      description: The <see cref="!:IAsset"></see> instance for the new <see cref="!:ILocator"></see>.
    - id: permissions
      type: AccessPermissions
      description: The <see cref="!:AccessPermissions"></see> of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    - id: duration
      type: System.TimeSpan
      description: The duration of the <see cref="!:IAccessPolicy"></see> associated with the new <see cref="!:ILocator"></see>.
    return:
      type: ILocator
      description: A a new <see cref="!:ILocator"></see> instance.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: LocatorBaseCollectionExtensions.CreateAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.CreateAsync
- uid: LocatorBaseCollection
  isExternal: true
  name: LocatorBaseCollection
  nameWithType: LocatorBaseCollection
  fullName: LocatorBaseCollection
- uid: LocatorType
  isExternal: true
  name: LocatorType
  nameWithType: LocatorType
  fullName: LocatorType
- uid: IAsset
  isExternal: true
  name: IAsset
  nameWithType: IAsset
  fullName: IAsset
- uid: AccessPermissions
  isExternal: true
  name: AccessPermissions
  nameWithType: AccessPermissions
  fullName: AccessPermissions
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{ILocator}
  commentId: T:System.Threading.Tasks.Task{ILocator}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ILocator>
  nameWithType: Task<ILocator>
  fullName: System.Threading.Tasks.Task<ILocator>
  nameWithType.vb: Task(Of ILocator)
  fullname.vb: System.Threading.Tasks.Task(Of ILocator)
  name.vb: Task(Of ILocator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: ILocator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: ILocator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create
  isExternal: false
  name: Create
  nameWithType: LocatorBaseCollectionExtensions.Create
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollectionExtensions.Create
- uid: ILocator
  isExternal: true
  name: ILocator
  nameWithType: ILocator
  fullName: ILocator
