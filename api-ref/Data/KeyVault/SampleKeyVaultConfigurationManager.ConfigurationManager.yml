### YamlMime:ManagedReference
items:
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager
  commentId: T:SampleKeyVaultConfigurationManager.ConfigurationManager
  id: ConfigurationManager
  parent: SampleKeyVaultConfigurationManager
  children:
  - SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync(System.String,System.Nullable{System.TimeSpan})
  - SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize(KeyVaultClient.AuthenticationCallback,System.String)
  - SampleKeyVaultConfigurationManager.ConfigurationManager.Reset
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConfigurationManager
    path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
    startLine: 28
  assemblies:
  - SampleKeyVaultConfigurationManager
  namespace: SampleKeyVaultConfigurationManager
  summary: "\nThis class manages service configuration settings.\n"
  example: []
  syntax:
    content: public static class ConfigurationManager
    content.vb: Public Module ConfigurationManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize(KeyVaultClient.AuthenticationCallback,System.String)
  commentId: M:SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize(KeyVaultClient.AuthenticationCallback,System.String)
  id: Initialize(KeyVaultClient.AuthenticationCallback,System.String)
  parent: SampleKeyVaultConfigurationManager.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Initialize(KeyVaultClient.AuthenticationCallback, String)
  nameWithType: ConfigurationManager.Initialize(KeyVaultClient.AuthenticationCallback, String)
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize(KeyVaultClient.AuthenticationCallback, System.String)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Initialize
    path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
    startLine: 37
  assemblies:
  - SampleKeyVaultConfigurationManager
  namespace: SampleKeyVaultConfigurationManager
  summary: "\nInitializes settings for authentication to Key Vault \n"
  example: []
  syntax:
    content: public static void Initialize(KeyVaultClient.AuthenticationCallback authenticationCallback, string defaultCacheLifespanSettingName = null)
    content.vb: Public Shared Sub Initialize(authenticationCallback As KeyVaultClient.AuthenticationCallback, defaultCacheLifespanSettingName As String = Nothing)
    parameters:
    - id: authenticationCallback
      type: KeyVaultClient.AuthenticationCallback
      description: 'Key Vault authentication callback '
    - id: defaultCacheLifespanSettingName
      type: System.String
      description: 'Default cache''s lifespan setting name '
  overload: SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync(System.String,System.Nullable{System.TimeSpan})
  commentId: M:SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync(System.String,System.Nullable{System.TimeSpan})
  id: GetSettingAsync(System.String,System.Nullable{System.TimeSpan})
  parent: SampleKeyVaultConfigurationManager.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetSettingAsync(String, Nullable<TimeSpan>)
  nameWithType: ConfigurationManager.GetSettingAsync(String, Nullable<TimeSpan>)
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync(System.String, System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetSettingAsync
    path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
    startLine: 52
  assemblies:
  - SampleKeyVaultConfigurationManager
  namespace: SampleKeyVaultConfigurationManager
  summary: "\nRetrieves a configuration value or resolves the settings to its corresponding object\nUses an in-memory cache in which throws away content after a certain time.\n"
  example: []
  syntax:
    content: public static Task<string> GetSettingAsync(string settingName, TimeSpan? cachedExpirationTimeSpan = null)
    content.vb: Public Shared Function GetSettingAsync(settingName As String, cachedExpirationTimeSpan As TimeSpan? = Nothing) As Task(Of String)
    parameters:
    - id: settingName
      type: System.String
      description: 'The setting name to get resolved or retrieved '
    - id: cachedExpirationTimeSpan
      type: System.Nullable{System.TimeSpan}
      description: 'The cache expiration time span '
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'The retrieved or resolved setting '
  overload: SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync*
  nameWithType.vb: ConfigurationManager.GetSettingAsync(String, Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync(System.String, System.Nullable(Of System.TimeSpan))
  name.vb: GetSettingAsync(String, Nullable(Of TimeSpan))
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager.Reset
  commentId: M:SampleKeyVaultConfigurationManager.ConfigurationManager.Reset
  id: Reset
  parent: SampleKeyVaultConfigurationManager.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ConfigurationManager.Reset()
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager.Reset()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Reset
    path: src/KeyVault/Microsoft.Azure.KeyVault.Samples/samples/SampleAzureWebService/SampleKeyVaultConfigurationManager/ConfigurationManager.cs
    startLine: 69
  assemblies:
  - SampleKeyVaultConfigurationManager
  namespace: SampleKeyVaultConfigurationManager
  summary: "\nRemoves all the cache entries.\n"
  example: []
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset
  overload: SampleKeyVaultConfigurationManager.ConfigurationManager.Reset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SampleKeyVaultConfigurationManager
  commentId: N:SampleKeyVaultConfigurationManager
  isExternal: false
  name: SampleKeyVaultConfigurationManager
  nameWithType: SampleKeyVaultConfigurationManager
  fullName: SampleKeyVaultConfigurationManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize*
  commentId: Overload:SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize
  isExternal: false
  name: Initialize
  nameWithType: ConfigurationManager.Initialize
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager.Initialize
- uid: KeyVaultClient.AuthenticationCallback
  commentId: '!:KeyVaultClient.AuthenticationCallback'
  isExternal: true
  name: KeyVaultClient.AuthenticationCallback
  nameWithType: KeyVaultClient.AuthenticationCallback
  fullName: KeyVaultClient.AuthenticationCallback
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync*
  commentId: Overload:SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync
  isExternal: false
  name: GetSettingAsync
  nameWithType: ConfigurationManager.GetSettingAsync
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager.GetSettingAsync
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: SampleKeyVaultConfigurationManager.ConfigurationManager.Reset*
  commentId: Overload:SampleKeyVaultConfigurationManager.ConfigurationManager.Reset
  isExternal: false
  name: Reset
  nameWithType: ConfigurationManager.Reset
  fullName: SampleKeyVaultConfigurationManager.ConfigurationManager.Reset
