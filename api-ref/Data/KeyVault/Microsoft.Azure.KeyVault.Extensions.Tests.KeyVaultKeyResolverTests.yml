### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  commentId: T:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  id: KeyVaultKeyResolverTests
  parent: Microsoft.Azure.KeyVault.Extensions.Tests
  children:
  - Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.#ctor(KeyVault.TestFramework.KeyVaultTestFixture)
  - Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey
  - Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64
  - Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64
  - Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64
  langs:
  - csharp
  - vb
  name: KeyVaultKeyResolverTests
  nameWithType: KeyVaultKeyResolverTests
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultKeyResolverTests
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions.Tests
  namespace: Microsoft.Azure.KeyVault.Extensions.Tests
  summary: "\nVerify Symmetric Key.\n"
  example: []
  syntax:
    content: 'public class KeyVaultKeyResolverTests : IClassFixture<KeyVaultTestFixture>'
    content.vb: >-
      Public Class KeyVaultKeyResolverTests
          Implements IClassFixture(Of KeyVaultTestFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{KeyVault.TestFramework.KeyVaultTestFixture}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.#ctor(KeyVault.TestFramework.KeyVaultTestFixture)
  commentId: M:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.#ctor(KeyVault.TestFramework.KeyVaultTestFixture)
  id: '#ctor(KeyVault.TestFramework.KeyVaultTestFixture)'
  parent: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: KeyVaultKeyResolverTests(KeyVaultTestFixture)
  nameWithType: KeyVaultKeyResolverTests.KeyVaultKeyResolverTests(KeyVaultTestFixture)
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVaultKeyResolverTests(KeyVault.TestFramework.KeyVaultTestFixture)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions.Tests
  namespace: Microsoft.Azure.KeyVault.Extensions.Tests
  syntax:
    content: public KeyVaultKeyResolverTests(KeyVaultTestFixture fixture)
    content.vb: Public Sub New(fixture As KeyVaultTestFixture)
    parameters:
    - id: fixture
      type: KeyVault.TestFramework.KeyVaultTestFixture
  overload: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey
  commentId: M:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey
  id: KeyVault_KeyResolver_ResolveKey
  parent: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: KeyVault_KeyResolver_ResolveKey()
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey()
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_KeyResolver_ResolveKey
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions.Tests
  namespace: Microsoft.Azure.KeyVault.Extensions.Tests
  summary: "\nTest resolving a key from a key in a vault using various KeyVaultKeyResolver constructors.\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public void KeyVault_KeyResolver_ResolveKey()
    content.vb: >-
      <Fact>

      Public Sub KeyVault_KeyResolver_ResolveKey
  overload: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64
  commentId: M:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64
  id: KeyVault_KeyResolver_ResolveSecret128Base64
  parent: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: KeyVault_KeyResolver_ResolveSecret128Base64()
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64()
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_KeyResolver_ResolveSecret128Base64
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions.Tests
  namespace: Microsoft.Azure.KeyVault.Extensions.Tests
  summary: "\nTest resolving a key from a 128bit secret encoded as base64 in a vault using various KeyVaultKeyResolver constructors.\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public void KeyVault_KeyResolver_ResolveSecret128Base64()
    content.vb: >-
      <Fact>

      Public Sub KeyVault_KeyResolver_ResolveSecret128Base64
  overload: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64
  commentId: M:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64
  id: KeyVault_KeyResolver_ResolveSecret192Base64
  parent: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: KeyVault_KeyResolver_ResolveSecret192Base64()
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64()
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_KeyResolver_ResolveSecret192Base64
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions.Tests
  namespace: Microsoft.Azure.KeyVault.Extensions.Tests
  summary: "\nTest resolving a key from a 192bit secret encoded as base64 in a vault using various KeyVaultKeyResolver constructors.\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public void KeyVault_KeyResolver_ResolveSecret192Base64()
    content.vb: >-
      <Fact>

      Public Sub KeyVault_KeyResolver_ResolveSecret192Base64
  overload: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64
  commentId: M:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64
  id: KeyVault_KeyResolver_ResolveSecret256Base64
  parent: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: KeyVault_KeyResolver_ResolveSecret256Base64()
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64()
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_KeyResolver_ResolveSecret256Base64
    path: src/KeyVault/Microsoft.Azure.KeyVault.Extensions.Tests/Tests/KeyVaultKeyResolverTests.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.KeyVault.Extensions.Tests
  namespace: Microsoft.Azure.KeyVault.Extensions.Tests
  summary: "\nTest resolving a key from a 256bit secret encoded as base64 in a vault using various KeyVaultKeyResolver constructors.\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public void KeyVault_KeyResolver_ResolveSecret256Base64()
    content.vb: >-
      <Fact>

      Public Sub KeyVault_KeyResolver_ResolveSecret256Base64
  overload: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Extensions.Tests
  commentId: N:Microsoft.Azure.KeyVault.Extensions.Tests
  isExternal: false
  name: Microsoft.Azure.KeyVault.Extensions.Tests
  nameWithType: Microsoft.Azure.KeyVault.Extensions.Tests
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{KeyVault.TestFramework.KeyVaultTestFixture}
  commentId: T:Xunit.IClassFixture{KeyVault.TestFramework.KeyVaultTestFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<KeyVaultTestFixture>
  nameWithType: IClassFixture<KeyVaultTestFixture>
  fullName: Xunit.IClassFixture<KeyVault.TestFramework.KeyVaultTestFixture>
  nameWithType.vb: IClassFixture(Of KeyVaultTestFixture)
  fullname.vb: Xunit.IClassFixture(Of KeyVault.TestFramework.KeyVaultTestFixture)
  name.vb: IClassFixture(Of KeyVaultTestFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyVault.TestFramework.KeyVaultTestFixture
    name: KeyVaultTestFixture
    nameWithType: KeyVaultTestFixture
    fullName: KeyVault.TestFramework.KeyVaultTestFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyVault.TestFramework.KeyVaultTestFixture
    name: KeyVaultTestFixture
    nameWithType: KeyVaultTestFixture
    fullName: KeyVault.TestFramework.KeyVaultTestFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.#ctor
  isExternal: false
  name: KeyVaultKeyResolverTests
  nameWithType: KeyVaultKeyResolverTests.KeyVaultKeyResolverTests
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVaultKeyResolverTests
- uid: KeyVault.TestFramework.KeyVaultTestFixture
  commentId: T:KeyVault.TestFramework.KeyVaultTestFixture
  parent: KeyVault.TestFramework
  isExternal: false
  name: KeyVaultTestFixture
  nameWithType: KeyVaultTestFixture
  fullName: KeyVault.TestFramework.KeyVaultTestFixture
- uid: KeyVault.TestFramework
  commentId: N:KeyVault.TestFramework
  isExternal: false
  name: KeyVault.TestFramework
  nameWithType: KeyVault.TestFramework
  fullName: KeyVault.TestFramework
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey*
  commentId: Overload:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey
  isExternal: false
  name: KeyVault_KeyResolver_ResolveKey
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveKey
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64*
  commentId: Overload:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64
  isExternal: false
  name: KeyVault_KeyResolver_ResolveSecret128Base64
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret128Base64
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64*
  commentId: Overload:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64
  isExternal: false
  name: KeyVault_KeyResolver_ResolveSecret192Base64
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret192Base64
- uid: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64*
  commentId: Overload:Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64
  isExternal: false
  name: KeyVault_KeyResolver_ResolveSecret256Base64
  nameWithType: KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64
  fullName: Microsoft.Azure.KeyVault.Extensions.Tests.KeyVaultKeyResolverTests.KeyVault_KeyResolver_ResolveSecret256Base64
