### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  id: RsaKeyTests
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests
  children:
  - Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey
  - Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm
  - Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256
  - Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15
  - Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP
  - Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture(Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture)
  langs:
  - csharp
  - vb
  name: RsaKeyTests
  nameWithType: RsaKeyTests
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RsaKeyTests
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  summary: "\nVerify RSAKey\n"
  example: []
  syntax:
    content: 'public class RsaKeyTests : IClassFixture<TestFixture>'
    content.vb: >-
      Public Class RsaKeyTests
          Implements IClassFixture(Of TestFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture(Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture)
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture(Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture)
  id: SetFixture(Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture)
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  langs:
  - csharp
  - vb
  name: SetFixture(TestFixture)
  nameWithType: RsaKeyTests.SetFixture(TestFixture)
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture(Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetFixture
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  syntax:
    content: public void SetFixture(TestFixture data)
    content.vb: Public Sub SetFixture(data As TestFixture)
    parameters:
    - id: data
      type: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
  overload: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15
  id: KeyVault_RsaKeyRSA15
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  langs:
  - csharp
  - vb
  name: KeyVault_RsaKeyRSA15()
  nameWithType: RsaKeyTests.KeyVault_RsaKeyRSA15()
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_RsaKeyRSA15
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  summary: "\nTesting RSA1_5\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public Task KeyVault_RsaKeyRSA15()
    content.vb: >-
      <Fact>

      Public Function KeyVault_RsaKeyRSA15 As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP
  id: KeyVault_RsaKeyRSAOAEP
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  langs:
  - csharp
  - vb
  name: KeyVault_RsaKeyRSAOAEP()
  nameWithType: RsaKeyTests.KeyVault_RsaKeyRSAOAEP()
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_RsaKeyRSAOAEP
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  summary: "\nTesting RSA_OAEP\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public Task KeyVault_RsaKeyRSAOAEP()
    content.vb: >-
      <Fact>

      Public Function KeyVault_RsaKeyRSAOAEP As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm
  id: KeyVault_RsaKeyDefaultAlgorithm
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  langs:
  - csharp
  - vb
  name: KeyVault_RsaKeyDefaultAlgorithm()
  nameWithType: RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm()
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_RsaKeyDefaultAlgorithm
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  summary: "\nTesting RSA_OAEP\n"
  example: []
  syntax:
    content: >-
      [Fact]

      public Task KeyVault_RsaKeyDefaultAlgorithm()
    content.vb: >-
      <Fact>

      Public Function KeyVault_RsaKeyDefaultAlgorithm As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256
  id: KeyVault_RsaKeyRS256
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  langs:
  - csharp
  - vb
  name: KeyVault_RsaKeyRS256()
  nameWithType: RsaKeyTests.KeyVault_RsaKeyRS256()
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVault_RsaKeyRS256
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  syntax:
    content: >-
      [Fact]

      public Task KeyVault_RsaKeyRS256()
    content.vb: >-
      <Fact>

      Public Function KeyVault_RsaKeyRS256 As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey
  id: GetTestRsaKey
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests
  langs:
  - csharp
  - vb
  name: GetTestRsaKey()
  nameWithType: RsaKeyTests.GetTestRsaKey()
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetTestRsaKey
    path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography.Tests/Tests/Cryptography/Algorithms/RsaKeyTests.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography.Tests
  namespace: Microsoft.Azure.KeyVault.Cryptography.Tests
  syntax:
    content: public RsaKey GetTestRsaKey()
    content.vb: Public Function GetTestRsaKey As RsaKey
    return:
      type: Microsoft.Azure.KeyVault.RsaKey
  overload: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests
  commentId: N:Microsoft.Azure.KeyVault.Cryptography.Tests
  isExternal: false
  name: Microsoft.Azure.KeyVault.Cryptography.Tests
  nameWithType: Microsoft.Azure.KeyVault.Cryptography.Tests
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TestFixture>
  nameWithType: IClassFixture<TestFixture>
  fullName: Xunit.IClassFixture<Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture>
  nameWithType.vb: IClassFixture(Of TestFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture)
  name.vb: IClassFixture(Of TestFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
    name: TestFixture
    nameWithType: TestFixture
    fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
    name: TestFixture
    nameWithType: TestFixture
    fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture
  isExternal: false
  name: SetFixture
  nameWithType: RsaKeyTests.SetFixture
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.SetFixture
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
  parent: Microsoft.Azure.KeyVault.Cryptography.Tests
  isExternal: false
  name: TestFixture
  nameWithType: TestFixture
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.TestFixture
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15
  isExternal: false
  name: KeyVault_RsaKeyRSA15
  nameWithType: RsaKeyTests.KeyVault_RsaKeyRSA15
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSA15
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP
  isExternal: false
  name: KeyVault_RsaKeyRSAOAEP
  nameWithType: RsaKeyTests.KeyVault_RsaKeyRSAOAEP
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRSAOAEP
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm
  isExternal: false
  name: KeyVault_RsaKeyDefaultAlgorithm
  nameWithType: RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyDefaultAlgorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256
  isExternal: false
  name: KeyVault_RsaKeyRS256
  nameWithType: RsaKeyTests.KeyVault_RsaKeyRS256
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.KeyVault_RsaKeyRS256
- uid: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey
  isExternal: false
  name: GetTestRsaKey
  nameWithType: RsaKeyTests.GetTestRsaKey
  fullName: Microsoft.Azure.KeyVault.Cryptography.Tests.RsaKeyTests.GetTestRsaKey
- uid: Microsoft.Azure.KeyVault.RsaKey
  commentId: T:Microsoft.Azure.KeyVault.RsaKey
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: RsaKey
  nameWithType: RsaKey
  fullName: Microsoft.Azure.KeyVault.RsaKey
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
