### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  commentId: T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  id: SimpleWebSecurityTokenSerializer
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(SecurityTokenSerializer)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  - Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
  langs:
  - csharp
  - vb
  name: SimpleWebSecurityTokenSerializer
  nameWithType: SimpleWebSecurityTokenSerializer
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: SimpleWebSecurityTokenSerializer
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Represents a class to use to read and to write \n<xref href=\"Microsoft.ServiceBus.SimpleWebSecurityToken\" data-throw-if-not-resolved=\"false\"></xref>, \n<see cref=\"!:System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></see>, and \n<see cref=\"!:System.IdentityModel.Tokens.SecurityKeyIdentifier\"></see> objects as XML."
  example: []
  syntax:
    content: 'public class SimpleWebSecurityTokenSerializer : SecurityTokenSerializer'
    content.vb: >-
      Public Class SimpleWebSecurityTokenSerializer
          Inherits SecurityTokenSerializer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance
  commentId: F:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance
  id: DefaultInstance
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: DefaultInstance
  nameWithType: SimpleWebSecurityTokenSerializer.DefaultInstance
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance
  type: Field
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: DefaultInstance
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Specifies an instance of the<xref href="Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static readonly SimpleWebSecurityTokenSerializer DefaultInstance
    content.vb: Public Shared ReadOnly DefaultInstance As SimpleWebSecurityTokenSerializer
    return:
      type: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: SimpleWebSecurityTokenSerializer()
  nameWithType: SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer()
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer()
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public SimpleWebSecurityTokenSerializer()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(SecurityTokenSerializer)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(SecurityTokenSerializer)
  id: '#ctor(SecurityTokenSerializer)'
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: SimpleWebSecurityTokenSerializer(SecurityTokenSerializer)
  nameWithType: SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer(SecurityTokenSerializer)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer(SecurityTokenSerializer)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 43
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public SimpleWebSecurityTokenSerializer(SecurityTokenSerializer innerSerializer)
    content.vb: Public Sub New(innerSerializer As SecurityTokenSerializer)
    parameters:
    - id: innerSerializer
      type: SecurityTokenSerializer
      description: A SecurityTokenSerializer to wrap. Typically the default WCF serializer
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  id: CanReadKeyIdentifierClauseCore(XmlReader)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanReadKeyIdentifierClauseCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred  by the specified XML reader.
  example: []
  syntax:
    content: protected override bool CanReadKeyIdentifierClauseCore(XmlReader reader)
    content.vb: Protected Overrides Function CanReadKeyIdentifierClauseCore(reader As XmlReader) As Boolean
    parameters:
    - id: reader
      type: XmlReader
      description: An <see cref="!:System.Xml.XmlReader"></see> to read the key identifier clause.
    return:
      type: System.Boolean
      description: true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  id: CanReadKeyIdentifierCore(XmlReader)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: CanReadKeyIdentifierCore(XmlReader)
  nameWithType: SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanReadKeyIdentifierCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred  by the specified XML reader.
  example: []
  syntax:
    content: protected override bool CanReadKeyIdentifierCore(XmlReader reader)
    content.vb: Protected Overrides Function CanReadKeyIdentifierCore(reader As XmlReader) As Boolean
    parameters:
    - id: reader
      type: XmlReader
      description: An <see cref="!:System.Xml.XmlReader"></see> to read the key identifier.
    return:
      type: System.Boolean
      description: true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader)
  id: CanReadTokenCore(XmlReader)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: CanReadTokenCore(XmlReader)
  nameWithType: SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanReadTokenCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 84
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether this serializer can read the security token pointed at by the specified XML reader.
  example: []
  syntax:
    content: protected override bool CanReadTokenCore(XmlReader reader)
    content.vb: Protected Overrides Function CanReadTokenCore(reader As XmlReader) As Boolean
    parameters:
    - id: reader
      type: XmlReader
      description: An <see cref="!:System.Xml.XmlReader"></see> to read the security token.
    return:
      type: System.Boolean
      description: true when the security token can be read; otherwise, false.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  nameWithType: SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanWriteKeyIdentifierClauseCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 99
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether this serializer can write the specified key identifier clause.
  example: []
  syntax:
    content: protected override bool CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause keyIdentifierClause)
    content.vb: Protected Overrides Function CanWriteKeyIdentifierClauseCore(keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean
    parameters:
    - id: keyIdentifierClause
      type: SecurityKeyIdentifierClause
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" data-throw-if-not-resolved="false"></xref> that represents the key identifier clause to write.
    return:
      type: System.Boolean
      description: true when this serializer can write the specified key identifier clause; otherwise, false.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  id: CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  nameWithType: SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanWriteKeyIdentifierCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 107
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether this serializer can write the specified key identifier.
  example: []
  syntax:
    content: protected override bool CanWriteKeyIdentifierCore(SecurityKeyIdentifier keyIdentifier)
    content.vb: Protected Overrides Function CanWriteKeyIdentifierCore(keyIdentifier As SecurityKeyIdentifier) As Boolean
    parameters:
    - id: keyIdentifier
      type: SecurityKeyIdentifier
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifier" data-throw-if-not-resolved="false"></xref> that represents the key identifier to write.
    return:
      type: System.Boolean
      description: true when this serializer can write the specified key identifier; otherwise, false.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  id: CanWriteTokenCore(SecurityToken)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: CanWriteTokenCore(SecurityToken)
  nameWithType: SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanWriteTokenCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 115
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether this serializer can write the specified security token to XML.
  example: []
  syntax:
    content: protected override bool CanWriteTokenCore(SecurityToken token)
    content.vb: Protected Overrides Function CanWriteTokenCore(token As SecurityToken) As Boolean
    parameters:
    - id: token
      type: SecurityToken
      description: The <xref href="System.IdentityModel.Tokens.SecurityToken" data-throw-if-not-resolved="false"></xref> to convert to XML.
    return:
      type: System.Boolean
      description: true when the security token can be written; otherwise, false.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  id: ReadKeyIdentifierClauseCore(XmlReader)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ReadKeyIdentifierClauseCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 130
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Reads the key identifier clause using the specified XML reader.
  example: []
  syntax:
    content: protected override SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore(XmlReader reader)
    content.vb: Protected Overrides Function ReadKeyIdentifierClauseCore(reader As XmlReader) As SecurityKeyIdentifierClause
    parameters:
    - id: reader
      type: XmlReader
      description: An <see cref="!:System.Xml.XmlReader"></see> to read the key identifier clause.
    return:
      type: SecurityKeyIdentifierClause
      description: A <see cref="!:System.IdentityModel.Tokens.SecurityKeyIdentifierClause"></see> that represents the key identifier that is read.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  id: ReadKeyIdentifierCore(XmlReader)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: ReadKeyIdentifierCore(XmlReader)
  nameWithType: SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ReadKeyIdentifierCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 138
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Reads the key identifier using the specified XML reader.
  example: []
  syntax:
    content: protected override SecurityKeyIdentifier ReadKeyIdentifierCore(XmlReader reader)
    content.vb: Protected Overrides Function ReadKeyIdentifierCore(reader As XmlReader) As SecurityKeyIdentifier
    parameters:
    - id: reader
      type: XmlReader
      description: An <see cref="!:System.Xml.XmlReader"></see> to read the key identifier.
    return:
      type: SecurityKeyIdentifier
      description: A <see cref="!:System.IdentityModel.Tokens.SecurityKeyIdentifier"></see> that represents the key identifier that is read.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader,SecurityTokenResolver)
  id: ReadTokenCore(XmlReader,SecurityTokenResolver)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: ReadTokenCore(XmlReader, SecurityTokenResolver)
  nameWithType: SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader, SecurityTokenResolver)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader, SecurityTokenResolver)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ReadTokenCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 148
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Reads the<xref href="Microsoft.ServiceBus.SimpleWebSecurityToken" data-throw-if-not-resolved="false"></xref> or the security token pointed at by the specified XML reader.
  example: []
  syntax:
    content: protected override SecurityToken ReadTokenCore(XmlReader reader, SecurityTokenResolver tokenResolver)
    content.vb: Protected Overrides Function ReadTokenCore(reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken
    parameters:
    - id: reader
      type: XmlReader
      description: An <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> to read the SimpleWebSecurityToken or the security token.
    - id: tokenResolver
      type: SecurityTokenResolver
      description: A <xref href="System.IdentityModel.Selectors.SecurityTokenResolver" data-throw-if-not-resolved="false"></xref> that determines the security token type.
    return:
      type: SecurityToken
      description: A<xref href="System.IdentityModel.Tokens.SecurityToken" data-throw-if-not-resolved="false"></xref> that represents the SimpleWebSecurityToken or the security token that is read.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The encoding of the XML element is not base64Binary.
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: WriteKeyIdentifierClauseCore(XmlWriter, SecurityKeyIdentifierClause)
  nameWithType: SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter, SecurityKeyIdentifierClause)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter, SecurityKeyIdentifierClause)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: WriteKeyIdentifierClauseCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 179
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Writes the specified key identifier clause using the specified XML writer.
  example: []
  syntax:
    content: protected override void WriteKeyIdentifierClauseCore(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause)
    content.vb: Protected Overrides Sub WriteKeyIdentifierClauseCore(writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)
    parameters:
    - id: writer
      type: XmlWriter
      description: An <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> used to write the key identifier clause.
    - id: keyIdentifierClause
      type: SecurityKeyIdentifierClause
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" data-throw-if-not-resolved="false"></xref> that represents the key identifier clause to write.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  id: WriteKeyIdentifierCore(XmlWriter,SecurityKeyIdentifier)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: WriteKeyIdentifierCore(XmlWriter, SecurityKeyIdentifier)
  nameWithType: SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter, SecurityKeyIdentifier)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter, SecurityKeyIdentifier)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: WriteKeyIdentifierCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 188
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Writes the specified key identifier using the specified XML writer.
  example: []
  syntax:
    content: protected override void WriteKeyIdentifierCore(XmlWriter writer, SecurityKeyIdentifier keyIdentifier)
    content.vb: Protected Overrides Sub WriteKeyIdentifierCore(writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)
    parameters:
    - id: writer
      type: XmlWriter
      description: An <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> used to write the key identifier.
    - id: keyIdentifier
      type: SecurityKeyIdentifier
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifier" data-throw-if-not-resolved="false"></xref> that represents the key identifier to write.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The binary token content is null.
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
  commentId: M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter,SecurityToken)
  id: WriteTokenCore(XmlWriter,SecurityToken)
  parent: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  langs:
  - csharp
  - vb
  name: WriteTokenCore(XmlWriter, SecurityToken)
  nameWithType: SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter, SecurityToken)
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter, SecurityToken)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: WriteTokenCore
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/SimpleWebSecurityTokenSerializer.cs
    startLine: 196
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Writes the specified<xref href="Microsoft.ServiceBus.SimpleWebSecurityToken" data-throw-if-not-resolved="false"></xref> or security token using the specified XML writer.
  example: []
  syntax:
    content: protected override void WriteTokenCore(XmlWriter writer, SecurityToken token)
    content.vb: Protected Overrides Sub WriteTokenCore(writer As XmlWriter, token As SecurityToken)
    parameters:
    - id: writer
      type: XmlWriter
      description: An <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> used to write the SimpleWebSecurityToken or security token.
    - id: token
      type: SecurityToken
      description: The SimpleWebSecurityToken or security token to write.
  overload: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.ServiceBus.SimpleWebSecurityToken
  commentId: T:Microsoft.ServiceBus.SimpleWebSecurityToken
  parent: Microsoft.ServiceBus
  isExternal: false
  name: SimpleWebSecurityToken
  nameWithType: SimpleWebSecurityToken
  fullName: Microsoft.ServiceBus.SimpleWebSecurityToken
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  commentId: T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
  parent: Microsoft.ServiceBus
  isExternal: false
  name: SimpleWebSecurityTokenSerializer
  nameWithType: SimpleWebSecurityTokenSerializer
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor
  isExternal: false
  name: SimpleWebSecurityTokenSerializer
  nameWithType: SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer
- uid: SecurityTokenSerializer
  commentId: '!:SecurityTokenSerializer'
  isExternal: true
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: SecurityTokenSerializer
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore
  isExternal: false
  name: CanReadKeyIdentifierClauseCore
  nameWithType: SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore
- uid: XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: XmlReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore
  isExternal: false
  name: CanReadKeyIdentifierCore
  nameWithType: SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore
  isExternal: false
  name: CanReadTokenCore
  nameWithType: SimpleWebSecurityTokenSerializer.CanReadTokenCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  commentId: T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore
  isExternal: false
  name: CanWriteKeyIdentifierClauseCore
  nameWithType: SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore
- uid: SecurityKeyIdentifierClause
  isExternal: true
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  commentId: T:System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore
  isExternal: false
  name: CanWriteKeyIdentifierCore
  nameWithType: SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore
- uid: SecurityKeyIdentifier
  isExternal: true
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  commentId: T:System.IdentityModel.Tokens.SecurityToken
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore
  isExternal: false
  name: CanWriteTokenCore
  nameWithType: SimpleWebSecurityTokenSerializer.CanWriteTokenCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore
- uid: SecurityToken
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: SecurityToken
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore
  isExternal: false
  name: ReadKeyIdentifierClauseCore
  nameWithType: SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore
  isExternal: false
  name: ReadKeyIdentifierCore
  nameWithType: SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  commentId: T:System.IdentityModel.Selectors.SecurityTokenResolver
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore
  isExternal: false
  name: ReadTokenCore
  nameWithType: SimpleWebSecurityTokenSerializer.ReadTokenCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
- uid: SecurityTokenResolver
  commentId: '!:SecurityTokenResolver'
  isExternal: true
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: SecurityTokenResolver
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore
  isExternal: false
  name: WriteKeyIdentifierClauseCore
  nameWithType: SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore
- uid: XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: XmlWriter
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore
  isExternal: false
  name: WriteKeyIdentifierCore
  nameWithType: SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore*
  commentId: Overload:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore
  isExternal: false
  name: WriteTokenCore
  nameWithType: SimpleWebSecurityTokenSerializer.WriteTokenCore
  fullName: Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore
