### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase
  commentId: T:Microsoft.ServiceBus.WSHttpRelayBindingBase
  id: WSHttpRelayBindingBase
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding
  - Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy
  langs:
  - csharp
  - vb
  name: WSHttpRelayBindingBase
  nameWithType: WSHttpRelayBindingBase
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: WSHttpRelayBindingBase
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Provides the base class with members common to the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: 'public abstract class WSHttpRelayBindingBase : Binding, IBindingRuntimePreferences'
    content.vb: >-
      Public MustInherit Class WSHttpRelayBindingBase
          Inherits Binding
          Implements IBindingRuntimePreferences
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor
  commentId: M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: WSHttpRelayBindingBase()
  nameWithType: WSHttpRelayBindingBase.WSHttpRelayBindingBase()
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.WSHttpRelayBindingBase()
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Initializes a new instance of the <xref href="Microsoft.ServiceBus.WSHttpRelayBindingBase" data-throw-if-not-resolved="false"></xref> class. '
  example: []
  syntax:
    content: protected WSHttpRelayBindingBase()
    content.vb: Protected Sub New
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)
  commentId: M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: WSHttpRelayBindingBase(Boolean)
  nameWithType: WSHttpRelayBindingBase.WSHttpRelayBindingBase(Boolean)
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.WSHttpRelayBindingBase(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBindingBase\" data-throw-if-not-resolved=\"false\"></xref> class with a value that indicates whether a reliable session is enabled. "
  example: []
  syntax:
    content: protected WSHttpRelayBindingBase(bool reliableSessionEnabled)
    content.vb: Protected Sub New(reliableSessionEnabled As Boolean)
    parameters:
    - id: reliableSessionEnabled
      type: System.Boolean
      description: true, if a reliable session is enabled; otherwise, false.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: HostNameComparisonMode
  nameWithType: WSHttpRelayBindingBase.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: HostNameComparisonMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the comparison mode used on the host name.
  example: []
  syntax:
    content: public HostNameComparisonMode HostNameComparisonMode { get; set; }
    content.vb: Public Property HostNameComparisonMode As HostNameComparisonMode
    parameters: []
    return:
      type: HostNameComparisonMode
      description: The comparison mode used on the host name.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MaxBufferPoolSize
  nameWithType: WSHttpRelayBindingBase.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: MaxBufferPoolSize
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets the maximum amount of memory allocated for the buffer manager \nthat manages the buffers required by endpoints using this Azure Service Bus binding. "
  example: []
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    content.vb: Public Property MaxBufferPoolSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "Returns \n<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes."
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  nameWithType: WSHttpRelayBindingBase.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: MaxReceivedMessageSize
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets or sets the maximum size for a message that can be processed by the Azure Service Bus binding. '
  example: []
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    content.vb: Public Property MaxReceivedMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "Returns \n<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.The maximum size, in bytes, for a message that is processed by the Azure Service Bus binding. The default value is 65,536 bytes."
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding
  id: MessageEncoding
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MessageEncoding
  nameWithType: WSHttpRelayBindingBase.MessageEncoding
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: MessageEncoding
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 96
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets or sets whether MTOM or Text/XML is used to encode SOAP messages. '
  example: []
  syntax:
    content: public WSMessageEncoding MessageEncoding { get; set; }
    content.vb: Public Property MessageEncoding As WSMessageEncoding
    parameters: []
    return:
      type: WSMessageEncoding
      description: "Returns \n<see cref=\"!:System.ServiceModel.WSMessageEncoding\"></see>.Indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is Text/XML."
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress
  id: ProxyAddress
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ProxyAddress
  nameWithType: WSHttpRelayBindingBase.ProxyAddress
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ProxyAddress
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 104
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets or sets the URI address of the HTTP proxy. '
  example: []
  syntax:
    content: public Uri ProxyAddress { get; set; }
    content.vb: Public Property ProxyAddress As Uri
    parameters: []
    return:
      type: Uri
      description: Returns <see cref="!:System.Uri"></see>.Serves as the address of the HTTP proxy. The default value is null.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas
  id: ReaderQuotas
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ReaderQuotas
  nameWithType: WSHttpRelayBindingBase.ReaderQuotas
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ReaderQuotas
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 117
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets constraints on the complexity of SOAP messages that \ncan be processed by endpoints configured with this Security Bus binding. "
  example: []
  syntax:
    content: public XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    content.vb: Public Property ReaderQuotas As XmlDictionaryReaderQuotas
    parameters: []
    return:
      type: XmlDictionaryReaderQuotas
      description: Returns <see cref="!:System.Xml.XmlDictionaryReaderQuotas"></see>.Specifies the complexity constraints.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession
  id: ReliableSession
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ReliableSession
  nameWithType: WSHttpRelayBindingBase.ReliableSession
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ReliableSession
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 135
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets an object that provides convenient access to the properties of a reliable Azure \nService Bus session binding element that are available when using one of the system-provided bindings. "
  example: []
  syntax:
    content: public OptionalReliableSession ReliableSession { get; }
    content.vb: Public ReadOnly Property ReliableSession As OptionalReliableSession
    parameters: []
    return:
      type: OptionalReliableSession
      description: "Returns \n<see cref=\"!:System.ServiceModel.OptionalReliableSession\"></see>.Provides convenient access to the properties of a reliable Azure Service Bus session binding element that are available when using one of the system-provided bindings."
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme
  id: Scheme
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: WSHttpRelayBindingBase.Scheme
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: Scheme
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 144
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets the URI transport scheme for the channels and listeners that are configured with this binding. '
  example: []
  syntax:
    content: public override string Scheme { get; }
    content.vb: Public Overrides ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the URI transport scheme.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion
  id: EnvelopeVersion
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: EnvelopeVersion
  nameWithType: WSHttpRelayBindingBase.EnvelopeVersion
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: EnvelopeVersion
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 149
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets the version of SOAP that is used for messages that are processed by this binding. '
  example: []
  syntax:
    content: public EnvelopeVersion EnvelopeVersion { get; }
    content.vb: Public ReadOnly Property EnvelopeVersion As EnvelopeVersion
    parameters: []
    return:
      type: EnvelopeVersion
      description: "Returns \n<see cref=\"!:System.ServiceModel.EnvelopeVersion\"></see>.The value of the envelope version that is used with this Azure Service Bus binding. The value is always SOAP 1.2."
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding
  id: TextEncoding
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: TextEncoding
  nameWithType: WSHttpRelayBindingBase.TextEncoding
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: TextEncoding
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 156
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the character encoding that is used for the message text.
  example: []
  syntax:
    content: public Encoding TextEncoding { get; set; }
    content.vb: Public Property TextEncoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: The character encoding that is used for the message text.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: UseDefaultWebProxy
  nameWithType: WSHttpRelayBindingBase.UseDefaultWebProxy
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: UseDefaultWebProxy
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 168
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.
  example: []
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    content.vb: Public Property UseDefaultWebProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic
  commentId: P:Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic
  id: IsDynamic
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: WSHttpRelayBindingBase.IsDynamic
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: IsDynamic
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 180
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets whether the relay binding is dynamic.
  example: []
  syntax:
    content: public bool IsDynamic { get; set; }
    content.vb: Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the relay binding is dynamic; otherwise, false.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements
  commentId: M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements
  id: CreateBindingElements
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: CreateBindingElements()
  nameWithType: WSHttpRelayBindingBase.CreateBindingElements()
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CreateBindingElements
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 311
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Returns an ordered collection of binding elements contained in the current Azure Service Bus binding. '
  example: []
  syntax:
    content: public override BindingElementCollection CreateBindingElements()
    content.vb: Public Overrides Function CreateBindingElements As BindingElementCollection
    return:
      type: BindingElementCollection
      description: Returns <see cref="!:System.ServiceModel.Channels.BindingElementCollection"></see>.Contains the objects for the binding.
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport
  commentId: M:Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport
  id: GetTransport
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: GetTransport()
  nameWithType: WSHttpRelayBindingBase.GetTransport()
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: GetTransport
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 421
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'When implemented in a derived class, returns the transport binding element from the current Azure Service Bus binding. '
  example: []
  syntax:
    content: protected abstract TransportBindingElement GetTransport()
    content.vb: Protected MustOverride Function GetTransport As TransportBindingElement
    return:
      type: TransportBindingElement
      description: "Returns \n<see cref=\"!:System.ServiceModel.Channels.TransportBindingElement\"></see>.Contains the transport binding element from the current Azure Service Bus binding. "
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity
  commentId: M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity
  id: CreateMessageSecurity
  parent: Microsoft.ServiceBus.WSHttpRelayBindingBase
  langs:
  - csharp
  - vb
  name: CreateMessageSecurity()
  nameWithType: WSHttpRelayBindingBase.CreateMessageSecurity()
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CreateMessageSecurity
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelayBindingBase.cs
    startLine: 425
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'When implemented in a derived class, returns the security binding element from the current Azure Service Bus binding. '
  example: []
  syntax:
    content: protected abstract SecurityBindingElement CreateMessageSecurity()
    content.vb: Protected MustOverride Function CreateMessageSecurity As SecurityBindingElement
    return:
      type: SecurityBindingElement
      description: "Returns \n<see cref=\"!:System.ServiceModel.Channels.SecurityBindingElement\"></see>.Contains the security binding element from the current Azure Service Bus binding."
  overload: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.ServiceBus.WSHttpRelayBinding
  commentId: T:Microsoft.ServiceBus.WSHttpRelayBinding
  parent: Microsoft.ServiceBus
  isExternal: false
  name: WSHttpRelayBinding
  nameWithType: WSHttpRelayBinding
  fullName: Microsoft.ServiceBus.WSHttpRelayBinding
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase
  commentId: T:Microsoft.ServiceBus.WSHttpRelayBindingBase
  parent: Microsoft.ServiceBus
  isExternal: false
  name: WSHttpRelayBindingBase
  nameWithType: WSHttpRelayBindingBase
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor
  isExternal: false
  name: WSHttpRelayBindingBase
  nameWithType: WSHttpRelayBindingBase.WSHttpRelayBindingBase
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.WSHttpRelayBindingBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSHttpRelayBindingBase.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode
- uid: HostNameComparisonMode
  isExternal: true
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: HostNameComparisonMode
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSHttpRelayBindingBase.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSHttpRelayBindingBase.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding
  isExternal: false
  name: MessageEncoding
  nameWithType: WSHttpRelayBindingBase.MessageEncoding
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding
- uid: WSMessageEncoding
  isExternal: true
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: WSMessageEncoding
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress
  isExternal: false
  name: ProxyAddress
  nameWithType: WSHttpRelayBindingBase.ProxyAddress
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSHttpRelayBindingBase.ReaderQuotas
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas
- uid: XmlDictionaryReaderQuotas
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: XmlDictionaryReaderQuotas
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: WSHttpRelayBindingBase.ReliableSession
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession
- uid: OptionalReliableSession
  isExternal: true
  name: OptionalReliableSession
  nameWithType: OptionalReliableSession
  fullName: OptionalReliableSession
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme
  isExternal: false
  name: Scheme
  nameWithType: WSHttpRelayBindingBase.Scheme
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSHttpRelayBindingBase.EnvelopeVersion
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion
- uid: EnvelopeVersion
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: EnvelopeVersion
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding
  isExternal: false
  name: TextEncoding
  nameWithType: WSHttpRelayBindingBase.TextEncoding
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSHttpRelayBindingBase.UseDefaultWebProxy
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic
  isExternal: false
  name: IsDynamic
  nameWithType: WSHttpRelayBindingBase.IsDynamic
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements
  isExternal: false
  name: CreateBindingElements
  nameWithType: WSHttpRelayBindingBase.CreateBindingElements
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements
- uid: BindingElementCollection
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: BindingElementCollection
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport
  isExternal: false
  name: GetTransport
  nameWithType: WSHttpRelayBindingBase.GetTransport
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport
- uid: TransportBindingElement
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: TransportBindingElement
- uid: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity
  isExternal: false
  name: CreateMessageSecurity
  nameWithType: WSHttpRelayBindingBase.CreateMessageSecurity
  fullName: Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity
- uid: SecurityBindingElement
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityBindingElement
  fullName: SecurityBindingElement
