### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.Filter
  commentId: T:Microsoft.ServiceBus.Messaging.Filter
  id: Filter
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.Filter.Preprocess
  - Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing
  - Microsoft.ServiceBus.Messaging.Filter.Validate
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: Filter
  fullName: Microsoft.ServiceBus.Messaging.Filter
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Filter
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Describes a filter expression that is evaluated against a BrokeredMessage.
  example: []
  syntax:
    content: 'public abstract class Filter : IExtensibleDataObject'
    content.vb: >-
      Public MustInherit Class Filter
          Inherits IExtensibleDataObject
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing
  commentId: P:Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing
  id: RequiresPreprocessing
  parent: Microsoft.ServiceBus.Messaging.Filter
  langs:
  - csharp
  - vb
  name: RequiresPreprocessing
  nameWithType: Filter.RequiresPreprocessing
  fullName: Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: RequiresPreprocessing
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets a value indicating whether the filter expression requires preprocessing.
  example: []
  syntax:
    content: public abstract bool RequiresPreprocessing { get; }
    content.vb: Public MustOverride ReadOnly Property RequiresPreprocessing As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the filter expression requires preprocessing; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.Filter.Preprocess
  commentId: M:Microsoft.ServiceBus.Messaging.Filter.Preprocess
  id: Preprocess
  parent: Microsoft.ServiceBus.Messaging.Filter
  langs:
  - csharp
  - vb
  name: Preprocess()
  nameWithType: Filter.Preprocess()
  fullName: Microsoft.ServiceBus.Messaging.Filter.Preprocess()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Preprocess
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Preprocesses the filter expression and returns a preprocessed FilterExpression.
  example: []
  syntax:
    content: public abstract Filter Preprocess()
    content.vb: Public MustOverride Function Preprocess As Filter
    return:
      type: Microsoft.ServiceBus.Messaging.Filter
      description: The preprocessed FilterExpression.
  overload: Microsoft.ServiceBus.Messaging.Filter.Preprocess*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The operation is invalid with the current state of object.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.Filter
  langs:
  - csharp
  - vb
  name: Match(BrokeredMessage)
  nameWithType: Filter.Match(BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Match
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
    startLine: 49
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Matches the BrokeredMessage against the FilterExpression.
  example: []
  syntax:
    content: public abstract bool Match(BrokeredMessage message)
    content.vb: Public MustOverride Function Match(message As BrokeredMessage) As Boolean
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The BrokeredMessage object.
    return:
      type: System.Boolean
      description: true if the BrokeredMessage matches the filtering expression; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.Filter.Match*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The operation is invalid with the current state of object.
  - type: Microsoft.ServiceBus.Messaging.FilterException
    commentId: T:Microsoft.ServiceBus.Messaging.FilterException
    description: Filter evaluation failed.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.Filter.Validate
  commentId: M:Microsoft.ServiceBus.Messaging.Filter.Validate
  id: Validate
  parent: Microsoft.ServiceBus.Messaging.Filter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Filter.Validate()
  fullName: Microsoft.ServiceBus.Messaging.Filter.Validate()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Validate
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/Filter.cs
    startLine: 54
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Validates the FilterExpression and make sure it complies with the valid grammar rules.
  example: []
  syntax:
    content: public abstract void Validate()
    content.vb: Public MustOverride Sub Validate
  overload: Microsoft.ServiceBus.Messaging.Filter.Validate*
  exceptions:
  - type: Microsoft.ServiceBus.Messaging.FilterException
    commentId: T:Microsoft.ServiceBus.Messaging.FilterException
    description: "The filter statement is invalid or is potentially complex \nenough to consume too much computing power when evaluating the statement."
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing*
  commentId: Overload:Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing
  isExternal: false
  name: RequiresPreprocessing
  nameWithType: Filter.RequiresPreprocessing
  fullName: Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.Filter.Preprocess*
  commentId: Overload:Microsoft.ServiceBus.Messaging.Filter.Preprocess
  isExternal: false
  name: Preprocess
  nameWithType: Filter.Preprocess
  fullName: Microsoft.ServiceBus.Messaging.Filter.Preprocess
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.ServiceBus.Messaging.Filter
  commentId: T:Microsoft.ServiceBus.Messaging.Filter
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Filter
  nameWithType: Filter
  fullName: Microsoft.ServiceBus.Messaging.Filter
- uid: Microsoft.ServiceBus.Messaging.Filter.Match*
  commentId: Overload:Microsoft.ServiceBus.Messaging.Filter.Match
  isExternal: false
  name: Match
  nameWithType: Filter.Match
  fullName: Microsoft.ServiceBus.Messaging.Filter.Match
- uid: Microsoft.ServiceBus.Messaging.FilterException
  commentId: T:Microsoft.ServiceBus.Messaging.FilterException
  isExternal: false
  name: FilterException
  nameWithType: FilterException
  fullName: Microsoft.ServiceBus.Messaging.FilterException
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: Microsoft.ServiceBus.Messaging.Filter.Validate*
  commentId: Overload:Microsoft.ServiceBus.Messaging.Filter.Validate
  isExternal: false
  name: Validate
  nameWithType: Filter.Validate
  fullName: Microsoft.ServiceBus.Messaging.Filter.Validate
