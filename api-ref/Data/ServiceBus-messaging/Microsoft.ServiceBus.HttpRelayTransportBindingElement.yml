### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  commentId: T:Microsoft.ServiceBus.HttpRelayTransportBindingElement
  id: HttpRelayTransportBindingElement
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(BindingContext)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(BindingContext)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(BindingContext)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode
  - Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy
  langs:
  - csharp
  - vb
  name: HttpRelayTransportBindingElement
  nameWithType: HttpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: HttpRelayTransportBindingElement
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Represents the binding element used to specify an HTTP transport for transmitting messages on the Azure Service Bus. '
  example: []
  syntax:
    content: 'public class HttpRelayTransportBindingElement : TransportBindingElement, IPolicyExportExtension, IWsdlExportExtension, ITransportTokenAssertionProvider'
    content.vb: >-
      Public Class HttpRelayTransportBindingElement
          Inherits TransportBindingElement
          Implements IPolicyExportExtension, IWsdlExportExtension, ITransportTokenAssertionProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: HttpRelayTransportBindingElement()
  nameWithType: HttpRelayTransportBindingElement.HttpRelayTransportBindingElement()
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HttpRelayTransportBindingElement()
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.HttpRelayTransportBindingElement" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public HttpRelayTransportBindingElement()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)
  id: '#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)'
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: HttpRelayTransportBindingElement(RelayClientAuthenticationType)
  nameWithType: HttpRelayTransportBindingElement.HttpRelayTransportBindingElement(RelayClientAuthenticationType)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HttpRelayTransportBindingElement(Microsoft.ServiceBus.RelayClientAuthenticationType)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.HttpRelayTransportBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified client authentication type."
  example: []
  syntax:
    content: public HttpRelayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType)
    content.vb: Public Sub New(relayClientAuthenticationType As RelayClientAuthenticationType)
    parameters:
    - id: relayClientAuthenticationType
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: The client authentication type.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)
  id: '#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)'
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: HttpRelayTransportBindingElement(HttpRelayTransportBindingElement)
  nameWithType: HttpRelayTransportBindingElement.HttpRelayTransportBindingElement(HttpRelayTransportBindingElement)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HttpRelayTransportBindingElement(Microsoft.ServiceBus.HttpRelayTransportBindingElement)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.HttpRelayTransportBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified element to be cloned."
  example: []
  syntax:
    content: protected HttpRelayTransportBindingElement(HttpRelayTransportBindingElement elementToBeCloned)
    content.vb: Protected Sub New(elementToBeCloned As HttpRelayTransportBindingElement)
    parameters:
    - id: elementToBeCloned
      type: Microsoft.ServiceBus.HttpRelayTransportBindingElement
      description: The element to be cloned.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion
  id: GetTransportTokenAssertion
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: GetTransportTokenAssertion()
  nameWithType: HttpRelayTransportBindingElement.GetTransportTokenAssertion()
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: GetTransportTokenAssertion
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 71
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the XML element that represents the transport token used in the security binding.
  example: []
  syntax:
    content: public XmlElement GetTransportTokenAssertion()
    content.vb: Public Function GetTransportTokenAssertion As XmlElement
    return:
      type: XmlElement
      description: The transport token used in the security binding.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies
  id: AllowCookies
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: AllowCookies
  nameWithType: HttpRelayTransportBindingElement.AllowCookies
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: AllowCookies
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 78
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.
  example: []
  syntax:
    content: public bool AllowCookies { get; set; }
    content.vb: Public Property AllowCookies As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if cookies are allowed; otherwise, false. The default is false.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: HostNameComparisonMode
  nameWithType: HttpRelayTransportBindingElement.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: HostNameComparisonMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 92
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the comparison mode use in the host name.
  example: []
  syntax:
    content: public HostNameComparisonMode HostNameComparisonMode { get; set; }
    content.vb: Public Property HostNameComparisonMode As HostNameComparisonMode
    parameters: []
    return:
      type: HostNameComparisonMode
      description: The comparison mode use in the host name.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled
  id: KeepAliveEnabled
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: KeepAliveEnabled
  nameWithType: HttpRelayTransportBindingElement.KeepAliveEnabled
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: KeepAliveEnabled
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 101
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets or sets a value that indicates whether to make a persistent connection to a service endpoint. '
  example: []
  syntax:
    content: public bool KeepAliveEnabled { get; set; }
    content.vb: Public Property KeepAliveEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "true if the request to the service endpoint should contain a \nConnection HTTP header with the value Keep-alive; otherwise, false. The default is true."
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize
  id: MaxBufferSize
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: MaxBufferSize
  nameWithType: HttpRelayTransportBindingElement.MaxBufferSize
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: MaxBufferSize
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 117
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the maximum size of the buffer to use.
  example: []
  syntax:
    content: public int MaxBufferSize { get; set; }
    content.vb: Public Property MaxBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns the maximum size, in bytes, of the buffer.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress
  id: ProxyAddress
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: ProxyAddress
  nameWithType: HttpRelayTransportBindingElement.ProxyAddress
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: ProxyAddress
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 150
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a URI that contains the address of the proxy to use for HTTP requests.
  example: []
  syntax:
    content: public Uri ProxyAddress { get; set; }
    content.vb: Public Property ProxyAddress As Uri
    parameters: []
    return:
      type: Uri
      description: Returns a <see cref="!:System.Uri"></see> that contains the address for the proxy. The default value is null.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  id: ProxyAuthenticationScheme
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: ProxyAuthenticationScheme
  nameWithType: HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: ProxyAuthenticationScheme
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 165
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.
  example: []
  syntax:
    content: public AuthenticationSchemes ProxyAuthenticationScheme { get; set; }
    content.vb: Public Property ProxyAuthenticationScheme As AuthenticationSchemes
    parameters: []
    return:
      type: AuthenticationSchemes
      description: "One of the values of the \n<see cref=\"!:System.Net.AuthenticationSchemes\"></see> enumeration that specifies the protocols used for client authentication on the proxy. The default is Anonymous. "
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType
  id: RelayClientAuthenticationType
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: RelayClientAuthenticationType
  nameWithType: HttpRelayTransportBindingElement.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: RelayClientAuthenticationType
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 186
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets or sets the relay client authentication type. '
  example: []
  syntax:
    content: public RelayClientAuthenticationType RelayClientAuthenticationType { get; set; }
    content.vb: Public Property RelayClientAuthenticationType As RelayClientAuthenticationType
    parameters: []
    return:
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: "Returns \n<xref href=\"Microsoft.ServiceBus.RelayClientAuthenticationType\" data-throw-if-not-resolved=\"false\"></xref>.Contains the authentication type. The default value is RelayClientAuthenticationType.RelayAccessToken"
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme
  id: Scheme
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: HttpRelayTransportBindingElement.Scheme
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Scheme
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 200
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the URI scheme for the transport.
  example: []
  syntax:
    content: public override string Scheme { get; }
    content.vb: Public Overrides ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: Returns the URI scheme.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode
  id: TransferMode
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: TransferMode
  nameWithType: HttpRelayTransportBindingElement.TransferMode
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: TransferMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 207
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the transfer mode.
  example: []
  syntax:
    content: public TransferMode TransferMode { get; set; }
    content.vb: Public Property TransferMode As TransferMode
    parameters: []
    return:
      type: TransferMode
      description: Returns a <see cref="!:System.ServiceModel.TransferMode"></see> that contains the transfer mode.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: UseDefaultWebProxy
  nameWithType: HttpRelayTransportBindingElement.UseDefaultWebProxy
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: UseDefaultWebProxy
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 222
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.
  example: []
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    content.vb: Public Property UseDefaultWebProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the machine-wide proxy settings are used; otherwise, false. The default is true.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic
  commentId: P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic
  id: IsDynamic
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: HttpRelayTransportBindingElement.IsDynamic
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: IsDynamic
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 236
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets whether the binding element is dynamic.
  example: []
  syntax:
    content: public bool IsDynamic { get; set; }
    content.vb: Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the binding element is dynamic; otherwise, false.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(BindingContext)
  id: BuildChannelFactory``1(BindingContext)
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: HttpRelayTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: BuildChannelFactory
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 241
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a channel factory that can be used to create a channel.
  example: []
  syntax:
    content: public override IChannelFactory<TChannel> BuildChannelFactory<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelFactory(Of TChannel)(context As BindingContext) As IChannelFactory(Of TChannel)
    parameters:
    - id: context
      type: BindingContext
      description: The binding context for the channel.
    typeParameters:
    - id: TChannel
    return:
      type: IChannelFactory{{TChannel}}
      description: The channel factory of the specified type.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory*
  nameWithType.vb: HttpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(BindingContext)
  id: BuildChannelListener``1(BindingContext)
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: HttpRelayTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: BuildChannelListener
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 267
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a channel listener for channels of the specified generic type.
  example: []
  syntax:
    content: public override IChannelListener<TChannel> BuildChannelListener<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelListener(Of TChannel)(context As BindingContext) As IChannelListener(Of TChannel)
    parameters:
    - id: context
      type: BindingContext
      description: The binding context.
    typeParameters:
    - id: TChannel
    return:
      type: IChannelListener{{TChannel}}
      description: A channel listener.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener*
  nameWithType.vb: HttpRelayTransportBindingElement.BuildChannelListener(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener(Of TChannel)(BindingContext)
  name.vb: BuildChannelListener(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement
  id: CreateInnerChannelBindingElement
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: CreateInnerChannelBindingElement()
  nameWithType: HttpRelayTransportBindingElement.CreateInnerChannelBindingElement()
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: CreateInnerChannelBindingElement
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 349
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a <see cref="!:System.ServiceModel.Channels.HttpTransportBindingElement"></see> for the inner channel.
  example: []
  syntax:
    content: protected virtual HttpTransportBindingElement CreateInnerChannelBindingElement()
    content.vb: Protected Overridable Function CreateInnerChannelBindingElement As HttpTransportBindingElement
    return:
      type: HttpTransportBindingElement
      description: A <see cref="!:System.ServiceModel.Channels.HttpTransportBindingElement"></see> for the inner channel.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  id: InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  nameWithType: HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: InitializeInnerChannelBindingElement
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 356
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes the specified binding element with the settings from the current instance of the<xref href="Microsoft.ServiceBus.HttpRelayTransportBindingElement" data-throw-if-not-resolved="false"></xref> binding element.
  example: []
  syntax:
    content: protected virtual void InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)
    content.vb: Protected Overridable Sub InitializeInnerChannelBindingElement(httpTransportElement As HttpTransportBindingElement)
    parameters:
    - id: httpTransportElement
      type: HttpTransportBindingElement
      description: The binding element to initialize.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  id: CanBuildChannelFactory``1(BindingContext)
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: HttpRelayTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: CanBuildChannelFactory
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 403
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether a channel factory of the specified type can be built.
  example: []
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel>(BindingContext context)
    content.vb: Public Overrides Function CanBuildChannelFactory(Of TChannel)(context As BindingContext) As Boolean
    parameters:
    - id: context
      type: BindingContext
      description: The binding context for the channel.
    typeParameters:
    - id: TChannel
    return:
      type: System.Boolean
      description: true if a channel factory can be built; otherwise, false.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory*
  nameWithType.vb: HttpRelayTransportBindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  id: CanBuildChannelListener``1(BindingContext)
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: HttpRelayTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: CanBuildChannelListener
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 412
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Returns a value that indicates whether the binding element can build a listener for a specific type of channel.
  example: []
  syntax:
    content: public override bool CanBuildChannelListener<TChannel>(BindingContext context)
    content.vb: Public Overrides Function CanBuildChannelListener(Of TChannel)(context As BindingContext) As Boolean
    parameters:
    - id: context
      type: BindingContext
      description: The binding context that provides context for the binding element.
    typeParameters:
    - id: TChannel
    return:
      type: System.Boolean
      description: true if the IChannelListener&lt;TChannel&gt; of type IChannel can be built by the binding element; otherwise, false.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: context is null.
  nameWithType.vb: HttpRelayTransportBindingElement.CanBuildChannelListener(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener(Of TChannel)(BindingContext)
  name.vb: CanBuildChannelListener(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone
  id: Clone
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: HttpRelayTransportBindingElement.Clone()
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Clone
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 419
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Returns a copy of the binding element object.
  example: []
  syntax:
    content: public override BindingElement Clone()
    content.vb: Public Overrides Function Clone As BindingElement
    return:
      type: BindingElement
      description: Returns a <see cref="!:System.ServiceModel.Channels.BindingElement"></see> that contains a deep clone of the original.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(BindingContext)
  id: GetProperty``1(BindingContext)
  parent: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  nameWithType: HttpRelayTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty<T>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: GetProperty
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedHttp/HttpRelayTransportBindingElement.cs
    startLine: 427
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the specified property from the specified binding context.
  example: []
  syntax:
    content: public override T GetProperty<T>(BindingContext context)
    content.vb: Public Overrides Function GetProperty(Of T)(context As BindingContext) As T
    parameters:
    - id: context
      type: BindingContext
      description: The binding context.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: The property from the specified binding context.
  overload: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty*
  nameWithType.vb: HttpRelayTransportBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty(Of T)(BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
references:
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement
  commentId: T:Microsoft.ServiceBus.HttpRelayTransportBindingElement
  parent: Microsoft.ServiceBus
  isExternal: false
  name: HttpRelayTransportBindingElement
  nameWithType: HttpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor
  isExternal: false
  name: HttpRelayTransportBindingElement
  nameWithType: HttpRelayTransportBindingElement.HttpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HttpRelayTransportBindingElement
- uid: Microsoft.ServiceBus.RelayClientAuthenticationType
  commentId: T:Microsoft.ServiceBus.RelayClientAuthenticationType
  parent: Microsoft.ServiceBus
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion
  isExternal: false
  name: GetTransportTokenAssertion
  nameWithType: HttpRelayTransportBindingElement.GetTransportTokenAssertion
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion
- uid: XmlElement
  isExternal: true
  name: XmlElement
  nameWithType: XmlElement
  fullName: XmlElement
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies
  isExternal: false
  name: AllowCookies
  nameWithType: HttpRelayTransportBindingElement.AllowCookies
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HttpRelayTransportBindingElement.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode
- uid: HostNameComparisonMode
  isExternal: true
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: HostNameComparisonMode
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled
  isExternal: false
  name: KeepAliveEnabled
  nameWithType: HttpRelayTransportBindingElement.KeepAliveEnabled
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize
  isExternal: false
  name: MaxBufferSize
  nameWithType: HttpRelayTransportBindingElement.MaxBufferSize
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress
  isExternal: false
  name: ProxyAddress
  nameWithType: HttpRelayTransportBindingElement.ProxyAddress
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  isExternal: false
  name: ProxyAuthenticationScheme
  nameWithType: HttpRelayTransportBindingElement.ProxyAuthenticationScheme
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme
- uid: AuthenticationSchemes
  isExternal: true
  name: AuthenticationSchemes
  nameWithType: AuthenticationSchemes
  fullName: AuthenticationSchemes
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: HttpRelayTransportBindingElement.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme
  isExternal: false
  name: Scheme
  nameWithType: HttpRelayTransportBindingElement.Scheme
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode
  isExternal: false
  name: TransferMode
  nameWithType: HttpRelayTransportBindingElement.TransferMode
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode
- uid: TransferMode
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: TransferMode
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: HttpRelayTransportBindingElement.UseDefaultWebProxy
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic
  isExternal: false
  name: IsDynamic
  nameWithType: HttpRelayTransportBindingElement.IsDynamic
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: HttpRelayTransportBindingElement.BuildChannelFactory<TChannel>
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory<TChannel>
  nameWithType.vb: HttpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)
  name.vb: BuildChannelFactory(Of TChannel)
- uid: BindingContext
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: BindingContext
- uid: IChannelFactory{{TChannel}}
  commentId: '!:IChannelFactory{``0}'
  definition: IChannelFactory`1
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullname.vb: IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: IChannelFactory`1
  isExternal: true
  name: IChannelFactory<>
  nameWithType: IChannelFactory<>
  fullName: IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
  fullname.vb: IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: HttpRelayTransportBindingElement.BuildChannelListener<TChannel>
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener<TChannel>
  nameWithType.vb: HttpRelayTransportBindingElement.BuildChannelListener(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener(Of TChannel)
  name.vb: BuildChannelListener(Of TChannel)
- uid: IChannelListener{{TChannel}}
  commentId: '!:IChannelListener{``0}'
  definition: IChannelListener`1
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: IChannelListener<TChannel>
  nameWithType.vb: IChannelListener(Of TChannel)
  fullname.vb: IChannelListener(Of TChannel)
  name.vb: IChannelListener(Of TChannel)
  spec.csharp:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: IChannelListener`1
  isExternal: true
  name: IChannelListener<>
  nameWithType: IChannelListener<>
  fullName: IChannelListener<>
  nameWithType.vb: IChannelListener(Of )
  fullname.vb: IChannelListener(Of )
  name.vb: IChannelListener(Of )
  spec.csharp:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement
  isExternal: false
  name: CreateInnerChannelBindingElement
  nameWithType: HttpRelayTransportBindingElement.CreateInnerChannelBindingElement
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement
- uid: HttpTransportBindingElement
  isExternal: true
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement
  fullName: HttpTransportBindingElement
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement
  isExternal: false
  name: InitializeInnerChannelBindingElement
  nameWithType: HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: HttpRelayTransportBindingElement.CanBuildChannelFactory<TChannel>
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory<TChannel>
  nameWithType.vb: HttpRelayTransportBindingElement.CanBuildChannelFactory(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory(Of TChannel)
  name.vb: CanBuildChannelFactory(Of TChannel)
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: HttpRelayTransportBindingElement.CanBuildChannelListener<TChannel>
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener<TChannel>
  nameWithType.vb: HttpRelayTransportBindingElement.CanBuildChannelListener(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener(Of TChannel)
  name.vb: CanBuildChannelListener(Of TChannel)
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone
  isExternal: false
  name: Clone
  nameWithType: HttpRelayTransportBindingElement.Clone
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone
- uid: BindingElement
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: BindingElement
- uid: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty*
  commentId: Overload:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty
  isExternal: false
  name: GetProperty<T>
  nameWithType: HttpRelayTransportBindingElement.GetProperty<T>
  fullName: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty<T>
  nameWithType.vb: HttpRelayTransportBindingElement.GetProperty(Of T)
  fullname.vb: Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty(Of T)
  name.vb: GetProperty(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
