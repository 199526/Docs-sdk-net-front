### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase
  commentId: T:Microsoft.ServiceBus.NetTcpRelayBindingBase
  id: NetTcpRelayBindingBase
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement)
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.Security
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode
  - Microsoft.ServiceBus.NetTcpRelayBindingBase.transport
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingBase
  nameWithType: NetTcpRelayBindingBase
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: NetTcpRelayBindingBase
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: The base class for common methods for the <xref href="Microsoft.ServiceBus.NetTcpRelayBinding" data-throw-if-not-resolved="false"></xref> binding.
  example: []
  syntax:
    content: 'public abstract class NetTcpRelayBindingBase : Binding, IBindingRuntimePreferences'
    content.vb: >-
      Public MustInherit Class NetTcpRelayBindingBase
          Inherits Binding
          Implements IBindingRuntimePreferences
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.transport
  commentId: F:Microsoft.ServiceBus.NetTcpRelayBindingBase.transport
  id: transport
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: transport
  nameWithType: NetTcpRelayBindingBase.transport
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.transport
  type: Field
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: transport
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: The transport element for the current instance.Along with the encoding and security, the transport setting forms the core properties of a binding.
  example: []
  syntax:
    content: protected TcpRelayTransportBindingElement transport
    content.vb: Protected transport As TcpRelayTransportBindingElement
    return:
      type: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding
  commentId: F:Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding
  id: encoding
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: encoding
  nameWithType: NetTcpRelayBindingBase.encoding
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding
  type: Field
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: encoding
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: The encoding element for the current instance.Along with the security and transport settings, the encoding forms the three core properties of a binding.
  example: []
  syntax:
    content: protected BinaryMessageEncodingBindingElement encoding
    content.vb: Protected encoding As BinaryMessageEncodingBindingElement
    return:
      type: BinaryMessageEncodingBindingElement
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingBase()
  nameWithType: NetTcpRelayBindingBase.NetTcpRelayBindingBase()
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.NetTcpRelayBindingBase()
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 43
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.NetTcpRelayBindingBase" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected NetTcpRelayBindingBase()
    content.vb: Protected Sub New
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)
  id: '#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)'
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingBase(EndToEndSecurityMode, RelayClientAuthenticationType)
  nameWithType: NetTcpRelayBindingBase.NetTcpRelayBindingBase(EndToEndSecurityMode, RelayClientAuthenticationType)
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.NetTcpRelayBindingBase(Microsoft.ServiceBus.EndToEndSecurityMode, Microsoft.ServiceBus.RelayClientAuthenticationType)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.NetTcpRelayBindingBase\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified security mode and relay authentication type."
  example: []
  syntax:
    content: protected NetTcpRelayBindingBase(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)
    content.vb: Protected Sub New(securityMode As EndToEndSecurityMode, relayClientAuthenticationType As RelayClientAuthenticationType)
    parameters:
    - id: securityMode
      type: Microsoft.ServiceBus.EndToEndSecurityMode
      description: The type of security used with the binding.
    - id: relayClientAuthenticationType
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: The type of relay authentication used.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingBase(String)
  nameWithType: NetTcpRelayBindingBase.NetTcpRelayBindingBase(String)
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.NetTcpRelayBindingBase(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 61
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.NetTcpRelayBindingBase\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified configuration name."
  example: []
  syntax:
    content: protected NetTcpRelayBindingBase(string configurationName)
    content.vb: Protected Sub New(configurationName As String)
    parameters:
    - id: configurationName
      type: System.String
      description: The binding configuration name.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)
  id: '#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)'
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingBase(TcpRelayTransportBindingElement, BinaryMessageEncodingBindingElement, NetTcpRelaySecurity)
  nameWithType: NetTcpRelayBindingBase.NetTcpRelayBindingBase(TcpRelayTransportBindingElement, BinaryMessageEncodingBindingElement, NetTcpRelaySecurity)
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.NetTcpRelayBindingBase(Microsoft.ServiceBus.TcpRelayTransportBindingElement, BinaryMessageEncodingBindingElement, Microsoft.ServiceBus.NetTcpRelaySecurity)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the<xref href="Microsoft.ServiceBus.NetTcpRelayBindingBase" data-throw-if-not-resolved="false"></xref> class, using the specified transport, encoding, and security.
  example: []
  syntax:
    content: protected NetTcpRelayBindingBase(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, NetTcpRelaySecurity security)
    content.vb: Protected Sub New(transport As TcpRelayTransportBindingElement, encoding As BinaryMessageEncodingBindingElement, security As NetTcpRelaySecurity)
    parameters:
    - id: transport
      type: Microsoft.ServiceBus.TcpRelayTransportBindingElement
      description: The transport.
    - id: encoding
      type: BinaryMessageEncodingBindingElement
      description: The encoding.
    - id: security
      type: Microsoft.ServiceBus.NetTcpRelaySecurity
      description: The security.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: HostNameComparisonMode
  nameWithType: NetTcpRelayBindingBase.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: HostNameComparisonMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 81
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the comparison mode used on the hostname.
  example: []
  syntax:
    content: public HostNameComparisonMode HostNameComparisonMode { get; set; }
    content.vb: Public Property HostNameComparisonMode As HostNameComparisonMode
    parameters: []
    return:
      type: HostNameComparisonMode
      description: The comparison mode used on the hostname.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode
  id: ConnectionMode
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ConnectionMode
  nameWithType: NetTcpRelayBindingBase.ConnectionMode
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: ConnectionMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 94
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets the connection mode: \n<xref href=\"Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public TcpRelayConnectionMode ConnectionMode { get; set; }
    content.vb: Public Property ConnectionMode As TcpRelayConnectionMode
    parameters: []
    return:
      type: Microsoft.ServiceBus.TcpRelayConnectionMode
      description: "Returns a \n<xref href=\"Microsoft.ServiceBus.TcpRelayConnectionMode\" data-throw-if-not-resolved=\"false\"></xref> that contains the connection mode; either \n<xref href=\"Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed\" data-throw-if-not-resolved=\"false\"></xref>. The default is Relayed."
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode
  id: TransferMode
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: TransferMode
  nameWithType: NetTcpRelayBindingBase.TransferMode
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: TransferMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 104
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets a value that indicates whether the service configured \nwith the binding uses streamed or buffered (or both) modes of message transfer."
  example: []
  syntax:
    content: public TransferMode TransferMode { get; set; }
    content.vb: Public Property TransferMode As TransferMode
    parameters: []
    return:
      type: TransferMode
      description: "Returns a \n<see cref=\"!:System.ServiceModel.TransferMode\"></see>  that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. By default, the HTTP, TCP/IP, and named pipe transports use buffered message transfers."
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MaxBufferPoolSize
  nameWithType: NetTcpRelayBindingBase.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: MaxBufferPoolSize
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 113
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the maximum size allowed for a buffer pool that stores messages processed by the binding.
  example: []
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    content.vb: Public Property MaxBufferPoolSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "Returns the maximum size, in bytes, allowed for a buffer pool \nthat stores messages processed by the binding. The default value is 65,536."
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize
  id: MaxBufferSize
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MaxBufferSize
  nameWithType: NetTcpRelayBindingBase.MaxBufferSize
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: MaxBufferSize
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 124
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a value that specifies the maximum size of the buffer used to store messages in memory.
  example: []
  syntax:
    content: public int MaxBufferSize { get; set; }
    content.vb: Public Property MaxBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns the maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections
  id: MaxConnections
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MaxConnections
  nameWithType: NetTcpRelayBindingBase.MaxConnections
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: MaxConnections
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 134
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets a value that controls the maximum number of connections to be pooled for subsequent \nreuse on the client and the maximum number of connections allowed to be pending dispatch on the server."
  example: []
  syntax:
    content: public int MaxConnections { get; set; }
    content.vb: Public Property MaxConnections As Integer
    parameters: []
    return:
      type: System.Int32
      description: "On the client, returns the maximum number of connections to be pooled for subsequent \nreuse; on the server, returns the maximum number of connections allowed to be pending dispatch."
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog
  id: ListenBacklog
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ListenBacklog
  nameWithType: NetTcpRelayBindingBase.ListenBacklog
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: ListenBacklog
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 146
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the maximum number of queued connection requests that can be pending.
  example: []
  syntax:
    content: public int ListenBacklog { get; set; }
    content.vb: Public Property ListenBacklog As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns the maximum number of queued connection requests that can be pending. The default is 10.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic
  id: IsDynamic
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: NetTcpRelayBindingBase.IsDynamic
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: IsDynamic
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 154
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets whether the relay binding is dynamic.
  example: []
  syntax:
    content: public bool IsDynamic { get; set; }
    content.vb: Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the relay binding is dynamic; otherwise, false.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion
  id: MessageSecurityVersion
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MessageSecurityVersion
  nameWithType: NetTcpRelayBindingBase.MessageSecurityVersion
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: MessageSecurityVersion
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 163
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the message security version.
  example: []
  syntax:
    content: protected MessageSecurityVersion MessageSecurityVersion { get; }
    content.vb: Protected ReadOnly Property MessageSecurityVersion As MessageSecurityVersion
    parameters: []
    return:
      type: MessageSecurityVersion
      description: "Returns a \n<see cref=\"!:System.ServiceModel.MessageSecurityVersion\"></see> that contains the message security version. This currently always returns MessageSecurityVersion..::.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11. "
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  nameWithType: NetTcpRelayBindingBase.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: MaxReceivedMessageSize
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 173
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the maximum size for a received message that is processed by the binding.
  example: []
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    content.vb: Public Property MaxReceivedMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns the maximum size, in bytes, for a received message that is processed by the binding. The default value is 65,536.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas
  id: ReaderQuotas
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ReaderQuotas
  nameWithType: NetTcpRelayBindingBase.ReaderQuotas
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: ReaderQuotas
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 184
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets constraints on the complexity of SOAP messages that can \nbe processed by endpoints configured with this binding. This property cannot be null."
  example: []
  syntax:
    content: public XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    content.vb: Public Property ReaderQuotas As XmlDictionaryReaderQuotas
    parameters: []
    return:
      type: XmlDictionaryReaderQuotas
      description: "Returns a \n<see cref=\"!:System.Xml.XmlDictionaryReaderQuotas\"></see> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section."
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: if ReaderQuotas is null
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme
  id: Scheme
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: NetTcpRelayBindingBase.Scheme
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Scheme
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 203
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the URI scheme for the transport.
  example: []
  syntax:
    content: public override string Scheme { get; }
    content.vb: Public Overrides ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: Returns the URI scheme for the transport. The default is “sb”.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion
  id: EnvelopeVersion
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: EnvelopeVersion
  nameWithType: NetTcpRelayBindingBase.EnvelopeVersion
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: EnvelopeVersion
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 207
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the version of SOAP that is used for messages processed by this binding.
  example: []
  syntax:
    content: public EnvelopeVersion EnvelopeVersion { get; }
    content.vb: Public ReadOnly Property EnvelopeVersion As EnvelopeVersion
    parameters: []
    return:
      type: EnvelopeVersion
      description: Returns a <see cref="!:System.ServiceModel.EnvelopeVersion"></see> that contains the envelope version used for this binding.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.Security
  commentId: P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Security
  id: Security
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: NetTcpRelayBindingBase.Security
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.Security
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: Security
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 215
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets an object that specifies the type of security used with services configured with this binding.
  example: []
  syntax:
    content: public NetTcpRelaySecurity Security { get; }
    content.vb: Public ReadOnly Property Security As NetTcpRelaySecurity
    parameters: []
    return:
      type: Microsoft.ServiceBus.NetTcpRelaySecurity
      description: "Returns \n<xref href=\"Microsoft.ServiceBus.NetTcpRelaySecurity\" data-throw-if-not-resolved=\"false\"></xref>, which contains the types of security used with this binding. The default mode of security is Transport."
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.Security*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement)
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement)
  id: IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,BinaryMessageEncodingBindingElement)
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: IsBindingElementsMatch(TcpRelayTransportBindingElement, BinaryMessageEncodingBindingElement)
  nameWithType: NetTcpRelayBindingBase.IsBindingElementsMatch(TcpRelayTransportBindingElement, BinaryMessageEncodingBindingElement)
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement, BinaryMessageEncodingBindingElement)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: IsBindingElementsMatch
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 251
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Determines whether the specified binding elements match the default values of the binding elements in the current instance.
  example: []
  syntax:
    content: protected bool IsBindingElementsMatch(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding)
    content.vb: Protected Function IsBindingElementsMatch(transport As TcpRelayTransportBindingElement, encoding As BinaryMessageEncodingBindingElement) As Boolean
    parameters:
    - id: transport
      type: Microsoft.ServiceBus.TcpRelayTransportBindingElement
      description: The transport binding element.
    - id: encoding
      type: BinaryMessageEncodingBindingElement
      description: The encoding binding element.
    return:
      type: System.Boolean
      description: true if the elements match; otherwise, false.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)
  id: ApplyConfiguration(System.String)
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: ApplyConfiguration(String)
  nameWithType: NetTcpRelayBindingBase.ApplyConfiguration(String)
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: ApplyConfiguration
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 266
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Applies the settings from the configuration element that corresponds to \nthe specified name to the current instance of this binding element."
  example: []
  syntax:
    content: protected virtual void ApplyConfiguration(string configurationName)
    content.vb: Protected Overridable Sub ApplyConfiguration(configurationName As String)
    parameters:
    - id: configurationName
      type: System.String
      description: The name of the configuration element to take the settings from.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements
  id: CreateBindingElements
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: CreateBindingElements()
  nameWithType: NetTcpRelayBindingBase.CreateBindingElements()
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: CreateBindingElements
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 285
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Retrieves an ordered collection of binding elements contained in the current binding.
  example: []
  syntax:
    content: public override BindingElementCollection CreateBindingElements()
    content.vb: Public Overrides Function CreateBindingElements As BindingElementCollection
    return:
      type: BindingElementCollection
      description: Returns a <see cref="!:System.ServiceModel.Channels.BindingElementCollection"></see> that makes up the binding.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity
  commentId: M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity
  id: CreateMessageSecurity
  parent: Microsoft.ServiceBus.NetTcpRelayBindingBase
  langs:
  - csharp
  - vb
  name: CreateMessageSecurity()
  nameWithType: NetTcpRelayBindingBase.CreateMessageSecurity()
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
      branch: master
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/ServiceBus-Messaging
    id: CreateMessageSecurity
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/NetTcpRelayBindingBase.cs
    startLine: 318
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates the security binding element for the current instance.
  example: []
  syntax:
    content: protected abstract SecurityBindingElement CreateMessageSecurity()
    content.vb: Protected MustOverride Function CreateMessageSecurity As SecurityBindingElement
    return:
      type: SecurityBindingElement
      description: Returns a <see cref="!:System.ServiceModel.Channels.SecurityBindingElement"></see> that contains the security binding element.
  overload: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.ServiceBus.NetTcpRelayBinding
  commentId: T:Microsoft.ServiceBus.NetTcpRelayBinding
  isExternal: false
  name: NetTcpRelayBinding
  nameWithType: NetTcpRelayBinding
  fullName: Microsoft.ServiceBus.NetTcpRelayBinding
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  commentId: T:Microsoft.ServiceBus.TcpRelayTransportBindingElement
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TcpRelayTransportBindingElement
  nameWithType: TcpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement
- uid: BinaryMessageEncodingBindingElement
  isExternal: true
  name: BinaryMessageEncodingBindingElement
  nameWithType: BinaryMessageEncodingBindingElement
  fullName: BinaryMessageEncodingBindingElement
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase
  commentId: T:Microsoft.ServiceBus.NetTcpRelayBindingBase
  parent: Microsoft.ServiceBus
  isExternal: false
  name: NetTcpRelayBindingBase
  nameWithType: NetTcpRelayBindingBase
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor
  isExternal: false
  name: NetTcpRelayBindingBase
  nameWithType: NetTcpRelayBindingBase.NetTcpRelayBindingBase
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.NetTcpRelayBindingBase
- uid: Microsoft.ServiceBus.EndToEndSecurityMode
  commentId: T:Microsoft.ServiceBus.EndToEndSecurityMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: EndToEndSecurityMode
  nameWithType: EndToEndSecurityMode
  fullName: Microsoft.ServiceBus.EndToEndSecurityMode
- uid: Microsoft.ServiceBus.RelayClientAuthenticationType
  commentId: T:Microsoft.ServiceBus.RelayClientAuthenticationType
  parent: Microsoft.ServiceBus
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.RelayClientAuthenticationType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.NetTcpRelaySecurity
  commentId: T:Microsoft.ServiceBus.NetTcpRelaySecurity
  parent: Microsoft.ServiceBus
  isExternal: false
  name: NetTcpRelaySecurity
  nameWithType: NetTcpRelaySecurity
  fullName: Microsoft.ServiceBus.NetTcpRelaySecurity
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: NetTcpRelayBindingBase.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode
- uid: HostNameComparisonMode
  isExternal: true
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: HostNameComparisonMode
- uid: Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid
  commentId: F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid
- uid: Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed
  commentId: F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed
- uid: Microsoft.ServiceBus.TcpRelayConnectionMode
  commentId: T:Microsoft.ServiceBus.TcpRelayConnectionMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TcpRelayConnectionMode
  nameWithType: TcpRelayConnectionMode
  fullName: Microsoft.ServiceBus.TcpRelayConnectionMode
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode
  isExternal: false
  name: ConnectionMode
  nameWithType: NetTcpRelayBindingBase.ConnectionMode
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode
  isExternal: false
  name: TransferMode
  nameWithType: NetTcpRelayBindingBase.TransferMode
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode
- uid: TransferMode
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: TransferMode
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: NetTcpRelayBindingBase.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize
  isExternal: false
  name: MaxBufferSize
  nameWithType: NetTcpRelayBindingBase.MaxBufferSize
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections
  isExternal: false
  name: MaxConnections
  nameWithType: NetTcpRelayBindingBase.MaxConnections
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog
  isExternal: false
  name: ListenBacklog
  nameWithType: NetTcpRelayBindingBase.ListenBacklog
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic
  isExternal: false
  name: IsDynamic
  nameWithType: NetTcpRelayBindingBase.IsDynamic
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion
  isExternal: false
  name: MessageSecurityVersion
  nameWithType: NetTcpRelayBindingBase.MessageSecurityVersion
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion
- uid: MessageSecurityVersion
  isExternal: true
  name: MessageSecurityVersion
  nameWithType: MessageSecurityVersion
  fullName: MessageSecurityVersion
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: NetTcpRelayBindingBase.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas
  isExternal: false
  name: ReaderQuotas
  nameWithType: NetTcpRelayBindingBase.ReaderQuotas
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: XmlDictionaryReaderQuotas
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: XmlDictionaryReaderQuotas
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme
  isExternal: false
  name: Scheme
  nameWithType: NetTcpRelayBindingBase.Scheme
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion
  isExternal: false
  name: EnvelopeVersion
  nameWithType: NetTcpRelayBindingBase.EnvelopeVersion
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion
- uid: EnvelopeVersion
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: EnvelopeVersion
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.Security*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.Security
  isExternal: false
  name: Security
  nameWithType: NetTcpRelayBindingBase.Security
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.Security
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch
  isExternal: false
  name: IsBindingElementsMatch
  nameWithType: NetTcpRelayBindingBase.IsBindingElementsMatch
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration
  isExternal: false
  name: ApplyConfiguration
  nameWithType: NetTcpRelayBindingBase.ApplyConfiguration
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements
  isExternal: false
  name: CreateBindingElements
  nameWithType: NetTcpRelayBindingBase.CreateBindingElements
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements
- uid: BindingElementCollection
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: BindingElementCollection
- uid: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity*
  commentId: Overload:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity
  isExternal: false
  name: CreateMessageSecurity
  nameWithType: NetTcpRelayBindingBase.CreateMessageSecurity
  fullName: Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity
- uid: SecurityBindingElement
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityBindingElement
  fullName: SecurityBindingElement
