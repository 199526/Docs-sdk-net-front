### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  commentId: T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  id: NetMessagingTransportBindingElement
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(BindingContext)
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(BindingContext)
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(BindingContext)
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout
  - Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings
  langs:
  - csharp
  - vb
  name: NetMessagingTransportBindingElement
  nameWithType: NetMessagingTransportBindingElement
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: NetMessagingTransportBindingElement
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents the binding element used to specify a net messaging transport for transmitting messages on the Service Bus.
  example: []
  syntax:
    content: 'public sealed class NetMessagingTransportBindingElement : TransportBindingElement, IPolicyExportExtension, IWsdlExportExtension'
    content.vb: >-
      Public NotInheritable Class NetMessagingTransportBindingElement
          Inherits TransportBindingElement
          Implements IPolicyExportExtension, IWsdlExportExtension
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: NetMessagingTransportBindingElement()
  nameWithType: NetMessagingTransportBindingElement.NetMessagingTransportBindingElement()
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.NetMessagingTransportBindingElement()
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public NetMessagingTransportBindingElement()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount
  commentId: P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount
  id: PrefetchCount
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: PrefetchCount
  nameWithType: NetMessagingTransportBindingElement.PrefetchCount
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: PrefetchCount
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of prefetch.
  example: []
  syntax:
    content: public int PrefetchCount { get; set; }
    content.vb: Public Property PrefetchCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of prefetch.
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme
  commentId: P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme
  id: Scheme
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: NetMessagingTransportBindingElement.Scheme
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: Scheme
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the URI scheme for the transport.
  example: []
  syntax:
    content: public override string Scheme { get; }
    content.vb: Public Overrides ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: The URI scheme for the transport.
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout
  commentId: P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout
  id: SessionIdleTimeout
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: SessionIdleTimeout
  nameWithType: NetMessagingTransportBindingElement.SessionIdleTimeout
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: SessionIdleTimeout
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 75
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the timespan value that specifies period of inactivity that the session waits before timing out.
  example: []
  syntax:
    content: public TimeSpan SessionIdleTimeout { get; set; }
    content.vb: Public Property SessionIdleTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The timespan value. The default value is 1 minute.
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings
  commentId: P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings
  id: TransportSettings
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: TransportSettings
  nameWithType: NetMessagingTransportBindingElement.TransportSettings
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: TransportSettings
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 91
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the transport settings for the net messaging.
  example: []
  syntax:
    content: public NetMessagingTransportSettings TransportSettings { get; set; }
    content.vb: Public Property TransportSettings As NetMessagingTransportSettings
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings
      description: The transport settings for the net messaging.
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(BindingContext)
  id: BuildChannelFactory``1(BindingContext)
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: NetMessagingTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: BuildChannelFactory
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 120
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Builds a channel factory. '
  example: []
  syntax:
    content: public override IChannelFactory<TChannel> BuildChannelFactory<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelFactory(Of TChannel)(context As BindingContext) As IChannelFactory(Of TChannel)
    parameters:
    - id: context
      type: BindingContext
      description: 'The binding context. '
    typeParameters:
    - id: TChannel
      description: 'Type of the channel. '
    return:
      type: IChannelFactory{{TChannel}}
      description: 'The interface implemented by the channel factory. '
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Thrown when TChannel isn''t a supported channel type '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'Thrown when context is null. '
  nameWithType.vb: NetMessagingTransportBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(BindingContext)
  id: BuildChannelListener``1(BindingContext)
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: NetMessagingTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: BuildChannelListener
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 140
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Builds a channel listener. '
  remarks: "\n         Channel listeners and their associated channels are generally used by services that receive\n          communications initiated by clients. Channel factories that implement the IChannelFactory interface, \n          by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated. "
  example: []
  syntax:
    content: public override IChannelListener<TChannel> BuildChannelListener<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelListener(Of TChannel)(context As BindingContext) As IChannelListener(Of TChannel)
    parameters:
    - id: context
      type: BindingContext
      description: 'The binding context. '
    typeParameters:
    - id: TChannel
      description: 'Type of the channel. '
    return:
      type: IChannelListener{{TChannel}}
      description: 'A implemented IChannelListener interface. '
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'Thrown when context is null. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Thrown when TChannel isn''t a supported channel type '
  nameWithType.vb: NetMessagingTransportBindingElement.BuildChannelListener(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener(Of TChannel)(BindingContext)
  name.vb: BuildChannelListener(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  id: CanBuildChannelFactory``1(BindingContext)
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: CanBuildChannelFactory<T>(BindingContext)
  nameWithType: NetMessagingTransportBindingElement.CanBuildChannelFactory<T>(BindingContext)
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory<T>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanBuildChannelFactory
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 163
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Queries the channel factory can build ''context''. '
  example: []
  syntax:
    content: public override bool CanBuildChannelFactory<T>(BindingContext context)
    content.vb: Public Overrides Function CanBuildChannelFactory(Of T)(context As BindingContext) As Boolean
    parameters:
    - id: context
      type: BindingContext
      description: 'The binding context. '
    typeParameters:
    - id: T
      description: 'Type of the channel. '
    return:
      type: System.Boolean
      description: 'Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel. '
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'Thrown when argument null. '
  nameWithType.vb: NetMessagingTransportBindingElement.CanBuildChannelFactory(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory(Of T)(BindingContext)
  name.vb: CanBuildChannelFactory(Of T)(BindingContext)
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  id: CanBuildChannelListener``1(BindingContext)
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: CanBuildChannelListener<T>(BindingContext)
  nameWithType: NetMessagingTransportBindingElement.CanBuildChannelListener<T>(BindingContext)
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener<T>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: CanBuildChannelListener
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 178
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Queries if we can build channel listener ''context''. '
  example: []
  syntax:
    content: public override bool CanBuildChannelListener<T>(BindingContext context)
    content.vb: Public Overrides Function CanBuildChannelListener(Of T)(context As BindingContext) As Boolean
    parameters:
    - id: context
      type: BindingContext
      description: 'The binding context. '
    typeParameters:
    - id: T
      description: 'Generic type parameter. '
    return:
      type: System.Boolean
      description: 'Returns a value that indicates whether the binding element can build a channel listener for a specific type of channel. '
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'Thrown when argument null. '
  nameWithType.vb: NetMessagingTransportBindingElement.CanBuildChannelListener(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener(Of T)(BindingContext)
  name.vb: CanBuildChannelListener(Of T)(BindingContext)
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone
  id: Clone
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: NetMessagingTransportBindingElement.Clone()
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: Clone
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 190
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Makes a deep copy of this binding element.
  example: []
  syntax:
    content: public override BindingElement Clone()
    content.vb: Public Overrides Function Clone As BindingElement
    return:
      type: BindingElement
      description: A copy of this binding element.
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(BindingContext)
  id: GetProperty``1(BindingContext)
  parent: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  nameWithType: NetMessagingTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty<T>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: GetProperty
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Messaging/NetMessagingTransportBindingElement.cs
    startLine: 200
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Gets a specific binding element property. '
  example: []
  syntax:
    content: public override T GetProperty<T>(BindingContext context)
    content.vb: Public Overrides Function GetProperty(Of T)(context As BindingContext) As T
    parameters:
    - id: context
      type: BindingContext
      description: 'The binding context. '
    typeParameters:
    - id: T
      description: 'Generic type parameter. '
    return:
      type: '{T}'
      description: 'The property T '
  overload: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'Thrown when argument null. '
  nameWithType.vb: NetMessagingTransportBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty(Of T)(BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  commentId: T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
  isExternal: false
  name: NetMessagingTransportBindingElement
  nameWithType: NetMessagingTransportBindingElement
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor
  isExternal: false
  name: NetMessagingTransportBindingElement
  nameWithType: NetMessagingTransportBindingElement.NetMessagingTransportBindingElement
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.NetMessagingTransportBindingElement
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount
  isExternal: false
  name: PrefetchCount
  nameWithType: NetMessagingTransportBindingElement.PrefetchCount
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme
  isExternal: false
  name: Scheme
  nameWithType: NetMessagingTransportBindingElement.Scheme
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout
  isExternal: false
  name: SessionIdleTimeout
  nameWithType: NetMessagingTransportBindingElement.SessionIdleTimeout
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings
  isExternal: false
  name: TransportSettings
  nameWithType: NetMessagingTransportBindingElement.TransportSettings
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings
  commentId: T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: NetMessagingTransportSettings
  nameWithType: NetMessagingTransportSettings
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: NetMessagingTransportBindingElement.BuildChannelFactory<TChannel>
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory<TChannel>
  nameWithType.vb: NetMessagingTransportBindingElement.BuildChannelFactory(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory(Of TChannel)
  name.vb: BuildChannelFactory(Of TChannel)
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: BindingContext
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: BindingContext
- uid: IChannelFactory{{TChannel}}
  commentId: '!:IChannelFactory{``0}'
  definition: IChannelFactory`1
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullname.vb: IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: IChannelFactory`1
  isExternal: true
  name: IChannelFactory<>
  nameWithType: IChannelFactory<>
  fullName: IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
  fullname.vb: IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: NetMessagingTransportBindingElement.BuildChannelListener<TChannel>
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener<TChannel>
  nameWithType.vb: NetMessagingTransportBindingElement.BuildChannelListener(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener(Of TChannel)
  name.vb: BuildChannelListener(Of TChannel)
- uid: IChannelListener{{TChannel}}
  commentId: '!:IChannelListener{``0}'
  definition: IChannelListener`1
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: IChannelListener<TChannel>
  nameWithType.vb: IChannelListener(Of TChannel)
  fullname.vb: IChannelListener(Of TChannel)
  name.vb: IChannelListener(Of TChannel)
  spec.csharp:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: IChannelListener`1
  isExternal: true
  name: IChannelListener<>
  nameWithType: IChannelListener<>
  fullName: IChannelListener<>
  nameWithType.vb: IChannelListener(Of )
  fullname.vb: IChannelListener(Of )
  name.vb: IChannelListener(Of )
  spec.csharp:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory
  isExternal: false
  name: CanBuildChannelFactory<T>
  nameWithType: NetMessagingTransportBindingElement.CanBuildChannelFactory<T>
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory<T>
  nameWithType.vb: NetMessagingTransportBindingElement.CanBuildChannelFactory(Of T)
  fullname.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory(Of T)
  name.vb: CanBuildChannelFactory(Of T)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener
  isExternal: false
  name: CanBuildChannelListener<T>
  nameWithType: NetMessagingTransportBindingElement.CanBuildChannelListener<T>
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener<T>
  nameWithType.vb: NetMessagingTransportBindingElement.CanBuildChannelListener(Of T)
  fullname.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener(Of T)
  name.vb: CanBuildChannelListener(Of T)
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone
  isExternal: false
  name: Clone
  nameWithType: NetMessagingTransportBindingElement.Clone
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone
- uid: BindingElement
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: BindingElement
- uid: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty*
  commentId: Overload:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty
  isExternal: false
  name: GetProperty<T>
  nameWithType: NetMessagingTransportBindingElement.GetProperty<T>
  fullName: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty<T>
  nameWithType.vb: NetMessagingTransportBindingElement.GetProperty(Of T)
  fullname.vb: Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty(Of T)
  name.vb: GetProperty(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
