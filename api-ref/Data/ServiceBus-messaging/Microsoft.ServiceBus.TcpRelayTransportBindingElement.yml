### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  commentId: T:Microsoft.ServiceBus.TcpRelayTransportBindingElement
  id: TcpRelayTransportBindingElement
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(BindingContext)
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(BindingContext)
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(BindingContext)
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType
  - Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme
  langs:
  - csharp
  - vb
  name: TcpRelayTransportBindingElement
  nameWithType: TcpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  type: Class
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: TcpRelayTransportBindingElement
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Represents the binding element for the TCP transport relay. '
  example: []
  syntax:
    content: 'public class TcpRelayTransportBindingElement : ConnectionOrientedTransportBindingElement, IPolicyExportExtension'
    content.vb: >-
      Public Class TcpRelayTransportBindingElement
          Inherits ConnectionOrientedTransportBindingElement
          Implements IPolicyExportExtension
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  inheritedMembers:
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  - Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: TcpRelayTransportBindingElement()
  nameWithType: TcpRelayTransportBindingElement.TcpRelayTransportBindingElement()
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.TcpRelayTransportBindingElement()
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Initializes a new instance of the <xref href="Microsoft.ServiceBus.TcpRelayTransportBindingElement" data-throw-if-not-resolved="false"></xref> class. '
  example: []
  syntax:
    content: public TcpRelayTransportBindingElement()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)
  id: '#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)'
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: TcpRelayTransportBindingElement(RelayClientAuthenticationType)
  nameWithType: TcpRelayTransportBindingElement.TcpRelayTransportBindingElement(RelayClientAuthenticationType)
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.TcpRelayTransportBindingElement(Microsoft.ServiceBus.RelayClientAuthenticationType)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.TcpRelayTransportBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified relay client authentication type. "
  example: []
  syntax:
    content: public TcpRelayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType)
    content.vb: Public Sub New(relayClientAuthenticationType As RelayClientAuthenticationType)
    parameters:
    - id: relayClientAuthenticationType
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: The relay client authentication type.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)
  id: '#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)'
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: TcpRelayTransportBindingElement(TcpRelayTransportBindingElement)
  nameWithType: TcpRelayTransportBindingElement.TcpRelayTransportBindingElement(TcpRelayTransportBindingElement)
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.TcpRelayTransportBindingElement(Microsoft.ServiceBus.TcpRelayTransportBindingElement)
  type: Constructor
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: .ctor
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.TcpRelayTransportBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified relay binding element. "
  example: []
  syntax:
    content: protected TcpRelayTransportBindingElement(TcpRelayTransportBindingElement elementToBeCloned)
    content.vb: Protected Sub New(elementToBeCloned As TcpRelayTransportBindingElement)
    parameters:
    - id: elementToBeCloned
      type: Microsoft.ServiceBus.TcpRelayTransportBindingElement
      description: The element to be cloned.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings
  commentId: P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings
  id: ConnectionPoolSettings
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: ConnectionPoolSettings
  nameWithType: TcpRelayTransportBindingElement.ConnectionPoolSettings
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ConnectionPoolSettings
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the connection pool settings for the current instance.
  example: []
  syntax:
    content: public SocketConnectionPoolSettings ConnectionPoolSettings { get; }
    content.vb: Public ReadOnly Property ConnectionPoolSettings As SocketConnectionPoolSettings
    parameters: []
    return:
      type: Microsoft.ServiceBus.SocketConnectionPoolSettings
      description: The connection pool settings for the current instance.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType
  commentId: P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType
  id: RelayClientAuthenticationType
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: RelayClientAuthenticationType
  nameWithType: TcpRelayTransportBindingElement.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: RelayClientAuthenticationType
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 84
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the type of authentication used by the service client.
  example: []
  syntax:
    content: public RelayClientAuthenticationType RelayClientAuthenticationType { get; set; }
    content.vb: Public Property RelayClientAuthenticationType As RelayClientAuthenticationType
    parameters: []
    return:
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: "Returns \n<xref href=\"Microsoft.ServiceBus.RelayClientAuthenticationType\" data-throw-if-not-resolved=\"false\"></xref>.Contains the authentication type. The default value is RelayAccessToken."
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode
  commentId: P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode
  id: ConnectionMode
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: ConnectionMode
  nameWithType: TcpRelayTransportBindingElement.ConnectionMode
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: ConnectionMode
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 99
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the connection mode.
  example: []
  syntax:
    content: public TcpRelayConnectionMode ConnectionMode { get; set; }
    content.vb: Public Property ConnectionMode As TcpRelayConnectionMode
    parameters: []
    return:
      type: Microsoft.ServiceBus.TcpRelayConnectionMode
      description: Returns a <xref href="Microsoft.ServiceBus.TcpRelayConnectionMode" data-throw-if-not-resolved="false"></xref> that contains the connection mode.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme
  commentId: P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme
  id: Scheme
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: TcpRelayTransportBindingElement.Scheme
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: Scheme
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 114
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the URI scheme for the transport.
  example: []
  syntax:
    content: public override string Scheme { get; }
    content.vb: Public Overrides ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: Returns the URI scheme for the transport, which is “TCP”.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic
  commentId: P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic
  id: IsDynamic
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: TcpRelayTransportBindingElement.IsDynamic
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic
  type: Property
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: IsDynamic
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 121
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets whether the binding element is dynamic.
  example: []
  syntax:
    content: public bool IsDynamic { get; set; }
    content.vb: Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the binding element is dynamic; otherwise, false.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone
  id: Clone
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TcpRelayTransportBindingElement.Clone()
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone()
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: Clone
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 141
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a copy of the current binding element.
  example: []
  syntax:
    content: public override BindingElement Clone()
    content.vb: Public Overrides Function Clone As BindingElement
    return:
      type: BindingElement
      description: Returns a <see cref="!:System.ServiceModel.Channels.BindingElement"></see> that contains a copy of the binding element.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(BindingContext)
  id: BuildChannelFactory``1(BindingContext)
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: TcpRelayTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: BuildChannelFactory
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 151
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a channel factory that can be used to create a channel.
  example: []
  syntax:
    content: public override IChannelFactory<TChannel> BuildChannelFactory<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelFactory(Of TChannel)(context As BindingContext) As IChannelFactory(Of TChannel)
    parameters:
    - id: context
      type: BindingContext
      description: Describes the bindings, behaviors, contracts, and other information required to create the channel factory.
    typeParameters:
    - id: TChannel
      description: 'The type of channel factory. '
    return:
      type: IChannelFactory{{TChannel}}
      description: A channel factory of the specified type.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When Transport protection is enabled and the Connection Mode is set to either Hybrid or Direct.This member is unlikely to be used directly, but may be used when creating a custom binding.For more information, see Creating a Custom AppFabric Service Bus Binding.
  nameWithType.vb: TcpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(BindingContext)
  id: BuildChannelListener``1(BindingContext)
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: TcpRelayTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: BuildChannelListener
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 163
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a channel listener of the specified type.
  example: []
  syntax:
    content: public override IChannelListener<TChannel> BuildChannelListener<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelListener(Of TChannel)(context As BindingContext) As IChannelListener(Of TChannel)
    parameters:
    - id: context
      type: BindingContext
      description: Describes the bindings, behaviors, contracts, and other information required to create the channel factory.
    typeParameters:
    - id: TChannel
      description: 'The type of channel factory. '
    return:
      type: IChannelListener{{TChannel}}
      description: A channel listener of the specified type.
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When Transport protection is enabled and the Connection Mode is set to either Hybrid or Direct.
  nameWithType.vb: TcpRelayTransportBindingElement.BuildChannelListener(Of TChannel)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener(Of TChannel)(BindingContext)
  name.vb: BuildChannelListener(Of TChannel)(BindingContext)
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(BindingContext)
  id: GetProperty``1(BindingContext)
  parent: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  nameWithType: TcpRelayTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty<T>(BindingContext)
  type: Method
  source:
    remote:
      path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
    id: GetProperty
    path: src/product/clients/Microsoft.ServiceBus.Messaging/Connectivity/RelayedConnection/TcpRelayTransportBindingElement.cs
    startLine: 259
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Returns a specified object from the binding context.
  example: []
  syntax:
    content: public override T GetProperty<T>(BindingContext context)
    content.vb: Public Overrides Function GetProperty(Of T)(context As BindingContext) As T
    parameters:
    - id: context
      type: BindingContext
      description: 'The context. '
    typeParameters:
    - id: T
      description: 'The type of object to get. '
    return:
      type: '{T}'
      description: A binding element that contains the specified object, or null if not found.
  overridden: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(BindingContext)
  overload: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty*
  nameWithType.vb: TcpRelayTransportBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty(Of T)(BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
references:
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  commentId: T:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  parent: Microsoft.ServiceBus.Channels
  isExternal: false
  name: ConnectionOrientedTransportBindingElement
  nameWithType: ConnectionOrientedTransportBindingElement
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: ConnectionBufferSize
  nameWithType: ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxBufferSize
  nameWithType: ConnectionOrientedTransportBindingElement.MaxBufferSize
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxPendingConnections
  nameWithType: ConnectionOrientedTransportBindingElement.MaxPendingConnections
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: ChannelInitializationTimeout
  nameWithType: ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxOutputDelay
  nameWithType: ConnectionOrientedTransportBindingElement.MaxOutputDelay
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxPendingAccepts
  nameWithType: ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  commentId: P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: TransferMode
  nameWithType: ConnectionOrientedTransportBindingElement.TransferMode
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: true
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
  fullname.vb: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
    name: CanBuildChannelFactory<TChannel>
    nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>
    fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(BindingContext)
    name: CanBuildChannelFactory(Of TChannel)
    nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(Of TChannel)
    fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(Of TChannel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(BindingContext)
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: true
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType.vb: ConnectionOrientedTransportBindingElement.CanBuildChannelListener(Of TChannel)(BindingContext)
  fullname.vb: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener(Of TChannel)(BindingContext)
  name.vb: CanBuildChannelListener(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(BindingContext)
    name: CanBuildChannelListener<TChannel>
    nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelListener<TChannel>
    fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener<TChannel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(BindingContext)
    name: CanBuildChannelListener(Of TChannel)
    nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelListener(Of TChannel)
    fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener(Of TChannel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Channels
  commentId: N:Microsoft.ServiceBus.Channels
  isExternal: false
  name: Microsoft.ServiceBus.Channels
  nameWithType: Microsoft.ServiceBus.Channels
  fullName: Microsoft.ServiceBus.Channels
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement
  commentId: T:Microsoft.ServiceBus.TcpRelayTransportBindingElement
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TcpRelayTransportBindingElement
  nameWithType: TcpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor
  isExternal: false
  name: TcpRelayTransportBindingElement
  nameWithType: TcpRelayTransportBindingElement.TcpRelayTransportBindingElement
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.TcpRelayTransportBindingElement
- uid: Microsoft.ServiceBus.RelayClientAuthenticationType
  commentId: T:Microsoft.ServiceBus.RelayClientAuthenticationType
  parent: Microsoft.ServiceBus
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings
  isExternal: false
  name: ConnectionPoolSettings
  nameWithType: TcpRelayTransportBindingElement.ConnectionPoolSettings
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings
- uid: Microsoft.ServiceBus.SocketConnectionPoolSettings
  commentId: T:Microsoft.ServiceBus.SocketConnectionPoolSettings
  parent: Microsoft.ServiceBus
  isExternal: false
  name: SocketConnectionPoolSettings
  nameWithType: SocketConnectionPoolSettings
  fullName: Microsoft.ServiceBus.SocketConnectionPoolSettings
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: TcpRelayTransportBindingElement.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.TcpRelayConnectionMode
  commentId: T:Microsoft.ServiceBus.TcpRelayConnectionMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TcpRelayConnectionMode
  nameWithType: TcpRelayConnectionMode
  fullName: Microsoft.ServiceBus.TcpRelayConnectionMode
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode
  isExternal: false
  name: ConnectionMode
  nameWithType: TcpRelayTransportBindingElement.ConnectionMode
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme
  isExternal: false
  name: Scheme
  nameWithType: TcpRelayTransportBindingElement.Scheme
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic
  isExternal: false
  name: IsDynamic
  nameWithType: TcpRelayTransportBindingElement.IsDynamic
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone
  isExternal: false
  name: Clone
  nameWithType: TcpRelayTransportBindingElement.Clone
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone
- uid: BindingElement
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: BindingElement
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: TcpRelayTransportBindingElement.BuildChannelFactory<TChannel>
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory<TChannel>
  nameWithType.vb: TcpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory(Of TChannel)
  name.vb: BuildChannelFactory(Of TChannel)
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: BindingContext
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: BindingContext
- uid: IChannelFactory{{TChannel}}
  commentId: '!:IChannelFactory{``0}'
  definition: IChannelFactory`1
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullname.vb: IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: IChannelFactory`1
  isExternal: true
  name: IChannelFactory<>
  nameWithType: IChannelFactory<>
  fullName: IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
  fullname.vb: IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: TcpRelayTransportBindingElement.BuildChannelListener<TChannel>
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener<TChannel>
  nameWithType.vb: TcpRelayTransportBindingElement.BuildChannelListener(Of TChannel)
  fullname.vb: Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener(Of TChannel)
  name.vb: BuildChannelListener(Of TChannel)
- uid: IChannelListener{{TChannel}}
  commentId: '!:IChannelListener{``0}'
  definition: IChannelListener`1
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: IChannelListener<TChannel>
  nameWithType.vb: IChannelListener(Of TChannel)
  fullname.vb: IChannelListener(Of TChannel)
  name.vb: IChannelListener(Of TChannel)
  spec.csharp:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: IChannelListener`1
  isExternal: true
  name: IChannelListener<>
  nameWithType: IChannelListener<>
  fullName: IChannelListener<>
  nameWithType.vb: IChannelListener(Of )
  fullname.vb: IChannelListener(Of )
  name.vb: IChannelListener(Of )
  spec.csharp:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IChannelListener`1
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: IChannelListener
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(BindingContext)
  commentId: M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(BindingContext)
  parent: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement
  isExternal: true
  name: GetProperty<T>(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty<T>(BindingContext)
  nameWithType.vb: ConnectionOrientedTransportBindingElement.GetProperty(Of T)(BindingContext)
  fullname.vb: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty(Of T)(BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(BindingContext)
    name: GetProperty<T>
    nameWithType: ConnectionOrientedTransportBindingElement.GetProperty<T>
    fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(BindingContext)
    name: GetProperty(Of T)
    nameWithType: ConnectionOrientedTransportBindingElement.GetProperty(Of T)
    fullName: Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: BindingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty*
  commentId: Overload:Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty
  isExternal: false
  name: GetProperty<T>
  nameWithType: TcpRelayTransportBindingElement.GetProperty<T>
  fullName: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty<T>
  nameWithType.vb: TcpRelayTransportBindingElement.GetProperty(Of T)
  fullname.vb: Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty(Of T)
  name.vb: GetProperty(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
