### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Replicator.TransactionState
  commentId: T:Microsoft.ServiceFabric.Replicator.TransactionState
  id: TransactionState
  parent: Microsoft.ServiceFabric.Replicator
  children:
  - Microsoft.ServiceFabric.Replicator.TransactionState.Active
  - Microsoft.ServiceFabric.Replicator.TransactionState.Inactive
  langs:
  - csharp
  - vb
  name: TransactionState
  nameWithType: TransactionState
  fullName: Microsoft.ServiceFabric.Replicator.TransactionState
  type: Enum
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/TransactionState.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: TransactionState
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/TransactionState.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nTransaction State\n"
  example: []
  syntax:
    content: public enum TransactionState
    content.vb: Public Enum TransactionState
  extensionMethods:
  - Microsoft.ServiceFabric.Replicator.TransactionState.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.ServiceFabric.Replicator.TransactionState.Active
  commentId: F:Microsoft.ServiceFabric.Replicator.TransactionState.Active
  id: Active
  parent: Microsoft.ServiceFabric.Replicator.TransactionState
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: TransactionState.Active
  fullName: Microsoft.ServiceFabric.Replicator.TransactionState.Active
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/TransactionState.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Active
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/TransactionState.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nActive\n"
  example: []
  syntax:
    content: Active = 0
    return:
      type: Microsoft.ServiceFabric.Replicator.TransactionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.ServiceFabric.Replicator.TransactionState.Inactive
  commentId: F:Microsoft.ServiceFabric.Replicator.TransactionState.Inactive
  id: Inactive
  parent: Microsoft.ServiceFabric.Replicator.TransactionState
  langs:
  - csharp
  - vb
  name: Inactive
  nameWithType: TransactionState.Inactive
  fullName: Microsoft.ServiceFabric.Replicator.TransactionState.Inactive
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/TransactionState.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Inactive
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/TransactionState.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nCommitted/Aborted \n"
  example: []
  syntax:
    content: Inactive = 1
    return:
      type: Microsoft.ServiceFabric.Replicator.TransactionState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.ServiceFabric.Replicator
  commentId: N:Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Microsoft.ServiceFabric.Replicator
  nameWithType: Microsoft.ServiceFabric.Replicator
  fullName: Microsoft.ServiceFabric.Replicator
- uid: Microsoft.ServiceFabric.Replicator.TransactionState.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TransactionState>()
  nameWithType: ByteArraySerializer.Serialize<TransactionState>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Replicator.TransactionState>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TransactionState)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Replicator.TransactionState)()
  name.vb: Serialize(Of TransactionState)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TransactionState>
    nameWithType: ByteArraySerializer.Serialize<TransactionState>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Replicator.TransactionState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TransactionState)
    nameWithType: ByteArraySerializer.Serialize(Of TransactionState)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Replicator.TransactionState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Replicator.TransactionState
  commentId: T:Microsoft.ServiceFabric.Replicator.TransactionState
  parent: Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: TransactionState
  nameWithType: TransactionState
  fullName: Microsoft.ServiceFabric.Replicator.TransactionState
