### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  id: WcfServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor(Binding,IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: WcfServiceRemotingClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nAn <see cref=\"!:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory\"></see> that uses\nWindows Communication Foundation to create <see cref=\"!:IServiceRemotingClient\"></see> to communicate with stateless\nand stateful services over interfaces that are remoted via \n<xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class WcfServiceRemotingClientFactory : IServiceRemotingClientFactory'
    content.vb: >-
      Public Class WcfServiceRemotingClientFactory
          Inherits IServiceRemotingClientFactory
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  id: ClientConnected
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ClientConnected
  nameWithType: WcfServiceRemotingClientFactory.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ClientConnected
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nEvent handler that is fired when a client is connected to the service endpoint.\n"
  example: []
  syntax:
    content: public event EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>> ClientConnected
    content.vb: Public Event ClientConnected As EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
    return:
      type: System.EventHandler{CommunicationClientEventArgs{IServiceRemotingClient}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  id: ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ClientDisconnected
  nameWithType: WcfServiceRemotingClientFactory.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ClientDisconnected
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nEvent handler that is fired when a client is disconnected from the service endpoint.\n"
  example: []
  syntax:
    content: public event EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>> ClientDisconnected
    content.vb: Public Event ClientDisconnected As EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
    return:
      type: System.EventHandler{CommunicationClientEventArgs{IServiceRemotingClient}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor(Binding,IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor(Binding,IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})
  id: '#ctor(Binding,IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})'
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>)
  nameWithType: WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, System.Collections.Generic.IEnumerable<IExceptionHandler>, IServicePartitionResolver, System.String, System.Func<Binding, System.Collections.Generic.IEnumerable<IExceptionHandler>, IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract>>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 70
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nConstructs a WCF based service remoting client factory.\n"
  remarks: "\nThis factory uses <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref> and <see cref=\"!:ServiceRemotingExceptionHandler\"></see> in addition to the \nexception handlers supplied to the constructor. \n"
  example: []
  syntax:
    content: public WcfServiceRemotingClientFactory(Binding clientBinding = null, IServiceRemotingCallbackClient callbackClient = null, IEnumerable<IExceptionHandler> exceptionHandlers = null, IServicePartitionResolver servicePartitionResolver = null, string traceId = null, Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, string, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>> createWcfClientFactory = null)
    content.vb: Public Sub New(clientBinding As Binding = Nothing, callbackClient As IServiceRemotingCallbackClient = Nothing, exceptionHandlers As IEnumerable(Of IExceptionHandler) = Nothing, servicePartitionResolver As IServicePartitionResolver = Nothing, traceId As String = Nothing, createWcfClientFactory As Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract)) = Nothing)
    parameters:
    - id: clientBinding
      type: Binding
      description: "\nWCF binding to use for the client. If the client binding is not specified or null,\na default client binding is created using \n<xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method \nwhich creates a <see cref=\"!:System.ServiceModel.NetTcpBinding\"></see> with no security.\n"
    - id: callbackClient
      type: IServiceRemotingCallbackClient
      description: "\nThe callback client that receives the callbacks from the service.\n"
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{IExceptionHandler}
      description: "\nException handlers to handle the exceptions encountered in communicating with the service.\n"
    - id: servicePartitionResolver
      type: IServicePartitionResolver
      description: "\nService partition resolver to resolve the service endpoints. If not specified, a default \nservice partition resolver returned by <see cref=\"!:ServicePartitionResolver.GetDefault\"></see> is used.\n"
    - id: traceId
      type: System.String
      description: "\nId to use in diagnostics traces from this component.\n"
    - id: createWcfClientFactory
      type: System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}}
      description: "\nDelegate function that creates <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory%601\" data-throw-if-not-resolved=\"false\"></xref> using the \n<xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor*
  nameWithType.vb: WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, System.Collections.Generic.IEnumerable(Of IExceptionHandler), IServicePartitionResolver, System.String, System.Func(Of Binding, System.Collections.Generic.IEnumerable(Of IExceptionHandler), IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract)))
  name.vb: WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract)))
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  isExternal: false
  name: WcfServiceRemotingListener
  nameWithType: WcfServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{CommunicationClientEventArgs{IServiceRemotingClient}}
  commentId: T:System.EventHandler{CommunicationClientEventArgs{IServiceRemotingClient}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>>
  nameWithType: EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>>
  fullName: System.EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>>
  nameWithType.vb: EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
  fullname.vb: System.EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
  name.vb: EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CommunicationClientEventArgs`1
    name: CommunicationClientEventArgs
    nameWithType: CommunicationClientEventArgs
    fullName: CommunicationClientEventArgs
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: IServiceRemotingClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CommunicationClientEventArgs`1
    name: CommunicationClientEventArgs
    nameWithType: CommunicationClientEventArgs
    fullName: CommunicationClientEventArgs
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: IServiceRemotingClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  isExternal: false
  name: WcfCommunicationClientFactory<TServiceContract>
  nameWithType: WcfCommunicationClientFactory<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract)
  name.vb: WcfCommunicationClientFactory(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  isExternal: false
  name: IServiceRemotingContract
  nameWithType: IServiceRemotingContract
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  isExternal: false
  name: WcfExceptionHandler
  nameWithType: WcfExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor
  isExternal: false
  name: WcfServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory
- uid: Binding
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: Binding
- uid: IServiceRemotingCallbackClient
  isExternal: true
  name: IServiceRemotingCallbackClient
  nameWithType: IServiceRemotingCallbackClient
  fullName: IServiceRemotingCallbackClient
- uid: System.Collections.Generic.IEnumerable{IExceptionHandler}
  commentId: T:System.Collections.Generic.IEnumerable{IExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExceptionHandler>
  nameWithType: IEnumerable<IExceptionHandler>
  fullName: System.Collections.Generic.IEnumerable<IExceptionHandler>
  nameWithType.vb: IEnumerable(Of IExceptionHandler)
  fullname.vb: System.Collections.Generic.IEnumerable(Of IExceptionHandler)
  name.vb: IEnumerable(Of IExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: IExceptionHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: IExceptionHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IServicePartitionResolver
  isExternal: true
  name: IServicePartitionResolver
  nameWithType: IServicePartitionResolver
  fullName: IServicePartitionResolver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}}
  commentId: T:System.Func{Binding,System.Collections.Generic.IEnumerable{IExceptionHandler},IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}}
  parent: System
  definition: System.Func`6
  name: Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>
  nameWithType: Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>
  fullName: System.Func<Binding, System.Collections.Generic.IEnumerable<IExceptionHandler>, IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract>>
  nameWithType.vb: Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract))
  fullname.vb: System.Func(Of Binding, System.Collections.Generic.IEnumerable(Of IExceptionHandler), IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract))
  name.vb: Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract))
  spec.csharp:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Binding
    name: Binding
    nameWithType: Binding
    fullName: Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: IExceptionHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IServicePartitionResolver
    name: IServicePartitionResolver
    nameWithType: IServicePartitionResolver
    fullName: IServicePartitionResolver
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
    name: IServiceRemotingCallbackContract
    nameWithType: IServiceRemotingCallbackContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
    name: IServiceRemotingContract
    nameWithType: IServiceRemotingContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Binding
    name: Binding
    nameWithType: Binding
    fullName: Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: IExceptionHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IServicePartitionResolver
    name: IServicePartitionResolver
    nameWithType: IServicePartitionResolver
    fullName: IServicePartitionResolver
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
    name: IServiceRemotingCallbackContract
    nameWithType: IServiceRemotingCallbackContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
    name: IServiceRemotingContract
    nameWithType: IServiceRemotingContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func`6
  commentId: T:System.Func`6
  isExternal: true
  name: Func<T1, T2, T3, T4, T5, TResult>
  nameWithType: Func<T1, T2, T3, T4, T5, TResult>
  fullName: System.Func<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  fullname.vb: System.Func(Of T1, T2, T3, T4, T5, TResult)
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
