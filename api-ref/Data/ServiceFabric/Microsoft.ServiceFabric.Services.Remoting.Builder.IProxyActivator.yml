### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  id: IProxyActivator
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  langs:
  - csharp
  - vb
  name: IProxyActivator
  nameWithType: IProxyActivator
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: IProxyActivator
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nDefines the interface implemented by generated code to create proxy objects.\n"
  example: []
  syntax:
    content: public interface IProxyActivator
    content.vb: Public Interface IProxyActivator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  id: CreateInstance
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: IProxyActivator.CreateInstance()
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: CreateInstance
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nCreate the instance of the generated proxy type.\n"
  example: []
  syntax:
    content: ProxyBase CreateInstance()
    content.vb: Function CreateInstance As ProxyBase
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
      description: An instance of the generated proxy as <xref href="Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance*
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Builder
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Builder
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Builder
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder
  isExternal: false
  name: ProxyBase
  nameWithType: ProxyBase
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  isExternal: false
  name: CreateInstance
  nameWithType: IProxyActivator.CreateInstance
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
