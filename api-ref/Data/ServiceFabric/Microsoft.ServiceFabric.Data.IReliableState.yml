### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.IReliableState
  commentId: T:Microsoft.ServiceFabric.Data.IReliableState
  id: IReliableState
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.IReliableState.Name
  langs:
  - csharp
  - vb
  name: IReliableState
  nameWithType: IReliableState
  fullName: Microsoft.ServiceFabric.Data.IReliableState
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableState.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: IReliableState
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableState.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nDefines methods for interacting with all reliable state in Service Fabric.\n"
  example: []
  syntax:
    content: public interface IReliableState
    content.vb: Public Interface IReliableState
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Data.IReliableState.Name
  commentId: P:Microsoft.ServiceFabric.Data.IReliableState.Name
  id: Name
  parent: Microsoft.ServiceFabric.Data.IReliableState
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IReliableState.Name
  fullName: Microsoft.ServiceFabric.Data.IReliableState.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableState.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableState.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets a value indicating the unique name for the <xref href=\"Microsoft.ServiceFabric.Data.IReliableState\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: Uri Name { get; }
    content.vb: ReadOnly Property Name As Uri
    parameters: []
    return:
      type: Uri
      description: The <see cref="!:System.Uri"></see> name of this <xref href="Microsoft.ServiceFabric.Data.IReliableState" data-throw-if-not-resolved="false"></xref> instance.
  overload: Microsoft.ServiceFabric.Data.IReliableState.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: Microsoft.ServiceFabric.Data.IReliableState
  commentId: T:Microsoft.ServiceFabric.Data.IReliableState
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IReliableState
  nameWithType: IReliableState
  fullName: Microsoft.ServiceFabric.Data.IReliableState
- uid: Microsoft.ServiceFabric.Data.IReliableState.Name*
  commentId: Overload:Microsoft.ServiceFabric.Data.IReliableState.Name
  isExternal: false
  name: Name
  nameWithType: IReliableState.Name
  fullName: Microsoft.ServiceFabric.Data.IReliableState.Name
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
