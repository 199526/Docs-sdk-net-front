### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  id: WcfCommunicationClient`1
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Channel
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Endpoint
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ListenerName
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ResolvedServicePartition
  langs:
  - csharp
  - vb
  name: WcfCommunicationClient<TServiceContract>
  nameWithType: WcfCommunicationClient<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: WcfCommunicationClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nA WCF client created by <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory%601\" data-throw-if-not-resolved=\"false\"></xref> to communicate \nwith server fabric service using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class WcfCommunicationClient<TServiceContract> : ICommunicationClient where TServiceContract : class'
    content.vb: >-
      Public Class WcfCommunicationClient(Of TServiceContract As Class)
          Inherits ICommunicationClient
    typeParameters:
    - id: TServiceContract
      description: WCF service contract
  inheritance:
  - System.Object
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)
  name.vb: WcfCommunicationClient(Of TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ResolvedServicePartition
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ResolvedServicePartition
  id: ResolvedServicePartition
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  langs:
  - csharp
  - vb
  name: ResolvedServicePartition
  nameWithType: WcfCommunicationClient<TServiceContract>.ResolvedServicePartition
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.ResolvedServicePartition
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ResolvedServicePartition
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nGets or Sets the Resolved service partition which was used when this client was created.\n"
  example: []
  syntax:
    content: public ResolvedServicePartition ResolvedServicePartition { get; set; }
    content.vb: Public Property ResolvedServicePartition As ResolvedServicePartition
    parameters: []
    return:
      type: ResolvedServicePartition
      description: <see cref="!:System.Fabric.ResolvedServicePartition"></see> object
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ResolvedServicePartition*
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).ResolvedServicePartition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).ResolvedServicePartition
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ListenerName
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ListenerName
  id: ListenerName
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  langs:
  - csharp
  - vb
  name: ListenerName
  nameWithType: WcfCommunicationClient<TServiceContract>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.ListenerName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ListenerName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nGets or Sets the name of the listener in the replica or instance to which the client is\nconnected to.\n"
  example: []
  syntax:
    content: public string ListenerName { get; set; }
    content.vb: Public Property ListenerName As String
    parameters: []
    return:
      type: System.String
      description: Name of the listener
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ListenerName*
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).ListenerName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).ListenerName
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Endpoint
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Endpoint
  id: Endpoint
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  langs:
  - csharp
  - vb
  name: Endpoint
  nameWithType: WcfCommunicationClient<TServiceContract>.Endpoint
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.Endpoint
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Endpoint
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
    startLine: 43
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nGets or Sets the service endpoint to which the client is connected to.\n"
  example: []
  syntax:
    content: public ResolvedServiceEndpoint Endpoint { get; set; }
    content.vb: Public Property Endpoint As ResolvedServiceEndpoint
    parameters: []
    return:
      type: ResolvedServiceEndpoint
      description: <see cref="!:System.Fabric.ResolvedServiceEndpoint"></see>
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Endpoint*
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).Endpoint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).Endpoint
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Channel
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Channel
  id: Channel
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: WcfCommunicationClient<TServiceContract>.Channel
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.Channel
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Channel
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClient.cs
    startLine: 49
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nGets the WCF channel for the specified contract that this communication client uses.\n"
  example: []
  syntax:
    content: public TServiceContract Channel { get; }
    content.vb: Public ReadOnly Property Channel As TServiceContract
    parameters: []
    return:
      type: '{TServiceContract}'
      description: WCF channel
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Channel*
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).Channel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).Channel
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  isExternal: false
  name: WcfCommunicationClientFactory<TServiceContract>
  nameWithType: WcfCommunicationClientFactory<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract)
  name.vb: WcfCommunicationClientFactory(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  isExternal: false
  name: WcfCommunicationListener<TServiceContract>
  nameWithType: WcfCommunicationListener<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract)
  name.vb: WcfCommunicationListener(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
    name: WcfCommunicationListener
    nameWithType: WcfCommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
    name: WcfCommunicationListener
    nameWithType: WcfCommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ResolvedServicePartition*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ResolvedServicePartition
  isExternal: false
  name: ResolvedServicePartition
  nameWithType: WcfCommunicationClient<TServiceContract>.ResolvedServicePartition
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.ResolvedServicePartition
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).ResolvedServicePartition
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).ResolvedServicePartition
- uid: ResolvedServicePartition
  commentId: '!:ResolvedServicePartition'
  isExternal: true
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: ResolvedServicePartition
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ListenerName*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.ListenerName
  isExternal: false
  name: ListenerName
  nameWithType: WcfCommunicationClient<TServiceContract>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.ListenerName
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).ListenerName
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).ListenerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Endpoint*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Endpoint
  isExternal: false
  name: Endpoint
  nameWithType: WcfCommunicationClient<TServiceContract>.Endpoint
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.Endpoint
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).Endpoint
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).Endpoint
- uid: ResolvedServiceEndpoint
  commentId: '!:ResolvedServiceEndpoint'
  isExternal: true
  name: ResolvedServiceEndpoint
  nameWithType: ResolvedServiceEndpoint
  fullName: ResolvedServiceEndpoint
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Channel*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1.Channel
  isExternal: false
  name: Channel
  nameWithType: WcfCommunicationClient<TServiceContract>.Channel
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>.Channel
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract).Channel
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract).Channel
- uid: '{TServiceContract}'
  commentId: '!:TServiceContract'
  definition: TServiceContract
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: TServiceContract
  isExternal: false
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
