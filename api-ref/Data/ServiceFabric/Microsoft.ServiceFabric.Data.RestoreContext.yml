### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.RestoreContext
  commentId: T:Microsoft.ServiceFabric.Data.RestoreContext
  id: RestoreContext
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.RestoreContext.#ctor(Microsoft.ServiceFabric.Data.IStateProviderReplica)
  - Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription)
  - Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RestoreContext
  nameWithType: RestoreContext
  fullName: Microsoft.ServiceFabric.Data.RestoreContext
  type: Struct
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: RestoreContext
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\n<cref name=\"RestoreContext\"></cref> contains the <cref name=\"RestoreContext.RestoreAsync(RestoreDescription)\"></cref> that can be used to restore the state of the replica from a backup. \n"
  example: []
  syntax:
    content: public struct RestoreContext
    content.vb: Public Structure RestoreContext
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.ServiceFabric.Data.RestoreContext.#ctor(Microsoft.ServiceFabric.Data.IStateProviderReplica)
  commentId: M:Microsoft.ServiceFabric.Data.RestoreContext.#ctor(Microsoft.ServiceFabric.Data.IStateProviderReplica)
  id: '#ctor(Microsoft.ServiceFabric.Data.IStateProviderReplica)'
  parent: Microsoft.ServiceFabric.Data.RestoreContext
  langs:
  - csharp
  - vb
  name: RestoreContext(IStateProviderReplica)
  nameWithType: RestoreContext.RestoreContext(IStateProviderReplica)
  fullName: Microsoft.ServiceFabric.Data.RestoreContext.RestoreContext(Microsoft.ServiceFabric.Data.IStateProviderReplica)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nInitializes a new instance of the <cref name=\"RestoreContext\"></cref> structure.\n"
  example: []
  syntax:
    content: public RestoreContext(IStateProviderReplica stateProviderReplica)
    content.vb: Public Sub New(stateProviderReplica As IStateProviderReplica)
    parameters:
    - id: stateProviderReplica
      type: Microsoft.ServiceFabric.Data.IStateProviderReplica
      description: "\nAn <xref href=\"Microsoft.ServiceFabric.Data.IStateProviderReplica\" data-throw-if-not-resolved=\"false\"></xref> representing a reliable state provider replica.\n"
  overload: Microsoft.ServiceFabric.Data.RestoreContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription)
  commentId: M:Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription)
  id: RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription)
  parent: Microsoft.ServiceFabric.Data.RestoreContext
  langs:
  - csharp
  - vb
  name: RestoreAsync(RestoreDescription)
  nameWithType: RestoreContext.RestoreAsync(RestoreDescription)
  fullName: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: RestoreAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nRestores a backup described by <xref href=\"Microsoft.ServiceFabric.Data.RestoreDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task RestoreAsync(RestoreDescription restoreDescription)
    content.vb: Public Function RestoreAsync(restoreDescription As RestoreDescription) As Task
    parameters:
    - id: restoreDescription
      type: Microsoft.ServiceFabric.Data.RestoreDescription
      description: Description for the restore request.
    return:
      type: System.Threading.Tasks.Task
      description: "\nTask that represents the asynchronous restore operation.\n"
  overload: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription,System.Threading.CancellationToken)
  id: RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.RestoreContext
  langs:
  - csharp
  - vb
  name: RestoreAsync(RestoreDescription, CancellationToken)
  nameWithType: RestoreContext.RestoreAsync(RestoreDescription, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: RestoreAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreContext.cs
    startLine: 49
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nRestore a backup described by <xref href=\"Microsoft.ServiceFabric.Data.RestoreDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task RestoreAsync(RestoreDescription restoreDescription, CancellationToken cancellationToken)
    content.vb: Public Function RestoreAsync(restoreDescription As RestoreDescription, cancellationToken As CancellationToken) As Task
    parameters:
    - id: restoreDescription
      type: Microsoft.ServiceFabric.Data.RestoreDescription
      description: Description for the restore request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous restore operation.
  overload: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica
  commentId: T:Microsoft.ServiceFabric.Data.IStateProviderReplica
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IStateProviderReplica
  nameWithType: IStateProviderReplica
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica
- uid: Microsoft.ServiceFabric.Data.RestoreContext.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.RestoreContext.#ctor
  isExternal: false
  name: RestoreContext
  nameWithType: RestoreContext.RestoreContext
  fullName: Microsoft.ServiceFabric.Data.RestoreContext.RestoreContext
- uid: Microsoft.ServiceFabric.Data.RestoreDescription
  commentId: T:Microsoft.ServiceFabric.Data.RestoreDescription
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: RestoreDescription
  nameWithType: RestoreDescription
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription
- uid: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync*
  commentId: Overload:Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync
  isExternal: false
  name: RestoreAsync
  nameWithType: RestoreContext.RestoreAsync
  fullName: Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
