### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  id: WcfCommunicationListener`1
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0,Binding,EndpointAddress)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0,Binding,System.String)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener<TServiceContract>
  nameWithType: WcfCommunicationListener<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: WcfCommunicationListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nA Windows Communication Foundation based listener for Service Fabric based stateless or stateful service.\n"
  example: []
  syntax:
    content: 'public class WcfCommunicationListener<TServiceContract> : ICommunicationListener'
    content.vb: >-
      Public Class WcfCommunicationListener(Of TServiceContract)
          Inherits ICommunicationListener
    typeParameters:
    - id: TServiceContract
      description: Type of the WCF service contract.
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract)
  name.vb: WcfCommunicationListener(Of TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0)
  id: '#ctor(ServiceContext,`0)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener(ServiceContext, TServiceContract)
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nConstructs a WCF based communication listener that uses default binding and default endpoint address.\n"
  remarks: "\n<p>\n    The default listener binding is created using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    The default endpoint address is created using the endpoint resource defined in the service manifest. The name of the endpoint resource is \n    derived from the WCF service contract type using <see cref=\"!:Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName\"></see> method.\n    If matching endpoint resource is not found in the service manifest, a default endpoint resource definition with port zero is used.\n</p>\n"
  example: []
  syntax:
    content: public WcfCommunicationListener(ServiceContext serviceContext, TServiceContract wcfServiceObject)
    content.vb: Public Sub New(serviceContext As ServiceContext, wcfServiceObject As TServiceContract)
    parameters:
    - id: serviceContext
      type: ServiceContext
      description: "\nThe context of the service for which this communication listener is being constructed.\n"
    - id: wcfServiceObject
      type: '{TServiceContract}'
      description: "\nWCF service implementing the specified WCF service contract.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0,Binding,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0,Binding,System.String)
  id: '#ctor(ServiceContext,`0,Binding,System.String)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener(ServiceContext, TServiceContract, Binding, String)
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract, Binding, String)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract, Binding, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nConstructs a WCF based communication listener that uses specified listener binding and \nendpoint address derived from the specified endpoint resource name.\n"
  example: []
  syntax:
    content: public WcfCommunicationListener(ServiceContext serviceContext, TServiceContract wcfServiceObject, Binding listenerBinding = null, string endpointResourceName = null)
    content.vb: Public Sub New(serviceContext As ServiceContext, wcfServiceObject As TServiceContract, listenerBinding As Binding = Nothing, endpointResourceName As String = Nothing)
    parameters:
    - id: serviceContext
      type: ServiceContext
      description: "\nThe context of the service for which this communication listener is being constructed.\n"
    - id: wcfServiceObject
      type: '{TServiceContract}'
      description: "\nWCF service implementing the specified WCF service contract.\n"
    - id: listenerBinding
      type: Binding
      description: "\nThe binding to use for the WCF endpoint. If the listenerBinding is not specified or it is null, a default listener binding is \ncreated using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
    - id: endpointResourceName
      type: System.String
      description: "\nThe name of the endpoint resource defined in the service manifest that should be used to create the address for the listener. \nIf the endpointResourceName is not specified or it is null, it's name is derived from the WCF service contract type using\n<see cref=\"!:Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName\"></see> method.\nIf matching endpoint resource is not found in the service manifest, a default endpoint resource definition with port zero is used.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract, Binding, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract, Binding, System.String)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0,Binding,EndpointAddress)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(ServiceContext,`0,Binding,EndpointAddress)
  id: '#ctor(ServiceContext,`0,Binding,EndpointAddress)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 101
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nConstructs a WCF based communication listener that uses specified listener binding and \nendpoint address derived from the specified endpoint address.\n"
  example: []
  syntax:
    content: public WcfCommunicationListener(ServiceContext serviceContext, TServiceContract wcfServiceObject, Binding listenerBinding = null, EndpointAddress address = null)
    content.vb: Public Sub New(serviceContext As ServiceContext, wcfServiceObject As TServiceContract, listenerBinding As Binding = Nothing, address As EndpointAddress = Nothing)
    parameters:
    - id: serviceContext
      type: ServiceContext
      description: "\nThe context of the service for which this communication listener is being constructed.\n"
    - id: wcfServiceObject
      type: '{TServiceContract}'
      description: "\nWCF service implementing the specified WCF service contract.\n"
    - id: listenerBinding
      type: Binding
      description: "\nThe binding to use for the WCF endpoint. If the listenerBinding is not specified or it is null, a default listener binding is \ncreated using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
    - id: address
      type: EndpointAddress
      description: "\nThe listen address for the WCF endpoint. if the address is not specified or it is null, a default address is created by \nlooking up the endpoint resource from the service manifest. The endpoint resource name is derived from the WCF \nservice contract type using <see cref=\"!:Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName\"></see> method.\nIf matching endpoint resource is not found in the service manifest, a default endpoint resource definition with port zero is used.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  id: ServiceHost
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: ServiceHost
  nameWithType: WcfCommunicationListener<TServiceContract>.ServiceHost
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.ServiceHost
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ServiceHost
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 147
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nGets the <see cref=\"!:System.ServiceModel.ServiceHost\"></see> used by this listener to host the \nWCF service implementation.\n"
  remarks: "\nThe service host is created by the listener in it's constructor. Before this communication\nlistener is opened by the runtime via <see cref=\"!:ICommunicationListener.OpenAsync(CancellationToken)\"></see> method,\nthe service host can be customized by accessing it via this property.\n"
  example: []
  syntax:
    content: public ServiceHost ServiceHost { get; }
    content.vb: Public ReadOnly Property ServiceHost As ServiceHost
    parameters: []
    return:
      type: ServiceHost
      description: "\nA <see cref=\"!:System.ServiceModel.ServiceHost\"></see> used by this listener to host the \nWCF service implementation.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).ServiceHost
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).ServiceHost
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfCommunicationListener<TServiceContract>>()
  nameWithType: ByteArraySerializer.Serialize<WcfCommunicationListener<TServiceContract>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfCommunicationListener(Of TServiceContract))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract))()
  name.vb: Serialize(Of WcfCommunicationListener(Of TServiceContract))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfCommunicationListener<TServiceContract>>
    nameWithType: ByteArraySerializer.Serialize<WcfCommunicationListener<TServiceContract>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfCommunicationListener(Of TServiceContract))
    nameWithType: ByteArraySerializer.Serialize(Of WcfCommunicationListener(Of TServiceContract))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor
  isExternal: false
  name: WcfCommunicationListener
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener
- uid: ServiceContext
  isExternal: true
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: ServiceContext
- uid: '{TServiceContract}'
  commentId: '!:TServiceContract'
  definition: TServiceContract
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: TServiceContract
  isExternal: false
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: Binding
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: Binding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EndpointAddress
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: EndpointAddress
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  isExternal: false
  name: ServiceHost
  nameWithType: WcfCommunicationListener<TServiceContract>.ServiceHost
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.ServiceHost
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).ServiceHost
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).ServiceHost
- uid: ServiceHost
  isExternal: true
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: ServiceHost
