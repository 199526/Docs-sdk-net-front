### YamlMime:ManagedReference
items:
- uid: System.Fabric.Result.PartitionRestartResult
  commentId: T:System.Fabric.Result.PartitionRestartResult
  id: PartitionRestartResult
  parent: System.Fabric.Result
  children:
  - System.Fabric.Result.PartitionRestartResult.SelectedPartition
  - System.Fabric.Result.PartitionRestartResult.ToString
  langs:
  - csharp
  - vb
  name: PartitionRestartResult
  nameWithType: PartitionRestartResult
  fullName: System.Fabric.Result.PartitionRestartResult
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Result/PartitionRestartResult.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: PartitionRestartResult
    path: src/prod/src/managed/Api/src/System/Fabric/Result/PartitionRestartResult.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Result
  summary: "\nReturns Restart partition result object.\n"
  remarks: "\nThis class returns the Selected partition for which restart partition action was called.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PartitionRestartResult : TestCommandResult
    content.vb: >-
      <Serializable>

      Public Class PartitionRestartResult
          Inherits TestCommandResult
  inheritance:
  - System.Object
  - System.Fabric.Result.TestCommandResult
  inheritedMembers:
  - System.Fabric.Result.TestCommandResult.Exception
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Result.PartitionRestartResult.SelectedPartition
  commentId: P:System.Fabric.Result.PartitionRestartResult.SelectedPartition
  id: SelectedPartition
  parent: System.Fabric.Result.PartitionRestartResult
  langs:
  - csharp
  - vb
  name: SelectedPartition
  nameWithType: PartitionRestartResult.SelectedPartition
  fullName: System.Fabric.Result.PartitionRestartResult.SelectedPartition
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Result/PartitionRestartResult.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: SelectedPartition
    path: src/prod/src/managed/Api/src/System/Fabric/Result/PartitionRestartResult.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Result
  summary: "\nGets selected partition.\n"
  example: []
  syntax:
    content: public SelectedPartition SelectedPartition { get; }
    content.vb: Public ReadOnly Property SelectedPartition As SelectedPartition
    parameters: []
    return:
      type: System.Fabric.SelectedPartition
      description: The SelectedPartition object.
  overload: System.Fabric.Result.PartitionRestartResult.SelectedPartition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Result.PartitionRestartResult.ToString
  commentId: M:System.Fabric.Result.PartitionRestartResult.ToString
  id: ToString
  parent: System.Fabric.Result.PartitionRestartResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PartitionRestartResult.ToString()
  fullName: System.Fabric.Result.PartitionRestartResult.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Result/PartitionRestartResult.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Result/PartitionRestartResult.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Result
  summary: "\nReturns the string representation of the contained information.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "A string containing information about the SelectedPartition \nand (conditionally) about the Exception "
  overridden: System.Object.ToString
  overload: System.Fabric.Result.PartitionRestartResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Result
  commentId: N:System.Fabric.Result
  isExternal: false
  name: System.Fabric.Result
  nameWithType: System.Fabric.Result
  fullName: System.Fabric.Result
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Result.TestCommandResult
  commentId: T:System.Fabric.Result.TestCommandResult
  parent: System.Fabric.Result
  isExternal: false
  name: TestCommandResult
  nameWithType: TestCommandResult
  fullName: System.Fabric.Result.TestCommandResult
- uid: System.Fabric.Result.TestCommandResult.Exception
  commentId: P:System.Fabric.Result.TestCommandResult.Exception
  parent: System.Fabric.Result.TestCommandResult
  isExternal: false
  name: Exception
  nameWithType: TestCommandResult.Exception
  fullName: System.Fabric.Result.TestCommandResult.Exception
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Result.PartitionRestartResult.SelectedPartition*
  commentId: Overload:System.Fabric.Result.PartitionRestartResult.SelectedPartition
  isExternal: false
  name: SelectedPartition
  nameWithType: PartitionRestartResult.SelectedPartition
  fullName: System.Fabric.Result.PartitionRestartResult.SelectedPartition
- uid: System.Fabric.SelectedPartition
  commentId: T:System.Fabric.SelectedPartition
  parent: System.Fabric
  isExternal: false
  name: SelectedPartition
  nameWithType: SelectedPartition
  fullName: System.Fabric.SelectedPartition
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Result.PartitionRestartResult.ToString*
  commentId: Overload:System.Fabric.Result.PartitionRestartResult.ToString
  isExternal: false
  name: ToString
  nameWithType: PartitionRestartResult.ToString
  fullName: System.Fabric.Result.PartitionRestartResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
