### YamlMime:ManagedReference
items:
- uid: System.Fabric.CodePackageDebugParameters
  commentId: T:System.Fabric.CodePackageDebugParameters
  id: CodePackageDebugParameters
  parent: System.Fabric
  children:
  - System.Fabric.CodePackageDebugParameters.GetDebugParameters(System.Fabric.CodePackageDebugParameters[])
  langs:
  - csharp
  - vb
  name: CodePackageDebugParameters
  nameWithType: CodePackageDebugParameters
  fullName: System.Fabric.CodePackageDebugParameters
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/CodePackageDebugParameters.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: CodePackageDebugParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Common/CodePackageDebugParameters.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Class for code package debug parameters.</p>\n"
  example: []
  syntax:
    content: public class CodePackageDebugParameters
    content.vb: Public Class CodePackageDebugParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.CodePackageDebugParameters.GetDebugParameters(System.Fabric.CodePackageDebugParameters[])
  commentId: M:System.Fabric.CodePackageDebugParameters.GetDebugParameters(System.Fabric.CodePackageDebugParameters[])
  id: GetDebugParameters(System.Fabric.CodePackageDebugParameters[])
  parent: System.Fabric.CodePackageDebugParameters
  langs:
  - csharp
  - vb
  name: GetDebugParameters(CodePackageDebugParameters[])
  nameWithType: CodePackageDebugParameters.GetDebugParameters(CodePackageDebugParameters[])
  fullName: System.Fabric.CodePackageDebugParameters.GetDebugParameters(System.Fabric.CodePackageDebugParameters[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/CodePackageDebugParameters.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: GetDebugParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Common/CodePackageDebugParameters.cs
    startLine: 123
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nReturns JSON string representing CodePackageDebugParameters passed in.\n</p>\n"
  example: []
  syntax:
    content: public static string GetDebugParameters(CodePackageDebugParameters[] debugParameters)
    content.vb: Public Shared Function GetDebugParameters(debugParameters As CodePackageDebugParameters()) As String
    parameters:
    - id: debugParameters
      type: System.Fabric.CodePackageDebugParameters[]
      description: "\n<p>Array of CodePackageDebugParameters that need to be serialized into JSON. </p>\n"
    return:
      type: System.String
      description: "\n<p>String representation of the debug parameters.</p>\n"
  overload: System.Fabric.CodePackageDebugParameters.GetDebugParameters*
  nameWithType.vb: CodePackageDebugParameters.GetDebugParameters(CodePackageDebugParameters())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Fabric.CodePackageDebugParameters.GetDebugParameters(System.Fabric.CodePackageDebugParameters())
  name.vb: GetDebugParameters(CodePackageDebugParameters())
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.CodePackageDebugParameters.GetDebugParameters*
  commentId: Overload:System.Fabric.CodePackageDebugParameters.GetDebugParameters
  isExternal: false
  name: GetDebugParameters
  nameWithType: CodePackageDebugParameters.GetDebugParameters
  fullName: System.Fabric.CodePackageDebugParameters.GetDebugParameters
- uid: System.Fabric.CodePackageDebugParameters[]
  name: CodePackageDebugParameters[]
  nameWithType: CodePackageDebugParameters[]
  fullName: System.Fabric.CodePackageDebugParameters[]
  nameWithType.vb: CodePackageDebugParameters()
  fullname.vb: System.Fabric.CodePackageDebugParameters()
  name.vb: CodePackageDebugParameters()
  spec.csharp:
  - uid: System.Fabric.CodePackageDebugParameters
    name: CodePackageDebugParameters
    nameWithType: CodePackageDebugParameters
    fullName: System.Fabric.CodePackageDebugParameters
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Fabric.CodePackageDebugParameters
    name: CodePackageDebugParameters
    nameWithType: CodePackageDebugParameters
    fullName: System.Fabric.CodePackageDebugParameters
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
