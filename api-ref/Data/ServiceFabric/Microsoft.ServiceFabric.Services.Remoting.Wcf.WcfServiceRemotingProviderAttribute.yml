### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  id: WcfServiceRemotingProviderAttribute
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.#ctor
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener(ServiceContext,IService)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingProviderAttribute
  nameWithType: WcfServiceRemotingProviderAttribute
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: WcfServiceRemotingProviderAttribute
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nSets WCF as the default service remoting transport provider in the assembly.\n"
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Assembly)]

      public sealed class WcfServiceRemotingProviderAttribute : ServiceRemotingProviderAttribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Assembly)>

      Public NotInheritable Class WcfServiceRemotingProviderAttribute
          Inherits ServiceRemotingProviderAttribute
  inheritance:
  - System.Object
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.#ctor
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingProviderAttribute()
  nameWithType: WcfServiceRemotingProviderAttribute.WcfServiceRemotingProviderAttribute()
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.WcfServiceRemotingProviderAttribute()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 25
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nConstructs a <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute\" data-throw-if-not-resolved=\"false\"></xref> which can be used\nto set WCF transport as the default service remoting transport provider in the assembly.\n"
  example: []
  syntax:
    content: public WcfServiceRemotingProviderAttribute()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize
  id: MaxMessageSize
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  langs:
  - csharp
  - vb
  name: MaxMessageSize
  nameWithType: WcfServiceRemotingProviderAttribute.MaxMessageSize
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: MaxMessageSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nGets or Sets the max message size that can be transferred over remoting.\n"
  example: []
  syntax:
    content: public long MaxMessageSize { get; set; }
    content.vb: Public Property MaxMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe max message size that can be transferred over remoting\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  id: OpenTimeoutInMilliSeconds
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  langs:
  - csharp
  - vb
  name: OpenTimeoutInMilliSeconds
  nameWithType: WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: OpenTimeoutInMilliSeconds
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 47
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nGets or Sets the timeout in milliseconds for opening the connection from client side and waiting for the listener to open on the service side.\n"
  example: []
  syntax:
    content: public long OpenTimeoutInMilliSeconds { get; set; }
    content.vb: Public Property OpenTimeoutInMilliSeconds As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe timeout in milliseconds for opening the connection from client side and waiting for the listener to open on the service side.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  id: CloseTimeoutInMilliSeconds
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  langs:
  - csharp
  - vb
  name: CloseTimeoutInMilliSeconds
  nameWithType: WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: CloseTimeoutInMilliSeconds
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 59
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nGets or Sets the timeout in milliseconds to wait before closing the connection to let existing messages drain.\n"
  example: []
  syntax:
    content: public long CloseTimeoutInMilliSeconds { get; set; }
    content.vb: Public Property CloseTimeoutInMilliSeconds As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe timeout in milliseconds to wait before closing the connection to let existing messages drain.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener(ServiceContext,IService)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener(ServiceContext,IService)
  id: CreateServiceRemotingListener(ServiceContext,IService)
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  langs:
  - csharp
  - vb
  name: CreateServiceRemotingListener(ServiceContext, IService)
  nameWithType: WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener(ServiceContext, IService)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener(ServiceContext, IService)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: CreateServiceRemotingListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 77
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nCreates a service remoting listener for remoting the service interface.\n"
  example: []
  syntax:
    content: public override IServiceRemotingListener CreateServiceRemotingListener(ServiceContext serviceContext, IService serviceImplementation)
    content.vb: Public Overrides Function CreateServiceRemotingListener(serviceContext As ServiceContext, serviceImplementation As IService) As IServiceRemotingListener
    parameters:
    - id: serviceContext
      type: ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: serviceImplementation
      type: IService
      description: "\nThe service implementation object.\n"
    return:
      type: IServiceRemotingListener
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref> for the specified service.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  id: CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  langs:
  - csharp
  - vb
  name: CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  nameWithType: WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: CreateServiceRemotingClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/WcfServiceRemotingProviderAttribute.cs
    startLine: 102
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf
  summary: "\nCreates a service remoting client factory that can be used by the \n<see cref=\"!:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory\"></see> \nto create a proxy for the remoted interface of the service.\n"
  example: []
  syntax:
    content: public override IServiceRemotingClientFactory CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient callbackClient)
    content.vb: Public Overrides Function CreateServiceRemotingClientFactory(callbackClient As IServiceRemotingCallbackClient) As IServiceRemotingClientFactory
    parameters:
    - id: callbackClient
      type: IServiceRemotingCallbackClient
      description: "\nClient implementation where the callbacks should be dispatched.\n"
    return:
      type: IServiceRemotingClientFactory
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Wcf
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Wcf
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Wcf
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
  isExternal: false
  name: WcfServiceRemotingProviderAttribute
  nameWithType: WcfServiceRemotingProviderAttribute
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.#ctor
  isExternal: false
  name: WcfServiceRemotingProviderAttribute
  nameWithType: WcfServiceRemotingProviderAttribute.WcfServiceRemotingProviderAttribute
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.WcfServiceRemotingProviderAttribute
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize
  isExternal: false
  name: MaxMessageSize
  nameWithType: WcfServiceRemotingProviderAttribute.MaxMessageSize
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.MaxMessageSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  isExternal: false
  name: OpenTimeoutInMilliSeconds
  nameWithType: WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.OpenTimeoutInMilliSeconds
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  isExternal: false
  name: CloseTimeoutInMilliSeconds
  nameWithType: WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CloseTimeoutInMilliSeconds
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  isExternal: false
  name: WcfServiceRemotingListener
  nameWithType: WcfServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener
  isExternal: false
  name: CreateServiceRemotingListener
  nameWithType: WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingListener
- uid: ServiceContext
  isExternal: true
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: ServiceContext
- uid: IService
  isExternal: true
  name: IService
  nameWithType: IService
  fullName: IService
- uid: IServiceRemotingListener
  commentId: '!:IServiceRemotingListener'
  isExternal: true
  name: IServiceRemotingListener
  nameWithType: IServiceRemotingListener
  fullName: IServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  isExternal: false
  name: WcfServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory
  isExternal: false
  name: CreateServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.WcfServiceRemotingProviderAttribute.CreateServiceRemotingClientFactory
- uid: IServiceRemotingCallbackClient
  isExternal: true
  name: IServiceRemotingCallbackClient
  nameWithType: IServiceRemotingCallbackClient
  fullName: IServiceRemotingCallbackClient
- uid: IServiceRemotingClientFactory
  commentId: '!:IServiceRemotingClientFactory'
  isExternal: true
  name: IServiceRemotingClientFactory
  nameWithType: IServiceRemotingClientFactory
  fullName: IServiceRemotingClientFactory
