### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  id: WcfExceptionHandler
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.#ctor
  langs:
  - csharp
  - vb
  name: WcfExceptionHandler
  nameWithType: WcfExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfExceptionHandler.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: WcfExceptionHandler
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfExceptionHandler.cs
    startLine: 81
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nThis class provide handling of WCF exceptions encountered in communicating with \na service fabric service that is using WCF based communication listener.\n"
  remarks: "\nThe exceptions are handled as per the description below:\n<table><tbody><tr><td></td><td>\n    The following exceptions indicate service failover. These exceptions are handled by returning <see cref=\"!:ExceptionHandlingRetryResult\"></see> from the \n<see cref=\"!:IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)\"></see> method.\nThe <see cref=\"!:ExceptionHandlingRetryResult.IsTransient\"></see> property of the <see cref=\"!:ExceptionHandlingRetryResult\"></see> is set to false, \nthe <see cref=\"!:ExceptionHandlingRetryResult.RetryDelay\"></see>  property is set to a random value up to <see cref=\"!:OperationRetrySettings.MaxRetryBackoffIntervalOnNonTransientErrors\"></see> \nand <see cref=\"!:ExceptionHandlingRetryResult.MaxRetryCount\"></see> property is set to <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n<ul><li><see cref=\"!:EndpointNotFoundException\"></see></li><li><see cref=\"!:CommunicationObjectAbortedException\"></see></li><li><see cref=\"!:CommunicationObjectFaultedException\"></see></li><li><xref href=\"System.ObjectDisposedException\" data-throw-if-not-resolved=\"false\"></xref></li><li><see cref=\"!:ChannelTerminatedException\"></see></li></ul>\n</td></tr><tr><td></td><td>\n    The following exceptions indicate transient error conditions and handled by returning <see cref=\"!:ExceptionHandlingRetryResult\"></see> from the \n<see cref=\"!:IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)\"></see> method.\nThe <see cref=\"!:ExceptionHandlingRetryResult.IsTransient\"></see> property of the <see cref=\"!:ExceptionHandlingRetryResult\"></see> is set to true, \nthe <see cref=\"!:ExceptionHandlingRetryResult.RetryDelay\"></see>  property is set to a random value up to <see cref=\"!:OperationRetrySettings.MaxRetryBackoffIntervalOnTransientErrors\"></see> \nand <see cref=\"!:ExceptionHandlingRetryResult.MaxRetryCount\"></see> property is set to <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n<ul><li><xref href=\"System.TimeoutException\" data-throw-if-not-resolved=\"false\"></xref></li><li><see cref=\"!:ServerTooBusyException\"></see></li></ul>\n</td></tr><tr><td></td><td>\n    The following exceptions indicate mismatch in the binding or contract between the client and the service. \n    These exceptions are handled by returning <see cref=\"!:ExceptionHandlingThrowResult\"></see> from the \n<see cref=\"!:IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)\"></see> method.\n<ul><li><see cref=\"!:ActionNotSupportedException\"></see></li><li><see cref=\"!:AddressAccessDeniedException\"></see></li><li><see cref=\"!:SecurityAccessDeniedException\"></see></li></ul>\n</td></tr><tr><td></td><td>\n    The following exceptions are indicate an error from the service. \n    They are handled by returning <see cref=\"!:ExceptionHandlingThrowResult\"></see> from the \n<see cref=\"!:IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)\"></see> method.\n<ul><li><see cref=\"!:FaultException\"></see></li></ul>\n</td></tr><tr><td></td><td>\n    All other exceptions that are <see cref=\"!:CommunicationException\"></see>, but not <see cref=\"!:FaultException\"></see> are handled by returning \n<see cref=\"!:ExceptionHandlingRetryResult\"></see> from the \n<see cref=\"!:IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)\"></see> method.\nThe <see cref=\"!:ExceptionHandlingRetryResult.IsTransient\"></see> property of the <see cref=\"!:ExceptionHandlingRetryResult\"></see> is set to true, \nthe <see cref=\"!:ExceptionHandlingRetryResult.RetryDelay\"></see>  property is set to a random value up to <see cref=\"!:OperationRetrySettings.MaxRetryBackoffIntervalOnTransientErrors\"></see> \nand <see cref=\"!:ExceptionHandlingRetryResult.MaxRetryCount\"></see> property is set to <see cref=\"!:OperationRetrySettings.DefaultMaxRetryCount\"></see>.\n</td></tr></tbody></table>\n"
  example: []
  syntax:
    content: 'public class WcfExceptionHandler : IExceptionHandler'
    content.vb: >-
      Public Class WcfExceptionHandler
          Inherits IExceptionHandler
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.#ctor
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  langs:
  - csharp
  - vb
  name: WcfExceptionHandler()
  nameWithType: WcfExceptionHandler.WcfExceptionHandler()
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.WcfExceptionHandler()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfExceptionHandler.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfExceptionHandler.cs
    startLine: 86
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nInitializes a new instance of WcfExceptionHandler class.\n"
  example: []
  syntax:
    content: public WcfExceptionHandler()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfExceptionHandler>()
  nameWithType: ByteArraySerializer.Serialize<WcfExceptionHandler>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfExceptionHandler)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler)()
  name.vb: Serialize(Of WcfExceptionHandler)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfExceptionHandler>
    nameWithType: ByteArraySerializer.Serialize<WcfExceptionHandler>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfExceptionHandler)
    nameWithType: ByteArraySerializer.Serialize(Of WcfExceptionHandler)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.#ctor
  isExternal: false
  name: WcfExceptionHandler
  nameWithType: WcfExceptionHandler.WcfExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler.WcfExceptionHandler
