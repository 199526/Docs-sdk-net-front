### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.DeployedServicePackageHealthReport
  commentId: T:System.Fabric.Health.DeployedServicePackageHealthReport
  id: DeployedServicePackageHealthReport
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.DeployedServicePackageHealthReport.#ctor(Uri,System.String,System.String,System.Fabric.Health.HealthInformation)
  - System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName
  - System.Fabric.Health.DeployedServicePackageHealthReport.NodeName
  - System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName
  langs:
  - csharp
  - vb
  name: DeployedServicePackageHealthReport
  nameWithType: DeployedServicePackageHealthReport
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: DeployedServicePackageHealthReport
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents a health report to be applied on the deployed service package health entity. </p>\n"
  remarks: The report can be sent to the health store using <xref href="System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class DeployedServicePackageHealthReport : HealthReport'
    content.vb: >-
      Public Class DeployedServicePackageHealthReport
          Inherits HealthReport
  inheritance:
  - System.Object
  - System.Fabric.Health.HealthReport
  inheritedMembers:
  - System.Fabric.Health.HealthReport.Kind
  - System.Fabric.Health.HealthReport.HealthInformation
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.#ctor(Uri,System.String,System.String,System.Fabric.Health.HealthInformation)
  commentId: M:System.Fabric.Health.DeployedServicePackageHealthReport.#ctor(Uri,System.String,System.String,System.Fabric.Health.HealthInformation)
  id: '#ctor(Uri,System.String,System.String,System.Fabric.Health.HealthInformation)'
  parent: System.Fabric.Health.DeployedServicePackageHealthReport
  langs:
  - csharp
  - vb
  name: DeployedServicePackageHealthReport(Uri, String, String, HealthInformation)
  nameWithType: DeployedServicePackageHealthReport.DeployedServicePackageHealthReport(Uri, String, String, HealthInformation)
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.DeployedServicePackageHealthReport(Uri, System.String, System.String, System.Fabric.Health.HealthInformation)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Health.DeployedServicePackageHealthReport\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public DeployedServicePackageHealthReport(Uri applicationName, string serviceManifestName, string nodeName, HealthInformation healthInformation)
    content.vb: Public Sub New(applicationName As Uri, serviceManifestName As String, nodeName As String, healthInformation As HealthInformation)
    parameters:
    - id: applicationName
      type: Uri
      description: "\n<p>The application name. Cannot be null or empty.</p>\n"
    - id: serviceManifestName
      type: System.String
      description: "\n<p>Service manifest name. Cannot be null or empty.</p>\n"
    - id: nodeName
      type: System.String
      description: "\n<p>The node name. Cannot be null or empty.</p>\n"
    - id: healthInformation
      type: System.Fabric.Health.HealthInformation
      description: "\n<p>The <xref href=\"System.Fabric.Health.HealthInformation\" data-throw-if-not-resolved=\"false\"></xref> which describes the report fields, like sourceId, property, health state. Required.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthReport.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The application name cannot be null.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Node name is invalid.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Node name cannot be null.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Health information cannot be null.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Service manifest name cannot be null.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Service manifest name is invalid.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName
  commentId: P:System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Health.DeployedServicePackageHealthReport
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: DeployedServicePackageHealthReport.ApplicationName
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the application name.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>The <see cref=\"!:System.Uri\"></see> representing the application name.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName
  commentId: P:System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName
  id: ServiceManifestName
  parent: System.Fabric.Health.DeployedServicePackageHealthReport
  langs:
  - csharp
  - vb
  name: ServiceManifestName
  nameWithType: DeployedServicePackageHealthReport.ServiceManifestName
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ServiceManifestName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
    startLine: 75
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the service manifest name.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestName { get; }
    content.vb: Public ReadOnly Property ServiceManifestName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the service manifest name.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.NodeName
  commentId: P:System.Fabric.Health.DeployedServicePackageHealthReport.NodeName
  id: NodeName
  parent: System.Fabric.Health.DeployedServicePackageHealthReport
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: DeployedServicePackageHealthReport.NodeName
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthReport.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the name of the node where the deployed service package is running.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the node name.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthReport.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)
  commentId: M:System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.HealthReport
  commentId: T:System.Fabric.Health.HealthReport
  parent: System.Fabric.Health
  isExternal: false
  name: HealthReport
  nameWithType: HealthReport
  fullName: System.Fabric.Health.HealthReport
- uid: System.Fabric.Health.HealthReport.Kind
  commentId: P:System.Fabric.Health.HealthReport.Kind
  parent: System.Fabric.Health.HealthReport
  isExternal: false
  name: Kind
  nameWithType: HealthReport.Kind
  fullName: System.Fabric.Health.HealthReport.Kind
- uid: System.Fabric.Health.HealthReport.HealthInformation
  commentId: P:System.Fabric.Health.HealthReport.HealthInformation
  parent: System.Fabric.Health.HealthReport
  isExternal: false
  name: HealthInformation
  nameWithType: HealthReport.HealthInformation
  fullName: System.Fabric.Health.HealthReport.HealthInformation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Health.DeployedServicePackageHealthReport
  commentId: T:System.Fabric.Health.DeployedServicePackageHealthReport
  isExternal: false
  name: DeployedServicePackageHealthReport
  nameWithType: DeployedServicePackageHealthReport
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.#ctor*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthReport.#ctor
  isExternal: false
  name: DeployedServicePackageHealthReport
  nameWithType: DeployedServicePackageHealthReport.DeployedServicePackageHealthReport
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.DeployedServicePackageHealthReport
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: DeployedServicePackageHealthReport.ApplicationName
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.ApplicationName
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName
  isExternal: false
  name: ServiceManifestName
  nameWithType: DeployedServicePackageHealthReport.ServiceManifestName
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.ServiceManifestName
- uid: System.Fabric.Health.DeployedServicePackageHealthReport.NodeName*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthReport.NodeName
  isExternal: false
  name: NodeName
  nameWithType: DeployedServicePackageHealthReport.NodeName
  fullName: System.Fabric.Health.DeployedServicePackageHealthReport.NodeName
