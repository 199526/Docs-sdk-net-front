### YamlMime:ManagedReference
items:
- uid: System.Fabric.Repair.NodeImpact
  commentId: T:System.Fabric.Repair.NodeImpact
  id: NodeImpact
  parent: System.Fabric.Repair
  children:
  - System.Fabric.Repair.NodeImpact.#ctor
  - System.Fabric.Repair.NodeImpact.#ctor(System.String,System.Fabric.Repair.NodeImpactLevel)
  - System.Fabric.Repair.NodeImpact.ImpactLevel
  - System.Fabric.Repair.NodeImpact.NodeName
  - System.Fabric.Repair.NodeImpact.ToString
  langs:
  - csharp
  - vb
  name: NodeImpact
  nameWithType: NodeImpact
  fullName: System.Fabric.Repair.NodeImpact
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: NodeImpact
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Describes the expected impact of a repair to a particular node.</p>\n<p>This class supports the Service Fabric platform; it is not meant to be called directly from your code.</p>\n"
  example: []
  syntax:
    content: public sealed class NodeImpact
    content.vb: Public NotInheritable Class NodeImpact
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Repair.NodeImpact.#ctor
  commentId: M:System.Fabric.Repair.NodeImpact.#ctor
  id: '#ctor'
  parent: System.Fabric.Repair.NodeImpact
  langs:
  - csharp
  - vb
  name: NodeImpact()
  nameWithType: NodeImpact.NodeImpact()
  fullName: System.Fabric.Repair.NodeImpact.NodeImpact()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Repair.NodeImpact\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public NodeImpact()
    content.vb: Public Sub New
  overload: System.Fabric.Repair.NodeImpact.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.NodeImpact.#ctor(System.String,System.Fabric.Repair.NodeImpactLevel)
  commentId: M:System.Fabric.Repair.NodeImpact.#ctor(System.String,System.Fabric.Repair.NodeImpactLevel)
  id: '#ctor(System.String,System.Fabric.Repair.NodeImpactLevel)'
  parent: System.Fabric.Repair.NodeImpact
  langs:
  - csharp
  - vb
  name: NodeImpact(String, NodeImpactLevel)
  nameWithType: NodeImpact.NodeImpact(String, NodeImpactLevel)
  fullName: System.Fabric.Repair.NodeImpact.NodeImpact(System.String, System.Fabric.Repair.NodeImpactLevel)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
    startLine: 30
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Repair.NodeImpact\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public NodeImpact(string nodeName, NodeImpactLevel impactLevel)
    content.vb: Public Sub New(nodeName As String, impactLevel As NodeImpactLevel)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the impacted node.</p>\n"
    - id: impactLevel
      type: System.Fabric.Repair.NodeImpactLevel
      description: "\n<p>The level of impact expected.</p>\n"
  overload: System.Fabric.Repair.NodeImpact.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.NodeImpact.NodeName
  commentId: P:System.Fabric.Repair.NodeImpact.NodeName
  id: NodeName
  parent: System.Fabric.Repair.NodeImpact
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: NodeImpact.NodeName
  fullName: System.Fabric.Repair.NodeImpact.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
    startLine: 42
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets the name of the impacted node.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; set; }
    content.vb: Public Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the impacted node.</p>\n"
  overload: System.Fabric.Repair.NodeImpact.NodeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.NodeImpact.ImpactLevel
  commentId: P:System.Fabric.Repair.NodeImpact.ImpactLevel
  id: ImpactLevel
  parent: System.Fabric.Repair.NodeImpact
  langs:
  - csharp
  - vb
  name: ImpactLevel
  nameWithType: NodeImpact.ImpactLevel
  fullName: System.Fabric.Repair.NodeImpact.ImpactLevel
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ImpactLevel
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets the level of impact expected.</p>\n"
  example: []
  syntax:
    content: public NodeImpactLevel ImpactLevel { get; set; }
    content.vb: Public Property ImpactLevel As NodeImpactLevel
    parameters: []
    return:
      type: System.Fabric.Repair.NodeImpactLevel
      description: "\n<p>The level of impact expected.</p>\n"
  overload: System.Fabric.Repair.NodeImpact.ImpactLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.NodeImpact.ToString
  commentId: M:System.Fabric.Repair.NodeImpact.ToString
  id: ToString
  parent: System.Fabric.Repair.NodeImpact
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NodeImpact.ToString()
  fullName: System.Fabric.Repair.NodeImpact.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeImpact.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Converts the value of the current object to a string representation.</p>\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representation of the node name and impact level.</p>\n"
  overridden: System.Object.ToString
  overload: System.Fabric.Repair.NodeImpact.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Repair
  commentId: N:System.Fabric.Repair
  isExternal: false
  name: System.Fabric.Repair
  nameWithType: System.Fabric.Repair
  fullName: System.Fabric.Repair
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Repair.NodeImpact
  commentId: T:System.Fabric.Repair.NodeImpact
  isExternal: false
  name: NodeImpact
  nameWithType: NodeImpact
  fullName: System.Fabric.Repair.NodeImpact
- uid: System.Fabric.Repair.NodeImpact.#ctor*
  commentId: Overload:System.Fabric.Repair.NodeImpact.#ctor
  isExternal: false
  name: NodeImpact
  nameWithType: NodeImpact.NodeImpact
  fullName: System.Fabric.Repair.NodeImpact.NodeImpact
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Repair.NodeImpactLevel
  commentId: T:System.Fabric.Repair.NodeImpactLevel
  parent: System.Fabric.Repair
  isExternal: false
  name: NodeImpactLevel
  nameWithType: NodeImpactLevel
  fullName: System.Fabric.Repair.NodeImpactLevel
- uid: System.Fabric.Repair.NodeImpact.NodeName*
  commentId: Overload:System.Fabric.Repair.NodeImpact.NodeName
  isExternal: false
  name: NodeName
  nameWithType: NodeImpact.NodeName
  fullName: System.Fabric.Repair.NodeImpact.NodeName
- uid: System.Fabric.Repair.NodeImpact.ImpactLevel*
  commentId: Overload:System.Fabric.Repair.NodeImpact.ImpactLevel
  isExternal: false
  name: ImpactLevel
  nameWithType: NodeImpact.ImpactLevel
  fullName: System.Fabric.Repair.NodeImpact.ImpactLevel
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Repair.NodeImpact.ToString*
  commentId: Overload:System.Fabric.Repair.NodeImpact.ToString
  isExternal: false
  name: ToString
  nameWithType: NodeImpact.ToString
  fullName: System.Fabric.Repair.NodeImpact.ToString
