### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  id: IServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  children: []
  langs:
  - csharp
  - vb
  name: IServiceRemotingListener
  nameWithType: IServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/IServiceRemotingListener.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: IServiceRemotingListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/IServiceRemotingListener.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nDefines a base communication interface that enables interface remoting for \nstateless and stateful services.\n"
  example: []
  syntax:
    content: 'public interface IServiceRemotingListener : ICommunicationListener'
    content.vb: >-
      Public Interface IServiceRemotingListener
          Inherits ICommunicationListener
  inheritedMembers:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: ICommunicationListener
  nameWithType: ICommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime
