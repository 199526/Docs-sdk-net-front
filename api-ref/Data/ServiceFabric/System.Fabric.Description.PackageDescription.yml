### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.PackageDescription
  commentId: T:System.Fabric.Description.PackageDescription
  id: PackageDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.PackageDescription.Name
  - System.Fabric.Description.PackageDescription.Path
  - System.Fabric.Description.PackageDescription.ServiceManifestName
  - System.Fabric.Description.PackageDescription.ServiceManifestVersion
  - System.Fabric.Description.PackageDescription.Version
  langs:
  - csharp
  - vb
  name: PackageDescription
  nameWithType: PackageDescription
  fullName: System.Fabric.Description.PackageDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: PackageDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
    startLine: 11
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents a base class for all package descriptions.</p>\n"
  example: []
  syntax:
    content: public abstract class PackageDescription
    content.vb: Public MustInherit Class PackageDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Description.PackageDescription.Name
  commentId: P:System.Fabric.Description.PackageDescription.Name
  id: Name
  parent: System.Fabric.Description.PackageDescription
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PackageDescription.Name
  fullName: System.Fabric.Description.PackageDescription.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
    startLine: 23
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the name of the package.</p>\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.PackageDescription.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.PackageDescription.Version
  commentId: P:System.Fabric.Description.PackageDescription.Version
  id: Version
  parent: System.Fabric.Description.PackageDescription
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: PackageDescription.Version
  fullName: System.Fabric.Description.PackageDescription.Version
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Version
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the version of the package.</p>\n"
  example: []
  syntax:
    content: public string Version { get; }
    content.vb: Public ReadOnly Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.PackageDescription.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.PackageDescription.ServiceManifestName
  commentId: P:System.Fabric.Description.PackageDescription.ServiceManifestName
  id: ServiceManifestName
  parent: System.Fabric.Description.PackageDescription
  langs:
  - csharp
  - vb
  name: ServiceManifestName
  nameWithType: PackageDescription.ServiceManifestName
  fullName: System.Fabric.Description.PackageDescription.ServiceManifestName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ServiceManifestName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the name of the service manifest.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestName { get; }
    content.vb: Public ReadOnly Property ServiceManifestName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.PackageDescription.ServiceManifestName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.PackageDescription.ServiceManifestVersion
  commentId: P:System.Fabric.Description.PackageDescription.ServiceManifestVersion
  id: ServiceManifestVersion
  parent: System.Fabric.Description.PackageDescription
  langs:
  - csharp
  - vb
  name: ServiceManifestVersion
  nameWithType: PackageDescription.ServiceManifestVersion
  fullName: System.Fabric.Description.PackageDescription.ServiceManifestVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ServiceManifestVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the service manifest version.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestVersion { get; }
    content.vb: Public ReadOnly Property ServiceManifestVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.PackageDescription.ServiceManifestVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.PackageDescription.Path
  commentId: P:System.Fabric.Description.PackageDescription.Path
  id: Path
  parent: System.Fabric.Description.PackageDescription
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: PackageDescription.Path
  fullName: System.Fabric.Description.PackageDescription.Path
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Path
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PackageDescription.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the path to the package.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Path property in System.Fabric.CodePackage, System.Fabric.ConfigurationPackage or System.Fabric.DataPackage types.")]

      public string Path { get; }
    content.vb: >-
      <Obsolete("Use Path property in System.Fabric.CodePackage, System.Fabric.ConfigurationPackage or System.Fabric.DataPackage types.")>

      Public ReadOnly Property Path As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.PackageDescription.Path*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Path property in System.Fabric.CodePackage, System.Fabric.ConfigurationPackage or System.Fabric.DataPackage types.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Description.PackageDescription.Name*
  commentId: Overload:System.Fabric.Description.PackageDescription.Name
  isExternal: false
  name: Name
  nameWithType: PackageDescription.Name
  fullName: System.Fabric.Description.PackageDescription.Name
- uid: System.Fabric.Description.PackageDescription.Version*
  commentId: Overload:System.Fabric.Description.PackageDescription.Version
  isExternal: false
  name: Version
  nameWithType: PackageDescription.Version
  fullName: System.Fabric.Description.PackageDescription.Version
- uid: System.Fabric.Description.PackageDescription.ServiceManifestName*
  commentId: Overload:System.Fabric.Description.PackageDescription.ServiceManifestName
  isExternal: false
  name: ServiceManifestName
  nameWithType: PackageDescription.ServiceManifestName
  fullName: System.Fabric.Description.PackageDescription.ServiceManifestName
- uid: System.Fabric.Description.PackageDescription.ServiceManifestVersion*
  commentId: Overload:System.Fabric.Description.PackageDescription.ServiceManifestVersion
  isExternal: false
  name: ServiceManifestVersion
  nameWithType: PackageDescription.ServiceManifestVersion
  fullName: System.Fabric.Description.PackageDescription.ServiceManifestVersion
- uid: System.Fabric.Description.PackageDescription.Path*
  commentId: Overload:System.Fabric.Description.PackageDescription.Path
  isExternal: false
  name: Path
  nameWithType: PackageDescription.Path
  fullName: System.Fabric.Description.PackageDescription.Path
