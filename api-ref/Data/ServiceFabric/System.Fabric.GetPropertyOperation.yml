### YamlMime:ManagedReference
items:
- uid: System.Fabric.GetPropertyOperation
  commentId: T:System.Fabric.GetPropertyOperation
  id: GetPropertyOperation
  parent: System.Fabric
  children:
  - System.Fabric.GetPropertyOperation.#ctor(System.String)
  - System.Fabric.GetPropertyOperation.#ctor(System.String,System.Boolean)
  - System.Fabric.GetPropertyOperation.IncludeValue
  langs:
  - csharp
  - vb
  name: GetPropertyOperation
  nameWithType: GetPropertyOperation
  fullName: System.Fabric.GetPropertyOperation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: GetPropertyOperation
    path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents a <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> that gets the specified property if it exists.</p>\n"
  remarks: "\n<p>Note that if one <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> fails, the entire batch will fail and not be committed.</p>\n"
  example: []
  syntax:
    content: 'public sealed class GetPropertyOperation : PropertyBatchOperation'
    content.vb: >-
      Public NotInheritable Class GetPropertyOperation
          Inherits PropertyBatchOperation
  inheritance:
  - System.Object
  - System.Fabric.PropertyBatchOperation
  inheritedMembers:
  - System.Fabric.PropertyBatchOperation.PropertyName
  - System.Fabric.PropertyBatchOperation.Kind
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.GetPropertyOperation.#ctor(System.String)
  commentId: M:System.Fabric.GetPropertyOperation.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Fabric.GetPropertyOperation
  langs:
  - csharp
  - vb
  name: GetPropertyOperation(String)
  nameWithType: GetPropertyOperation.GetPropertyOperation(String)
  fullName: System.Fabric.GetPropertyOperation.GetPropertyOperation(System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
    startLine: 26
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Instantiates a new instance of the <xref href=\"System.Fabric.GetPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with specified property name.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Fabric.GetPropertyOperation.IncludeValue\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>true</strong>.</p>\n"
  example: []
  syntax:
    content: public GetPropertyOperation(string propertyName)
    content.vb: Public Sub New(propertyName As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
  overload: System.Fabric.GetPropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.GetPropertyOperation.#ctor(System.String,System.Boolean)
  commentId: M:System.Fabric.GetPropertyOperation.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Fabric.GetPropertyOperation
  langs:
  - csharp
  - vb
  name: GetPropertyOperation(String, Boolean)
  nameWithType: GetPropertyOperation.GetPropertyOperation(String, Boolean)
  fullName: System.Fabric.GetPropertyOperation.GetPropertyOperation(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.GetPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> with specified property name and include value flag.</p>\n"
  example: []
  syntax:
    content: public GetPropertyOperation(string propertyName, bool includeValue)
    content.vb: Public Sub New(propertyName As String, includeValue As Boolean)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: includeValue
      type: System.Boolean
      description: "\n<p>Specifies whether values should be included in the return or only metadata should be returned.</p>\n"
  overload: System.Fabric.GetPropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.GetPropertyOperation.IncludeValue
  commentId: P:System.Fabric.GetPropertyOperation.IncludeValue
  id: IncludeValue
  parent: System.Fabric.GetPropertyOperation
  langs:
  - csharp
  - vb
  name: IncludeValue
  nameWithType: GetPropertyOperation.IncludeValue
  fullName: System.Fabric.GetPropertyOperation.IncludeValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: IncludeValue
    path: src/prod/src/managed/Api/src/System/Fabric/GetPropertyOperation.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets a value indicating whether the value of the property is returned together with the metadata.</p>\n"
  example: []
  syntax:
    content: public bool IncludeValue { get; }
    content.vb: Public ReadOnly Property IncludeValue As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the property should be included; <strong>false</strong> otherwise.</p>\n"
  overload: System.Fabric.GetPropertyOperation.IncludeValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.PropertyBatchOperation
  commentId: T:System.Fabric.PropertyBatchOperation
  parent: System.Fabric
  isExternal: false
  name: PropertyBatchOperation
  nameWithType: PropertyBatchOperation
  fullName: System.Fabric.PropertyBatchOperation
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.PropertyBatchOperation.PropertyName
  commentId: P:System.Fabric.PropertyBatchOperation.PropertyName
  parent: System.Fabric.PropertyBatchOperation
  isExternal: false
  name: PropertyName
  nameWithType: PropertyBatchOperation.PropertyName
  fullName: System.Fabric.PropertyBatchOperation.PropertyName
- uid: System.Fabric.PropertyBatchOperation.Kind
  commentId: P:System.Fabric.PropertyBatchOperation.Kind
  parent: System.Fabric.PropertyBatchOperation
  isExternal: false
  name: Kind
  nameWithType: PropertyBatchOperation.Kind
  fullName: System.Fabric.PropertyBatchOperation.Kind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.GetPropertyOperation
  commentId: T:System.Fabric.GetPropertyOperation
  isExternal: false
  name: GetPropertyOperation
  nameWithType: GetPropertyOperation
  fullName: System.Fabric.GetPropertyOperation
- uid: System.Fabric.GetPropertyOperation.IncludeValue
  commentId: P:System.Fabric.GetPropertyOperation.IncludeValue
- uid: System.Fabric.GetPropertyOperation.#ctor*
  commentId: Overload:System.Fabric.GetPropertyOperation.#ctor
  isExternal: false
  name: GetPropertyOperation
  nameWithType: GetPropertyOperation.GetPropertyOperation
  fullName: System.Fabric.GetPropertyOperation.GetPropertyOperation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.GetPropertyOperation.IncludeValue*
  commentId: Overload:System.Fabric.GetPropertyOperation.IncludeValue
  isExternal: false
  name: IncludeValue
  nameWithType: GetPropertyOperation.IncludeValue
  fullName: System.Fabric.GetPropertyOperation.IncludeValue
