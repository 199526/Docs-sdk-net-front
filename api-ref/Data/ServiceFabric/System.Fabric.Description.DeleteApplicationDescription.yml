### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.DeleteApplicationDescription
  commentId: T:System.Fabric.Description.DeleteApplicationDescription
  id: DeleteApplicationDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.DeleteApplicationDescription.#ctor(Uri)
  - System.Fabric.Description.DeleteApplicationDescription.ApplicationName
  - System.Fabric.Description.DeleteApplicationDescription.ForceDelete
  langs:
  - csharp
  - vb
  name: DeleteApplicationDescription
  nameWithType: DeleteApplicationDescription
  fullName: System.Fabric.Description.DeleteApplicationDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: DeleteApplicationDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes an application to be deleted by using \n<xref href=\"System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Fabric.Description.DeleteApplicationDescription%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class DeleteApplicationDescription
    content.vb: Public NotInheritable Class DeleteApplicationDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.DeleteApplicationDescription.#ctor(Uri)
  commentId: M:System.Fabric.Description.DeleteApplicationDescription.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: System.Fabric.Description.DeleteApplicationDescription
  langs:
  - csharp
  - vb
  name: DeleteApplicationDescription(Uri)
  nameWithType: DeleteApplicationDescription.DeleteApplicationDescription(Uri)
  fullName: System.Fabric.Description.DeleteApplicationDescription.DeleteApplicationDescription(Uri)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates an instance of <xref href=\"System.Fabric.Description.DeleteApplicationDescription\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  example: []
  syntax:
    content: public DeleteApplicationDescription(Uri applicationName)
    content.vb: Public Sub New(applicationName As Uri)
    parameters:
    - id: applicationName
      type: Uri
      description: "\n<p>URI of the application instance name.</p>\n"
  overload: System.Fabric.Description.DeleteApplicationDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.DeleteApplicationDescription.ApplicationName
  commentId: P:System.Fabric.Description.DeleteApplicationDescription.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Description.DeleteApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: DeleteApplicationDescription.ApplicationName
  fullName: System.Fabric.Description.DeleteApplicationDescription.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the URI name of the application instance.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>The application name.</p>\n"
  overload: System.Fabric.Description.DeleteApplicationDescription.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.DeleteApplicationDescription.ForceDelete
  commentId: P:System.Fabric.Description.DeleteApplicationDescription.ForceDelete
  id: ForceDelete
  parent: System.Fabric.Description.DeleteApplicationDescription
  langs:
  - csharp
  - vb
  name: ForceDelete
  nameWithType: DeleteApplicationDescription.ForceDelete
  fullName: System.Fabric.Description.DeleteApplicationDescription.ForceDelete
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: ForceDelete
    path: src/prod/src/managed/Api/src/System/Fabric/Description/DeleteApplicationDescription.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the flag that specifies whether the application should be given a chance to gracefully clean up its state and close.</p>\n"
  example: []
  syntax:
    content: public bool ForceDelete { get; set; }
    content.vb: Public Property ForceDelete As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Flag that specifies whether the application should be given a chance to gracefully clean up its state and close.</p>\n<p>If the ForceDelete flag is set then the application won't be closed gracefully and stateful services in it may leak persisted state.</p>\n"
  overload: System.Fabric.Description.DeleteApplicationDescription.ForceDelete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Fabric.Description.DeleteApplicationDescription,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.ApplicationManagementClient.DeleteApplicationAsync(System.Fabric.Description.DeleteApplicationDescription,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Description.DeleteApplicationDescription
  commentId: T:System.Fabric.Description.DeleteApplicationDescription
  parent: System.Fabric.Description
  isExternal: false
  name: DeleteApplicationDescription
  nameWithType: DeleteApplicationDescription
  fullName: System.Fabric.Description.DeleteApplicationDescription
- uid: System.Fabric.Description.DeleteApplicationDescription.#ctor*
  commentId: Overload:System.Fabric.Description.DeleteApplicationDescription.#ctor
  isExternal: false
  name: DeleteApplicationDescription
  nameWithType: DeleteApplicationDescription.DeleteApplicationDescription
  fullName: System.Fabric.Description.DeleteApplicationDescription.DeleteApplicationDescription
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: System.Fabric.Description.DeleteApplicationDescription.ApplicationName*
  commentId: Overload:System.Fabric.Description.DeleteApplicationDescription.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: DeleteApplicationDescription.ApplicationName
  fullName: System.Fabric.Description.DeleteApplicationDescription.ApplicationName
- uid: System.Fabric.Description.DeleteApplicationDescription.ForceDelete*
  commentId: Overload:System.Fabric.Description.DeleteApplicationDescription.ForceDelete
  isExternal: false
  name: ForceDelete
  nameWithType: DeleteApplicationDescription.ForceDelete
  fullName: System.Fabric.Description.DeleteApplicationDescription.ForceDelete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
