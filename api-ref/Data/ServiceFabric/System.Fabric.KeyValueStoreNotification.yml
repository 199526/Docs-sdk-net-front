### YamlMime:ManagedReference
items:
- uid: System.Fabric.KeyValueStoreNotification
  commentId: T:System.Fabric.KeyValueStoreNotification
  id: KeyValueStoreNotification
  parent: System.Fabric
  children:
  - System.Fabric.KeyValueStoreNotification.IsDelete
  - System.Fabric.KeyValueStoreNotification.Metadata
  - System.Fabric.KeyValueStoreNotification.Value
  langs:
  - csharp
  - vb
  name: KeyValueStoreNotification
  nameWithType: KeyValueStoreNotification
  fullName: System.Fabric.KeyValueStoreNotification
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: KeyValueStoreNotification
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Contains all the information for a replicated operation received by a secondary replica.</p>\n"
  remarks: "\n<p>See <xref href=\"System.Fabric.KeyValueStoreReplica.OnReplicationOperation(System.Collections.Generic.IEnumerator%7bSystem.Fabric.KeyValueStoreNotification%7d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class KeyValueStoreNotification
    content.vb: Public NotInheritable Class KeyValueStoreNotification
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.KeyValueStoreNotification.Metadata
  commentId: P:System.Fabric.KeyValueStoreNotification.Metadata
  id: Metadata
  parent: System.Fabric.KeyValueStoreNotification
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: KeyValueStoreNotification.Metadata
  fullName: System.Fabric.KeyValueStoreNotification.Metadata
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Metadata
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the metadata describing this replicated operation.</p>\n"
  example: []
  syntax:
    content: public KeyValueStoreItemMetadata Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As KeyValueStoreItemMetadata
    parameters: []
    return:
      type: System.Fabric.KeyValueStoreItemMetadata
      description: "\n<p>The metadata describing this replicated operation.</p>\n"
  overload: System.Fabric.KeyValueStoreNotification.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.KeyValueStoreNotification.Value
  commentId: P:System.Fabric.KeyValueStoreNotification.Value
  id: Value
  parent: System.Fabric.KeyValueStoreNotification
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: KeyValueStoreNotification.Value
  fullName: System.Fabric.KeyValueStoreNotification.Value
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: Value
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the data (if any) for this replicated operation. Null if this is a delete operation.</p>\n"
  example: []
  syntax:
    content: public byte[] Value { get; }
    content.vb: Public ReadOnly Property Value As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>The data (if any) for this replicated operation. Null if this is a delete operation.</p>\n"
  overload: System.Fabric.KeyValueStoreNotification.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.KeyValueStoreNotification.IsDelete
  commentId: P:System.Fabric.KeyValueStoreNotification.IsDelete
  id: IsDelete
  parent: System.Fabric.KeyValueStoreNotification
  langs:
  - csharp
  - vb
  name: IsDelete
  nameWithType: KeyValueStoreNotification.IsDelete
  fullName: System.Fabric.KeyValueStoreNotification.IsDelete
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: IsDelete
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreNotification.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that this is a replicated delete operation.</p>\n"
  example: []
  syntax:
    content: public bool IsDelete { get; }
    content.vb: Public ReadOnly Property IsDelete As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this is a replicated delete operation; otherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.KeyValueStoreNotification.IsDelete*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.KeyValueStoreReplica.OnReplicationOperation(System.Collections.Generic.IEnumerator{System.Fabric.KeyValueStoreNotification})
  commentId: M:System.Fabric.KeyValueStoreReplica.OnReplicationOperation(System.Collections.Generic.IEnumerator{System.Fabric.KeyValueStoreNotification})
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.KeyValueStoreNotification.Metadata*
  commentId: Overload:System.Fabric.KeyValueStoreNotification.Metadata
  isExternal: false
  name: Metadata
  nameWithType: KeyValueStoreNotification.Metadata
  fullName: System.Fabric.KeyValueStoreNotification.Metadata
- uid: System.Fabric.KeyValueStoreItemMetadata
  commentId: T:System.Fabric.KeyValueStoreItemMetadata
  parent: System.Fabric
  isExternal: false
  name: KeyValueStoreItemMetadata
  nameWithType: KeyValueStoreItemMetadata
  fullName: System.Fabric.KeyValueStoreItemMetadata
- uid: System.Fabric.KeyValueStoreNotification.Value*
  commentId: Overload:System.Fabric.KeyValueStoreNotification.Value
  isExternal: false
  name: Value
  nameWithType: KeyValueStoreNotification.Value
  fullName: System.Fabric.KeyValueStoreNotification.Value
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Fabric.KeyValueStoreNotification.IsDelete*
  commentId: Overload:System.Fabric.KeyValueStoreNotification.IsDelete
  isExternal: false
  name: IsDelete
  nameWithType: KeyValueStoreNotification.IsDelete
  fullName: System.Fabric.KeyValueStoreNotification.IsDelete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
