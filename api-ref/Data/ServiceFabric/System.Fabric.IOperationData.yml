### YamlMime:ManagedReference
items:
- uid: System.Fabric.IOperationData
  commentId: T:System.Fabric.IOperationData
  id: IOperationData
  parent: System.Fabric
  children: []
  langs:
  - csharp
  - vb
  name: IOperationData
  nameWithType: IOperationData
  fullName: System.Fabric.IOperationData
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperationData.cs
      branch: release_5.3
      repo: https://msazure.visualstudio.com/One/_git/WindowsFabric
    id: IOperationData
    path: src/prod/src/managed/Api/src/System/Fabric/IOperationData.cs
    startLine: 11
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Interface for the data being transferred.</p>\n"
  example: []
  syntax:
    content: 'public interface IOperationData : IEnumerable<ArraySegment<byte>>, IEnumerable'
    content.vb: >-
      Public Interface IOperationData
          Inherits IEnumerable(Of ArraySegment(Of Byte))
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ArraySegment<Byte>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.ArraySegment<System.Byte>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ArraySegment(Of Byte)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ArraySegment(Of System.Byte)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<ArraySegment<Byte>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.ArraySegment<System.Byte>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of ArraySegment(Of Byte)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.ArraySegment(Of System.Byte)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ArraySegment<Byte>>
  nameWithType: IEnumerable<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IEnumerable<System.ArraySegment<System.Byte>>
  nameWithType.vb: IEnumerable(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ArraySegment(Of System.Byte))
  name.vb: IEnumerable(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
