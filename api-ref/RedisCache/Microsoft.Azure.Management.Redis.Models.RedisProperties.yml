### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisProperties
  id: RedisProperties
  parent: Microsoft.Azure.Management.Redis.Models
  children:
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor(Microsoft.Azure.Management.Redis.Models.Sku,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings
  - Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate
  langs:
  - csharp
  - vb
  name: RedisProperties
  nameWithType: RedisProperties
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisProperties
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nProperties supplied to CreateOrUpdate redis operation.\n"
  example: []
  syntax:
    content: public class RedisProperties
    content.vb: Public Class RedisProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: RedisProperties()
  nameWithType: RedisProperties.RedisProperties()
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisProperties()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nInitializes a new instance of the RedisProperties class.\n"
  example: []
  syntax:
    content: public RedisProperties()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor(Microsoft.Azure.Management.Redis.Models.Sku,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor(Microsoft.Azure.Management.Redis.Models.Sku,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)
  id: '#ctor(Microsoft.Azure.Management.Redis.Models.Sku,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)'
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: RedisProperties(Sku, String, IDictionary<String, String>, Nullable<Boolean>, IDictionary<String, String>, Nullable<Int32>, String, String)
  nameWithType: RedisProperties.RedisProperties(Sku, String, IDictionary<String, String>, Nullable<Boolean>, IDictionary<String, String>, Nullable<Int32>, String, String)
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisProperties(Microsoft.Azure.Management.Redis.Models.Sku, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Boolean>, System.Collections.Generic.IDictionary<System.String, System.String>, System.Nullable<System.Int32>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nInitializes a new instance of the RedisProperties class.\n"
  example: []
  syntax:
    content: public RedisProperties(Sku sku, string redisVersion = null, IDictionary<string, string> redisConfiguration = null, bool ? enableNonSslPort = null, IDictionary<string, string> tenantSettings = null, int ? shardCount = null, string subnetId = null, string staticIP = null)
    content.vb: Public Sub New(sku As Sku, redisVersion As String = Nothing, redisConfiguration As IDictionary(Of String, String) = Nothing, enableNonSslPort As Boolean? = Nothing, tenantSettings As IDictionary(Of String, String) = Nothing, shardCount As Integer? = Nothing, subnetId As String = Nothing, staticIP As String = Nothing)
    parameters:
    - id: sku
      type: Microsoft.Azure.Management.Redis.Models.Sku
    - id: redisVersion
      type: System.String
    - id: redisConfiguration
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: enableNonSslPort
      type: System.Nullable{System.Boolean}
    - id: tenantSettings
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: shardCount
      type: System.Nullable{System.Int32}
    - id: subnetId
      type: System.String
    - id: staticIP
      type: System.String
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor*
  nameWithType.vb: RedisProperties.RedisProperties(Sku, String, IDictionary(Of String, String), Nullable(Of Boolean), IDictionary(Of String, String), Nullable(Of Int32), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisProperties(Microsoft.Azure.Management.Redis.Models.Sku, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Boolean), System.Collections.Generic.IDictionary(Of System.String, System.String), System.Nullable(Of System.Int32), System.String, System.String)
  name.vb: RedisProperties(Sku, String, IDictionary(Of String, String), Nullable(Of Boolean), IDictionary(Of String, String), Nullable(Of Int32), String, String)
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion
  id: RedisVersion
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: RedisVersion
  nameWithType: RedisProperties.RedisVersion
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisVersion
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets redisVersion parameter has been deprecated. As such,\nit is no longer necessary to provide this parameter and any value\nspecified is ignored.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "redisVersion")]

      public string RedisVersion { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="redisVersion")>

      Public Property RedisVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: redisVersion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: RedisProperties.Sku
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets what sku of redis cache to deploy.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public Sku Sku { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Redis.Models.Sku
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration
  id: RedisConfiguration
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: RedisConfiguration
  nameWithType: RedisProperties.RedisConfiguration
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisConfiguration
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets all Redis Settings. Few possible keys:\nrdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value\netc.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "redisConfiguration")]

      public IDictionary<string, string> RedisConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="redisConfiguration")>

      Public Property RedisConfiguration As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: redisConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort
  id: EnableNonSslPort
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: EnableNonSslPort
  nameWithType: RedisProperties.EnableNonSslPort
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableNonSslPort
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets if the value is true, then the non-ssl redis server\nport (6379) will be enabled.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enableNonSslPort")]

      public bool ? EnableNonSslPort { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="enableNonSslPort")>

      Public Property EnableNonSslPort As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enableNonSslPort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings
  id: TenantSettings
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: TenantSettings
  nameWithType: RedisProperties.TenantSettings
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantSettings
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets tenantSettings\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tenantSettings")]

      public IDictionary<string, string> TenantSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tenantSettings")>

      Public Property TenantSettings As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tenantSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount
  id: ShardCount
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: ShardCount
  nameWithType: RedisProperties.ShardCount
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ShardCount
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets the number of shards to be created on a Premium\nCluster Cache.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "shardCount")]

      public int ? ShardCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="shardCount")>

      Public Property ShardCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: shardCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId
  id: SubnetId
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: SubnetId
  nameWithType: RedisProperties.SubnetId
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubnetId
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets the full resource ID of a subnet in a virtual network\nto deploy the redis cache in. Example format:\n/subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subnetId")]

      public string SubnetId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="subnetId")>

      Public Property SubnetId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subnetId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP
  commentId: P:Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP
  id: StaticIP
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: StaticIP
  nameWithType: RedisProperties.StaticIP
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StaticIP
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nGets or sets required when deploying a redis cache inside an\nexisting Azure Virtual Network.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "staticIP")]

      public string StaticIP { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="staticIP")>

      Public Property StaticIP As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: staticIP
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate
  commentId: M:Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Redis.Models.RedisProperties
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: RedisProperties.Validate()
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/Models/RedisProperties.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Redis.Models
  commentId: N:Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Redis.Models
  nameWithType: Microsoft.Azure.Management.Redis.Models
  fullName: Microsoft.Azure.Management.Redis.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.#ctor
  isExternal: false
  name: RedisProperties
  nameWithType: RedisProperties.RedisProperties
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisProperties
- uid: Microsoft.Azure.Management.Redis.Models.Sku
  commentId: T:Microsoft.Azure.Management.Redis.Models.Sku
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Sku
  nameWithType: Sku
  fullName: Microsoft.Azure.Management.Redis.Models.Sku
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion
  isExternal: false
  name: RedisVersion
  nameWithType: RedisProperties.RedisVersion
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisVersion
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku
  isExternal: false
  name: Sku
  nameWithType: RedisProperties.Sku
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.Sku
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration
  isExternal: false
  name: RedisConfiguration
  nameWithType: RedisProperties.RedisConfiguration
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.RedisConfiguration
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort
  isExternal: false
  name: EnableNonSslPort
  nameWithType: RedisProperties.EnableNonSslPort
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.EnableNonSslPort
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings
  isExternal: false
  name: TenantSettings
  nameWithType: RedisProperties.TenantSettings
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.TenantSettings
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount
  isExternal: false
  name: ShardCount
  nameWithType: RedisProperties.ShardCount
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.ShardCount
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId
  isExternal: false
  name: SubnetId
  nameWithType: RedisProperties.SubnetId
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.SubnetId
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP
  isExternal: false
  name: StaticIP
  nameWithType: RedisProperties.StaticIP
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.StaticIP
- uid: Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate*
  commentId: Overload:Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate
  isExternal: false
  name: Validate
  nameWithType: RedisProperties.Validate
  fullName: Microsoft.Azure.Management.Redis.Models.RedisProperties.Validate
