### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  id: RedisOperationsExtensions
  parent: Microsoft.Azure.Management.Redis
  children:
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RedisOperationsExtensions
  nameWithType: RedisOperationsExtensions
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisOperationsExtensions
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nExtension methods for RedisOperations.\n"
  example: []
  syntax:
    content: public static class RedisOperationsExtensions
    content.vb: Public Module RedisOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters)
  id: CreateOrUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IRedisOperations, String, String, RedisCreateOrUpdateParameters)
  nameWithType: RedisOperationsExtensions.CreateOrUpdate(IRedisOperations, String, String, RedisCreateOrUpdateParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate a redis cache, or replace (overwrite/recreate, with potential\ndowntime) an existing cache\n"
  example: []
  syntax:
    content: public static RedisResourceWithAccessKey CreateOrUpdate(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateOrUpdateParameters) As RedisResourceWithAccessKey
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
      description: "\nParameters supplied to the CreateOrUpdate redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IRedisOperations, String, String, RedisCreateOrUpdateParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.CreateOrUpdateAsync(IRedisOperations, String, String, RedisCreateOrUpdateParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate a redis cache, or replace (overwrite/recreate, with potential\ndowntime) an existing cache\n"
  example: []
  syntax:
    content: public static Task<RedisResourceWithAccessKey> CreateOrUpdateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateOrUpdateParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateOrUpdateParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResourceWithAccessKey)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
      description: "\nParameters supplied to the CreateOrUpdate redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.Delete(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static void Delete(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IRedisOperations, resourceGroupName As String, name As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.DeleteAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.Get(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: public static RedisResource Get(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IRedisOperations, resourceGroupName As String, name As String) As RedisResource
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResource
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.GetAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: public static Task<RedisResource> GetAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  id: ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroup(IRedisOperations, String)
  nameWithType: RedisOperationsExtensions.ListByResourceGroup(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroup
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> ListByResourceGroup(this IRedisOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroup(operations As IRedisOperations, resourceGroupName As String) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupAsync(IRedisOperations, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListByResourceGroupAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListByResourceGroupAsync(this IRedisOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupAsync(operations As IRedisOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  id: List(Microsoft.Azure.Management.Redis.IRedisOperations)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IRedisOperations)
  nameWithType: RedisOperationsExtensions.List(IRedisOperations)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> List(this IRedisOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IRedisOperations) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IRedisOperations, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListAsync(IRedisOperations, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListAsync(this IRedisOperations operations, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IRedisOperations, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeys(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.ListKeys(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeys
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static RedisListKeysResult ListKeys(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeys(operations As IRedisOperations, resourceGroupName As String, name As String) As RedisListKeysResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeysAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListKeysAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 245
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static Task<RedisListKeysResult> ListKeysAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeysAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisListKeysResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  id: RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKey(IRedisOperations, String, String, RedisRegenerateKeyParameters)
  nameWithType: RedisOperationsExtensions.RegenerateKey(IRedisOperations, String, String, RedisRegenerateKeyParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKey
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 269
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static RedisListKeysResult RegenerateKey(this IRedisOperations operations, string resourceGroupName, string name, RedisRegenerateKeyParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKey(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRegenerateKeyParameters) As RedisListKeysResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
      description: "\nSpecifies which key to reset.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  id: RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKeyAsync(IRedisOperations, String, String, RedisRegenerateKeyParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.RegenerateKeyAsync(IRedisOperations, String, String, RedisRegenerateKeyParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 293
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static Task<RedisListKeysResult> RegenerateKeyAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisRegenerateKeyParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKeyAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRegenerateKeyParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisListKeysResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
      description: "\nSpecifies which key to reset.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  id: ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ForceReboot(IRedisOperations, String, String, RedisRebootParameters)
  nameWithType: RedisOperationsExtensions.ForceReboot(IRedisOperations, String, String, RedisRebootParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceReboot
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 317
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nReboot specified redis node(s). This operation requires write permission\nto the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: public static void ForceReboot(this IRedisOperations operations, string resourceGroupName, string name, RedisRebootParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ForceReboot(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRebootParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
      description: "\nSpecifies which redis node(s) to reboot.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  id: ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ForceRebootAsync(IRedisOperations, String, String, RedisRebootParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.ForceRebootAsync(IRedisOperations, String, String, RedisRebootParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRebootParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceRebootAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 341
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nReboot specified redis node(s). This operation requires write permission\nto the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: public static Task ForceRebootAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisRebootParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForceRebootAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRebootParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
      description: "\nSpecifies which redis node(s) to reboot.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  id: Import(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Import(IRedisOperations, String, String, ImportRDBParameters)
  nameWithType: RedisOperationsExtensions.Import(IRedisOperations, String, String, ImportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Import
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void Import(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Import(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  id: ImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.ImportAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 384
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task ImportAsync(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  id: BeginImport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginImport(IRedisOperations, String, String, ImportRDBParameters)
  nameWithType: RedisOperationsExtensions.BeginImport(IRedisOperations, String, String, ImportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImport
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void BeginImport(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginImport(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  id: BeginImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginImportAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginImportAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 427
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task BeginImportAsync(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginImportAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  id: Export(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Export(IRedisOperations, String, String, ExportRDBParameters)
  nameWithType: RedisOperationsExtensions.Export(IRedisOperations, String, String, ExportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Export
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 447
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void Export(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Export(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  id: ExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.ExportAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 470
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task ExportAsync(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  id: BeginExport(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginExport(IRedisOperations, String, String, ExportRDBParameters)
  nameWithType: RedisOperationsExtensions.BeginExport(IRedisOperations, String, String, ExportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExport
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 490
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void BeginExport(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginExport(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  id: BeginExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginExportAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginExportAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 513
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task BeginExportAsync(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginExportAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  id: ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNext(IRedisOperations, String)
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNext(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNext
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 527
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> ListByResourceGroupNext(this IRedisOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupNext(operations As IRedisOperations, nextPageLink As String) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNextAsync(IRedisOperations, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNextAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNextAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 544
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListByResourceGroupNextAsync(this IRedisOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupNextAsync(operations As IRedisOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IRedisOperations, String)
  nameWithType: RedisOperationsExtensions.ListNext(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 561
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> ListNext(this IRedisOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IRedisOperations, nextPageLink As String) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IRedisOperations, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListNextAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 578
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListNextAsync(this IRedisOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IRedisOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Redis
  commentId: N:Microsoft.Azure.Management.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Redis
  nameWithType: Microsoft.Azure.Management.Redis
  fullName: Microsoft.Azure.Management.Redis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate
  isExternal: false
  name: CreateOrUpdate
  nameWithType: RedisOperationsExtensions.CreateOrUpdate
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdate
- uid: Microsoft.Azure.Management.Redis.IRedisOperations
  commentId: T:Microsoft.Azure.Management.Redis.IRedisOperations
  parent: Microsoft.Azure.Management.Redis
  isExternal: false
  name: IRedisOperations
  nameWithType: IRedisOperations
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisCreateOrUpdateParameters
  nameWithType: RedisCreateOrUpdateParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
- uid: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisResourceWithAccessKey
  nameWithType: RedisResourceWithAccessKey
  fullName: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
- uid: Microsoft.Azure.Management.Redis.Models
  commentId: N:Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Redis.Models
  nameWithType: Microsoft.Azure.Management.Redis.Models
  fullName: Microsoft.Azure.Management.Redis.Models
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: RedisOperationsExtensions.CreateOrUpdateAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateOrUpdateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisResourceWithAccessKey>
  nameWithType: Task<RedisResourceWithAccessKey>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey>
  nameWithType.vb: Task(Of RedisResourceWithAccessKey)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey)
  name.vb: Task(Of RedisResourceWithAccessKey)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
    name: RedisResourceWithAccessKey
    nameWithType: RedisResourceWithAccessKey
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
    name: RedisResourceWithAccessKey
    nameWithType: RedisResourceWithAccessKey
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: RedisOperationsExtensions.Delete
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: RedisOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: RedisOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get
- uid: Microsoft.Azure.Management.Redis.Models.RedisResource
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisResource
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisResource
  nameWithType: RedisResource
  fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: RedisOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisResource>
  nameWithType: Task<RedisResource>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisResource>
  nameWithType.vb: Task(Of RedisResource)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisResource)
  name.vb: Task(Of RedisResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup
  isExternal: false
  name: ListByResourceGroup
  nameWithType: RedisOperationsExtensions.ListByResourceGroup
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<RedisResource>
  nameWithType: IPage<RedisResource>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Redis.Models.RedisResource>
  nameWithType.vb: IPage(Of RedisResource)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Redis.Models.RedisResource)
  name.vb: IPage(Of RedisResource)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: false
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync
  isExternal: false
  name: ListByResourceGroupAsync
  nameWithType: RedisOperationsExtensions.ListByResourceGroupAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<RedisResource>>
  nameWithType: Task<IPage<RedisResource>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Redis.Models.RedisResource>>
  nameWithType.vb: Task(Of IPage(Of RedisResource))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Redis.Models.RedisResource))
  name.vb: Task(Of IPage(Of RedisResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: RedisOperationsExtensions.List
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: RedisOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys
  isExternal: false
  name: ListKeys
  nameWithType: RedisOperationsExtensions.ListKeys
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys
- uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisListKeysResult
  nameWithType: RedisListKeysResult
  fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync
  isExternal: false
  name: ListKeysAsync
  nameWithType: RedisOperationsExtensions.ListKeysAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisListKeysResult>
  nameWithType: Task<RedisListKeysResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisListKeysResult>
  nameWithType.vb: Task(Of RedisListKeysResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisListKeysResult)
  name.vb: Task(Of RedisListKeysResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
    name: RedisListKeysResult
    nameWithType: RedisListKeysResult
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
    name: RedisListKeysResult
    nameWithType: RedisListKeysResult
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey
  isExternal: false
  name: RegenerateKey
  nameWithType: RedisOperationsExtensions.RegenerateKey
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey
- uid: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRegenerateKeyParameters
  nameWithType: RedisRegenerateKeyParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync
  isExternal: false
  name: RegenerateKeyAsync
  nameWithType: RedisOperationsExtensions.RegenerateKeyAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot
  isExternal: false
  name: ForceReboot
  nameWithType: RedisOperationsExtensions.ForceReboot
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot
- uid: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRebootParameters
  nameWithType: RedisRebootParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync
  isExternal: false
  name: ForceRebootAsync
  nameWithType: RedisOperationsExtensions.ForceRebootAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import
  isExternal: false
  name: Import
  nameWithType: RedisOperationsExtensions.Import
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Import
- uid: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: ImportRDBParameters
  nameWithType: ImportRDBParameters
  fullName: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync
  isExternal: false
  name: ImportAsync
  nameWithType: RedisOperationsExtensions.ImportAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport
  isExternal: false
  name: BeginImport
  nameWithType: RedisOperationsExtensions.BeginImport
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImport
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync
  isExternal: false
  name: BeginImportAsync
  nameWithType: RedisOperationsExtensions.BeginImportAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export
  isExternal: false
  name: Export
  nameWithType: RedisOperationsExtensions.Export
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Export
- uid: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: ExportRDBParameters
  nameWithType: ExportRDBParameters
  fullName: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync
  isExternal: false
  name: ExportAsync
  nameWithType: RedisOperationsExtensions.ExportAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport
  isExternal: false
  name: BeginExport
  nameWithType: RedisOperationsExtensions.BeginExport
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExport
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync
  isExternal: false
  name: BeginExportAsync
  nameWithType: RedisOperationsExtensions.BeginExportAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext
  isExternal: false
  name: ListByResourceGroupNext
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNext
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync
  isExternal: false
  name: ListByResourceGroupNextAsync
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNextAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: RedisOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: RedisOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync
