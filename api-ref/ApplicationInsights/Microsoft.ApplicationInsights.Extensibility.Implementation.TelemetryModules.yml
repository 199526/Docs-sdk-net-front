### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  id: TelemetryModules
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules
  langs:
  - csharp
  - vb
  name: TelemetryModules
  nameWithType: TelemetryModules
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryModules
    path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
    startLine: 9
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nThis API supports the AI Framework infrastructure and is not intended to be used directly from your code.\n"
  example: []
  syntax:
    content: 'public class TelemetryModules : object'
    content.vb: >-
      Public Class TelemetryModules
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  langs:
  - csharp
  - vb
  name: TelemetryModules()
  nameWithType: TelemetryModules.TelemetryModules()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.TelemetryModules()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
    startLine: 17
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected TelemetryModules()
    content.vb: Protected Sub New
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance
  id: Instance
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TelemetryModules.Instance
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Instance
    path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
    startLine: 25
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets the TelemetryModules collection.\n"
  example: []
  syntax:
    content: public static TelemetryModules Instance { get; }
    content.vb: Public Shared ReadOnly Property Instance As TelemetryModules
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules
  id: Modules
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: TelemetryModules.Modules
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Modules
    path: src/Core/Managed/Shared/Extensibility/TelemetryModules.cs
    startLine: 33
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets the telemetry modules collection.\n"
  example: []
  syntax:
    content: public IList<ITelemetryModule> Modules { get; }
    content.vb: Public ReadOnly Property Modules As IList(Of ITelemetryModule)
    parameters: []
    return:
      type: IList{Microsoft.ApplicationInsights.Extensibility.ITelemetryModule}
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: TelemetryModules
  nameWithType: TelemetryModules
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor
  isExternal: false
  name: TelemetryModules
  nameWithType: TelemetryModules.TelemetryModules
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.TelemetryModules
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance
  isExternal: false
  name: Instance
  nameWithType: TelemetryModules.Instance
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules
  isExternal: false
  name: Modules
  nameWithType: TelemetryModules.Modules
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules
- uid: IList{Microsoft.ApplicationInsights.Extensibility.ITelemetryModule}
  commentId: '!:IList{Microsoft.ApplicationInsights.Extensibility.ITelemetryModule}'
  definition: IList`1
  name: IList<ITelemetryModule>
  nameWithType: IList<ITelemetryModule>
  fullName: IList<Microsoft.ApplicationInsights.Extensibility.ITelemetryModule>
  nameWithType.vb: IList(Of ITelemetryModule)
  fullname.vb: IList(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryModule)
  name.vb: IList(Of ITelemetryModule)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
    name: ITelemetryModule
    nameWithType: ITelemetryModule
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
    name: ITelemetryModule
    nameWithType: ITelemetryModule
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryModule
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
