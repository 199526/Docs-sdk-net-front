### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  id: CustomDomainsOperationsExtensions
  parent: Microsoft.Azure.Management.Cdn
  children:
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CustomDomainsOperationsExtensions
  nameWithType: CustomDomainsOperationsExtensions
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomDomainsOperationsExtensions
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nExtension methods for CustomDomainsOperations.\n"
  example: []
  syntax:
    content: public static class CustomDomainsOperationsExtensions
    content.vb: Public Module CustomDomainsOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String)
  id: ListByEndpoint(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByEndpoint(ICustomDomainsOperations, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.ListByEndpoint(ICustomDomainsOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByEndpoint
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nLists the existing CDN custom domains within an endpoint.\n"
  example: []
  syntax:
    content: public static IEnumerable<CustomDomain> ListByEndpoint(this ICustomDomainsOperations operations, string endpointName, string profileName, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByEndpoint(operations As ICustomDomainsOperations, endpointName As String, profileName As String, resourceGroupName As String) As IEnumerable(Of CustomDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ListByEndpointAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByEndpointAsync(ICustomDomainsOperations, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.ListByEndpointAsync(ICustomDomainsOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByEndpointAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nLists the existing CDN custom domains within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<IEnumerable<CustomDomain>> ListByEndpointAsync(this ICustomDomainsOperations operations, string endpointName, string profileName, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByEndpointAsync(operations As ICustomDomainsOperations, endpointName As String, profileName As String, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of CustomDomain))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Cdn.Models.CustomDomain}}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(ICustomDomainsOperations, String, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.Get(ICustomDomainsOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nGets an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static CustomDomain Get(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String) As CustomDomain
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    return:
      type: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(ICustomDomainsOperations, String, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.GetAsync(ICustomDomainsOperations, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nGets an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<CustomDomain> GetAsync(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CustomDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  id: Create(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(ICustomDomainsOperations, String, String, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.Create(ICustomDomainsOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nCreates a new CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static CustomDomain Create(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, string hostName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, hostName As String) As CustomDomain
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: hostName
      type: System.String
      description: "\nThe host name of the custom domain. Must be a domain name.\n"
    return:
      type: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(ICustomDomainsOperations, String, String, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.CreateAsync(ICustomDomainsOperations, String, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 172
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nCreates a new CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<CustomDomain> CreateAsync(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, string hostName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, hostName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CustomDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: hostName
      type: System.String
      description: "\nThe host name of the custom domain. Must be a domain name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  id: BeginCreate(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreate(ICustomDomainsOperations, String, String, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.BeginCreate(ICustomDomainsOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreate
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 201
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nCreates a new CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static CustomDomain BeginCreate(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, string hostName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreate(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, hostName As String) As CustomDomain
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: hostName
      type: System.String
      description: "\nThe host name of the custom domain. Must be a domain name.\n"
    return:
      type: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: BeginCreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreateAsync(ICustomDomainsOperations, String, String, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.BeginCreateAsync(ICustomDomainsOperations, String, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreateAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 230
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nCreates a new CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<CustomDomain> BeginCreateAsync(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, string hostName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreateAsync(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, hostName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CustomDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: hostName
      type: System.String
      description: "\nThe host name of the custom domain. Must be a domain name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  id: Update(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(ICustomDomainsOperations, String, String, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.Update(ICustomDomainsOperations, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Update
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nUpdates an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static ErrorResponse Update(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, string hostName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, hostName As String) As ErrorResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: hostName
      type: System.String
      description: "\nThe host name of the custom domain. Must be a domain name.\n"
    return:
      type: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(ICustomDomainsOperations, String, String, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.UpdateAsync(ICustomDomainsOperations, String, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 288
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nUpdates an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<ErrorResponse> UpdateAsync(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, string hostName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, hostName As String, cancellationToken As CancellationToken = Nothing) As Task(Of ErrorResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: hostName
      type: System.String
      description: "\nThe host name of the custom domain. Must be a domain name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.ErrorResponse}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  id: DeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteIfExists(ICustomDomainsOperations, String, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.DeleteIfExists(ICustomDomainsOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteIfExists
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 314
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nDeletes an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static CustomDomain DeleteIfExists(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteIfExists(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String) As CustomDomain
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    return:
      type: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(ICustomDomainsOperations, String, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.DeleteIfExistsAsync(ICustomDomainsOperations, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteIfExistsAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 340
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nDeletes an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<CustomDomain> DeleteIfExistsAsync(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteIfExistsAsync(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CustomDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  id: BeginDeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(ICustomDomainsOperations, String, String, String, String)
  nameWithType: CustomDomainsOperationsExtensions.BeginDeleteIfExists(ICustomDomainsOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDeleteIfExists
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 366
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nDeletes an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static CustomDomain BeginDeleteIfExists(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteIfExists(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String) As CustomDomain
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    return:
      type: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: BeginDeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExistsAsync(ICustomDomainsOperations, String, String, String, String, CancellationToken)
  nameWithType: CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync(ICustomDomainsOperations, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync(Microsoft.Azure.Management.Cdn.ICustomDomainsOperations, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDeleteIfExistsAsync
    path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/CustomDomainsOperationsExtensions.cs
    startLine: 392
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn
  summary: "\nDeletes an existing CDN custom domain within an endpoint.\n"
  example: []
  syntax:
    content: public static Task<CustomDomain> BeginDeleteIfExistsAsync(this ICustomDomainsOperations operations, string customDomainName, string endpointName, string profileName, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteIfExistsAsync(operations As ICustomDomainsOperations, customDomainName As String, endpointName As String, profileName As String, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CustomDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: customDomainName
      type: System.String
      description: "\nName of the custom domain within an endpoint.\n"
    - id: endpointName
      type: System.String
      description: "\nName of the endpoint within the CDN profile.\n"
    - id: profileName
      type: System.String
      description: "\nName of the CDN profile within the resource group.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  overload: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Cdn
  commentId: N:Microsoft.Azure.Management.Cdn
  isExternal: false
  name: Microsoft.Azure.Management.Cdn
  nameWithType: Microsoft.Azure.Management.Cdn
  fullName: Microsoft.Azure.Management.Cdn
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint
  isExternal: false
  name: ListByEndpoint
  nameWithType: CustomDomainsOperationsExtensions.ListByEndpoint
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpoint
- uid: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
  commentId: T:Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
  parent: Microsoft.Azure.Management.Cdn
  isExternal: false
  name: ICustomDomainsOperations
  nameWithType: ICustomDomainsOperations
  fullName: Microsoft.Azure.Management.Cdn.ICustomDomainsOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CustomDomain>
  nameWithType: IEnumerable<CustomDomain>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Cdn.Models.CustomDomain>
  nameWithType.vb: IEnumerable(Of CustomDomain)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Cdn.Models.CustomDomain)
  name.vb: IEnumerable(Of CustomDomain)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
    name: CustomDomain
    nameWithType: CustomDomain
    fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
    name: CustomDomain
    nameWithType: CustomDomain
    fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync
  isExternal: false
  name: ListByEndpointAsync
  nameWithType: CustomDomainsOperationsExtensions.ListByEndpointAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.ListByEndpointAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Cdn.Models.CustomDomain}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Cdn.Models.CustomDomain}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<CustomDomain>>
  nameWithType: Task<IEnumerable<CustomDomain>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Cdn.Models.CustomDomain>>
  nameWithType.vb: Task(Of IEnumerable(Of CustomDomain))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Cdn.Models.CustomDomain))
  name.vb: Task(Of IEnumerable(Of CustomDomain))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
    name: CustomDomain
    nameWithType: CustomDomain
    fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
    name: CustomDomain
    nameWithType: CustomDomain
    fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: CustomDomainsOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Get
- uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  commentId: T:Microsoft.Azure.Management.Cdn.Models.CustomDomain
  parent: Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: CustomDomain
  nameWithType: CustomDomain
  fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
- uid: Microsoft.Azure.Management.Cdn.Models
  commentId: N:Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: Microsoft.Azure.Management.Cdn.Models
  nameWithType: Microsoft.Azure.Management.Cdn.Models
  fullName: Microsoft.Azure.Management.Cdn.Models
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: CustomDomainsOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.GetAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.CustomDomain}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CustomDomain>
  nameWithType: Task<CustomDomain>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Cdn.Models.CustomDomain>
  nameWithType.vb: Task(Of CustomDomain)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Cdn.Models.CustomDomain)
  name.vb: Task(Of CustomDomain)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
    name: CustomDomain
    nameWithType: CustomDomain
    fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.CustomDomain
    name: CustomDomain
    nameWithType: CustomDomain
    fullName: Microsoft.Azure.Management.Cdn.Models.CustomDomain
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create
  isExternal: false
  name: Create
  nameWithType: CustomDomainsOperationsExtensions.Create
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Create
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: CustomDomainsOperationsExtensions.CreateAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.CreateAsync
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate
  isExternal: false
  name: BeginCreate
  nameWithType: CustomDomainsOperationsExtensions.BeginCreate
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreate
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync
  isExternal: false
  name: BeginCreateAsync
  nameWithType: CustomDomainsOperationsExtensions.BeginCreateAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginCreateAsync
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update
  isExternal: false
  name: Update
  nameWithType: CustomDomainsOperationsExtensions.Update
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.Update
- uid: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
  commentId: T:Microsoft.Azure.Management.Cdn.Models.ErrorResponse
  parent: Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: ErrorResponse
  nameWithType: ErrorResponse
  fullName: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: CustomDomainsOperationsExtensions.UpdateAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.UpdateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.ErrorResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Cdn.Models.ErrorResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ErrorResponse>
  nameWithType: Task<ErrorResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Cdn.Models.ErrorResponse>
  nameWithType.vb: Task(Of ErrorResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Cdn.Models.ErrorResponse)
  name.vb: Task(Of ErrorResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
    name: ErrorResponse
    nameWithType: ErrorResponse
    fullName: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
    name: ErrorResponse
    nameWithType: ErrorResponse
    fullName: Microsoft.Azure.Management.Cdn.Models.ErrorResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists
  isExternal: false
  name: DeleteIfExists
  nameWithType: CustomDomainsOperationsExtensions.DeleteIfExists
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExists
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync
  isExternal: false
  name: DeleteIfExistsAsync
  nameWithType: CustomDomainsOperationsExtensions.DeleteIfExistsAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.DeleteIfExistsAsync
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists
  isExternal: false
  name: BeginDeleteIfExists
  nameWithType: CustomDomainsOperationsExtensions.BeginDeleteIfExists
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExists
- uid: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync*
  commentId: Overload:Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync
  isExternal: false
  name: BeginDeleteIfExistsAsync
  nameWithType: CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync
  fullName: Microsoft.Azure.Management.Cdn.CustomDomainsOperationsExtensions.BeginDeleteIfExistsAsync
