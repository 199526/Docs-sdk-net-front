### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  commentId: T:Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  id: SearchServiceProperties
  parent: Microsoft.Azure.Management.Search.Models
  children:
  - Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor
  - Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor(Microsoft.Azure.Management.Search.Models.Sku,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount
  - Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount
  - Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku
  langs:
  - csharp
  - vb
  name: SearchServiceProperties
  nameWithType: SearchServiceProperties
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SearchServiceProperties
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nDefines properties of an Azure Search service that can be modified.\n"
  example: []
  syntax:
    content: public class SearchServiceProperties
    content.vb: Public Class SearchServiceProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  langs:
  - csharp
  - vb
  name: SearchServiceProperties()
  nameWithType: SearchServiceProperties.SearchServiceProperties()
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.SearchServiceProperties()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the SearchServiceProperties class.\n"
  example: []
  syntax:
    content: public SearchServiceProperties()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor(Microsoft.Azure.Management.Search.Models.Sku,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor(Microsoft.Azure.Management.Search.Models.Sku,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: '#ctor(Microsoft.Azure.Management.Search.Models.Sku,System.Nullable{System.Int32},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  langs:
  - csharp
  - vb
  name: SearchServiceProperties(Sku, Nullable<Int32>, Nullable<Int32>)
  nameWithType: SearchServiceProperties.SearchServiceProperties(Sku, Nullable<Int32>, Nullable<Int32>)
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.SearchServiceProperties(Microsoft.Azure.Management.Search.Models.Sku, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the SearchServiceProperties class.\n"
  example: []
  syntax:
    content: public SearchServiceProperties(Sku sku = null, int ? replicaCount = null, int ? partitionCount = null)
    content.vb: Public Sub New(sku As Sku = Nothing, replicaCount As Integer? = Nothing, partitionCount As Integer? = Nothing)
    parameters:
    - id: sku
      type: Microsoft.Azure.Management.Search.Models.Sku
    - id: replicaCount
      type: System.Nullable{System.Int32}
    - id: partitionCount
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor*
  nameWithType.vb: SearchServiceProperties.SearchServiceProperties(Sku, Nullable(Of Int32), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.SearchServiceProperties(Microsoft.Azure.Management.Search.Models.Sku, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: SearchServiceProperties(Sku, Nullable(Of Int32), Nullable(Of Int32))
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: SearchServiceProperties.Sku
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets the SKU of the Search Service, which determines price\ntier and capacity limits.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public Sku Sku { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Search.Models.Sku
  overload: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount
  id: ReplicaCount
  parent: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  langs:
  - csharp
  - vb
  name: ReplicaCount
  nameWithType: SearchServiceProperties.ReplicaCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReplicaCount
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets the number of replicas in the Search service. If\nspecified, it must be a value between 1 and 6 inclusive.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "replicaCount")]

      public int ? ReplicaCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="replicaCount")>

      Public Property ReplicaCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: replicaCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount
  commentId: P:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount
  id: PartitionCount
  parent: Microsoft.Azure.Management.Search.Models.SearchServiceProperties
  langs:
  - csharp
  - vb
  name: PartitionCount
  nameWithType: SearchServiceProperties.PartitionCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionCount
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/SearchServiceProperties.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Search
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets or sets the number of partitions in the Search service; if\nspecified, it can be 1, 2, 3, 4, 6, or 12.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "partitionCount")]

      public int ? PartitionCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="partitionCount")>

      Public Property PartitionCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: partitionCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Search.Models
  commentId: N:Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Microsoft.Azure.Management.Search.Models
  nameWithType: Microsoft.Azure.Management.Search.Models
  fullName: Microsoft.Azure.Management.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.#ctor
  isExternal: false
  name: SearchServiceProperties
  nameWithType: SearchServiceProperties.SearchServiceProperties
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.SearchServiceProperties
- uid: Microsoft.Azure.Management.Search.Models.Sku
  commentId: T:Microsoft.Azure.Management.Search.Models.Sku
  parent: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Sku
  nameWithType: Sku
  fullName: Microsoft.Azure.Management.Search.Models.Sku
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku
  isExternal: false
  name: Sku
  nameWithType: SearchServiceProperties.Sku
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.Sku
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount
  isExternal: false
  name: ReplicaCount
  nameWithType: SearchServiceProperties.ReplicaCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.ReplicaCount
- uid: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount*
  commentId: Overload:Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount
  isExternal: false
  name: PartitionCount
  nameWithType: SearchServiceProperties.PartitionCount
  fullName: Microsoft.Azure.Management.Search.Models.SearchServiceProperties.PartitionCount
