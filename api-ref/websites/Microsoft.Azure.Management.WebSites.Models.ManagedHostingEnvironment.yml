### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  commentId: T:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  id: ManagedHostingEnvironment
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus},Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String)
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate
  - Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork
  langs:
  - csharp
  - vb
  name: ManagedHostingEnvironment
  nameWithType: ManagedHostingEnvironment
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagedHostingEnvironment
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of a managed hosting environment\n"
  example: []
  syntax:
    content: 'public class ManagedHostingEnvironment : Resource, IResource'
    content.vb: >-
      Public Class ManagedHostingEnvironment
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: ManagedHostingEnvironment()
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironment()
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironment()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the ManagedHostingEnvironment class.\n"
  example: []
  syntax:
    content: public ManagedHostingEnvironment()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus},Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus},Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus},Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: ManagedHostingEnvironment(String, String, String, String, IDictionary<String, String>, String, String, Nullable<ManagedHostingEnvironmentStatus>, VirtualNetworkProfile, Nullable<Int32>, String, String, String, Nullable<Boolean>, String, Nullable<Boolean>, String)
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironment(String, String, String, String, IDictionary<String, String>, String, String, Nullable<ManagedHostingEnvironmentStatus>, VirtualNetworkProfile, Nullable<Int32>, String, String, String, Nullable<Boolean>, String, Nullable<Boolean>, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironment(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus>, Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile, System.Nullable<System.Int32>, System.String, System.String, System.String, System.Nullable<System.Boolean>, System.String, System.Nullable<System.Boolean>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the ManagedHostingEnvironment class.\n"
  example: []
  syntax:
    content: public ManagedHostingEnvironment(string location, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, string managedHostingEnvironmentName = null, string managedHostingEnvironmentLocation = null, ManagedHostingEnvironmentStatus? status = null, VirtualNetworkProfile virtualNetwork = null, int ? ipsslAddressCount = null, string dnsSuffix = null, string subscriptionId = null, string resourceGroup = null, bool ? environmentIsHealthy = null, string environmentStatus = null, bool ? suspended = null, string apiManagementAccount = null)
    content.vb: Public Sub New(location As String, id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, managedHostingEnvironmentName As String = Nothing, managedHostingEnvironmentLocation As String = Nothing, status As ManagedHostingEnvironmentStatus? = Nothing, virtualNetwork As VirtualNetworkProfile = Nothing, ipsslAddressCount As Integer? = Nothing, dnsSuffix As String = Nothing, subscriptionId As String = Nothing, resourceGroup As String = Nothing, environmentIsHealthy As Boolean? = Nothing, environmentStatus As String = Nothing, suspended As Boolean? = Nothing, apiManagementAccount As String = Nothing)
    parameters:
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: managedHostingEnvironmentName
      type: System.String
    - id: managedHostingEnvironmentLocation
      type: System.String
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus}
    - id: virtualNetwork
      type: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
    - id: ipsslAddressCount
      type: System.Nullable{System.Int32}
    - id: dnsSuffix
      type: System.String
    - id: subscriptionId
      type: System.String
    - id: resourceGroup
      type: System.String
    - id: environmentIsHealthy
      type: System.Nullable{System.Boolean}
    - id: environmentStatus
      type: System.String
    - id: suspended
      type: System.Nullable{System.Boolean}
    - id: apiManagementAccount
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor*
  nameWithType.vb: ManagedHostingEnvironment.ManagedHostingEnvironment(String, String, String, String, IDictionary(Of String, String), String, String, Nullable(Of ManagedHostingEnvironmentStatus), VirtualNetworkProfile, Nullable(Of Int32), String, String, String, Nullable(Of Boolean), String, Nullable(Of Boolean), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironment(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus), Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile, System.Nullable(Of System.Int32), System.String, System.String, System.String, System.Nullable(Of System.Boolean), System.String, System.Nullable(Of System.Boolean), System.String)
  name.vb: ManagedHostingEnvironment(String, String, String, String, IDictionary(Of String, String), String, String, Nullable(Of ManagedHostingEnvironmentStatus), VirtualNetworkProfile, Nullable(Of Int32), String, String, String, Nullable(Of Boolean), String, Nullable(Of Boolean), String)
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName
  id: ManagedHostingEnvironmentName
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: ManagedHostingEnvironmentName
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironmentName
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagedHostingEnvironmentName
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the managed hosting environment\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.name")]

      public string ManagedHostingEnvironmentName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.name")>

      Public Property ManagedHostingEnvironmentName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  id: ManagedHostingEnvironmentLocation
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: ManagedHostingEnvironmentLocation
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagedHostingEnvironmentLocation
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nLocation of the managed hosting environment e.g. \"West US\"\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.location")]

      public string ManagedHostingEnvironmentLocation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.location")>

      Public Property ManagedHostingEnvironmentLocation As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status
  id: Status
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ManagedHostingEnvironment.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCurrent status of the managed hosting environment. Possible values\nfor this property include: 'Preparing', 'Ready', 'Deleting'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.status")]

      public ManagedHostingEnvironmentStatus? Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.status")>

      Public Property Status As ManagedHostingEnvironmentStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus}
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork
  id: VirtualNetwork
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: VirtualNetwork
  nameWithType: ManagedHostingEnvironment.VirtualNetwork
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualNetwork
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDescription of the managed hosting environment's virtual network\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.virtualNetwork")]

      public VirtualNetworkProfile VirtualNetwork { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.virtualNetwork")>

      Public Property VirtualNetwork As VirtualNetworkProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.virtualNetwork
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount
  id: IpsslAddressCount
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: IpsslAddressCount
  nameWithType: ManagedHostingEnvironment.IpsslAddressCount
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpsslAddressCount
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nNumber of ip ssl addresses reserved for the managed hosting\nenvironment\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.ipsslAddressCount")]

      public int ? IpsslAddressCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.ipsslAddressCount")>

      Public Property IpsslAddressCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.ipsslAddressCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix
  id: DnsSuffix
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: DnsSuffix
  nameWithType: ManagedHostingEnvironment.DnsSuffix
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DnsSuffix
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDNS suffix of the managed hosting environment\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.dnsSuffix")]

      public string DnsSuffix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.dnsSuffix")>

      Public Property DnsSuffix As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.dnsSuffix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ManagedHostingEnvironment.SubscriptionId
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSubscription of the managed hosting environment (read only)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.subscriptionId")]

      public string SubscriptionId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.subscriptionId")>

      Public Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.subscriptionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup
  id: ResourceGroup
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: ResourceGroup
  nameWithType: ManagedHostingEnvironment.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroup
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResource group of the managed hosting environment (read only)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceGroup")]

      public string ResourceGroup { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceGroup")>

      Public Property ResourceGroup As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceGroup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy
  id: EnvironmentIsHealthy
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: EnvironmentIsHealthy
  nameWithType: ManagedHostingEnvironment.EnvironmentIsHealthy
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentIsHealthy
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue/false indicating whether the managed hosting environment is\nhealthy\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.environmentIsHealthy")]

      public bool ? EnvironmentIsHealthy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.environmentIsHealthy")>

      Public Property EnvironmentIsHealthy As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.environmentIsHealthy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus
  id: EnvironmentStatus
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: EnvironmentStatus
  nameWithType: ManagedHostingEnvironment.EnvironmentStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentStatus
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDetailed message about with results of the last check of the\nmanaged hosting environment\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.environmentStatus")]

      public string EnvironmentStatus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.environmentStatus")>

      Public Property EnvironmentStatus As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.environmentStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended
  id: Suspended
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: Suspended
  nameWithType: ManagedHostingEnvironment.Suspended
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Suspended
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTrue/false indicating whether the managed hosting environment is\nsuspended. The environment can be suspended e.g. when the\nmanagement endpoint is no longer available\n(most likely because NSG blocked the incoming traffic)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.suspended")]

      public bool ? Suspended { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.suspended")>

      Public Property Suspended As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.suspended
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount
  id: ApiManagementAccount
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: ApiManagementAccount
  nameWithType: ManagedHostingEnvironment.ApiManagementAccount
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApiManagementAccount
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResource id of the api management account associated with this\nmanaged hosting environment (read only)\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.apiManagementAccount")]

      public string ApiManagementAccount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.apiManagementAccount")>

      Public Property ApiManagementAccount As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.apiManagementAccount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ManagedHostingEnvironment.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ManagedHostingEnvironment.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.#ctor
  isExternal: false
  name: ManagedHostingEnvironment
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironment
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ManagedHostingEnvironmentStatus>
  nameWithType: Nullable<ManagedHostingEnvironmentStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus>
  nameWithType.vb: Nullable(Of ManagedHostingEnvironmentStatus)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus)
  name.vb: Nullable(Of ManagedHostingEnvironmentStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus
    name: ManagedHostingEnvironmentStatus
    nameWithType: ManagedHostingEnvironmentStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus
    name: ManagedHostingEnvironmentStatus
    nameWithType: ManagedHostingEnvironmentStatus
    fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironmentStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
  commentId: T:Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: VirtualNetworkProfile
  nameWithType: VirtualNetworkProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.VirtualNetworkProfile
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName
  isExternal: false
  name: ManagedHostingEnvironmentName
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironmentName
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentName
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  isExternal: false
  name: ManagedHostingEnvironmentLocation
  nameWithType: ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ManagedHostingEnvironmentLocation
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status
  isExternal: false
  name: Status
  nameWithType: ManagedHostingEnvironment.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Status
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork
  isExternal: false
  name: VirtualNetwork
  nameWithType: ManagedHostingEnvironment.VirtualNetwork
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.VirtualNetwork
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount
  isExternal: false
  name: IpsslAddressCount
  nameWithType: ManagedHostingEnvironment.IpsslAddressCount
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.IpsslAddressCount
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix
  isExternal: false
  name: DnsSuffix
  nameWithType: ManagedHostingEnvironment.DnsSuffix
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.DnsSuffix
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: ManagedHostingEnvironment.SubscriptionId
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.SubscriptionId
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup
  isExternal: false
  name: ResourceGroup
  nameWithType: ManagedHostingEnvironment.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ResourceGroup
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy
  isExternal: false
  name: EnvironmentIsHealthy
  nameWithType: ManagedHostingEnvironment.EnvironmentIsHealthy
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentIsHealthy
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus
  isExternal: false
  name: EnvironmentStatus
  nameWithType: ManagedHostingEnvironment.EnvironmentStatus
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.EnvironmentStatus
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended
  isExternal: false
  name: Suspended
  nameWithType: ManagedHostingEnvironment.Suspended
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Suspended
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount
  isExternal: false
  name: ApiManagementAccount
  nameWithType: ManagedHostingEnvironment.ApiManagementAccount
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.ApiManagementAccount
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate
  isExternal: false
  name: Validate
  nameWithType: ManagedHostingEnvironment.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.ManagedHostingEnvironment.Validate
