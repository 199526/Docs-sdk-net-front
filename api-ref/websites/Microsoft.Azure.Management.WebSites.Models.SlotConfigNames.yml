### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  commentId: T:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  id: SlotConfigNames
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor
  - Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames
  - Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames
  langs:
  - csharp
  - vb
  name: SlotConfigNames
  nameWithType: SlotConfigNames
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SlotConfigNames
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nClass containing names for connection strings and application settings\nto be marked as sticky to the slot\nand not moved during swap operation\nThis is valid for all deployment slots under the site\n"
  example: []
  syntax:
    content: public class SlotConfigNames
    content.vb: Public Class SlotConfigNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  langs:
  - csharp
  - vb
  name: SlotConfigNames()
  nameWithType: SlotConfigNames.SlotConfigNames()
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.SlotConfigNames()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the SlotConfigNames class.\n"
  example: []
  syntax:
    content: public SlotConfigNames()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  langs:
  - csharp
  - vb
  name: SlotConfigNames(IList<String>, IList<String>)
  nameWithType: SlotConfigNames.SlotConfigNames(IList<String>, IList<String>)
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.SlotConfigNames(System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the SlotConfigNames class.\n"
  example: []
  syntax:
    content: public SlotConfigNames(IList<string> connectionStringNames = null, IList<string> appSettingNames = null)
    content.vb: Public Sub New(connectionStringNames As IList(Of String) = Nothing, appSettingNames As IList(Of String) = Nothing)
    parameters:
    - id: connectionStringNames
      type: System.Collections.Generic.IList{System.String}
    - id: appSettingNames
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor*
  nameWithType.vb: SlotConfigNames.SlotConfigNames(IList(Of String), IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.SlotConfigNames(System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  name.vb: SlotConfigNames(IList(Of String), IList(Of String))
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames
  id: ConnectionStringNames
  parent: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  langs:
  - csharp
  - vb
  name: ConnectionStringNames
  nameWithType: SlotConfigNames.ConnectionStringNames
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConnectionStringNames
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of connection string names\n"
  example: []
  syntax:
    content: public IList<string> ConnectionStringNames { get; set; }
    content.vb: Public Property ConnectionStringNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames
  id: AppSettingNames
  parent: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames
  langs:
  - csharp
  - vb
  name: AppSettingNames
  nameWithType: SlotConfigNames.AppSettingNames
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppSettingNames
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/SlotConfigNames.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of application settings names\n"
  example: []
  syntax:
    content: public IList<string> AppSettingNames { get; set; }
    content.vb: Public Property AppSettingNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.#ctor
  isExternal: false
  name: SlotConfigNames
  nameWithType: SlotConfigNames.SlotConfigNames
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.SlotConfigNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames
  isExternal: false
  name: ConnectionStringNames
  nameWithType: SlotConfigNames.ConnectionStringNames
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.ConnectionStringNames
- uid: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames
  isExternal: false
  name: AppSettingNames
  nameWithType: SlotConfigNames.AppSettingNames
  fullName: Microsoft.Azure.Management.WebSites.Models.SlotConfigNames.AppSettingNames
