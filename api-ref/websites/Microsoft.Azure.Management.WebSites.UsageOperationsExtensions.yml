### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions
  commentId: T:Microsoft.Azure.Management.WebSites.UsageOperationsExtensions
  id: UsageOperationsExtensions
  parent: Microsoft.Azure.Management.WebSites
  children:
  - Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UsageOperationsExtensions
  nameWithType: UsageOperationsExtensions
  fullName: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/UsageOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsageOperationsExtensions
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/UsageOperationsExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  syntax:
    content: public static class UsageOperationsExtensions
    content.vb: Public Module UsageOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: GetUsage(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetUsage(IUsageOperations, String, String, String, Nullable<Int32>)
  nameWithType: UsageOperationsExtensions.GetUsage(IUsageOperations, String, String, String, Nullable<Int32>)
  fullName: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage(Microsoft.Azure.Management.WebSites.IUsageOperations, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/UsageOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetUsage
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/UsageOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nReturns usage records for specified subscription and resource groups\n"
  example: []
  syntax:
    content: public static object GetUsage(this IUsageOperations operations, string resourceGroupName, string environmentName, string lastId, int ? batchSize)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUsage(operations As IUsageOperations, resourceGroupName As String, environmentName As String, lastId As String, batchSize As Integer?) As Object
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.IUsageOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of resource group\n"
    - id: environmentName
      type: System.String
      description: "\nEnvironment name\n"
    - id: lastId
      type: System.String
      description: "\nLast marker that was returned from the batch\n"
    - id: batchSize
      type: System.Nullable{System.Int32}
      description: "\nsize of the batch to be returned.\n"
    return:
      type: System.Object
  overload: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage*
  nameWithType.vb: UsageOperationsExtensions.GetUsage(IUsageOperations, String, String, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage(Microsoft.Azure.Management.WebSites.IUsageOperations, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: GetUsage(IUsageOperations, String, String, String, Nullable(Of Int32))
- uid: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetUsageAsync(Microsoft.Azure.Management.WebSites.IUsageOperations,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetUsageAsync(IUsageOperations, String, String, String, Nullable<Int32>, CancellationToken)
  nameWithType: UsageOperationsExtensions.GetUsageAsync(IUsageOperations, String, String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync(Microsoft.Azure.Management.WebSites.IUsageOperations, System.String, System.String, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/UsageOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetUsageAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/UsageOperationsExtensions.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nReturns usage records for specified subscription and resource groups\n"
  example: []
  syntax:
    content: public static Task<object> GetUsageAsync(this IUsageOperations operations, string resourceGroupName, string environmentName, string lastId, int ? batchSize, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUsageAsync(operations As IUsageOperations, resourceGroupName As String, environmentName As String, lastId As String, batchSize As Integer?, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.IUsageOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of resource group\n"
    - id: environmentName
      type: System.String
      description: "\nEnvironment name\n"
    - id: lastId
      type: System.String
      description: "\nLast marker that was returned from the batch\n"
    - id: batchSize
      type: System.Nullable{System.Int32}
      description: "\nsize of the batch to be returned.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Object}
  overload: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync*
  nameWithType.vb: UsageOperationsExtensions.GetUsageAsync(IUsageOperations, String, String, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync(Microsoft.Azure.Management.WebSites.IUsageOperations, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetUsageAsync(IUsageOperations, String, String, String, Nullable(Of Int32), CancellationToken)
references:
- uid: Microsoft.Azure.Management.WebSites
  commentId: N:Microsoft.Azure.Management.WebSites
  isExternal: false
  name: Microsoft.Azure.Management.WebSites
  nameWithType: Microsoft.Azure.Management.WebSites
  fullName: Microsoft.Azure.Management.WebSites
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage*
  commentId: Overload:Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage
  isExternal: false
  name: GetUsage
  nameWithType: UsageOperationsExtensions.GetUsage
  fullName: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsage
- uid: Microsoft.Azure.Management.WebSites.IUsageOperations
  commentId: T:Microsoft.Azure.Management.WebSites.IUsageOperations
  parent: Microsoft.Azure.Management.WebSites
  isExternal: false
  name: IUsageOperations
  nameWithType: IUsageOperations
  fullName: Microsoft.Azure.Management.WebSites.IUsageOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync
  isExternal: false
  name: GetUsageAsync
  nameWithType: UsageOperationsExtensions.GetUsageAsync
  fullName: Microsoft.Azure.Management.WebSites.UsageOperationsExtensions.GetUsageAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
