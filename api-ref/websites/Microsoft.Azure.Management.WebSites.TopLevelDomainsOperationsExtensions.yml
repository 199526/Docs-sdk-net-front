### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  commentId: T:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  id: TopLevelDomainsOperationsExtensions
  parent: Microsoft.Azure.Management.WebSites
  children:
  - Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations)
  - Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String)
  - Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption)
  - Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TopLevelDomainsOperationsExtensions
  nameWithType: TopLevelDomainsOperationsExtensions
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TopLevelDomainsOperationsExtensions
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  syntax:
    content: public static class TopLevelDomainsOperationsExtensions
    content.vb: Public Module TopLevelDomainsOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations)
  commentId: M:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations)
  id: GetGetTopLevelDomains(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetGetTopLevelDomains(ITopLevelDomainsOperations)
  nameWithType: TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains(ITopLevelDomainsOperations)
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetGetTopLevelDomains
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nLists all top level domains supported for registration\n"
  example: []
  syntax:
    content: public static TopLevelDomainCollection GetGetTopLevelDomains(this ITopLevelDomainsOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetGetTopLevelDomains(operations As ITopLevelDomainsOperations) As TopLevelDomainCollection
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
  overload: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.Threading.CancellationToken)
  id: GetGetTopLevelDomainsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetGetTopLevelDomainsAsync(ITopLevelDomainsOperations, CancellationToken)
  nameWithType: TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync(ITopLevelDomainsOperations, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetGetTopLevelDomainsAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nLists all top level domains supported for registration\n"
  example: []
  syntax:
    content: public static Task<TopLevelDomainCollection> GetGetTopLevelDomainsAsync(this ITopLevelDomainsOperations operations, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetGetTopLevelDomainsAsync(operations As ITopLevelDomainsOperations, cancellationToken As CancellationToken = Nothing) As Task(Of TopLevelDomainCollection)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection}
  overload: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String)
  id: GetTopLevelDomain(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTopLevelDomain(ITopLevelDomainsOperations, String)
  nameWithType: TopLevelDomainsOperationsExtensions.GetTopLevelDomain(ITopLevelDomainsOperations, String)
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetTopLevelDomain
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGets details of a top level domain\n"
  example: []
  syntax:
    content: public static TopLevelDomain GetTopLevelDomain(this ITopLevelDomainsOperations operations, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTopLevelDomain(operations As ITopLevelDomainsOperations, name As String) As TopLevelDomain
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: name
      type: System.String
      description: "\nName of the top level domain\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
  overload: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,System.Threading.CancellationToken)
  id: GetTopLevelDomainAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetTopLevelDomainAsync(ITopLevelDomainsOperations, String, CancellationToken)
  nameWithType: TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync(ITopLevelDomainsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetTopLevelDomainAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGets details of a top level domain\n"
  example: []
  syntax:
    content: public static Task<TopLevelDomain> GetTopLevelDomainAsync(this ITopLevelDomainsOperations operations, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTopLevelDomainAsync(operations As ITopLevelDomainsOperations, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of TopLevelDomain)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: name
      type: System.String
      description: "\nName of the top level domain\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TopLevelDomain}
  overload: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption)
  commentId: M:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption)
  id: ListTopLevelDomainAgreements(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTopLevelDomainAgreements(ITopLevelDomainsOperations, String, TopLevelDomainAgreementOption)
  nameWithType: TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements(ITopLevelDomainsOperations, String, TopLevelDomainAgreementOption)
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations, System.String, Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListTopLevelDomainAgreements
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nLists legal agreements that user needs to accept before purchasing domain\n"
  example: []
  syntax:
    content: public static TldLegalAgreementCollection ListTopLevelDomainAgreements(this ITopLevelDomainsOperations operations, string name, TopLevelDomainAgreementOption agreementOption)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTopLevelDomainAgreements(operations As ITopLevelDomainsOperations, name As String, agreementOption As TopLevelDomainAgreementOption) As TldLegalAgreementCollection
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: name
      type: System.String
      description: "\nName of the top level domain\n"
    - id: agreementOption
      type: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption
      description: "\nDomain agreement options\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
  overload: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption,System.Threading.CancellationToken)
  id: ListTopLevelDomainAgreementsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations,System.String,Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListTopLevelDomainAgreementsAsync(ITopLevelDomainsOperations, String, TopLevelDomainAgreementOption, CancellationToken)
  nameWithType: TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync(ITopLevelDomainsOperations, String, TopLevelDomainAgreementOption, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync(Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations, System.String, Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListTopLevelDomainAgreementsAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/TopLevelDomainsOperationsExtensions.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nLists legal agreements that user needs to accept before purchasing domain\n"
  example: []
  syntax:
    content: public static Task<TldLegalAgreementCollection> ListTopLevelDomainAgreementsAsync(this ITopLevelDomainsOperations operations, string name, TopLevelDomainAgreementOption agreementOption, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListTopLevelDomainAgreementsAsync(operations As ITopLevelDomainsOperations, name As String, agreementOption As TopLevelDomainAgreementOption, cancellationToken As CancellationToken = Nothing) As Task(Of TldLegalAgreementCollection)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: name
      type: System.String
      description: "\nName of the top level domain\n"
    - id: agreementOption
      type: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption
      description: "\nDomain agreement options\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection}
  overload: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.WebSites
  commentId: N:Microsoft.Azure.Management.WebSites
  isExternal: false
  name: Microsoft.Azure.Management.WebSites
  nameWithType: Microsoft.Azure.Management.WebSites
  fullName: Microsoft.Azure.Management.WebSites
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains*
  commentId: Overload:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains
  isExternal: false
  name: GetGetTopLevelDomains
  nameWithType: TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomains
- uid: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
  commentId: T:Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
  parent: Microsoft.Azure.Management.WebSites
  isExternal: false
  name: ITopLevelDomainsOperations
  nameWithType: ITopLevelDomainsOperations
  fullName: Microsoft.Azure.Management.WebSites.ITopLevelDomainsOperations
- uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
  commentId: T:Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: TopLevelDomainCollection
  nameWithType: TopLevelDomainCollection
  fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync
  isExternal: false
  name: GetGetTopLevelDomainsAsync
  nameWithType: TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetGetTopLevelDomainsAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TopLevelDomainCollection>
  nameWithType: Task<TopLevelDomainCollection>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection>
  nameWithType.vb: Task(Of TopLevelDomainCollection)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection)
  name.vb: Task(Of TopLevelDomainCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
    name: TopLevelDomainCollection
    nameWithType: TopLevelDomainCollection
    fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
    name: TopLevelDomainCollection
    nameWithType: TopLevelDomainCollection
    fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain*
  commentId: Overload:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain
  isExternal: false
  name: GetTopLevelDomain
  nameWithType: TopLevelDomainsOperationsExtensions.GetTopLevelDomain
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
  commentId: T:Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: TopLevelDomain
  nameWithType: TopLevelDomain
  fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync
  isExternal: false
  name: GetTopLevelDomainAsync
  nameWithType: TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.GetTopLevelDomainAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TopLevelDomain}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TopLevelDomain}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TopLevelDomain>
  nameWithType: Task<TopLevelDomain>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.WebSites.Models.TopLevelDomain>
  nameWithType.vb: Task(Of TopLevelDomain)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.WebSites.Models.TopLevelDomain)
  name.vb: Task(Of TopLevelDomain)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
    name: TopLevelDomain
    nameWithType: TopLevelDomain
    fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
    name: TopLevelDomain
    nameWithType: TopLevelDomain
    fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomain
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements*
  commentId: Overload:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements
  isExternal: false
  name: ListTopLevelDomainAgreements
  nameWithType: TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreements
- uid: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption
  commentId: T:Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: TopLevelDomainAgreementOption
  nameWithType: TopLevelDomainAgreementOption
  fullName: Microsoft.Azure.Management.WebSites.Models.TopLevelDomainAgreementOption
- uid: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
  commentId: T:Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: TldLegalAgreementCollection
  nameWithType: TldLegalAgreementCollection
  fullName: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
- uid: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync
  isExternal: false
  name: ListTopLevelDomainAgreementsAsync
  nameWithType: TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync
  fullName: Microsoft.Azure.Management.WebSites.TopLevelDomainsOperationsExtensions.ListTopLevelDomainAgreementsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TldLegalAgreementCollection>
  nameWithType: Task<TldLegalAgreementCollection>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection>
  nameWithType.vb: Task(Of TldLegalAgreementCollection)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection)
  name.vb: Task(Of TldLegalAgreementCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
    name: TldLegalAgreementCollection
    nameWithType: TldLegalAgreementCollection
    fullName: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
    name: TldLegalAgreementCollection
    nameWithType: TldLegalAgreementCollection
    fullName: Microsoft.Azure.Management.WebSites.Models.TldLegalAgreementCollection
  - name: )
    nameWithType: )
    fullName: )
