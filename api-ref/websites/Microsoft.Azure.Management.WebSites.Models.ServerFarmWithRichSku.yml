### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  commentId: T:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  id: ServerFarmWithRichSku
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.SkuDescription,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate
  - Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName
  langs:
  - csharp
  - vb
  name: ServerFarmWithRichSku
  nameWithType: ServerFarmWithRichSku
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerFarmWithRichSku
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nApp Service Plan Model\n"
  example: []
  syntax:
    content: 'public class ServerFarmWithRichSku : Resource, IResource'
    content.vb: >-
      Public Class ServerFarmWithRichSku
          Inherits Resource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.WebSites.Models.Resource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.WebSites.Models.Resource.Id
  - Microsoft.Azure.Management.WebSites.Models.Resource.Name
  - Microsoft.Azure.Management.WebSites.Models.Resource.Location
  - Microsoft.Azure.Management.WebSites.Models.Resource.Type
  - Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: ServerFarmWithRichSku()
  nameWithType: ServerFarmWithRichSku.ServerFarmWithRichSku()
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSku()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the ServerFarmWithRichSku class.\n"
  example: []
  syntax:
    content: public ServerFarmWithRichSku()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.SkuDescription,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.SkuDescription,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.WebSites.Models.SkuDescription,System.String,System.String,System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions},System.String,System.String,Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: ServerFarmWithRichSku(String, String, String, String, IDictionary<String, String>, SkuDescription, String, String, Nullable<StatusOptions>, String, String, HostingEnvironmentProfile, Nullable<Int32>, String, Nullable<Boolean>, Nullable<Int32>, String)
  nameWithType: ServerFarmWithRichSku.ServerFarmWithRichSku(String, String, String, String, IDictionary<String, String>, SkuDescription, String, String, Nullable<StatusOptions>, String, String, HostingEnvironmentProfile, Nullable<Int32>, String, Nullable<Boolean>, Nullable<Int32>, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSku(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.WebSites.Models.SkuDescription, System.String, System.String, System.Nullable<Microsoft.Azure.Management.WebSites.Models.StatusOptions>, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile, System.Nullable<System.Int32>, System.String, System.Nullable<System.Boolean>, System.Nullable<System.Int32>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the ServerFarmWithRichSku class.\n"
  example: []
  syntax:
    content: public ServerFarmWithRichSku(string location, string id = null, string name = null, string type = null, IDictionary<string, string> tags = null, SkuDescription sku = null, string serverFarmWithRichSkuName = null, string workerTierName = null, StatusOptions? status = null, string subscription = null, string adminSiteName = null, HostingEnvironmentProfile hostingEnvironmentProfile = null, int ? maximumNumberOfWorkers = null, string geoRegion = null, bool ? perSiteScaling = null, int ? numberOfSites = null, string resourceGroup = null)
    content.vb: Public Sub New(location As String, id As String = Nothing, name As String = Nothing, type As String = Nothing, tags As IDictionary(Of String, String) = Nothing, sku As SkuDescription = Nothing, serverFarmWithRichSkuName As String = Nothing, workerTierName As String = Nothing, status As StatusOptions? = Nothing, subscription As String = Nothing, adminSiteName As String = Nothing, hostingEnvironmentProfile As HostingEnvironmentProfile = Nothing, maximumNumberOfWorkers As Integer? = Nothing, geoRegion As String = Nothing, perSiteScaling As Boolean? = Nothing, numberOfSites As Integer? = Nothing, resourceGroup As String = Nothing)
    parameters:
    - id: location
      type: System.String
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: sku
      type: Microsoft.Azure.Management.WebSites.Models.SkuDescription
    - id: serverFarmWithRichSkuName
      type: System.String
    - id: workerTierName
      type: System.String
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions}
    - id: subscription
      type: System.String
    - id: adminSiteName
      type: System.String
    - id: hostingEnvironmentProfile
      type: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
    - id: maximumNumberOfWorkers
      type: System.Nullable{System.Int32}
    - id: geoRegion
      type: System.String
    - id: perSiteScaling
      type: System.Nullable{System.Boolean}
    - id: numberOfSites
      type: System.Nullable{System.Int32}
    - id: resourceGroup
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor*
  nameWithType.vb: ServerFarmWithRichSku.ServerFarmWithRichSku(String, String, String, String, IDictionary(Of String, String), SkuDescription, String, String, Nullable(Of StatusOptions), String, String, HostingEnvironmentProfile, Nullable(Of Int32), String, Nullable(Of Boolean), Nullable(Of Int32), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSku(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.WebSites.Models.SkuDescription, System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.StatusOptions), System.String, System.String, Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile, System.Nullable(Of System.Int32), System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Int32), System.String)
  name.vb: ServerFarmWithRichSku(String, String, String, String, IDictionary(Of String, String), SkuDescription, String, String, Nullable(Of StatusOptions), String, String, HostingEnvironmentProfile, Nullable(Of Int32), String, Nullable(Of Boolean), Nullable(Of Int32), String)
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku
  id: Sku
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: ServerFarmWithRichSku.Sku
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sku")]

      public SkuDescription Sku { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sku")>

      Public Property Sku As SkuDescription
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.SkuDescription
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName
  id: ServerFarmWithRichSkuName
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: ServerFarmWithRichSkuName
  nameWithType: ServerFarmWithRichSku.ServerFarmWithRichSkuName
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerFarmWithRichSkuName
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName for the App Service Plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.name")]

      public string ServerFarmWithRichSkuName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.name")>

      Public Property ServerFarmWithRichSkuName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName
  id: WorkerTierName
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: WorkerTierName
  nameWithType: ServerFarmWithRichSku.WorkerTierName
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkerTierName
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTarget worker tier assigned to the App Service Plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.workerTierName")]

      public string WorkerTierName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.workerTierName")>

      Public Property WorkerTierName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.workerTierName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status
  id: Status
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ServerFarmWithRichSku.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nApp Service Plan Status. Possible values for this property\ninclude: 'Ready', 'Pending'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.status")]

      public StatusOptions? Status { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.status")>

      Public ReadOnly Property Status As StatusOptions?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions}
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription
  id: Subscription
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: ServerFarmWithRichSku.Subscription
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subscription
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nApp Service Plan Subscription\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.subscription")]

      public string Subscription { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.subscription")>

      Public ReadOnly Property Subscription As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.subscription
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName
  id: AdminSiteName
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: AdminSiteName
  nameWithType: ServerFarmWithRichSku.AdminSiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdminSiteName
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nApp Service Plan administration site\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.adminSiteName")]

      public string AdminSiteName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.adminSiteName")>

      Public Property AdminSiteName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.adminSiteName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile
  id: HostingEnvironmentProfile
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: HostingEnvironmentProfile
  nameWithType: ServerFarmWithRichSku.HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HostingEnvironmentProfile
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nSpecification for the hosting environment (App Service\nEnvironment) to use for the App Service Plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.hostingEnvironmentProfile")]

      public HostingEnvironmentProfile HostingEnvironmentProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.hostingEnvironmentProfile")>

      Public Property HostingEnvironmentProfile As HostingEnvironmentProfile
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.hostingEnvironmentProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers
  id: MaximumNumberOfWorkers
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: MaximumNumberOfWorkers
  nameWithType: ServerFarmWithRichSku.MaximumNumberOfWorkers
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaximumNumberOfWorkers
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nMaximum number of instances that can be assigned to this App\nService Plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.maximumNumberOfWorkers")]

      public int ? MaximumNumberOfWorkers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.maximumNumberOfWorkers")>

      Public Property MaximumNumberOfWorkers As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.maximumNumberOfWorkers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion
  id: GeoRegion
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: GeoRegion
  nameWithType: ServerFarmWithRichSku.GeoRegion
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GeoRegion
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nGeographical location for the App Service Plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.geoRegion")]

      public string GeoRegion { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.geoRegion")>

      Public ReadOnly Property GeoRegion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.geoRegion
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling
  id: PerSiteScaling
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: PerSiteScaling
  nameWithType: ServerFarmWithRichSku.PerSiteScaling
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PerSiteScaling
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nIf True apps assigned to this App Service Plan can be scaled\nindependently\nIf False apps assigned to this App Service Plan will\nscale to all instances of the plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.perSiteScaling")]

      public bool ? PerSiteScaling { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.perSiteScaling")>

      Public Property PerSiteScaling As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.perSiteScaling
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites
  id: NumberOfSites
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: NumberOfSites
  nameWithType: ServerFarmWithRichSku.NumberOfSites
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NumberOfSites
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nNumber of web apps assigned to this App Service Plan\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.numberOfSites")]

      public int ? NumberOfSites { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.numberOfSites")>

      Public ReadOnly Property NumberOfSites As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.numberOfSites
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup
  commentId: P:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup
  id: ResourceGroup
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: ResourceGroup
  nameWithType: ServerFarmWithRichSku.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroup
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nResource group of the serverfarm\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.resourceGroup")]

      public string ResourceGroup { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.resourceGroup")>

      Public ReadOnly Property ResourceGroup As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.resourceGroup
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate
  id: Validate
  parent: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ServerFarmWithRichSku.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/ServerFarmWithRichSku.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  overload: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.WebSites.Models.Resource
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Resource
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Resource
  nameWithType: Resource
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Id
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Id
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Id
  nameWithType: Resource.Id
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Id
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Name
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Name
  nameWithType: Resource.Name
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Name
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Location
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Location
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Location
  nameWithType: Resource.Location
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Location
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Type
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Type
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Type
  nameWithType: Resource.Type
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Type
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  commentId: P:Microsoft.Azure.Management.WebSites.Models.Resource.Tags
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Tags
  nameWithType: Resource.Tags
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Tags
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.#ctor
  isExternal: false
  name: ServerFarmWithRichSku
  nameWithType: ServerFarmWithRichSku.ServerFarmWithRichSku
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSku
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.SkuDescription
  commentId: T:Microsoft.Azure.Management.WebSites.Models.SkuDescription
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: SkuDescription
  nameWithType: SkuDescription
  fullName: Microsoft.Azure.Management.WebSites.Models.SkuDescription
- uid: System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions}
  commentId: T:System.Nullable{Microsoft.Azure.Management.WebSites.Models.StatusOptions}
  parent: System
  definition: System.Nullable`1
  name: Nullable<StatusOptions>
  nameWithType: Nullable<StatusOptions>
  fullName: System.Nullable<Microsoft.Azure.Management.WebSites.Models.StatusOptions>
  nameWithType.vb: Nullable(Of StatusOptions)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.WebSites.Models.StatusOptions)
  name.vb: Nullable(Of StatusOptions)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.StatusOptions
    name: StatusOptions
    nameWithType: StatusOptions
    fullName: Microsoft.Azure.Management.WebSites.Models.StatusOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.StatusOptions
    name: StatusOptions
    nameWithType: StatusOptions
    fullName: Microsoft.Azure.Management.WebSites.Models.StatusOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  commentId: T:Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: HostingEnvironmentProfile
  nameWithType: HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.HostingEnvironmentProfile
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku
  isExternal: false
  name: Sku
  nameWithType: ServerFarmWithRichSku.Sku
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Sku
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName
  isExternal: false
  name: ServerFarmWithRichSkuName
  nameWithType: ServerFarmWithRichSku.ServerFarmWithRichSkuName
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ServerFarmWithRichSkuName
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName
  isExternal: false
  name: WorkerTierName
  nameWithType: ServerFarmWithRichSku.WorkerTierName
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.WorkerTierName
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status
  isExternal: false
  name: Status
  nameWithType: ServerFarmWithRichSku.Status
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Status
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription
  isExternal: false
  name: Subscription
  nameWithType: ServerFarmWithRichSku.Subscription
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Subscription
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName
  isExternal: false
  name: AdminSiteName
  nameWithType: ServerFarmWithRichSku.AdminSiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.AdminSiteName
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile
  isExternal: false
  name: HostingEnvironmentProfile
  nameWithType: ServerFarmWithRichSku.HostingEnvironmentProfile
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.HostingEnvironmentProfile
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers
  isExternal: false
  name: MaximumNumberOfWorkers
  nameWithType: ServerFarmWithRichSku.MaximumNumberOfWorkers
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.MaximumNumberOfWorkers
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion
  isExternal: false
  name: GeoRegion
  nameWithType: ServerFarmWithRichSku.GeoRegion
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.GeoRegion
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling
  isExternal: false
  name: PerSiteScaling
  nameWithType: ServerFarmWithRichSku.PerSiteScaling
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.PerSiteScaling
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites
  isExternal: false
  name: NumberOfSites
  nameWithType: ServerFarmWithRichSku.NumberOfSites
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.NumberOfSites
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup
  isExternal: false
  name: ResourceGroup
  nameWithType: ServerFarmWithRichSku.ResourceGroup
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.ResourceGroup
- uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  commentId: M:Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  parent: Microsoft.Azure.Management.WebSites.Models.Resource
  isExternal: false
  name: Validate()
  nameWithType: Resource.Validate()
  fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
    name: Validate
    nameWithType: Resource.Validate
    fullName: Microsoft.Azure.Management.WebSites.Models.Resource.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate
  isExternal: false
  name: Validate
  nameWithType: ServerFarmWithRichSku.Validate
  fullName: Microsoft.Azure.Management.WebSites.Models.ServerFarmWithRichSku.Validate
