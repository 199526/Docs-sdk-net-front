### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  commentId: T:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  id: AutomationManagementClientExtensions
  parent: Microsoft.Azure.Management.Automation
  children:
  - Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  - Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  - Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  - Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  langs:
  - csharp
  - vb
  name: AutomationManagementClientExtensions
  nameWithType: AutomationManagementClientExtensions
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutomationManagementClientExtensions
    path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  syntax:
    content: 'public static class AutomationManagementClientExtensions : object'
    content.vb: >-
      Public Module AutomationManagementClientExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  id: GetOperationResultStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationResultStatus(IAutomationManagementClient, String)
  nameWithType: AutomationManagementClientExtensions.GetOperationResultStatus(IAutomationManagementClient, String)
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationResultStatus
    path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public static LongRunningOperationResultResponse GetOperationResultStatus(this IAutomationManagementClient operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationResultStatus(operations As IAutomationManagementClient, operationStatusLink As String) As LongRunningOperationResultResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Automation.IAutomationManagementClient
      description: "\nReference to the\nMicrosoft.Azure.Management.Automation.IAutomationManagementClient.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    return:
      type: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
      description: "\nA standard service response for long running operations.\n"
  overload: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  id: GetOperationResultStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationResultStatusAsync(IAutomationManagementClient, String)
  nameWithType: AutomationManagementClientExtensions.GetOperationResultStatusAsync(IAutomationManagementClient, String)
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationResultStatusAsync
    path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResultResponse> GetOperationResultStatusAsync(this IAutomationManagementClient operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationResultStatusAsync(operations As IAutomationManagementClient, operationStatusLink As String) As Task(Of LongRunningOperationResultResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Automation.IAutomationManagementClient
      description: "\nReference to the\nMicrosoft.Azure.Management.Automation.IAutomationManagementClient.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    return:
      type: Task{Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse}
      description: "\nA standard service response for long running operations.\n"
  overload: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  id: GetOperationStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IAutomationManagementClient, String)
  nameWithType: AutomationManagementClientExtensions.GetOperationStatus(IAutomationManagementClient, String)
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.Automation.IAutomationManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationStatus
    path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nThe Get Operation Status operation returns the status of\nthespecified operation. After calling an asynchronous operation,\nyou can call Get Operation Status to determine whether the\noperation has succeeded, failed, or is still in progress.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static LongRunningOperationStatusResponse GetOperationStatus(this IAutomationManagementClient operations, string requestId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As IAutomationManagementClient, requestId As String) As LongRunningOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Automation.IAutomationManagementClient
      description: "\nReference to the\nMicrosoft.Azure.Management.Automation.IAutomationManagementClient.\n"
    - id: requestId
      type: System.String
      description: "\nRequired. The request ID for the request you wish to track. The\nrequest ID is returned in the x-ms-request-id response header for\nevery request.\n"
    return:
      type: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  overload: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  id: GetOperationStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IAutomationManagementClient, String)
  nameWithType: AutomationManagementClientExtensions.GetOperationStatusAsync(IAutomationManagementClient, String)
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.Automation.IAutomationManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationStatusAsync
    path: src/ResourceManagement/Automation/AutomationManagement/Generated/AutomationManagementClientExtensions.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.Automation
  namespace: Microsoft.Azure.Management.Automation
  summary: "\nThe Get Operation Status operation returns the status of\nthespecified operation. After calling an asynchronous operation,\nyou can call Get Operation Status to determine whether the\noperation has succeeded, failed, or is still in progress.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationStatusResponse> GetOperationStatusAsync(this IAutomationManagementClient operations, string requestId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As IAutomationManagementClient, requestId As String) As Task(Of LongRunningOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Automation.IAutomationManagementClient
      description: "\nReference to the\nMicrosoft.Azure.Management.Automation.IAutomationManagementClient.\n"
    - id: requestId
      type: System.String
      description: "\nRequired. The request ID for the request you wish to track. The\nrequest ID is returned in the x-ms-request-id response header for\nevery request.\n"
    return:
      type: Task{Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  overload: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Automation
  commentId: N:Microsoft.Azure.Management.Automation
  isExternal: false
  name: Microsoft.Azure.Management.Automation
  nameWithType: Microsoft.Azure.Management.Automation
  fullName: Microsoft.Azure.Management.Automation
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus*
  commentId: Overload:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus
  isExternal: false
  name: GetOperationResultStatus
  nameWithType: AutomationManagementClientExtensions.GetOperationResultStatus
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatus
- uid: Microsoft.Azure.Management.Automation.IAutomationManagementClient
  commentId: T:Microsoft.Azure.Management.Automation.IAutomationManagementClient
  parent: Microsoft.Azure.Management.Automation
  isExternal: false
  name: IAutomationManagementClient
  nameWithType: IAutomationManagementClient
  fullName: Microsoft.Azure.Management.Automation.IAutomationManagementClient
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
  commentId: T:Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
  parent: Microsoft.Azure.Management.Automation.Models
  isExternal: false
  name: LongRunningOperationResultResponse
  nameWithType: LongRunningOperationResultResponse
  fullName: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
- uid: Microsoft.Azure.Management.Automation.Models
  commentId: N:Microsoft.Azure.Management.Automation.Models
  isExternal: false
  name: Microsoft.Azure.Management.Automation.Models
  nameWithType: Microsoft.Azure.Management.Automation.Models
  fullName: Microsoft.Azure.Management.Automation.Models
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync
  isExternal: false
  name: GetOperationResultStatusAsync
  nameWithType: AutomationManagementClientExtensions.GetOperationResultStatusAsync
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationResultStatusAsync
- uid: Task{Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse}
  commentId: '!:Task{Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse}'
  definition: Task`1
  name: Task<LongRunningOperationResultResponse>
  nameWithType: Task<LongRunningOperationResultResponse>
  fullName: Task<Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse>
  nameWithType.vb: Task(Of LongRunningOperationResultResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse)
  name.vb: Task(Of LongRunningOperationResultResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
    name: LongRunningOperationResultResponse
    nameWithType: LongRunningOperationResultResponse
    fullName: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
    name: LongRunningOperationResultResponse
    nameWithType: LongRunningOperationResultResponse
    fullName: Microsoft.Azure.Management.Automation.Models.LongRunningOperationResultResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus*
  commentId: Overload:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus
  isExternal: false
  name: GetOperationStatus
  nameWithType: AutomationManagementClientExtensions.GetOperationStatus
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatus
- uid: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
  commentId: T:Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
  parent: Microsoft.Azure.Management.Automation.Models
  isExternal: false
  name: LongRunningOperationStatusResponse
  nameWithType: LongRunningOperationStatusResponse
  fullName: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
- uid: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync
  isExternal: false
  name: GetOperationStatusAsync
  nameWithType: AutomationManagementClientExtensions.GetOperationStatusAsync
  fullName: Microsoft.Azure.Management.Automation.AutomationManagementClientExtensions.GetOperationStatusAsync
- uid: Task{Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse}
  commentId: '!:Task{Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse}'
  definition: Task`1
  name: Task<LongRunningOperationStatusResponse>
  nameWithType: Task<LongRunningOperationStatusResponse>
  fullName: Task<Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse>
  nameWithType.vb: Task(Of LongRunningOperationStatusResponse)
  fullname.vb: Task(Of Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse)
  name.vb: Task(Of LongRunningOperationStatusResponse)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
    name: LongRunningOperationStatusResponse
    nameWithType: LongRunningOperationStatusResponse
    fullName: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
    name: LongRunningOperationStatusResponse
    nameWithType: LongRunningOperationStatusResponse
    fullName: Microsoft.Azure.Management.Automation.Models.LongRunningOperationStatusResponse
  - name: )
    nameWithType: )
    fullName: )
